{"version":3,"file":"static/js/9223.2b51abb2.chunk.js","mappings":"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","sources":["theme.js","Redux/api/axiosInstance.jsx","Redux/api/apiEndpoints.jsx","Redux/slice/login/authSlice.jsx","Redux/slice/appointement/allBranchSlice.jsx","components/global/Topbar.jsx","components/other/Landing.jsx","core/modules/secure/SecureLayout.jsx","core/EMRRouteBuilder.jsx","auth/LoginForm.jsx","auth/Signup.jsx","auth/ForgotPassword.jsx","core/api/AxiosInstance.js","core/services/APIService.js","components/global/loader/LoadingContext.js","auth/ResetPassword.jsx","core/modules/public/PublicRoutes.jsx","auth/auth.jsx","components/global/ScreenWrapper.jsx","components/global/EMRtabs.jsx","components/FormFields/FormInput.jsx","components/FormFields/DropdownOptions.jsx","Redux/slice/registration/registerPatientsSlice.jsx","components/global/Toast.jsx","secure/registration/component/PatientInfo/PatientInfo.jsx","secure/registration/component/RegisterPatient.jsx","Redux/slice/registration/emergencyPatientSlice.jsx","secure/registration/component/Emergency.jsx","Redux/slice/appointement/searchPatientSlice.jsx","Redux/slice/registration/revisitSlice.jsx","secure/registration/component/Revisit.jsx","Redux/slice/dashboard/scheduleListSlice.jsx","components/global/loader/EMRLoaderOverlay.jsx","components/global/EMRMenuIcon.jsx","secure/dashboard/components/ScheduleList.jsx","secure/dashboard/components/PatientRecall.jsx","secure/dashboard/components/PatientVaccinationSchedules.jsx","secure/registration/component/PatientInfo/PatientList.jsx","secure/registration/Registration.jsx","secure/doctorNurseDashboard/components/docOptions.jsx","secure/doctorNurseDashboard/components/RevenueDataList.jsx","secure/doctorNurseDashboard/components/OthersDataList.jsx","secure/doctorNurseDashboard/components/mainDataList.jsx","components/global/doctorNurseLoader.jsx","secure/doctorNurseDashboard/doctorDashboard.jsx","secure/appointment/component/BlockAvailability.jsx","secure/privileges/Privileges.jsx","secure/insurance/data.js","secure/insurance/components/opInsurance/components/ClaimDetails.jsx","secure/insurance/components/opInsurance/components/ManualSubmission.jsx","secure/insurance/components/opInsurance/OPInsurance.jsx","secure/insurance/components/ipInsurance/IPInsurance.jsx","secure/insurance/components/referralRegistration/ReferralRegistration.jsx","secure/insurance/Insurance.jsx","components/FormFields/Loading.jsx","Redux/slice/appointement/doctorAvailableSlotSlice.jsx","Redux/slice/appointement/bookAppointementSlice.jsx","secure/appointment/component/NewEvent.jsx","Redux/slice/appointement/reScheduleSlice.jsx","secure/appointment/bookSlot/modal/Reschedule.jsx","Redux/slice/appointement/cancelScheduleSlice.jsx","secure/appointment/bookSlot/modal/Cancel.jsx","secure/appointment/bookSlot/Events.jsx","secure/appointment/bookSlot/CalendarView.jsx","Redux/slice/appointement/allDoctorsSlice.jsx","Redux/slice/appointement/searchDoctorSilce.jsx","secure/appointment/bookSlot/Filter.jsx","secure/appointment/bookSlot/Appointment.jsx","secure/appointment/AllAppointment.jsx","secure/masterSetup/Org/AddOrg.jsx","secure/masterSetup/Org/EditOrg.jsx","secure/masterSetup/Org/OrgSetup.jsx","secure/masterSetup/master.jsx","core/modules/secure/SecureRoutes.jsx","core/Routes.jsx","components/global/ToastProvider.jsx","components/global/ErrorBoundary.jsx","Redux/slice/appointement/allAppointmentSlice.jsx","Redux/slice/appointement/allFacilitySheduleSlice.jsx","Redux/slice/appointement/facilitiesAvailableSlotSlice.jsx","Redux/slice/appointement/allFacilitiesSlice.jsx","Redux/slice/appointement/searchFacilitiesSlice.jsx","Redux/store.jsx","App.jsx","bootstrap.js"],"sourcesContent":["import { createContext, useState, useMemo } from \"react\";\nimport { createTheme } from \"@mui/material/styles\";\n\n// color design tokens export\nexport const tokens = (mode) => ({\n  ...(mode === \"dark\"\n    ? {\n        grey: {\n          100: \"#e0e0e0\",\n          200: \"#c2c2c2\",\n          300: \"#a3a3a3\",\n          400: \"#858585\",\n          500: \"#666666\",\n          600: \"#525252\",\n          700: \"#3d3d3d\",\n          800: \"#292929\",\n          900: \"#141414\",\n        },\n        primary: {\n          100: \"#d0d1d5\",\n          200: \"#a1a4ab\",\n          300: \"#727681\",\n          400: \"#1F2A40\",\n          // 500: \"#141b2d\",\n          500: \"#011d65\",\n          600: \"#101624\",\n          700: \"#0c101b\",\n          800: \"#080b12\",\n          900: \"#040509\",\n        },\n        greenAccent: {\n          100: \"#dbf5ee\",\n          200: \"#b7ebde\",\n          300: \"#94e2cd\",\n          400: \"#70d8bd\",\n          500: \"#4cceac\",\n          600: \"#3da58a\",\n          700: \"#2e7c67\",\n          800: \"#1e5245\",\n          900: \"#0f2922\",\n        },\n        redAccent: {\n          100: \"#f8dcdb\",\n          200: \"#f1b9b7\",\n          300: \"#e99592\",\n          400: \"#e2726e\",\n          500: \"#db4f4a\",\n          600: \"#af3f3b\",\n          700: \"#832f2c\",\n          800: \"#58201e\",\n          900: \"#2c100f\",\n        },\n        blueAccent: {\n          100: \"#e1e2fe\",\n          200: \"#c3c6fd\",\n          300: \"#a4a9fc\",\n          400: \"#868dfb\",\n          500: \"#6870fa\",\n          600: \"#535ac8\",\n          700: \"#3e4396\",\n          800: \"#2a2d64\",\n          900: \"#151632\",\n        },\n      }\n    : {\n        grey: {\n          100: \"#141414\",\n          200: \"#292929\",\n          300: \"#3d3d3d\",\n          400: \"#525252\",\n          500: \"#666666\",\n          600: \"#858585\",\n          700: \"#a3a3a3\",\n          800: \"#c2c2c2\",\n          900: \"#e0e0e0\",\n        },\n        primary: {\n          100: \"#040509\",\n          200: \"#080b12\",\n          300: \"#0c101b\",\n          400: \"#f2f0f0\", // manually changed\n          500: \"#141b2d\",\n          600: \"#1F2A40\",\n          700: \"#727681\",\n          800: \"#a1a4ab\",\n          900: \"#d0d1d5\",\n        },\n        greenAccent: {\n          100: \"#0f2922\",\n          200: \"#1e5245\",\n          300: \"#2e7c67\",\n          400: \"#3da58a\",\n          500: \"#4cceac\",\n          600: \"#70d8bd\",\n          700: \"#94e2cd\",\n          800: \"#b7ebde\",\n          900: \"#dbf5ee\",\n        },\n        redAccent: {\n          100: \"#2c100f\",\n          200: \"#58201e\",\n          300: \"#832f2c\",\n          400: \"#af3f3b\",\n          500: \"#db4f4a\",\n          600: \"#e2726e\",\n          700: \"#e99592\",\n          800: \"#f1b9b7\",\n          900: \"#f8dcdb\",\n        },\n        blueAccent: {\n          100: \"#151632\",\n          200: \"#2a2d64\",\n          300: \"#3e4396\",\n          400: \"#535ac8\",\n          500: \"#6870fa\",\n          600: \"#868dfb\",\n          700: \"#a4a9fc\",\n          800: \"#c3c6fd\",\n          900: \"#e1e2fe\",\n        },\n      }),\n});\n\n// mui theme settings\nexport const themeSettings = (mode) => {\n  const colors = tokens(mode);\n  return {\n    palette: {\n      mode: mode,\n      ...(mode === \"dark\"\n        ? {\n            // palette values for dark mode\n            primary: {\n              main: colors.primary[500],\n            },\n            secondary: {\n              main: colors.greenAccent[500],\n            },\n            neutral: {\n              dark: colors.grey[700],\n              main: colors.grey[500],\n              light: colors.grey[100],\n            },\n            background: {\n              default: colors.primary[500],\n            },\n          }\n        : {\n            // palette values for light mode\n            primary: {\n              main: colors.primary[100],\n            },\n            secondary: {\n              main: colors.greenAccent[500],\n            },\n            neutral: {\n              dark: colors.grey[700],\n              main: colors.grey[500],\n              light: colors.grey[100],\n            },\n            background: {\n              default: \"#fcfcfc\",\n            },\n          }),\n    },\n    typography: {\n      fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n      fontSize: 12,\n      h1: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 40,\n      },\n      h2: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 32,\n      },\n      h3: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 24,\n      },\n      h4: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 20,\n      },\n      h5: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 16,\n      },\n      h6: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 14,\n      },\n    },\n  };\n};\n\n// context for color mode\nexport const ColorModeContext = createContext({\n  toggleColorMode: () => {},\n});\nexport const overridesContext = createContext({\n  overrides: () => {},\n});\n\nexport const useMode = () => {\n  const [mode, setMode] = useState(\"light\");\n\n  const colorMode = useMemo(\n    () => ({\n      toggleColorMode: () =>\n        setMode((prev) => (prev === \"light\" ? \"dark\" : \"light\")),\n    }),\n    []\n  );\n\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\n  return [theme, colorMode];\n};\n","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL:\r\n    // \"http://localhost:8080/app/\",\r\n    \"http://ec2-13-49-23-128.eu-north-1.compute.amazonaws.com:8080/app/\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    Accept: \"application/json\",\r\n  },\r\n});\r\nexport default axiosInstance;\r\n","export const API_ENDPOINTS = {\r\n  LOGIN: \"auth/signin\",\r\n  ALL_BRANCH: \"admin/getAllBranches\",\r\n  ALL_APPOINTMENT: \"doctorappointment/getAllAppointments\",\r\n  All_DOCTORS: \"doctor/getAllDoctors\",\r\n  ALL_FACILITIES: \"facility/getAllFacilitiesByBranchAndDate\",\r\n  DOC_AVAILABLE: \"timeslot/getAvailableSlotsForAllDoctors\",\r\n  FACILITY_SCHEDULES: \"facility/getAllFacilitySchedules\",\r\n  FACILITY_AVAILABLE: \"timeslot/getAvailableSlotsForAllFacilities\",\r\n  SEARCH_DOCTOR: \"doctor/searchDoctors\",\r\n  SEARCH_FACILITY: \"facility/searchFacilities\",\r\n  SEARCH_PATIENT: \"patient/searchPatients\",\r\n  REGISTER_PATIENT: \"patient/patientRegistration\",\r\n  REVISIT_PATIENT: \"patient/patientRevisit\",\r\n  EMERGENCY_PATIENT: \"patient/patientEmergency\",\r\n  BOOK_APPOINTMENT: \"doctorappointment/bookAppointment\",\r\n  SCHEDULE_LIST: \"doctorappointment/getScheduleList\",\r\n  RE_SCHEDULE: \"doctorappointment/rescheduleAppointment\",\r\n  CANCEL_SCHEDULE: \"doctorappointment/cancelAppointment\",\r\n};\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const login = createAsyncThunk(\r\n  \"auth/login\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        API_ENDPOINTS.LOGIN,\r\n        credentials\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || \"Login Failed\");\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    user: [],\r\n    // token: null,\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.user = null; // Ensure user is null (not an empty array)\r\n      state.loading = false;\r\n      state.error = null;\r\n      \r\n      localStorage.removeItem(\"user\");\r\n      localStorage.removeItem(\"rememberedUsername\"); // Remove remembered username too\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(login.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload.data; // Store user data properly\r\n        localStorage.setItem(\"user\", JSON.stringify(action.payload.data)); // Store only user data\r\n      })\r\n      \r\n      .addCase(login.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const allBranch = createAsyncThunk(\r\n  \"admin/branch\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(\r\n        API_ENDPOINTS.ALL_BRANCH,\r\n        credentials\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst allBranceSlice = createSlice({\r\n  name: \"allBranch\",\r\n  initialState: {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(allBranch.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(allBranch.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.data = action.payload.data;\r\n      })\r\n      .addCase(allBranch.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default allBranceSlice.reducer;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Box,\n  IconButton,\n  useTheme,\n  Tooltip,\n  Typography,\n  Divider,\n  Chip,\n} from \"@mui/material\";\nimport { useContext } from \"react\";\nimport { ColorModeContext, tokens } from \"../../theme\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\nimport DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\nimport NotificationsOutlinedIcon from \"@mui/icons-material/NotificationsOutlined\";\nimport \"./topbar.css\";\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport SwapHorizIcon from \"@mui/icons-material/SwapHoriz\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../Redux/slice/login/authSlice\";\nimport { allBranch } from \"../../Redux/slice/appointement/allBranchSlice\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Menu, MenuBook } from \"@mui/icons-material\";\nimport { Switch, FormControlLabel } from \"@mui/material\";\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\nimport ShareLocationIcon from \"@mui/icons-material/ShareLocation\";\n\nconst Topbar = ({ reloadApp, branchId, username, role }) => {\n  const [branches, setBranches] = useState([]);\n  // const [branch, setBranch] = useState(null);\n\n  const [userData, setUserData] = useState(null);\n  const [selectedBranchId, setSelectedBranchId] = useState(null);\n\n  useEffect(() => {\n    const loginUser = localStorage.getItem(\"user\");\n\n    if (loginUser) {\n      const parsedUser = JSON.parse(loginUser);\n      setUserData(parsedUser.data);\n      setSelectedBranchId(parsedUser.data?.branchMaster?.branchId || null);\n      console.log(\"userData\", parsedUser.data);\n    } else {\n      console.log(\"No user data found in localStorage\");\n    }\n  }, []);\n\n  const currentURL = window.location.href;\n  const dispatch = useDispatch();\n  const { data } = useSelector((state) => state?.allBranch);\n  const branchData = data?.data;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!branchData?.length) {\n      dispatch(allBranch());\n    }\n  }, [dispatch, branchData]);\n\n  useEffect(() => {\n    if (branchData) {\n      setBranches(branchData);\n    }\n  }, [data]);\n\n  const theme = useTheme();\n  const colorMode = useContext(ColorModeContext);\n\n  const [open, setOpen] = useState(false);\n\n  const handleChange = (branchId) => {\n    setSelectedBranchId(branchId);\n    setOpen(false);\n  };\n\n  const logoutApp = () => {\n    dispatch(logout());\n    navigate(\"/login\");\n  };\n\n  const branchName = selectedBranchId\n    ? branches.find((branch) => branch.branchId === selectedBranchId)\n        ?.branchName\n    : \"Select Branch\";\n\n  return (\n    <Box\n      id=\"topbar\"\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      p={\n        // currentURL.includes(\"doctor\") ? 0.5 :\n        2\n      }\n      padding={\"5px 16px\"}\n      height={\"10%\"}\n      sx={{\n        backgroundColor:\n          // currentURL.includes(\"doctor\") ? \"#e3f2fd\" :\n          \"#00748b\",\n      }}\n    >\n      {/* Receptionist Content */}\n      {currentURL.includes(\"secure\") && (\n        <>\n          <Box display={\"flex\"} my={\"auto\"} gap={\"10px\"}>\n            <Box alignSelf={\"center\"} fontSize={\"26px\"} color={\"white\"}>\n              E M R\n            </Box>\n            <IconButton onClick={() => navigate(\"/secure/landing\")}>\n              <Menu sx={{ color: \"white\" }} />\n            </IconButton>\n          </Box>\n          <Box display=\"flex\" my={\"auto\"} gap={2}>\n            <div className=\"my-auto \">\n              {/* <div style={{ color: \"white\",  }}>\n                {userData?.roleMaster?.roleName}\n              </div> */}\n              <Chip\n                label={userData?.roleMaster?.roleName}\n                variant=\"outlined\"\n                sx={{ color: \"white\", fontSize: \"12px\" }}\n              />\n            </div>\n            <Box\n              alignSelf={\"center\"}\n              sx={{\n                position: \"relative\",\n                backgroundColor: \"transparent\",\n                borderRadius: \"5px\",\n                padding: \"5px\",\n                cursor: \"pointer\",\n              }}\n            >\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                onClick={() => setOpen(!open)}\n                sx={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Chip\n                  icon={<ShareLocationIcon />}\n                  label={branchName}\n                  sx={{\n                    backgroundColor: \"rgb(155, 211, 211)\",\n                    color: \"black\",\n                    fontSize: \"12px\",\n                    textTransform: \"capitalize\",\n                    \"&:hover\": {\n                      backgroundColor: \"rgb(140, 200, 200)\",\n                      boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.2)\",\n                      transform: \"scale(1.05)\",\n                    },\n                  }}\n                />\n              </Box>\n\n              {/* Dropdown List */}\n              {open && (\n                <Box\n                  sx={{\n                    position: \"absolute\",\n                    top: \"40px\",\n                    left: \"0\",\n                    right: \"0\",\n                    backgroundColor: \"rgb(155, 211, 211)\",\n                    borderRadius: \"5px\",\n                    zIndex: 1,\n                    minWidth: \"140px\",\n                    overflowY: \"auto\",\n                    color: \"black\",\n                  }}\n                >\n                  {branches.map((branch) => (\n                    <MenuItem\n                      key={branch.branchId}\n                      // value={branch.branchId}\n                      onClick={() => handleChange(branch.branchId)}\n                    >\n                      {branch.branchName}\n                    </MenuItem>\n                  ))}\n                </Box>\n              )}\n            </Box>\n\n            <IconButton onClick={colorMode.toggleColorMode}>\n              {theme.palette.mode === \"dark\" ? (\n                <DarkModeOutlinedIcon sx={{ color: \"white\" }} />\n              ) : (\n                <LightModeOutlinedIcon sx={{ color: \"white\" }} />\n              )}\n            </IconButton>\n            <IconButton>\n              <NotificationsOutlinedIcon sx={{ color: \"white\" }} />\n            </IconButton>\n\n            {/* <IconButton onClick={() => navigate(\"/secure/landing\")}>\n              <Menu sx={{ color: \"white\" }} />\n            </IconButton> */}\n            <IconButton sx={{ margin: \"0 10px\" }} onClick={logoutApp}>\n              <LogoutIcon sx={{ color: \"white\" }} />\n            </IconButton>\n          </Box>\n\n          {/* <div className=\"my-auto \">\n            <IconButton onClick={() => navigate(\"/secure/landing\")}>\n              <Menu sx={{ color: \"white\" }} />\n            </IconButton>\n          </div> */}\n        </>\n      )}\n\n      {/* Dashboard content */}\n      {/* {currentURL.includes(\"doctor\") && !currentURL.includes(\"dashboard\") ? (\n        <>\n          \n          <Box display=\"flex\" alignItems=\"center\">\n            <Typography variant=\"body1\">Clinic Date - 21/09/2024</Typography>\n            <Divider orientation=\"vertical\" flexItem sx={{ mx: 2 }} />\n            <Typography variant=\"body1\">Start time - HH:MM:SS</Typography>\n            <Divider orientation=\"vertical\" flexItem sx={{ mx: 2 }} />\n            <Typography variant=\"body1\">End time - HH:MM:SS</Typography>\n          </Box>\n\n          <Box display=\"flex\" alignItems=\"center\">\n            <Tooltip title=\"Order Set\">\n              <IconButton sx={{ margin: \"0 10px\" }}>\n                <ListAltIcon sx={{ color: \"blue\" }} />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"ERX Status\">\n              <IconButton sx={{ margin: \"0 10px\" }}>\n                <ErrorIcon sx={{ color: \"red\" }} />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Switch Branch\">\n              <IconButton sx={{ margin: \"0 10px\" }}>\n                <SwapHorizIcon sx={{ color: \"green\" }} />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Alert\">\n              <IconButton sx={{ margin: \"0 10px\" }}>\n                <ErrorIcon sx={{ color: \"orange\" }} />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Log out\">\n              <IconButton sx={{ margin: \"0 10px\" }}>\n                <LogoutIcon sx={{ color: \"purple\" }} />\n              </IconButton>\n            </Tooltip>\n          </Box>\n        </>\n      ) : ( */}\n      <>\n        {/* Right-aligned icons */}\n        {/* <Box display=\"flex\" alignItems=\"center\">\n          <Tooltip title=\"Log out\">\n            <IconButton sx={{ margin: \"0 10px\" }} onClick={logoutApp}>\n              <LogoutIcon sx={{ color: \"white\" }} />\n            </IconButton>\n          </Tooltip>\n        </Box> */}\n      </>\n      {/* )} */}\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    branchId: state?.auth?.user?.data?.branchMaster.branchId,\n    username: state?.auth?.user?.data?.userName,\n    role: state?.auth?.user?.data?.roleMaster?.roleName,\n  };\n};\n\nexport default connect(mapStateToProps)(Topbar);\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  FaCalendarCheck,\r\n  FaUserPlus,\r\n  FaFileInvoiceDollar,\r\n  FaProcedures,\r\n  FaBed,\r\n  FaUserMd,\r\n  FaFlask,\r\n  FaClipboardList,\r\n  FaFileAlt,\r\n  FaUserNurse,\r\n} from \"react-icons/fa\";\r\n\r\nconst allModules = [\r\n  {\r\n    name: \"Appointment\",\r\n    icon: <FaCalendarCheck />,\r\n    path: \"/secure/appointment\",\r\n    color: \"#6B8E23\",\r\n  },\r\n  {\r\n    name: \"Registration\",\r\n    icon: <FaUserPlus />,\r\n    path: \"/secure/registration\",\r\n    color: \"#FFA500\",\r\n  },\r\n  {\r\n    name: \"Doctor EMR\",\r\n    icon: <FaUserMd />,\r\n    path: \"/secure/doctorEmr\",\r\n    color: \"#9932CC\",\r\n  },\r\n  {\r\n    name: \"Nurse EMR\",\r\n    icon: <FaUserNurse />,\r\n    path: \"/secure/nurseEmr\",\r\n    color: \"#A52A2A\",\r\n  },\r\n  {\r\n    name: \"Billing\",\r\n    icon: <FaFileInvoiceDollar />,\r\n    path: \"/secure/billing/list\",\r\n    color: \"#008080\",\r\n  },\r\n  {\r\n    name: \"Report\",\r\n    icon: <FaFileAlt />,\r\n    path: \"/secure\",\r\n    color: \"#FF6B6B\",\r\n  },\r\n  {\r\n    name: \"IP EMR\",\r\n    icon: <FaProcedures />,\r\n    path: \"/secure/ipemr\",\r\n    color: \"#4169E1\",\r\n  },\r\n  {\r\n    name: \"Bed & Ward\",\r\n    icon: <FaBed />,\r\n    path: \"/secure/bedandward\",\r\n    color: \"#A52A2A\",\r\n  },\r\n\r\n  {\r\n    name: \"Laboratory\",\r\n    icon: <FaFlask />,\r\n    path: \"/secure/lab\",\r\n    color: \"#32CD32\",\r\n  },\r\n  {\r\n    name: \"Master\",\r\n    icon: <FaClipboardList />,\r\n    path: \"/secure/master\",\r\n    color: \"#FF6B6B\",\r\n  },\r\n];\r\n\r\nconst Landing = () => {\r\n  const navigate = useNavigate();\r\n  const [filteredModules, setFilteredModules] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loginUser = localStorage.getItem(\"user\");\r\n    if (loginUser) {\r\n      const userData = JSON.parse(loginUser);\r\n      const userRole = userData?.data?.roleMaster?.roleName || \"\";\r\n\r\n      let allowedModules = [];\r\n\r\n      if (userRole === \"Receptionist\") {\r\n        allowedModules = allModules.filter(\r\n          (mod) =>\r\n            mod.name === \"Appointment\" ||\r\n            mod.name === \"Registration\" ||\r\n            mod.name === \"Billing\" ||\r\n            mod.name === \"Report\"\r\n        );\r\n      } else if (userRole === \"Billing\") {\r\n        allowedModules = allModules.filter(\r\n          (mod) => mod.name === \"Billing\" || mod.name === \"Report\"\r\n        );\r\n      } else {\r\n        allowedModules = allModules;\r\n      }\r\n\r\n      setFilteredModules(allowedModules);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        // minHeight: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#f5f5f5\",\r\n        padding: \"20px\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(auto-fit, minmax(150px, 1fr))\",\r\n          gap: \"20px\",\r\n          //   width: \"100%\",\r\n          maxWidth: \"900px\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        className=\"mx-auto\"\r\n      >\r\n        {filteredModules.length > 0 ? (\r\n          filteredModules.map((module, index) => (\r\n            <div\r\n              key={index}\r\n              onClick={() => navigate(module.path)}\r\n              style={{\r\n                backgroundColor: module.color,\r\n                width: \"150px\",\r\n                height: \"150px\",\r\n                borderRadius: \"10px\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                cursor: \"pointer\",\r\n                transition: \"transform 0.2s, box-shadow 0.2s\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\",\r\n                textAlign: \"center\",\r\n                boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\r\n              }}\r\n              onMouseEnter={(e) =>\r\n                (e.currentTarget.style.transform = \"scale(1.1)\")\r\n              }\r\n              onMouseLeave={(e) =>\r\n                (e.currentTarget.style.transform = \"scale(1)\")\r\n              }\r\n            >\r\n              <div style={{ fontSize: \"40px\", marginBottom: \"10px\" }}>\r\n                {module.icon}\r\n              </div>\r\n              {module.name}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No modules available for your role</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { useState } from \"react\";\nimport Topbar from \"../../../components/global/Topbar\";\nimport Sidebar from \"../../../components/global/Sidebar\";\nimport DoctorEmrSidebar from \"../../../components/global/DoctorEmrSidebar\";\nimport PatientTabs from \"../../../secure/doctorEMR/components/patientTabs\";\nimport PatientVitals from \"../../../secure/doctorEMR/components/PatientVitals\";\nimport PatientDetails from \"../../../secure/doctorEMR/components/patientDetails\";\nimport Landing from \"../../../components/other/Landing\";\n\nconst SecureLayout = ({ children }) => {\n  const [isSidebar, setIsSidebar] = useState(true);\n  const currentURL = window.location.href;\n\n  return (\n    <div className=\"app\">\n      <Topbar setIsSidebar={setIsSidebar} />\n      {/* {currentURL.includes(\"doctorEmr\") && <PatientTabs />} */}\n      {/* {currentURL.includes(\"doctor\") && !currentURL.includes(\"dashboard\") && <PatientDetails />}\n      {currentURL.includes(\"doctor\") && !currentURL.includes(\"dashboard\") && <PatientVitals />} */}\n      <main className=\"content\">\n        {/* {currentURL.includes(\"secure\") && <Landing />} */}\n        {/* {currentURL.includes(\"secure\") && <Sidebar isSidebar={isSidebar} />} */}\n        {/* {currentURL.includes(\"doctor\") && !currentURL.includes(\"dashboard\") && <DoctorEmrSidebar isSidebar={isSidebar} />} */}\n        {children}\n      </main>\n    </div>\n  );\n};\n\nexport default SecureLayout;\n","import React, { useEffect, useState } from \"react\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport SecureLayout from \"./modules/secure/SecureLayout\";\nimport { useSelector } from \"react-redux\";\nimport _ from \"lodash\";\n\nexport const EMRRouteBuilder = (props) => {\n  const [routes, setRoutes] = useState();\n  const navigate = useNavigate(); // React Router navigate function\n  const username = useSelector((state) => state?.auth?.user?.data?.userName); // Get username\n  const user = useSelector((state) => state?.auth?.user); // Get user for authentication\n\n  // Check if the username is remembered in localStorage\n  const isRemembered = () => {\n    const rememberedUsername = localStorage.getItem(\"rememberedUsername\");\n    return !_.isEmpty(rememberedUsername);\n  };\n\n  const isAuthenticated = () => {\n    return !!user; // Checks if the user exists in Redux state\n  };\n\n  useEffect(() => {\n    buildRoutes();\n  }, [user]); // Re-run route building when username changes\n\n  const buildRoutes = () => {\n    const promiseRoutes = props.routes.map(async (route) => await buildRoute(route));\n    Promise.all(promiseRoutes).then((routes) => {\n      setRoutes(routes);\n    });\n  };\n\n  async function buildRoute(route) {\n    let Component = route.component;\n\n    // Interceptor logic\n    if (props.interceptor) {\n      Component = await props.interceptor(route);\n    }\n\n    // Check if route is not secure and user is authenticated or remembered\n    if (!route.secure && (isAuthenticated() || isRemembered())) {\n      return (\n        <Route\n          key={route.path}\n          path={route.path}\n          exact={route.exact}\n          element={<Navigate to=\"/secure/landing\" />} // Redirect if authenticated\n        />\n      );\n    }\n\n    // If route is secure and user is authenticated or remembered\n    else if (route.secure) {\n      if (isAuthenticated() || isRemembered()) {\n        return (\n          <Route\n            key={route.path}\n            path={route.path}\n            exact={route.exact}\n            element={\n              <SecureLayout>\n                <Component />\n              </SecureLayout>\n            }\n          />\n        );\n      } else {\n        return (\n          <Route\n            key={route.path}\n            path={\"login\"}\n            exact={route.exact}\n            element={<Navigate to=\"/login\" />}\n          />\n        );\n      }\n    }\n\n    // If route is public\n    else {\n      return (\n        <Route\n          key={route.path}\n          path={route.path}\n          exact={route.exact}\n          element={<Component />}\n        />\n      );\n    }\n  }\n\n  // Render all routes dynamically\n  function renderRoutes() {\n    return <Routes>{routes}</Routes>;\n  }\n\n  return renderRoutes();\n};\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { login } from \"../Redux/slice/login/authSlice\";\r\n\r\nconst LoginForm = ({ setShowForgotPage, setShowLoginPage, setShowSignup }) => {\r\n  const [formValues, setFormValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const dispatch = useDispatch();\r\n  const { loading } = useSelector((state) => state.auth);\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    if (!formValues.email.trim()) {\r\n      errors.email = \"Email is required\";\r\n    }\r\n    if (!formValues.password) {\r\n      errors.password = \"Password is required\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const formErrors = validateForm();\r\n    if (Object.keys(formErrors).length === 0) {\r\n      dispatch(login(formValues));\r\n    } else {\r\n      setErrors(formErrors);\r\n    }\r\n  };\r\n\r\n  const handleChange = (field) => (e) => {\r\n    setFormValues({ ...formValues, [field]: e.target.value });\r\n    setErrors((prevErrors) => ({ ...prevErrors, [field]: \"\" }));\r\n  };\r\n  const handleShowForgot = () => {\r\n    setShowLoginPage(false);\r\n    setShowForgotPage(true);\r\n  };\r\n  const handleClickSignup = () => {\r\n    setShowSignup(true);\r\n    setShowLoginPage(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"title\">Account Login</div>\r\n      <div className=\"desc\">\r\n        If you are already a member you can login with your email address and\r\n        password.\r\n      </div>\r\n      <form onSubmit={handleLogin}>\r\n        <TextField\r\n          label=\"Email Address\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          error={!!errors.email}\r\n          onChange={handleChange(\"email\")}\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          error={!!errors.password}\r\n          onChange={handleChange(\"password\")}\r\n          size=\"small\"\r\n        />\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            marginBottom: 16,\r\n          }}\r\n        >\r\n          <FormControlLabel control={<Checkbox />} label=\"Remember me\" />\r\n          <div style={{ alignSelf: \"center\" }}>\r\n            <div onClick={handleShowForgot} className=\"forgot-password-link\">\r\n              Forgot Password ?\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          disabled={loading}\r\n        >\r\n          {loading ? <CircularProgress size={24} /> : \"Login\"}\r\n        </Button>\r\n\r\n        <div className=\"signup-info\">\r\n          Don't have an account ?&nbsp;\r\n          <div onClick={handleClickSignup} className=\"signup-link\">\r\n            Sign up here\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport \"./auth.css\";\r\nimport { Button, TextField } from \"@mui/material\";\r\n\r\nconst Signup = ({ setShowLoginPage, setShowSignup }) => {\r\n  const handleClickLogin = () => {\r\n    setShowLoginPage(true);\r\n    setShowSignup(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Register Account</h2>\r\n      <form>\r\n        <TextField\r\n          label=\"Email Address\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          label=\"Phone Number\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          label=\"Enter Password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          label=\"Confirm Password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n        />\r\n        <div className=\"mt-2\">\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n            Register\r\n          </Button>\r\n        </div>\r\n      </form>\r\n      <div className=\"signup-info\">\r\n        Already have an account ?&nbsp;\r\n        <div onClick={handleClickLogin} className=\"signup-link\">\r\n          Login\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from \"react\";\r\nimport { Button, TextField } from \"@mui/material\";\r\n\r\nconst ForgotPassword = ({\r\n  setShowForgotPage,\r\n  setShowLoginPage,\r\n  setShowReset,\r\n}) => {\r\n  const [formValues, setFormValues] = useState({ email: \"\" });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateForm = () => {\r\n    let errors = {};\r\n    if (!formValues.email.trim()) {\r\n      errors.email = \"Email is required\";\r\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formValues.email)) {\r\n      errors.email = \"Enter a valid email\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = validateForm();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n    // Call API if no errors\r\n    console.log(\"Sending reset email to:\", formValues.email);\r\n    // let response = await postData(`/app/auth/forgotPassword?email=${formValues.email}`);\r\n    setShowReset(true);\r\n    setShowForgotPage(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormValues({ email: e.target.value });\r\n    setErrors((prevErrors) => ({ ...prevErrors, email: \"\" })); // Remove error on typing\r\n  };\r\n\r\n  const handleClickLogin = () => {\r\n    setShowLoginPage(true);\r\n    setShowForgotPage(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Forgot Password</h2>\r\n\r\n      <form onSubmit={handleResetPassword}>\r\n        <TextField\r\n          label=\"Email address\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n          error={!!errors.email}\r\n          // helperText={errors.email}\r\n          value={formValues.email}\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"mt-2\">\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n            Send to Email\r\n          </Button>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"signup-info\">\r\n        Back to&nbsp;\r\n        <div onClick={handleClickLogin} className=\"signup-link\">\r\n          Login\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"http://ec2-16-171-230-69.eu-north-1.compute.amazonaws.com:8080/\",\n  // baseURL: \"http://ec2-51-20-6-134.eu-north-1.compute.amazonaws.com:8080/\",\n  // baseURL: \"http://localhost:8080\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Request interceptor to add tokens or modify requests\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const branchId = localStorage.getItem(\"branchId\");\n    if (branchId) {\n      if (config.method === \"get\") {\n        const url = new URL(config.url, config.baseURL);\n        url.searchParams.append(\"branchId\", parseInt(branchId));\n        config.url = url.pathname + url.search;\n      } else {\n        if (config.data) {\n          config.data = { ...config.data, branchId };\n        } else {\n          config.data = { branchId };\n        }\n      }\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Response interceptor to handle errors globally\naxiosInstance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // Handle errors or show notifications here\n    console.error(\"API call error:\", error);\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n","import axiosInstance from \"../api/AxiosInstance\";\n\nexport const fetchData = async (url, params) => {\n  try {\n    const response = await axiosInstance.get(url, params);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const postData = async (url, data) => {\n  try {\n    const response = await axiosInstance.post(url, data);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const deleteData = async (url, data) => {\n  try {\n    const response = await axiosInstance.delete(url, data);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const doctorDashboardCount = async (url, params) => {\n  try {\n    const response = await axiosInstance.get(\n      `${url}?doctorId=${params?.doctorId}&ipOpFlag=${params?.ipOpFlag}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching doctor dashboard count:\", error);\n    throw error;\n  }\n};\n\nexport const doctorDashboardDataList = async (url, params) => {\n  console.log(params,\"params\")\n  try {\n    const response = await axiosInstance.get(\n      `${url}?doctorId=${params?.doctorId}&ipOpFlag=${params?.ipOpFlag}&context=${params?.context}&page=${params?.page}&size=${params?.size}&ptName=${params?.ptName}&status=${params?.status}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching doctor dashboard data:\", error);\n    throw error;\n  }\n};\n","import React, { createContext, useState, useContext } from \"react\";\n\nconst LoadingContext = createContext();\n\nexport const LoadingProvider = ({ children }) => {\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <LoadingContext.Provider value={{ loading, setLoading }}>\n      {children}\n    </LoadingContext.Provider>\n  );\n};\n\nexport const useLoading = () => useContext(LoadingContext);\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Alert,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { postData } from \"../core/services/APIService\";\r\nimport { useLoading } from \"../components/global/loader/LoadingContext\";\r\n\r\nconst ResetPassword = () => {\r\n  const [formValues, setFormValues] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const { loading, setLoading } = useLoading();\r\n\r\n  const validateForm = () => {\r\n    let errors = {};\r\n    if (!formValues.password.trim()) {\r\n      errors.password = \"Password is required\";\r\n    }\r\n    if (!formValues.confirmPassword.trim()) {\r\n      errors.confirmPassword = \"Confirm Password is required\";\r\n    }\r\n    if (formValues.password !== formValues.confirmPassword) {\r\n      errors.confirmPassword = \"Passwords do not match\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n    setAlertMessage(\"\");\r\n\r\n    const validationErrors = validateForm();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    const token = params.get(\"token\");\r\n\r\n    try {\r\n      const response = await postData(\r\n        `/auth/resetPassword?token=${token}&newPassword=${formValues.password}&confirmPassword=${formValues.confirmPassword}`\r\n      );\r\n      setLoading(false);\r\n      if (response.status) {\r\n        setMessage(\"Password has been reset successfully.\");\r\n      } else {\r\n        setAlertMessage(response.message || \"Failed to reset password.\");\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setAlertMessage(\"Invalid or expired token\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (field) => (e) => {\r\n    setFormValues({ ...formValues, [field]: e.target.value });\r\n    setErrors((prevErrors) => ({ ...prevErrors, [field]: \"\" })); // Remove error on typing\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Password Reset</h2>\r\n\r\n      {/* Display error message */}\r\n      {alertMessage && <Alert severity=\"error\">{alertMessage}</Alert>}\r\n\r\n      {/* Display success message */}\r\n      {message && <Alert severity=\"success\">{message}</Alert>}\r\n\r\n      <form onSubmit={handleResetPassword}>\r\n        <TextField\r\n          label=\"Enter Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          error={!!errors.password}\r\n          helperText={errors.password}\r\n          // value={formValues.password}\r\n          onChange={handleChange(\"password\")}\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          error={!!errors.confirmPassword}\r\n          // helperText={errors.confirmPassword}\r\n          value={formValues.confirmPassword}\r\n          onChange={handleChange(\"confirmPassword\")}\r\n          size=\"small\"\r\n        />\r\n        <div className=\"mt-2\">\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress size={24} /> : \"Submit\"}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport LoginForm from \"../../../auth/LoginForm\";\nimport Signup from \"../../../auth/Signup\";\nimport ForgotPassword from \"../../../auth/ForgotPassword\";\nimport ResetPassword from \"../../../auth/ResetPassword\";\nimport AuthPage from \"../../../auth/auth\";\n\n\nexport const PUBLIC_ROUTES = [\n  { path: \"*\", component: () => <Navigate to=\"/login\" /> },\n  { path: \"/login\", component: AuthPage },\n  { path: \"/register\", component: Signup },\n  { path: \"/forgot-password\", component: ForgotPassword },\n  { path: \"/reset-password\", component: ResetPassword }\n];\n","import React, { useState } from \"react\";\r\nimport { Paper } from \"@mui/material\";\r\nimport bgImg from \"../assets/bgImg.jpg\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport Signup from \"./Signup\";\r\nimport ResetPassword from \"./ResetPassword\";\r\n\r\nconst AuthPage = () => {\r\n  const [showLoginPage, setShowLoginPage] = useState(true);\r\n  const [showForgotPage, setShowForgotPage] = useState(false);\r\n  const [showSignup, setShowSignup] = useState(false);\r\n  const [showReset, setShowReset] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundImage: `url(${bgImg})`,\r\n        backgroundSize: \"cover\",\r\n        width: \"100%\",\r\n        // backgroundColor: \"teal\",\r\n        // background:\r\n        //   \"linear-gradient(to right,rgb(95, 255, 242) 50%,rgb(57, 150, 156) 50%)\",\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={5}\r\n        sx={{\r\n          p: 4,\r\n          width: 400,\r\n          bgcolor: \"rgba(255, 255, 255, 0.8)\",\r\n          opacity: \"75%\",\r\n        }}\r\n      >\r\n        {showLoginPage && (\r\n          <LoginForm\r\n            setShowForgotPage={setShowForgotPage}\r\n            setShowLoginPage={setShowLoginPage}\r\n            setShowSignup={setShowSignup}\r\n          />\r\n        )}\r\n        {showForgotPage && (\r\n          <ForgotPassword\r\n            setShowForgotPage={setShowForgotPage}\r\n            setShowLoginPage={setShowLoginPage}\r\n            setShowReset={setShowReset}\r\n          />\r\n        )}\r\n        {showSignup && (\r\n          <Signup\r\n            setShowLoginPage={setShowLoginPage}\r\n            setShowSignup={setShowSignup}\r\n          />\r\n        )}\r\n        {showReset && <ResetPassword />}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","import React from \"react\";\n\n// Wrapper component to prevent children from exceeding the viewport\nconst ScreenWrapper = ({ children, style, ...props }) => {\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        height: \"100vh\",\n        overflow: \"auto\",\n        boxSizing: \"border-box\",\n        backgroundColor: \"#68727a05\",\n        ...style\n      }}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default ScreenWrapper;\n","import React, { useState } from \"react\";\nimport { Tabs } from \"antd\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport \"antd/dist/reset.css\"; // Import Ant Design styles\n\nconst { TabPane } = Tabs;\n\nconst EMRtabs = ({ tabsList, defaultTab, setActiveTab }) => {\n  const [activeKey, setActiveKey] = useState(defaultTab ?? tabsList[0]?.value);\n\n  const handleChange = (key) => {\n    setActiveKey(key);\n    setActiveTab(key);\n  };\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {/* Ant Design Tabs */}\n      <Tabs\n        activeKey={activeKey}\n        onChange={handleChange}\n        // centered\n        type=\"card\" // Can be 'line', 'card', or 'editable-card'\n        tabBarStyle={\n          {\n            // backgroundColor: \"#00748b\",\n            // color: \"white\",\n            // borderRadius: \"8px\",\n          }\n        }\n        style={{\n          width: \"100%\",\n        }}\n      >\n        {tabsList.map((tab) => (\n          <TabPane tab={<span>{tab.name}</span>} key={tab.value} />\n        ))}\n      </Tabs>\n\n      {/* Animated Tab Content */}\n      <div\n        // style={{ position: \"relative\", overflow: \"hidden\", marginTop: \"16px\" }}\n      >\n        <AnimatePresence mode=\"wait\">\n          {tabsList.map((tab) =>\n            tab.value === activeKey ? (\n              <motion.div\n                key={tab.value}\n                initial={{ x: 100, opacity: 0 }} // Slide in from right\n                animate={{ x: 0, opacity: 1 }} // Fade in\n                exit={{ x: -100, opacity: 0 }} // Slide out to left\n                transition={{ duration: 0.3 }}\n                style={{ position: \"absolute\", width: \"100%\" }}\n              >\n                {tab.content}\n              </motion.div>\n            ) : null\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\nexport default EMRtabs;\n","import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Box,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\n\r\nconst FormInput = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  type = \"text\",\r\n  options = [],\r\n  required = false,\r\n  setDependentValue,\r\n  ...props\r\n}) => {\r\n  const [error, setError] = useState(false);\r\n\r\n  // Function to format date as \"YYYY-MM-DD\"\r\n  const formatDate = (date) => {\r\n    if (!date) return \"\";\r\n    return new Date(date).toISOString().split(\"T\")[0]; // Converts to \"YYYY-MM-DD\"\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (required && !value) {\r\n      setError(true);\r\n    } else {\r\n      setError(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      {type === \"select\" ? (\r\n        <FormControl\r\n          required={required}\r\n          error={error}\r\n          variant=\"standard\"\r\n          sx={{\r\n            width: \"100%\",\r\n            \"& .css-5lvf42-MuiSelect-select-MuiInputBase-input-MuiInput-input\":\r\n              {\r\n                backgroundColor: \"white\",\r\n                borderRadius: \"4px\",\r\n              },\r\n          }}\r\n        >\r\n          <InputLabel\r\n            shrink={true}\r\n            sx={{\r\n              color: \"rgb(54, 54, 54)\",\r\n              fontSize: \"16px\",\r\n              \"&.Mui-focused\": { color: \"rgb(43, 43, 43)\" },\r\n            }}\r\n          >\r\n            {label}\r\n          </InputLabel>\r\n          <Select\r\n            value={value || \"\"}\r\n            onChange={(e) => {\r\n              const selectedOption = options.find(\r\n                (option) => option.label === e.target.value\r\n              );\r\n              onChange(selectedOption?.label || \"\");\r\n              setError(required && !selectedOption?.label);\r\n            }}\r\n            onBlur={handleBlur}\r\n            label={label}\r\n            sx={{\r\n              width: \"100%\",\r\n              fontSize: \"12px\",\r\n              \"&:before\": {\r\n                borderBottom: \"1px solid rgb(129, 129, 129)\",\r\n              },\r\n              \"&:after\": {\r\n                borderBottom: \"1px solid rgb(129, 129, 129)\",\r\n              },\r\n              \"&.Mui-focused:before\": {\r\n                borderBottom: \"1px solid rgb(129, 129, 129) !important\",\r\n              },\r\n            }}\r\n            {...props}\r\n          >\r\n            <MenuItem value=\"\" disabled>\r\n              Select {label}\r\n            </MenuItem>\r\n            {options.map((option, index) => (\r\n              <MenuItem\r\n                key={index}\r\n                value={option.label}\r\n                sx={{ fontSize: \"12px\" }}\r\n              >\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n          {error && <FormHelperText>{label} is required</FormHelperText>}\r\n        </FormControl>\r\n      ) : (\r\n        <TextField\r\n          label={label}\r\n          value={type === \"date\" ? formatDate(value) : value}\r\n          onChange={(e) => {\r\n            const newValue = e.target.value;\r\n            if (type === \"date\" && setDependentValue) {\r\n              const calculatedAge = calculateAge(newValue);\r\n              setDependentValue(calculatedAge);\r\n            }\r\n            onChange(newValue);\r\n            setError(required && !newValue);\r\n          }}\r\n          onBlur={handleBlur}\r\n          variant=\"standard\"\r\n          fullWidth\r\n          required={required}\r\n          type={type === \"textarea\" ? undefined : type}\r\n          multiline={type === \"textarea\"}\r\n          rows={type === \"textarea\" ? 2 : undefined}\r\n          error={error}\r\n          helperText={error ? `${label} is required` : \"\"}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n            sx: {\r\n              color: \"rgb(37, 37, 37)\",\r\n              fontSize: \"16px\",\r\n              \"&.Mui-focused\": { color: \"rgb(51, 51, 51)\" },\r\n            },\r\n          }}\r\n          inputProps={{\r\n            ...(type === \"date\" && { pattern: \"\\\\d{4}-\\\\d{2}-\\\\d{2}\" }),\r\n          }}\r\n          sx={{\r\n            \"& .MuiInput-underline:before\": {\r\n              borderBottom: \"1px solid rgb(129, 129, 129)\",\r\n            },\r\n            \"& .MuiInput-underline:hover:before\": {\r\n              borderBottom: \"1px solid rgb(129, 129, 129)\",\r\n            },\r\n            \"& .MuiInput-underline:after\": {\r\n              borderBottom: \"1px solid rgb(129, 129, 129)\",\r\n            },\r\n            \"& .css-1yrc8ca-MuiInputBase-input-MuiInput-input\": {\r\n              backgroundColor: \"white\",\r\n              borderRadius: \"4px\",\r\n            },\r\n          }}\r\n          {...props}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\n// Function to calculate age based on DOB (optional)\r\nconst calculateAge = (dob) => {\r\n  const birthDate = new Date(dob);\r\n  const today = new Date();\r\n  const age = today.getFullYear() - birthDate.getFullYear();\r\n  const m = today.getMonth() - birthDate.getMonth();\r\n  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n    return age - 1;\r\n  }\r\n  return age;\r\n};\r\n\r\nexport default FormInput;\r\n","import { getNames } from \"country-list\";\r\n\r\nexport const DropdownOptions = {\r\n  visitOptions: [\r\n    // { id: \"1\", label: \"Emergency Room\", value: \"emergency_room\" },\r\n    // { id: \"2\", label: \"Surgery Room\", value: \"surgery\" },\r\n    // { id: \"3\", label: \"Physio Room\", value: \"physio_room\" },\r\n    // { id: \"4\", label: \"Non Consultation\", value: \"non_consultation\" },\r\n    // { id: \"5\", label: \"Tele Medicine\", value: \"tele_medicine\" },\r\n    { id: \"6\", label: \"In Patient\", value: \"ip\" },\r\n    { id: \"7\", label: \"Out Patient\", value: \"op\" },\r\n  ],\r\n  genderOpton: [\r\n    { label: \"Select\", value: \"\" },\r\n    { label: \"Female\", value: \"female\" },\r\n    { label: \"Male\", value: \"male\" },\r\n    { label: \"Other\", value: \"other\" },\r\n  ],\r\n  nationalityOptions: getNames().map((name) => ({\r\n    value: name.toLowerCase(),\r\n    label: name,\r\n  })),\r\n  visaTypeOptions: [\r\n    { id: \"1\", label: \"Local\", value: \"local\" },\r\n    { id: \"2\", label: \"Resident\", value: \"resident\" },\r\n    { id: \"3\", label: \"Visitor\", value: \"visitor\" },\r\n  ],\r\n  specialityOptions: [\r\n    { id: \"1\", label: \"speciality 1\", value: \"speciality_1\" },\r\n    { id: \"2\", label: \"speciality 2\", value: \"speciality_2\" },\r\n  ],\r\n  encounterTypeOptions: [\r\n    {\r\n      id: \"1\",\r\n      label: \"No Bed + No Emergency Room\",\r\n      value: \"no_bed_no_emergency_room\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      label: \"No Bed + Emergency Room\",\r\n      value: \"no_bed_emergency_room\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      label: \"Daycase Bed + No Emergency Room\",\r\n      value: \"daycase_bed_no_emergency_room\",\r\n    },\r\n    {\r\n      id: \"4\",\r\n      label: \"Daycase Bed + Emergency Room\",\r\n      value: \"daycase_bed_emergency_room\",\r\n    },\r\n  ],\r\n  ipEncounterTypeOptions: [\r\n    {\r\n      id: \"1\",\r\n      label: \"daycase bed + emergency  \",\r\n      value: \"daycase_emergency_room\",\r\n    },\r\n    // {\r\n    //   id: \"2\",\r\n    //   label: \"No Bed + Emergency Room\",\r\n    //   value: \"no_bed_emergency_room\",\r\n    // },\r\n    // {\r\n    //   id: \"3\",\r\n    //   label: \"Daycase Bed + No Emergency Room\",\r\n    //   value: \"daycase_bed_no_emergency_room\",\r\n    // },\r\n    // {\r\n    //   id: \"4\",\r\n    //   label: \"Daycase Bed + Emergency Room\",\r\n    //   value: \"daycase_bed_emergency_room\",\r\n    // },\r\n  ],\r\n  doctorOptions: [\r\n    { id: \"1\", label: \"Doctor 1\", value: \"doctor_1\" },\r\n    { id: \"2\", label: \"Doctor 2\", value: \"doctor_2\" },\r\n  ],\r\n  paymentOptions: [\r\n    {\r\n      id: \"1\",\r\n      label: \"Cash\",\r\n      value: \"cash\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      label: \"Insurance\",\r\n      value: \"insurance\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      label: \"Corporate\",\r\n      value: \"corporate\",\r\n    },\r\n  ],\r\n  infoSourceOptions: [\r\n    { id: \"1\", label: \"Event\", value: \"event\" },\r\n    { id: \"2\", label: \"Family and Friends\", value: \"family_and_friends\" },\r\n    { id: \"3\", label: \"Fazaa\", value: \"fazaa\" },\r\n    { id: \"4\", label: \"Google\", value: \"google\" },\r\n    { id: \"5\", label: \"My Alfred App\", value: \"my_alfred_app\" },\r\n    { id: \"6\", label: \"Promotions\", value: \"promotion\" },\r\n    { id: \"7\", label: \"Social Media\", value: \"social_media\" },\r\n    { id: \"8\", label: \"Website\", value: \"website\" },\r\n  ],\r\n  patientTypeOptions: [\r\n    { id: \"1\", label: \"Normal\", value: \"normal\" },\r\n    { id: \"2\", label: \"Recruitment\", value: \"recruitment\" },\r\n    { id: \"3\", label: \"Pre-Employment\", value: \"pre-employment\" },\r\n    { id: \"4\", label: \"VIP\", value: \"vip\" },\r\n    { id: \"5\", label: \"VVIP\", value: \"vvip\" },\r\n    { id: \"6\", label: \"Determination\", value: \"determination\" },\r\n  ],\r\n  otherIdOptions: [\r\n    { id: \"1\", label: \"Passport\", value: \"passport\" },\r\n    { id: \"2\", label: \"GCC ID\", value: \"gcc_id\" },\r\n    { id: \"3\", label: \"Driving License\", value: \"driving_license\" },\r\n  ],\r\n  addressOptions: [\r\n    { id: \"1\", label: \"Dubai\", value: \"Dubai\" },\r\n    { id: \"2\", label: \"Abu Dhabi\", value: \"Abu Dhabi\" },\r\n    { id: \"3\", label: \"Sharjah\", value: \"Sharjah\" },\r\n    { id: \"4\", label: \"Fujairah\", value: \"Fujairah\" },\r\n    { id: \"5\", label: \"Ras Al Khaimah\", value: \"Ras Al Khaimah\" },\r\n    { id: \"6\", label: \"Umm Al Quwain\", value: \"Umm Al Quwain\" },\r\n    { id: \"7\", label: \"Ajman\", value: \"Ajman\" },\r\n    { id: \"8\", label: \"Others\", value: \"Others\" },\r\n    { id: \"9\", label: \"Unknown\", value: \"Unknown\" },\r\n  ],\r\n  referralOptions: [\r\n    { id: \"1\", label: \"Yes\", value: \"yes\" },\r\n    { id: \"2\", label: \"No\", value: \"no\" },\r\n  ],\r\n  religionOptions: [\r\n    { id: \"1\", label: \"Buddhist\", value: \"BUD\" },\r\n    { id: \"2\", label: \"Buddhist: Mahayana\", value: \"BMA\" },\r\n    { id: \"3\", label: \"Buddhist: Theravada\", value: \"BTH\" },\r\n    { id: \"4\", label: \"Christian\", value: \"CHR\" },\r\n    { id: \"5\", label: \"Christian: Anglican\", value: \"ANG\" },\r\n    { id: \"6\", label: \"Christian: Baptist\", value: \"BAP\" },\r\n    { id: \"7\", label: \"Christian: Christian Science\", value: \"CHS\" },\r\n    { id: \"8\", label: \"Christian: Episcopalian\", value: \"EPI\" },\r\n    { id: \"9\", label: \"Christian: Greek Orthodox\", value: \"GRE\" },\r\n    { id: \"10\", label: \"Christian: Jehovah's Witness\", value: \"JWN\" },\r\n    { id: \"11\", label: \"Christian: Lutheran\", value: \"LUT\" },\r\n    { id: \"12\", label: \"Christian: Mennonite\", value: \"MEN\" },\r\n    { id: \"13\", label: \"Christian: Methodist\", value: \"MET\" },\r\n    { id: \"14\", label: \"Christian: Pentecostal\", value: \"PEN\" },\r\n    { id: \"15\", label: \"Christian: Presbyterian\", value: \"PRE\" },\r\n    { id: \"16\", label: \"Christian: Protestant\", value: \"PRO\" },\r\n    { id: \"17\", label: \"Christian: Roman Catholic\", value: \"CAT\" },\r\n    { id: \"18\", label: \"Christian: Seventh Day Adventist\", value: \"SEV\" },\r\n    { id: \"19\", label: \"Christian: Unitarian Universalist\", value: \"UNU\" },\r\n    { id: \"20\", label: \"Ethnic Religionist\", value: \"ERL\" },\r\n    { id: \"21\", label: \"Hindu\", value: \"HIN\" },\r\n    { id: \"22\", label: \"Hindu: Other\", value: \"HOT\" },\r\n    { id: \"23\", label: \"Jain\", value: \"JAI\" },\r\n    { id: \"24\", label: \"Jewish\", value: \"JEW\" },\r\n    { id: \"25\", label: \"Muslim\", value: \"MOS\" },\r\n    { id: \"26\", label: \"Muslim: Other\", value: \"MOT\" },\r\n    { id: \"27\", label: \"Muslim: Shiite\", value: \"MSH\" },\r\n    { id: \"28\", label: \"Muslim: Sunni\", value: \"MSU\" },\r\n    { id: \"29\", label: \"Other\", value: \"OTH\" },\r\n    { id: \"30\", label: \"Sikh\", value: \"SIK\" },\r\n    { id: \"31\", label: \"Shintoist\", value: \"SHN\" },\r\n    { id: \"32\", label: \"Unknown\", value: \"VAR\" },\r\n  ],\r\n  patientPriorityOptions: [\r\n    { id: \"1\", label: \"Normal\", value: \"normal\" },\r\n    { id: \"2\", label: \"VIP\", value: \"vip\" },\r\n    { id: \"3\", label: \"VVIP\", value: \"vvip\" },\r\n  ],\r\n  maritalStatusOptions: [\r\n    { id: \"1\", label: \"Annulled\", value: \"annulled\" },\r\n    { id: \"2\", label: \"Divorced\", value: \"divorced\" },\r\n    { id: \"3\", label: \"Legally Married\", value: \"legally_married\" },\r\n    { id: \"4\", label: \"Married\", value: \"married\" },\r\n    { id: \"5\", label: \"Other\", value: \"other\" },\r\n    { id: \"6\", label: \"Separated\", value: \"separated\" },\r\n    { id: \"7\", label: \"Single\", value: \"single\" },\r\n    { id: \"8\", label: \"Unknown\", value: \"unknown\" },\r\n    { id: \"9\", label: \"Widowed\", value: \"widowed\" },\r\n    { id: \"10\", label: \"Unmarried\", value: \"unmarried\" },\r\n  ],\r\n  occupationOptions: [\r\n    { value: \"\", label: \"--Please choose an option--\" },\r\n    { value: \"agriculture\", label: \"Agriculture\" },\r\n    { value: \"airlines\", label: \"Airlines\" },\r\n    { value: \"healthcare\", label: \"Healthcare and medicine\" },\r\n    { value: \"arts\", label: \"Arts and entertainment\" },\r\n    { value: \"banking\", label: \"Banking and Finance\" },\r\n    { value: \"blue_collar\", label: \"Blue Collar\" },\r\n    { value: \"business\", label: \"Business\" },\r\n    { value: \"consultant\", label: \"Consultant\" },\r\n    { value: \"industrial\", label: \"Industrial and manufacturing\" },\r\n    { value: \"home_maker\", label: \"Home Maker\" },\r\n    { value: \"hospitality\", label: \"Hospitality\" },\r\n    { value: \"it_professional\", label: \"IT Professional\" },\r\n    { value: \"law_enforcement\", label: \"Law enforcement and armed forces\" },\r\n    { value: \"lawyer\", label: \"Lawyer\" },\r\n    { value: \"media\", label: \"Media\" },\r\n    { value: \"mining\", label: \"Mining\" },\r\n    { value: \"other\", label: \"Other\" },\r\n    { value: \"research\", label: \"Research\" },\r\n    { value: \"retired\", label: \"Retired\" },\r\n    { value: \"road_transport\", label: \"Road Transport\" },\r\n    { value: \"science_technology\", label: \"Science and technology\" },\r\n    { value: \"shipping\", label: \"Shipping\" },\r\n    { value: \"skilled_labor\", label: \"Skilled Labor\" },\r\n    { value: \"sports\", label: \"Sports\" },\r\n    { value: \"student\", label: \"Student\" },\r\n    { value: \"teacher\", label: \"Teacher\" },\r\n    { value: \"unknown\", label: \"Unknown\" },\r\n  ],\r\n};\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const registerPatients = createAsyncThunk(\r\n  \"patient/registerPatients\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        API_ENDPOINTS.REGISTER_PATIENT,\r\n        credentials\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst registerPatientsSlice = createSlice({\r\n  name: \"registerPatients\",\r\n  initialState: {\r\n    registerPatientData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(registerPatients.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerPatients.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.registerPatientData = action.payload.data;\r\n      })\r\n      .addCase(registerPatients.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default registerPatientsSlice.reducer;\r\n","import { toast } from \"react-toastify\";\n\nexport const showToast = (messages, type = \"info\") => {\n  const toastContent = <ToastMessage messages={messages} />;\n\n  const toastOptions = {\n    autoClose: 10000,\n  };\n\n  switch (type) {\n    case \"success\":\n      toast.success(toastContent, toastOptions);\n      break;\n    case \"error\":\n      toast.error(toastContent, toastOptions);\n      break;\n    case \"warning\":\n      toast.warn(toastContent, toastOptions);\n      break;\n    case \"info\":\n    default:\n      toast.info(toastContent, toastOptions);\n      break;\n  }\n};\n\nconst ToastMessage = ({ messages }) => {\n  const messageArray = Array.isArray(messages) ? messages : [messages];\n  return (\n    <div>\n      {messageArray?.map((message, i) => (\n        <ul key={`${message}_${i}`}>\n          <li>{message}</li>\n        </ul>\n      ))}\n    </div>\n  );\n};\n\nexport default ToastMessage;\n","import React, { useRef, useState } from \"react\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport SignatureCanvas from \"react-signature-canvas\";\r\nimport QRCode from \"react-qr-code\";\r\n\r\nexport const PatientInfo = ({ patientData, setShowPatientInfo }) => {\r\n  const sigCanvas = useRef(null);\r\n  const [signatureURL, setSignatureURL] = useState(null);\r\n\r\n  console.log(\"Patient Data:\", patientData);\r\n\r\n  if (!patientData) {\r\n    return (\r\n      <Box p={3} textAlign=\"center\">\r\n        No patient data available\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  const saveSignature = () => {\r\n    if (!sigCanvas.current) {\r\n      console.error(\"Signature pad not initialized.\");\r\n      return;\r\n    }\r\n    try {\r\n      const trimmedCanvas = sigCanvas.current.getTrimmedCanvas();\r\n      if (trimmedCanvas) {\r\n        setSignatureURL(trimmedCanvas.toDataURL(\"image/png\"));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error saving signature:\", error);\r\n    }\r\n  };\r\n\r\n  const clearSignature = () => {\r\n    sigCanvas.current.clear();\r\n    setSignatureURL(null);\r\n  };\r\n\r\n  const qrCodeUrl = `${window.location.origin}/open-signature`;\r\n\r\n  return (\r\n    <Box p={3} style={{ backgroundColor: \"#fff\" }}>\r\n      <div className=\"text-dark header mb-3\">Patient Demographic Details</div>\r\n\r\n      <Box\r\n        display=\"flex\"\r\n        flexWrap=\"wrap\"\r\n        justifyContent={\"space-between\"}\r\n        gap={2}\r\n        p={2}\r\n      >\r\n        {[\r\n          { label: \"MRD No\", value: patientData?.mrdNo },\r\n          { label: \"Patient Name\", value: patientData?.patientName },\r\n          { label: \"Date of Birth\", value: patientData?.dob },\r\n          { label: \"Visit Type\", value: patientData?.visitType },\r\n          { label: \"Nationality\", value: patientData?.nationality },\r\n          { label: \"Visa Type\", value: patientData?.visaType },\r\n          { label: \"Phone Number\", value: patientData?.phoneNumber },\r\n          { label: \"Info Source\", value: patientData?.infoSource },\r\n          { label: \"Address\", value: patientData?.address },\r\n          { label: \"Referral Case\", value: patientData?.referralCase },\r\n          { label: \"Reg Date\", value: patientData?.regDate },\r\n          { label: \"Age\", value: patientData?.age },\r\n          { label: \"Email ID\", value: patientData?.email },\r\n          { label: \"National ID\", value: patientData?.nationalId },\r\n          { label: \"Phone Number (Work)\", value: patientData?.workPhoneNumber },\r\n          { label: \"Preferred Language\", value: patientData?.language },\r\n          { label: \"Religion\", value: patientData?.religion },\r\n          { label: \"Referred By\", value: patientData?.referredBy },\r\n          { label: \"Patient Type\", value: patientData?.patientType },\r\n          { label: \"Patient Priority\", value: patientData?.patientPriority },\r\n          { label: \"Gender\", value: patientData?.gender },\r\n          { label: \"Marital Status\", value: patientData?.maritalStatus },\r\n          { label: \"Other ID\", value: patientData?.otherId },\r\n          { label: \"Land Phone\", value: patientData?.landPhone },\r\n          { label: \"Occupation\", value: patientData?.occupation },\r\n          { label: \"Place\", value: patientData?.place },\r\n          { label: \"Patient Remark\", value: patientData?.patientRemarks },\r\n        ].map(({ label, value }) => (\r\n          <Box\r\n            key={label}\r\n            minWidth=\"250px\"\r\n            p={1}\r\n            style={{ borderBottom: \"1px solid #ddd\" }}\r\n          >\r\n            <strong>{label}:</strong> {value ?? \"--\"}\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n      <Box mt={3} textAlign=\"center\">\r\n        <h3>Scan to Sign</h3>\r\n        <QRCode value={qrCodeUrl} width={100} height={100} />\r\n      </Box>\r\n      <Box mt={3} textAlign=\"center\">\r\n        <h3>Signature</h3>\r\n        <SignatureCanvas\r\n          ref={sigCanvas}\r\n          penColor=\"black\"\r\n          canvasProps={{\r\n            width: 300,\r\n            height: 150,\r\n            className: \"signature-canvas\",\r\n            style: { border: \"1px solid #000\" },\r\n          }}\r\n        />\r\n        <Box mt={2} display=\"flex\" justifyContent=\"center\" gap={2}>\r\n          <Button variant=\"contained\" color=\"primary\" onClick={saveSignature}>\r\n            Save Signature\r\n          </Button>\r\n          <Button variant=\"outlined\" color=\"secondary\" onClick={clearSignature}>\r\n            Clear\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {signatureURL && (\r\n        <Box mt={3} textAlign=\"center\">\r\n          <h4>Saved Signature:</h4>\r\n          <img src={signatureURL} alt=\"Saved Signature\" width={200} />\r\n        </Box>\r\n      )}\r\n\r\n      <Box p={2} display=\"flex\" justifyContent=\"end\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => setShowPatientInfo(false)}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Button } from \"react-bootstrap\";\nimport \"../Registration.css\";\nimport FormInput from \"../../../components/FormFields/FormInput\";\nimport { DropdownOptions } from \"../../../components/FormFields/DropdownOptions\";\nimport { useDispatch } from \"react-redux\";\nimport { registerPatients } from \"../../../Redux/slice/registration/registerPatientsSlice\";\nimport { useSelector } from \"react-redux\";\nimport { showToast } from \"../../../components/global/Toast\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { PatientInfo } from \"./PatientInfo/PatientInfo\";\n\nconst RegisterPatient = () => {\n  const OPTION = DropdownOptions;\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const bookedDetails = location.state?.bookedDetails;\n  const surgeryPatientData = location.state?.patientData;\n  const schedulePatientData = location.state?.rowData;\n\n  console.log(\"schedulePatientData\", schedulePatientData);\n\n  const [showPatientInfo, setShowPatientInfo] = useState(false);\n  const [patientData, setPatientData] = useState();\n\n  const { loading, error } = useSelector((state) => state.regPatient);\n  const { registerPatientData } = useSelector((state) => state.regPatient);\n\n  const getCurrentDate = () => new Date().toISOString().split(\"T\")[0];\n\n  const [formData, setFormData] = useState({\n    image: \"\",\n    visitType: surgeryPatientData ? \"In Patient\" : \"\" || \"\",\n    patientName:\n      bookedDetails?.patientName ||\n      surgeryPatientData?.patient ||\n      schedulePatientData?.patientName ||\n      \"\",\n    gender: \"\",\n    dob: \"\",\n    nationality: \"\",\n    visaType: \"\",\n    phoneNumber:\n      bookedDetails?.phoneNo ||\n      surgeryPatientData?.mobile ||\n      schedulePatientData?.mobile ||\n      \"\",\n    infoSource: \"\",\n    address: \"\",\n    referralCase: \"\",\n    regDate: getCurrentDate(),\n    age: \"\",\n    email: bookedDetails?.emailId || schedulePatientData?.emailId || \"\",\n    nationalId: \"\",\n    workPhoneNumber: \"\",\n    language: \"\",\n    religion: \"\",\n    referredBy: \"\",\n    patientType: \"\",\n    patientPriority: \"\",\n    maritalStatus: \"\",\n    otherId: \"\",\n    landPhone: \"\",\n    occupation: \"\",\n    place: \"\",\n    patientRemarks: \"\",\n    speciality: \"\",\n    encounterType: \"\",\n    doctorName:\n      surgeryPatientData?.doctor || schedulePatientData?.doctorName || \"\",\n    paymentType: \"\",\n    subInsurance: \"\",\n    networkType: \"\",\n    insuranceCardNo: \"\",\n    insuranceEffectiveFrom: \"\",\n    certificateNumber: \"\",\n    maxInsuranceLiability: \"\",\n    maxInsuranceCopay: \"\",\n    extraCardNumber: \"\",\n    insuranceExpireDate: \"\",\n    dependentsNo: \"\",\n    insuranceClaimNumber: \"\",\n    insuranceApprovalLimit: \"\",\n    copayPatient: \"\",\n    admissionDate: \"\",\n    admissionTime: \"\",\n    expectedDischargeDate: surgeryPatientData?.exp_discharge_date || \"\",\n    expectedDischargeTime: \"\",\n    admissionNote: \"\",\n    ward: surgeryPatientData?.ward || \"\",\n    roomNo: \"\",\n    bedNo: \"\",\n    bedRate: \"\",\n    accomodationNote: \"\",\n  });\n\n  const handleInputChange = (field, value) => {\n    setFormData((prevData) => ({\n      ...prevData,\n      [field]: value,\n    }));\n  };\n\n  const registerPatient = () => {\n    // Required fields validation\n    const requiredFields = [\n      \"visitType\",\n      \"patientName\",\n      \"dob\",\n      \"nationality\",\n      \"address\",\n      \"referralCase\",\n      \"regDate\",\n      \"age\",\n      \"email\",\n      \"nationalId\",\n      \"patientPriority\",\n      \"gender\",\n      \"otherId\",\n      \"maritalStatus\",\n      \"occupation\",\n      \"speciality\",\n      \"doctorName\",\n      \"paymentType\",\n      \"encounterType\",\n    ];\n    // const missingFields = requiredFields.filter((field) => !formData[field]);\n    // if (missingFields.length > 0) {\n    //   showToast(\n    //     <div>\n    //       <p>Please fill all required fields:</p>\n    //       <ul>\n    //         {missingFields.map((field, index) => (\n    //           <li key={index}>{field}</li>\n    //         ))}\n    //       </ul>\n    //     </div>,\n    //     \"error\"\n    //   );\n    //   return;\n    // }\n    dispatch(registerPatients(formData));\n    setFormData((prev) => ({\n      ...prev,\n      image: \"\",\n      visitType: \"\",\n      patientName: \"\",\n      gender: \"\",\n      dob: \"\",\n      nationality: \"\",\n      visaType: \"\",\n      phoneNumber: \"\",\n      infoSource: \"\",\n      address: \"\",\n      referralCase: \"\",\n      regDate: getCurrentDate(),\n      age: \"\",\n      email: \"\",\n      nationalId: \"\",\n      workPhoneNumber: \"\",\n      language: \"\",\n      religion: \"\",\n      referredBy: \"\",\n      patientType: \"\",\n      patientPriority: \"\",\n      maritalStatus: \"\",\n      otherId: \"\",\n      landPhone: \"\",\n      occupation: \"\",\n      place: \"\",\n      patientRemarks: \"\",\n      speciality: \"\",\n      encounterType: \"\",\n      doctorName: \"\",\n      paymentType: \"\",\n      subInsurance: \"\",\n      networkType: \"\",\n      insuranceCardNo: \"\",\n      insuranceEffectiveFrom: \"\",\n      certificateNumber: \"\",\n      maxInsuranceLiability: \"\",\n      maxInsuranceCopay: \"\",\n      extraCardNumber: \"\",\n      insuranceExpireDate: \"\",\n      dependentsNo: \"\",\n      insuranceClaimNumber: \"\",\n      insuranceApprovalLimit: \"\",\n      copayPatient: \"\",\n      admissionDate: \"\",\n      admissionTime: \"\",\n      expectedDischargeDate: \"\",\n      expectedDischargeTime: \"\",\n      admissionNote: \"\",\n      ward: \"\",\n      roomNo: \"\",\n      bedNo: \"\",\n      bedRate: \"\",\n      accomodationNote: \"\",\n    }));\n  };\n\n  useEffect(() => {\n    if (registerPatientData?.statusCode === 200) {\n      setShowPatientInfo(true);\n      setPatientData(registerPatientData?.data);\n    } else if (registerPatientData?.statusCode === 500) {\n      showToast(\"Something went wrong!!\", \"error\");\n    }\n  }, [registerPatientData, error]);\n\n  return (\n    <Box paddingBottom={\"20%\"}>\n      {showPatientInfo ? (\n        <PatientInfo\n          patientData={patientData}\n          setShowPatientInfo={setShowPatientInfo}\n        />\n      ) : (\n        <form>\n          <Box p={1} width={\"100%\"}>\n            <div>\n              <p className=\"text-dark header\">Patient Demographic Details</p>\n            </div>\n            <Box className=\"form-details-section\">\n              <FormInput\n                label={\"Upload Photo\"}\n                type=\"file\"\n                onChange={(file) => {\n                  console.log(\"Selected file:\", file);\n                }}\n                inputProps={{ accept: \"image/*\" }}\n              />\n              <FormInput\n                label={\"Visit Type\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.visitOptions}\n                value={formData.visitType}\n                onChange={(value) => handleInputChange(\"visitType\", value)}\n              />\n              <FormInput\n                label={\"Patient Name\"}\n                required={true}\n                value={formData.patientName}\n                onChange={(value) => handleInputChange(\"patientName\", value)}\n              />\n              <FormInput\n                label={\"Date of Birth\"}\n                required={true}\n                type=\"date\"\n                value={formData.dob}\n                onChange={(value) => handleInputChange(\"dob\", value)}\n                setDependentValue={(calculatedAge) =>\n                  handleInputChange(\"age\", calculatedAge)\n                }\n              />\n              <FormInput\n                label={\"Nationality\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.nationalityOptions}\n                value={formData.nationality}\n                onChange={(value) => handleInputChange(\"nationality\", value)}\n              />\n              <FormInput\n                label={\"Visa Type\"}\n                type=\"select\"\n                options={OPTION.visaTypeOptions}\n                value={formData.visaType}\n                onChange={(value) => handleInputChange(\"visaType\", value)}\n              />\n              <FormInput\n                label={\"Phone Number (phoneNumber)\"}\n                value={formData.phoneNumber}\n                onChange={(value) => handleInputChange(\"phoneNumber\", value)}\n              />\n              <FormInput\n                label={\"Info Source\"}\n                type=\"select\"\n                options={OPTION.infoSourceOptions}\n                value={formData.infoSource}\n                onChange={(value) => handleInputChange(\"infoSource\", value)}\n              />\n              <FormInput\n                label={\"Address\"}\n                required={true}\n                // type=\"select\"\n                // options={OPTION.addressOptions}\n                value={formData.address}\n                onChange={(value) => handleInputChange(\"address\", value)}\n              />\n              <FormInput\n                label={\"Referral Case\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.referralOptions}\n                value={formData.referralCase}\n                onChange={(value) => handleInputChange(\"referralCase\", value)}\n              />\n              <FormInput\n                label={\"Reg Date\"}\n                type=\"date\"\n                required={true}\n                value={formData.regDate}\n                onChange={(value) => handleInputChange(\"regDate\", value)}\n              />\n              <FormInput\n                label={\"Age\"}\n                required={true}\n                value={formData.age}\n                onChange={(value) => handleInputChange(\"age\", value)}\n              />\n              <FormInput\n                label={\"Email ID\"}\n                required={true}\n                value={formData.email}\n                onChange={(value) => handleInputChange(\"email\", value)}\n              />\n\n              <FormInput\n                label={\"National Id\"}\n                required={true}\n                value={formData.nationalId}\n                onChange={(value) => handleInputChange(\"nationalId\", value)}\n              />\n              <FormInput\n                label={\"Phone Number (Work)\"}\n                value={formData.workPhoneNumber}\n                onChange={(value) =>\n                  handleInputChange(\"workPhoneNumber\", value)\n                }\n              />\n              <FormInput\n                label={\"Preferred Language\"}\n                value={formData.language}\n                onChange={(value) => handleInputChange(\"language\", value)}\n              />\n              <FormInput\n                label={\"Religion\"}\n                type=\"select\"\n                options={OPTION.religionOptions}\n                value={formData.religion}\n                onChange={(value) => handleInputChange(\"religion\", value)}\n              />\n              <FormInput\n                label={\"Referred By\"}\n                value={formData.referredBy}\n                onChange={(value) => handleInputChange(\"referredBy\", value)}\n              />\n              <FormInput\n                label={\"Patient Type\"}\n                type=\"select\"\n                options={OPTION.patientTypeOptions}\n                value={formData.patientType}\n                onChange={(value) => handleInputChange(\"patientType\", value)}\n              />\n              <FormInput\n                label={\"Patient Priority\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.patientPriorityOptions}\n                value={formData.patientPriority}\n                onChange={(value) =>\n                  handleInputChange(\"patientPriority\", value)\n                }\n              />\n              <FormInput\n                label={\"Gender\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.genderOpton}\n                value={formData.gender}\n                onChange={(value) => handleInputChange(\"gender\", value)}\n              />\n              <FormInput\n                label={\"Marital Status\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.maritalStatusOptions}\n                value={formData.maritalStatus}\n                onChange={(value) => handleInputChange(\"maritalStatus\", value)}\n              />\n              <FormInput\n                label={\"Other ID\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.otherIdOptions}\n                value={formData.otherId}\n                onChange={(value) => handleInputChange(\"otherId\", value)}\n              />\n              <FormInput\n                label={\"Land Phone\"}\n                value={formData.landPhone}\n                onChange={(value) => handleInputChange(\"landPhone\", value)}\n              />\n              <FormInput\n                label={\"Occupation\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.occupationOptions}\n                value={formData.occupation}\n                onChange={(value) => handleInputChange(\"occupation\", value)}\n              />\n              <FormInput\n                label={\"Place\"}\n                value={formData.place}\n                onChange={(value) => handleInputChange(\"place\", value)}\n              />\n              <FormInput\n                label={\"Patient Remark\"}\n                value={formData.patientRemarks}\n                onChange={(value) => handleInputChange(\"patientRemarks\", value)}\n              />\n            </Box>\n          </Box>\n\n          <Box p={1} width={\"100%\"}>\n            <div>\n              <p className=\"text-dark header\">Consultation Details</p>\n            </div>\n            <Box className=\"form-details-section\">\n              <FormInput\n                label={\"Speciality\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.specialityOptions}\n                value={formData.speciality}\n                onChange={(value) => handleInputChange(\"speciality\", value)}\n              />\n              {formData.visitType === \"In Patient\" ? (\n                \"\"\n              ) : (\n                <FormInput\n                  label={\"Encounter Type\"}\n                  required={true}\n                  type=\"select\"\n                  options={OPTION.encounterTypeOptions}\n                  value={formData.encounterType}\n                  onChange={(value) =>\n                    handleInputChange(\"encounterType\", value)\n                  }\n                />\n              )}\n              <FormInput\n                label={\"Doctor Name\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.doctorOptions}\n                value={formData.doctorName}\n                onChange={(value) => handleInputChange(\"doctorName\", value)}\n              />\n            </Box>\n          </Box>\n\n          {formData.visitType === \"In Patient\" && (\n            <Box p={1} width={\"100%\"}>\n              <div>\n                <p className=\"text-dark header\">Admission Details</p>\n              </div>\n              <Box className=\"form-details-section mb-4\">\n                <FormInput\n                  label={\"Admission date\"}\n                  type=\"date\"\n                  value={formData.admissionDate}\n                  onChange={(value) =>\n                    handleInputChange(\"admissionDate\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Admission time\"}\n                  type=\"time\"\n                  value={formData.admissionTime}\n                  onChange={(value) =>\n                    handleInputChange(\"admissionTime\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Expected Discharge date\"}\n                  type=\"date\"\n                  value={formData.expectedDischargeDate}\n                  onChange={(value) =>\n                    handleInputChange(\"expectedDischargeDate\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Expected Discharge time\"}\n                  type=\"time\"\n                  value={formData.expectedDischargeTime}\n                  onChange={(value) =>\n                    handleInputChange(\"expectedDischargeTime\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Encounter Type\"}\n                  type=\"select\"\n                  value={formData.encounterType}\n                  options={OPTION.ipEncounterTypeOptions}\n                  onChange={(value) =>\n                    handleInputChange(\"encounterType\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Notes\"}\n                  value={formData.admissionNote}\n                  onChange={(value) =>\n                    handleInputChange(\"admissionNote\", value)\n                  }\n                />\n              </Box>\n            </Box>\n          )}\n\n          {formData.visitType === \"In Patient\" && (\n            <Box p={1} width={\"100%\"}>\n              <div\n                className=\"d-flex \"\n                style={{ justifyContent: \"space-between\" }}\n              >\n                <p className=\"text-dark header\">Accomodation details</p>\n                <Link>Select Bed and Ward</Link>\n              </div>\n              <Box className=\"form-details-section mb-4\">\n                <FormInput\n                  label={\"Ward\"}\n                  value={formData.ward}\n                  onChange={(value) => handleInputChange(\"ward\", value)}\n                />\n                <FormInput\n                  label={\"Room No\"}\n                  value={formData.roomNo}\n                  onChange={(value) => handleInputChange(\"roomNo\", value)}\n                />\n                <FormInput\n                  label={\"Bed No\"}\n                  value={formData.bedNo}\n                  onChange={(value) => handleInputChange(\"bedNo\", value)}\n                />\n                <FormInput\n                  label={\"Bed Rate\"}\n                  value={formData.bedRate}\n                  onChange={(value) => handleInputChange(\"bedRate\", value)}\n                />\n                <FormInput\n                  label={\"Notes\"}\n                  value={formData.accomodationNote}\n                  onChange={(value) =>\n                    handleInputChange(\"accomodationNote\", value)\n                  }\n                />\n                <div>\n                  <Button>Admit</Button>\n                </div>\n              </Box>\n            </Box>\n          )}\n\n          <Box p={1} width={\"100%\"}>\n            <div>\n              <p className=\"text-dark header\">Payment Details</p>\n            </div>\n\n            <Box className=\"form-details-section mb-4\">\n              <FormInput\n                label={\"Payment Type\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.paymentOptions}\n                value={formData.paymentType}\n                onChange={(value) => handleInputChange(\"paymentType\", value)}\n              />\n            </Box>\n\n            {formData.paymentType === \"Insurance\" && (\n              <Box className=\"form-details-section\">\n                <FormInput\n                  label={\"Sub Insurance\"}\n                  type=\"select\"\n                  value={formData.subInsurance}\n                  onChange={(value) => handleInputChange(\"subInsurance\", value)}\n                />\n                <FormInput\n                  label={\"Network Type\"}\n                  value={formData.networkType}\n                  onChange={(value) => handleInputChange(\"networkType\", value)}\n                />\n                <FormInput\n                  label={\"Insurance Card No\"}\n                  required={true}\n                  value={formData.insuranceCardNo}\n                  onChange={(value) =>\n                    handleInputChange(\"insuranceCardNo\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Insurance Effective From\"}\n                  type=\"date\"\n                  value={formData.insuranceEffectiveFrom}\n                  onChange={(value) =>\n                    handleInputChange(\"insuranceEffectiveFrom\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Certificate No\"}\n                  value={formData.certificateNumber}\n                  onChange={(value) =>\n                    handleInputChange(\"certificateNumber\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Max Insurance Liability\"}\n                  value={formData.maxInsuranceLiability}\n                  onChange={(value) =>\n                    handleInputChange(\"maxInsuranceLiability\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Max Insurance Copay\"}\n                  value={formData.maxInsuranceCopay}\n                  onChange={(value) =>\n                    handleInputChange(\"maxInsuranceCopay\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Extra Card No\"}\n                  value={formData.extraCardNumber}\n                  onChange={(value) =>\n                    handleInputChange(\"extraCardNumber\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Insurance Expiry Date\"}\n                  required={true}\n                  type=\"date\"\n                  value={formData.insuranceExpireDate}\n                  onChange={(value) =>\n                    handleInputChange(\"insuranceExpireDate\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Dependents No\"}\n                  value={formData.dependentsNo}\n                  onChange={(value) => handleInputChange(\"dependentsNo\", value)}\n                />\n                <FormInput\n                  label={\"Insurance Claim No\"}\n                  value={formData.insuranceClaimNumber}\n                  onChange={(value) =>\n                    handleInputChange(\"insuranceClaimNumber\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Insurance Approval Limit\"}\n                  value={formData.insuranceApprovalLimit}\n                  onChange={(value) =>\n                    handleInputChange(\"insuranceApprovalLimit\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Co Pay Patient\"}\n                  value={formData.copayPatient}\n                  onChange={(value) => handleInputChange(\"copayPatient\", value)}\n                />\n              </Box>\n            )}\n          </Box>\n          <Box\n            display={\"flex\"}\n            padding={\"0.5em\"}\n            width={\"100%\"}\n            justifyContent={\"flex-end\"}\n          >\n            <Button\n              onClick={registerPatient}\n              disabled={loading}\n              className=\"form-btn\"\n              type=\"submit\"\n            >\n              {loading ? \"Registering...\" : \"Register New Patient\"}\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Box>\n  );\n};\n\nexport default RegisterPatient;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const emergencyPatients = createAsyncThunk(\r\n  \"patient/emergencyPatients\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        API_ENDPOINTS.EMERGENCY_PATIENT,\r\n        credentials\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst emergencyPatientsSlice = createSlice({\r\n  name: \"emergencyPatients\",\r\n  initialState: {\r\n    emergencyPatientData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(emergencyPatients.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(emergencyPatients.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.emergencyPatientData = action.payload.data;\r\n      })\r\n      .addCase(emergencyPatients.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default emergencyPatientsSlice.reducer;\r\n","import React, { useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Button } from \"react-bootstrap\";\nimport FormInput from \"../../../components/FormFields/FormInput\";\nimport { DropdownOptions } from \"../../../components/FormFields/DropdownOptions\";\nimport { useDispatch } from \"react-redux\";\nimport { emergencyPatients } from \"../../../Redux/slice/registration/emergencyPatientSlice\";\n\nconst Emergency = () => {\n  const dispatch = useDispatch();\n  const OPTION = DropdownOptions;\n  const getCurrentDateTime = () => {\n    const now = new Date();\n    const currentDate = now.toISOString().split(\"T\")[0];\n    const currentTime = now.toLocaleTimeString([], { hour12: false });\n    return `${currentDate} ${currentTime}`;\n  };\n\n  const [formData, setFormData] = useState({\n    visitType: \"\",\n    mrdNumber: \"\",\n    patientName: \"\",\n    dob: \"\",\n    nationality: \"\",\n    visaType: \"\",\n    phoneNumber: \"\",\n    infoSource: \"\",\n    regDate: getCurrentDateTime(),\n    age: \"\",\n    email: \"\",\n    nationalId: \"\",\n    workPhoneNo: \"\",\n    language: \"\",\n    patientType: \"\",\n    otherId: \"\",\n    landPhone: \"\",\n    speciality: \"\",\n    encounterType: \"\",\n    doctorName: \"\",\n  });\n\n  const handleInputChange = (field, value) => {\n    setFormData((prevData) => ({\n      ...prevData,\n      [field]: value,\n    }));\n  };\n\n  const registerPatient = () => {\n    dispatch(emergencyPatients(formData));\n  };\n\n  return (\n    <Box paddingBottom={\"20%\"}>\n      <Box>\n        <Box padding={\"1em\"} width={\"100%\"}>\n          <div>\n            <p className=\"text-dark header\">Patient Demographic Details</p>\n          </div>\n          <Box className=\"form-details-section\">\n            <FormInput\n              label={\"Visit Type\"}\n              required={true}\n              value={formData.visitType}\n              type=\"select\"\n              options={OPTION.visitOptions}\n              onChange={(value) => handleInputChange(\"visitType\", value)}\n            />\n            <FormInput\n              label={\"MRD Number\"}\n              value={formData.mrdNumber}\n              onChange={(value) => handleInputChange(\"mrdNumber\", value)}\n            />\n            <FormInput\n              label={\"Patient Name\"}\n              required={true}\n              value={formData.patientName}\n              onChange={(value) => handleInputChange(\"patientName\", value)}\n            />\n            <FormInput\n              label={\"Date of Birth\"}\n              required={true}\n              type=\"date\"\n              value={formData.dob}\n              onChange={(value) => handleInputChange(\"dob\", value)}\n              setDependentValue={(calculatedAge) =>\n                handleInputChange(\"age\", calculatedAge)\n              }\n            />\n            <FormInput\n              label={\"Nationality\"}\n              required={true}\n              type=\"select\"\n              options={OPTION.nationalityOptions}\n              value={formData.nationality}\n              onChange={(value) => handleInputChange(\"nationality\", value)}\n            />\n            <FormInput\n              label={\"Visa Type\"}\n              type=\"select\"\n              options={OPTION.visaTypeOptions}\n              value={formData.visaType}\n              onChange={(value) => handleInputChange(\"visaType\", value)}\n            />\n            <FormInput\n              label={\"Phone Number (Mobile)\"}\n              value={formData.phoneNumber}\n              onChange={(value) => handleInputChange(\"phoneNumber\", value)}\n            />\n            <FormInput\n              label={\"Info Source\"}\n              type=\"select\"\n              options={OPTION.infoSourceOptions}\n              value={formData.infoSource}\n              onChange={(value) => handleInputChange(\"infoSource\", value)}\n            />\n            <FormInput\n              label={\"Reg Date\"}\n              type=\"date\"\n              required={true}\n              value={formData.regDate}\n              onChange={(value) => handleInputChange(\"regDate\", value)}\n            />\n            <FormInput\n              label={\"Age\"}\n              required={true}\n              value={formData.age}\n              onChange={(value) => handleInputChange(\"age\", value)}\n            />\n            <FormInput\n              label={\"Email ID\"}\n              value={formData.email}\n              onChange={(value) => handleInputChange(\"email\", value)}\n            />\n\n            <FormInput\n              label={\"National Id\"}\n              value={formData.nationalId}\n              onChange={(value) => handleInputChange(\"nationalId\", value)}\n            />\n            <FormInput\n              label={\"Phone Number (Work)\"}\n              value={formData.workPhoneNo}\n              onChange={(value) => handleInputChange(\"workPhoneNo\", value)}\n            />\n            <FormInput\n              label={\"Preferred Language\"}\n              value={formData.language}\n              onChange={(value) =>\n                handleInputChange(\"language\", value)\n              }\n            />\n            <FormInput\n              label={\"Patient Type\"}\n              type=\"select\"\n              options={OPTION.patientTypeOptions}\n              value={formData.patientType}\n              onChange={(value) => handleInputChange(\"patientType\", value)}\n            />\n            <FormInput\n              label={\"Other ID\"}\n              type=\"select\"\n              options={OPTION.otherIdOptions}\n              value={formData.otherId}\n              onChange={(value) => handleInputChange(\"otherId\", value)}\n            />\n            <FormInput\n              label={\"Land Phone\"}\n              value={formData.landPhone}\n              onChange={(value) => handleInputChange(\"landPhone\", value)}\n            />\n          </Box>\n        </Box>\n        <Box padding={\"1em\"} width={\"100%\"}>\n          <div>\n            <p className=\"text-dark header\">Consultation Details</p>\n          </div>\n          <Box className=\"form-details-section\">\n            <FormInput\n              label={\"Speciality\"}\n              required={true}\n              type=\"select\"\n              options={OPTION.specialityOptions}\n              value={formData.speciality}\n              onChange={(value) => handleInputChange(\"speciality\", value)}\n            />\n            <FormInput\n              label={\"Encounter Type\"}\n              required={true}\n              type=\"select\"\n              options={OPTION.encounterTypeOptions}\n              value={formData.encounterType}\n              onChange={(value) => handleInputChange(\"encounterType\", value)}\n            />\n            <FormInput\n              label={\"Doctor Name\"}\n              required={true}\n              type=\"select\"\n              options={OPTION.doctorOptions}\n              value={formData.doctorName}\n              onChange={(value) => handleInputChange(\"doctorName\", value)}\n            />\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        display={\"flex\"}\n        padding={\"0.5em\"}\n        width={\"100%\"}\n        justifyContent={\"flex-end\"}\n      >\n        <Button onClick={registerPatient} className=\"form-btn\">\n          Register Emergency Patient\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Emergency;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const searchPatients = createAsyncThunk(\r\n  \"patient/searchPatients\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.SEARCH_PATIENT, {\r\n        params: credentials,\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst searchPatientsSlice = createSlice({\r\n  name: \"searchPatients\",\r\n  initialState: {\r\n    searchPatientData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(searchPatients.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(searchPatients.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.searchPatientData = action.payload.data;\r\n      })\r\n      .addCase(searchPatients.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default searchPatientsSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const revisitPatients = createAsyncThunk(\r\n  \"patient/revisitPatients\",\r\n  async ({ credentials, patientId }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.put(\r\n        `${API_ENDPOINTS.REVISIT_PATIENT}/${patientId}`,\r\n        credentials\r\n      );\r\n      return response.data; \r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || \"Something went wrong!\");\r\n    }\r\n  }\r\n);\r\n\r\n\r\nconst revisitPatientsSlice = createSlice({\r\n  name: \"revisitPatients\",\r\n  initialState: {\r\n    revisitPatientData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(revisitPatients.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(revisitPatients.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.revisitPatientData = action.payload.data;\r\n      })\r\n      .addCase(revisitPatients.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default revisitPatientsSlice.reducer;\r\n","import { Autocomplete, Box, TextField } from \"@mui/material\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { searchPatients } from \"../../../Redux/slice/appointement/searchPatientSlice\";\r\nimport FormInput from \"../../../components/FormFields/FormInput\";\r\nimport { DropdownOptions } from \"../../../components/FormFields/DropdownOptions\";\r\nimport { revisitPatients } from \"../../../Redux/slice/registration/revisitSlice\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst Revisit = () => {\r\n  const location = useLocation();\r\n  const surgeryPatientData = location.state?.patientData;\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n\r\n  const OPTION = DropdownOptions;\r\n\r\n  const dispatch = useDispatch();\r\n  const { searchPatientData } = useSelector((state) => state.searchPatient);\r\n  const { revisitPatientData, loading } = useSelector((state) => state.revisit);\r\n\r\n  const patientId = selectedPatient?.patientId;\r\n\r\n  console.log(selectedPatient?.patientId);\r\n\r\n  const handleSearchChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    dispatch(searchPatients({ searchKey: inputValue }));\r\n    setSearchQuery(inputValue);\r\n  };\r\n\r\n  const handleOptionSelect = (event, value) => {\r\n    setSelectedPatient(value);\r\n  };\r\n\r\n  const [formData, setFormData] = useState({\r\n    mrdNumber: surgeryPatientData?.mr_no || \"\",\r\n    dob: \"\",\r\n    gender: \"\",\r\n    mobileNumber: surgeryPatientData?.mobile || \"\",\r\n    patientName: surgeryPatientData?.patient || \"\",\r\n    age: \"\",\r\n    nationality: \"\",\r\n    nationalId: \"\",\r\n    visaType: \"\",\r\n    speciality: \"\",\r\n    encounterType: \"\",\r\n    doctorName: surgeryPatientData?.doctor || \"\",\r\n    paymentType: \"\",\r\n    subInsurance: \"\",\r\n    networkType: \"\",\r\n    insuranceCardNo: \"\",\r\n    insuranceEffectiveFrom: \"\",\r\n    certificateNumber: \"\",\r\n    maxInsuranceLiability: \"\",\r\n    maxInsuranceCopay: \"\",\r\n    extraCardNumber: \"\",\r\n    insuranceExpireDate: \"\",\r\n    dependents: \"\",\r\n    insuranceClaimNumber: \"\",\r\n    insuranceApprovalLimit: \"\",\r\n    copayPatient: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (selectedPatient) {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        mrdNumber: selectedPatient?.mrdNo || \"\",\r\n        dob: selectedPatient?.dob || \"\",\r\n        gender: selectedPatient?.gender || \"\",\r\n        mobileNumber: selectedPatient?.phoneNo || \"\",\r\n        patientName: selectedPatient?.name || \"\",\r\n        age: selectedPatient?.age || \"\",\r\n        nationality: selectedPatient?.nationality || \"\",\r\n        nationalId: selectedPatient?.nationalId || \"\",\r\n        visaType: selectedPatient?.visaType || \"\",\r\n      }));\r\n    }\r\n  }, [selectedPatient]);\r\n\r\n  // console.log(selectedPatient, \"patient id\");\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const revisitPatient = () => {\r\n    dispatch(revisitPatients({ credentials: formData, patientId }));\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      mrdNumber: \"\",\r\n      dob: \"\",\r\n      gender: \"\",\r\n      mobileNumber: \"\",\r\n      patientName: \"\",\r\n      age: \"\",\r\n      nationality: \"\",\r\n      nationalId: \"\",\r\n      visaType: \"\",\r\n      speciality: \"\",\r\n      encounterType: \"\",\r\n      doctorName: \"\",\r\n      paymentType: \"\",\r\n      subInsurance: \"\",\r\n      networkType: \"\",\r\n      insuranceCardNo: \"\",\r\n      insuranceEffectiveFrom: \"\",\r\n      certificateNumber: \"\",\r\n      maxInsuranceLiability: \"\",\r\n      maxInsuranceCopay: \"\",\r\n      extraCardNumber: \"\",\r\n      insuranceExpireDate: \"\",\r\n      dependents: \"\",\r\n      insuranceClaimNumber: \"\",\r\n      insuranceApprovalLimit: \"\",\r\n      copayPatient: \"\",\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <Box paddingBottom={\"20%\"}>\r\n      <Box display={\"flex\"} justifyContent={\"start\"} my={1} ml={1}>\r\n        <Autocomplete\r\n          freeSolo\r\n          options={searchPatientData?.data || []}\r\n          getOptionLabel={(option) => option.name || \"\"}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label=\"Search Patients\"\r\n              variant=\"outlined\"\r\n              value={searchQuery}\r\n              onChange={handleSearchChange}\r\n              placeholder=\"Type to search...\"\r\n              size=\"small\"\r\n              sx={{ width: 300 }}\r\n            />\r\n          )}\r\n          onChange={handleOptionSelect}\r\n        />\r\n      </Box>\r\n      <Box>\r\n        <Box p={1} width={\"100%\"}>\r\n          <div>\r\n            <p className=\"text-dark header\">Patient Demographic Details</p>\r\n          </div>\r\n          <Box className=\"form-details-section\">\r\n            <FormInput\r\n              label={\"MRD Number\"}\r\n              value={formData.mrdNumber}\r\n              onChange={(value) => handleInputChange(\"mrdNumber\", value)}\r\n            />\r\n            <FormInput\r\n              label={\"Date of Birth\"}\r\n              required={true}\r\n              type=\"date\"\r\n              value={formData.dob}\r\n              onChange={(value) => handleInputChange(\"dob\", value)}\r\n              setDependentValue={(calculatedAge) =>\r\n                handleInputChange(\"age\", calculatedAge)\r\n              }\r\n            />\r\n            <FormInput\r\n              label={\"Gender\"}\r\n              required={true}\r\n              type=\"select\"\r\n              options={OPTION.genderOpton}\r\n              value={formData.gender}\r\n              onChange={(value) => handleInputChange(\"gender\", value)}\r\n            />\r\n            <FormInput\r\n              label={\"Mobile Number\"}\r\n              value={formData.mobileNumber}\r\n              onChange={(value) => handleInputChange(\"mobileNumber\", value)}\r\n            />\r\n            <FormInput\r\n              label={\"Patient Name\"}\r\n              required={true}\r\n              value={formData.patientName}\r\n              onChange={(value) => handleInputChange(\"patientName\", value)}\r\n            />\r\n            <FormInput\r\n              label={\"Age\"}\r\n              required={true}\r\n              value={formData.age}\r\n              onChange={(value) => handleInputChange(\"age\", value)}\r\n            />\r\n            <FormInput\r\n              label={\"Nationality\"}\r\n              required={true}\r\n              type=\"select\"\r\n              options={OPTION.nationalityOptions}\r\n              value={formData.nationality}\r\n              onChange={(value) => handleInputChange(\"nationality\", value)}\r\n            />\r\n            <FormInput\r\n              label={\"National Id\"}\r\n              value={formData.nationalId}\r\n              onChange={(value) => handleInputChange(\"nationalId\", value)}\r\n            />\r\n            <FormInput\r\n              label={\"Visa Type\"}\r\n              type=\"select\"\r\n              options={OPTION.visaTypeOptions}\r\n              value={formData.visaType}\r\n              onChange={(value) => handleInputChange(\"visaType\", value)}\r\n            />\r\n          </Box>\r\n        </Box>\r\n\r\n        <Box p={1} width={\"100%\"}>\r\n          <div>\r\n            <p className=\"text-dark header\">Consultation Details</p>\r\n          </div>\r\n          <Box className=\"form-details-section\">\r\n            <FormInput\r\n              label={\"Speciality\"}\r\n              required={true}\r\n              type=\"select\"\r\n              options={OPTION.specialityOptions}\r\n              value={formData.speciality}\r\n              onChange={(value) => handleInputChange(\"speciality\", value)}\r\n            />\r\n            <FormInput\r\n              label={\"Encounter Type\"}\r\n              required={true}\r\n              type=\"select\"\r\n              options={OPTION.encounterTypeOptions}\r\n              value={formData.encounterType}\r\n              onChange={(value) => handleInputChange(\"encounterType\", value)}\r\n            />\r\n            <FormInput\r\n              label={\"Doctor Name\"}\r\n              required={true}\r\n              type=\"select\"\r\n              options={OPTION.doctorOptions}\r\n              value={formData.doctorName}\r\n              onChange={(value) => handleInputChange(\"doctorName\", value)}\r\n            />\r\n          </Box>\r\n        </Box>\r\n        <Box p={1} width={\"100%\"}>\r\n          <div>\r\n            <p className=\"text-dark header\">Payment Details</p>\r\n          </div>\r\n          <Box className=\"form-details-section\">\r\n            <FormInput\r\n              label={\"Payment Type\"}\r\n              required={true}\r\n              type=\"select\"\r\n              options={OPTION.paymentOptions}\r\n              value={formData.paymentType}\r\n              onChange={(value) => handleInputChange(\"paymentType\", value)}\r\n            />\r\n          </Box>\r\n          {formData.paymentType === \"Insurance\" && (\r\n            <Box className=\"form-details-section\">\r\n              <FormInput\r\n                label={\"Sub Insurance\"}\r\n                type=\"select\"\r\n                value={formData.subInsurance}\r\n                onChange={(value) => handleInputChange(\"subInsurance\", value)}\r\n              />\r\n              <FormInput\r\n                label={\"Network Type\"}\r\n                value={formData.networkType}\r\n                onChange={(value) => handleInputChange(\"networkType\", value)}\r\n              />\r\n              <FormInput\r\n                label={\"Insurance Card No\"}\r\n                required={true}\r\n                value={formData.insuranceCardNo}\r\n                onChange={(value) =>\r\n                  handleInputChange(\"insuranceCardNo\", value)\r\n                }\r\n              />\r\n              <FormInput\r\n                label={\"Insurance Effective From\"}\r\n                type=\"date\"\r\n                value={formData.insuranceEffectiveFrom}\r\n                onChange={(value) =>\r\n                  handleInputChange(\"insuranceEffectiveFrom\", value)\r\n                }\r\n              />\r\n              <FormInput\r\n                label={\"Certificate No\"}\r\n                value={formData.certificateNumber}\r\n                onChange={(value) =>\r\n                  handleInputChange(\"certificateNumber\", value)\r\n                }\r\n              />\r\n              <FormInput\r\n                label={\"Max Insurance Liability\"}\r\n                value={formData.maxInsuranceLiability}\r\n                onChange={(value) =>\r\n                  handleInputChange(\"maxInsuranceLiability\", value)\r\n                }\r\n              />\r\n              <FormInput\r\n                label={\"Max Insurance Copay\"}\r\n                value={formData.maxInsuranceCopay}\r\n                onChange={(value) =>\r\n                  handleInputChange(\"maxInsuranceCopay\", value)\r\n                }\r\n              />\r\n              <FormInput\r\n                label={\"Extra Card No\"}\r\n                value={formData.extraCardNumber}\r\n                onChange={(value) =>\r\n                  handleInputChange(\"extraCardNumber\", value)\r\n                }\r\n              />\r\n              <FormInput\r\n                label={\"Insurance Expiry Date\"}\r\n                required={true}\r\n                type=\"date\"\r\n                value={formData.insuranceExpireDate}\r\n                onChange={(value) =>\r\n                  handleInputChange(\"insuranceExpireDate\", value)\r\n                }\r\n              />\r\n              <FormInput\r\n                label={\"Dependents No\"}\r\n                value={formData.dependents}\r\n                onChange={(value) => handleInputChange(\"dependents\", value)}\r\n              />\r\n              <FormInput\r\n                label={\"Insurance Claim No\"}\r\n                value={formData.insuranceClaimNumber}\r\n                onChange={(value) =>\r\n                  handleInputChange(\"insuranceClaimNumber\", value)\r\n                }\r\n              />\r\n              <FormInput\r\n                label={\"Insurance Approval Limit\"}\r\n                value={formData.insuranceApprovalLimit}\r\n                onChange={(value) =>\r\n                  handleInputChange(\"insuranceApprovalLimit\", value)\r\n                }\r\n              />\r\n              <FormInput\r\n                label={\"Co Pay Patient\"}\r\n                value={formData.copayPatient}\r\n                onChange={(value) => handleInputChange(\"copayPatient\", value)}\r\n              />\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n      <Box\r\n        display={\"flex\"}\r\n        padding={\"0.5em\"}\r\n        width={\"100%\"}\r\n        justifyContent={\"flex-end\"}\r\n      >\r\n        <Button onClick={revisitPatient} className=\"form-btn\">\r\n          {loading ? \"Registering...\" : \" Register Revisit Patient\"}\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Revisit;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const scheduleList = createAsyncThunk(\r\n  \"appointment/scheduleList\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.SCHEDULE_LIST, {\r\n        params: credentials,\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst scheduleListSlice = createSlice({\r\n  name: \"scheduleList\",\r\n  initialState: {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(scheduleList.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(scheduleList.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.data = action.payload.data;\r\n      })\r\n      .addCase(scheduleList.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default scheduleListSlice.reducer;\r\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Spinner } from \"react-bootstrap\";\nimport \"./loader.css\";\n\nconst EMRLoader = ({ show }) => {\n  return (\n    <>\n      {show && (\n        <div className=\"fullscreen-loader\">\n          <Spinner style={{ color: \"green\" }} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default EMRLoader;\n","import React, { useState } from \"react\";\nimport { IconButton, Menu, MenuItem } from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport _ from \"lodash\"\n\nconst EMRMenuIcon = ({ itemsArray, callbackParam }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (callback) => {\n    setAnchorEl(null);\n    if (_.isEmpty(callback)) {\n      callback(callbackParam);\n    }\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-controls=\"menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        color=\"inherit\"\n      >\n        <MenuIcon />\n      </IconButton>\n      <Menu\n        id=\"menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {itemsArray.map((item) => (\n          <MenuItem onClick={() => handleClose(item.callback)}>\n            <item.icon />\n            &nbsp;{item.name}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default EMRMenuIcon;\n","import React, { useEffect, useState } from \"react\";\nimport { Table, Input, Select, Pagination, DatePicker } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { scheduleList } from \"../../../Redux/slice/dashboard/scheduleListSlice\";\nimport moment from \"moment\";\nimport { MedicalInformationOutlined } from \"@mui/icons-material\";\nimport EMRLoader from \"../../../components/global/loader/EMRLoaderOverlay\";\nimport EMRMenuIcon from \"../../../components/global/EMRMenuIcon\";\n\nconst { Option } = Select;\n\nconst ScheduleList = () => {\n  const [filters, setFilters] = useState({});\n  const [appointments, setAppointments] = useState([]);\n  const [page, setPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { data, loading } = useSelector((state) => state.schedule);\n  const appointmentData = data?.data;\n\n  useEffect(() => {\n    if (appointmentData) {\n      setAppointments(appointmentData);\n    }\n  }, [appointmentData]);\n\n  useEffect(() => {\n    dispatch(scheduleList(filters));\n  }, [filters, dispatch]);\n\n  const handleFilterChange = (key, value) => {\n    setFilters((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const handleDateChange = (key, date) => {\n    const formattedDate = date ? moment(date).format(\"DD/MM/YYYY\") : \"\";\n    setFilters((prev) => ({ ...prev, [key]: formattedDate }));\n  };\n\n  const onCreatePatientVisit = () => {\n    navigate(\"/secure/registration\", { state: {} });\n  };\n\n  const dropDownMenuItems = [\n    {\n      name: \"Create Patient Visit\",\n      icon: MedicalInformationOutlined,\n      callback: onCreatePatientVisit,\n    },\n  ];\n\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"sno\",\n      key: \"sno\",\n      render: (_, __, index) => (page - 1) * rowsPerPage + index + 1,\n    },\n    {\n      title: \"Schedule Date\",\n      dataIndex: \"scheduleDate\",\n      key: \"scheduleDate\",\n      filterDropdown: () => (\n        <DatePicker\n          format=\"DD/MM/YYYY\"\n          onChange={(date) => handleDateChange(\"scheduleDate\", date)}\n        />\n      ),\n    },\n    {\n      title: \"MR Number\",\n      dataIndex: \"mrdNo\",\n      key: \"mrdNo\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search MR Number\"\n          onChange={(e) => handleFilterChange(\"mrdNo\", e.target.value)}\n        />\n      ),\n    },\n\n    {\n      title: \"Mobile\",\n      dataIndex: \"mobile\",\n      key: \"mobile\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search Mobile\"\n          onChange={(e) => handleFilterChange(\"mobile\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Patient Name\",\n      dataIndex: \"patientName\",\n      key: \"patientName\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search Patient Name\"\n          onChange={(e) => handleFilterChange(\"patientName\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Doctor\",\n      dataIndex: \"doctorName\",\n      key: \"doctorName\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search Doctor\"\n          onChange={(e) => handleFilterChange(\"doctorName\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"appointmentStatus\",\n      key: \"appointmentStatus\",\n      filterDropdown: () => (\n        <Select\n          style={{ width: \"100%\" }}\n          onChange={(value) => handleFilterChange(\"appointmentStatus\", value)}\n        >\n          <Option value=\"\">--All--</Option>\n          <Option value=\"re_confirmed\">Re-Confirmed</Option>\n          <Option value=\"booked\">Booked</Option>\n          <Option value=\"no_show\">No Show</Option>\n          <Option value=\"cancelled\">Cancelled</Option>\n          <Option value=\"arrived\">Arrived</Option>\n          <Option value=\"concluded\">Concluded</Option>\n          <Option value=\"being_seen\">Being Seen</Option>\n        </Select>\n      ),\n    },\n    {\n      title: \"Options\",\n      key: \"actions\",\n      render: (row) => (\n        <EMRMenuIcon\n          itemsArray={dropDownMenuItems}\n          callbackParam={{ data: row, from: \"schedule_list\" }}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <EMRLoader show={loading} />\n\n      <Table\n        dataSource={appointments}\n        columns={columns}\n        rowKey={(record) => record.id}\n        className=\"table-container mt-3\"\n      />\n    </div>\n  );\n};\n\nexport default ScheduleList;\n","import React, { useEffect, useState } from \"react\";\nimport { Table, Input, Select, DatePicker } from \"antd\";\nimport moment from \"moment\";\n\nconst { Option } = Select;\n\nconst PatientRecall = () => {\n  const [data, setData] = useState([\n    {\n      id: 1,\n      s_no: \"1\",\n      mr_number: \"23435455\",\n      visit_date: \"27/12/2024\",\n      patient_name: \"Mr. Praveen\",\n      doctor: \"Mr. Jhon\",\n      recall_date: \"27/12/2024\",\n      status: \"Being Seen\",\n    },\n    {\n      id: 2,\n      s_no: \"2\",\n      mr_number: \"2345455\",\n      visit_date: \"27/12/2024\",\n      patient_name: \"Mr. Praveen\",\n      doctor: \"Mr. Jhon\",\n      recall_date: \"27/12/2024\",\n      status: \"Being Seen\",\n    },\n    {\n      id: 3,\n      s_no: \"3\",\n      mr_number: \"5435t4555\",\n      visit_date: \"27/12/2024\",\n      patient_name: \"Mr. Praveen\",\n      doctor: \"Mr. Jhon\",\n      recall_date: \"27/12/2024\",\n      status: \"Being Seen\",\n    },\n  ]);\n\n  const [filters, setFilters] = useState({});\n  const [filteredData, setFilteredData] = useState(data);\n\n  useEffect(() => {\n    let result = data.filter((row) =>\n      Object.keys(filters).every((key) => {\n        if (!filters[key]) return true;\n        if (key === \"status\" && filters[key] === \"--All--\") return true;\n        return String(row[key])\n          .toLowerCase()\n          .includes(filters[key].toLowerCase());\n      })\n    );\n    setFilteredData(result);\n  }, [filters, data]);\n\n  const handleFilterChange = (key, value) => {\n    setFilters((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const handleDateChange = (key, date) => {\n    setFilters((prev) => ({\n      ...prev,\n      [key]: date ? moment(date).format(\"DD/MM/YYYY\") : \"\",\n    }));\n  };\n\n  const columns = [\n    { title: \"S.No\", dataIndex: \"s_no\", key: \"s_no\" },\n    {\n      title: \"MR Number\",\n      dataIndex: \"mr_number\",\n      key: \"mr_number\",\n      filterDropdown: () => (\n        <Input\n          onChange={(e) => handleFilterChange(\"mr_number\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Visit Date\",\n      dataIndex: \"visit_date\",\n      key: \"visit_date\",\n      filterDropdown: () => (\n        <DatePicker\n          onChange={(date) => handleDateChange(\"visit_date\", date)}\n          format=\"DD/MM/YYYY\"\n        />\n      ),\n    },\n    {\n      title: \"Patient Name\",\n      dataIndex: \"patient_name\",\n      key: \"patient_name\",\n      filterDropdown: () => (\n        <Input\n          onChange={(e) => handleFilterChange(\"patient_name\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Doctor\",\n      dataIndex: \"doctor\",\n      key: \"doctor\",\n      filterDropdown: () => (\n        <Input onChange={(e) => handleFilterChange(\"doctor\", e.target.value)} />\n      ),\n    },\n    {\n      title: \"Recall Date\",\n      dataIndex: \"recall_date\",\n      key: \"recall_date\",\n      filterDropdown: () => (\n        <DatePicker\n          onChange={(date) => handleDateChange(\"recall_date\", date)}\n          format=\"DD/MM/YYYY\"\n        />\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      filterDropdown: () => (\n        <Select\n          defaultValue=\"--All--\"\n          onChange={(value) => handleFilterChange(\"status\", value)}\n        >\n          <Option value=\"--All--\">--All--</Option>\n          <Option value=\"Re-Confirmed\">Re-Confirmed</Option>\n          <Option value=\"Booked\">Booked</Option>\n          <Option value=\"No Show\">No Show</Option>\n          <Option value=\"Cancelled\">Cancelled</Option>\n          <Option value=\"Arrived\">Arrived</Option>\n          <Option value=\"Concluded\">Concluded</Option>\n          <Option value=\"Being Seen\">Being Seen</Option>\n        </Select>\n      ),\n    },\n  ];\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={filteredData}\n      rowKey=\"id\"\n      pagination={{ pageSize: 5 }}\n      className=\"table-container mt-3\"\n    />\n  );\n};\n\nexport default PatientRecall;\n","import React, { useEffect, useState } from \"react\";\nimport { Table, Input, Select, DatePicker, Space } from \"antd\";\nimport { Schedule } from \"@mui/icons-material\";\nimport moment from \"moment\";\nimport EMRMenuIcon from \"../../../components/global/EMRMenuIcon\";\n\nconst { Option } = Select;\n\nconst PatientVaccinationSchedule = () => {\n  const [data, setData] = useState([\n    {\n      id: 1,\n      s_no: \"1\",\n      mr_number: \"23435455\",\n      patient_name: \"Mr. Praveen\",\n      mobile: \"9876543210\",\n      schedule_date: \"27/12/2024\",\n      vaccination_name: \"Covaccine\",\n      remarks: \"Null\",\n      status: \"Being Seen\",\n      vaccine_date: \"27/12/2024\",\n    },\n    {\n      id: 2,\n      s_no: \"2\",\n      mr_number: \"432335455\",\n      patient_name: \"Mr. Praveen\",\n      mobile: \"9854643210\",\n      schedule_date: \"07/11/2024\",\n      vaccination_name: \"Covaccine\",\n      remarks: \"Null\",\n      status: \"Being Seen\",\n      vaccine_date: \"12/10/2024\",\n    },\n    {\n      id: 3,\n      s_no: \"3\",\n      mr_number: \"412335455\",\n      patient_name: \"Mr. Praveen\",\n      mobile: \"4576543210\",\n      schedule_date: \"12/09/2024\",\n      vaccination_name: \"Covaccine\",\n      remarks: \"Null\",\n      status: \"Being Seen\",\n      vaccine_date: \"11/06/2024\",\n    },\n  ]);\n\n  const [filters, setFilters] = useState({});\n  const [filteredData, setFilteredData] = useState(data);\n\n  const statusOptions = [\n    \"--All--\",\n    \"Re-Confirmed\",\n    \"Booked\",\n    \"No Show\",\n    \"Cancelled\",\n    \"Arrived\",\n    \"Concluded\",\n    \"Being Seen\",\n  ];\n\n  const handleFilterChange = (columnId, value) => {\n    setFilters((prevFilters) => ({ ...prevFilters, [columnId]: value }));\n  };\n\n  const handleDateChange = (columnId, date) => {\n    const formattedDate = date ? moment(date).format(\"DD/MM/YYYY\") : \"\";\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      [columnId]: formattedDate,\n    }));\n  };\n\n  useEffect(() => {\n    let filtered = data.filter((row) =>\n      Object.keys(filters).every((columnId) => {\n        const filterValue = filters[columnId]?.toLowerCase() || \"\";\n        if (!filterValue || filterValue === \"--all--\") return true;\n        return String(row[columnId]).toLowerCase().includes(filterValue);\n      })\n    );\n    setFilteredData(filtered);\n  }, [filters, data]);\n\n  const columns = [\n    { title: \"S.No\", dataIndex: \"s_no\", key: \"s_no\" },\n    {\n      title: \"MR Number\",\n      dataIndex: \"mr_number\",\n      key: \"mr_number\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search MR Number\"\n          onChange={(e) => handleFilterChange(\"mr_number\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Patient Name\",\n      dataIndex: \"patient_name\",\n      key: \"patient_name\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search Patient\"\n          onChange={(e) => handleFilterChange(\"patient_name\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Mobile\",\n      dataIndex: \"mobile\",\n      key: \"mobile\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search Mobile\"\n          onChange={(e) => handleFilterChange(\"mobile\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Schedule Date\",\n      dataIndex: \"schedule_date\",\n      key: \"schedule_date\",\n      filterDropdown: () => (\n        <DatePicker\n          format=\"DD/MM/YYYY\"\n          onChange={(date) => handleDateChange(\"schedule_date\", date)}\n        />\n      ),\n    },\n    {\n      title: \"Vaccination Name\",\n      dataIndex: \"vaccination_name\",\n      key: \"vaccination_name\",\n    },\n    {\n      title: \"Remarks\",\n      dataIndex: \"remarks\",\n      key: \"remarks\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search Remarks\"\n          onChange={(e) => handleFilterChange(\"remarks\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      filterDropdown: () => (\n        <Select\n          defaultValue=\"--All--\"\n          onChange={(value) => handleFilterChange(\"status\", value)}\n        >\n          {statusOptions.map((status, index) => (\n            <Option key={index} value={status}>\n              {status}\n            </Option>\n          ))}\n        </Select>\n      ),\n    },\n    {\n      title: \"Vaccine Date\",\n      dataIndex: \"vaccine_date\",\n      key: \"vaccine_date\",\n      filterDropdown: () => (\n        <DatePicker\n          format=\"DD/MM/YYYY\"\n          onChange={(date) => handleDateChange(\"vaccine_date\", date)}\n        />\n      ),\n    },\n    {\n      title: \"Options\",\n      key: \"actions\",\n      render: (row) => (\n        <EMRMenuIcon\n          itemsArray={[{ name: \"Schedule Appointment\", icon: Schedule }]}\n          callbackParam={{ data: row, from: \"schedule_list\" }}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Table\n        dataSource={filteredData}\n        columns={columns}\n        rowKey=\"id\"\n        pagination={{ pageSize: 5 }}\n        bordered\n        className=\"table-container mt-3\"\n      />\n    </div>\n  );\n};\n\nexport default PatientVaccinationSchedule;\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Select,\r\n  FormControl,\r\n  MenuItem,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport moment from \"moment\";\r\n\r\nconst PatientList = () => {\r\n  const [filter, setFilter] = useState({});\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [statusFilter, setStatusFilter] = useState(\"--All--\");\r\n  const handleFilterChange = (columnId, value, type) => {\r\n    if (type === \"select\") {\r\n      setStatusFilter(value);\r\n    }\r\n    setFilter({ ...filter, [columnId]: value });\r\n  };\r\n   const handleDateChange = (columnId, e) => {\r\n      let value = moment(e).format(\"DD/MM/YYYY\");\r\n      if (value === \"Invalid date\") {\r\n        setFilter({ ...filter, [columnId]: \"\" });\r\n      } else {\r\n        setFilter({ ...filter, [columnId]: value });\r\n      }\r\n    };\r\n  const columns = [\r\n    { id: \"s_no\", label: \"S.No\", filter: false },\r\n    { id: \"patient_type\", label: \"Registration Date\", filter: false },\r\n    { id: \"mr_number\", label: \"MRD Number\", filter: true, type: \"input\" },\r\n    // { id: \"visit_date\", label: \"Visit Date\", filter: true, type: \"date\" },\r\n    { id: \"patient_name\", label: \"Patient name\", filter: true, type: \"input\" },\r\n    { id: \"doctor\", label: \"DOB\", filter: true, type: \"input\" },\r\n    { id: \"recall_date\", label: \"Gender\", filter: true, type: \"date\" },\r\n    { id: \"Plan_of_care\", label: \"Nationality\", filter: false },\r\n    { id: \"status\", label: \"Status\", filter: true, type: \"select\" },\r\n    { id: \"actions\", label: \"Options\", filter: false },\r\n  ];\r\n  return (\r\n    <Box width={\"100%\"}>\r\n      <TableContainer component={Paper} sx={{ maxHeight: 400 }}>\r\n        <Table>\r\n          <TableHead sx={{ height: \"1em\" }}>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell>{column.label}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell padding=\"8px\">\r\n                  {column.filter && column.type === \"input\" && (\r\n                    <TextField\r\n                      size=\"small\"\r\n                      className=\"filter-input\"\r\n                      id={column.id}\r\n                      value={filter[column.id] || \"\"}\r\n                      onChange={(e) =>\r\n                        handleFilterChange(column.id, e.target.value, \"input\")\r\n                      }\r\n                    >\r\n                      {column.label}\r\n                    </TextField>\r\n                  )}\r\n                  {column.filter && column.type === \"date\" && (\r\n                    <DatePicker\r\n                      className=\"filter-input\"\r\n                      slotProps={{ actionBar: { actions: [\"clear\"] } }}\r\n                      onChange={(e) => handleDateChange(column.id, e)}\r\n                      sx={{ width: \"130px\" }}\r\n                    />\r\n                  )}\r\n                  {column.filter && column.type === \"select\" && (\r\n                    <FormControl fullWidth>\r\n                      <Select\r\n                        id=\"status-select\"\r\n                        className=\"filter-input\"\r\n                        value={statusFilter}\r\n                        onChange={(e) =>\r\n                          handleFilterChange(\r\n                            column.id,\r\n                            e.target.value,\r\n                            \"select\"\r\n                          )\r\n                        }\r\n                      >\r\n                        {/* {status.map((option, index) => {\r\n                          return (\r\n                            <MenuItem\r\n                              key={`${option.id}_${index}`}\r\n                              value={option.label}\r\n                            >\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          );\r\n                        })} */}\r\n                      </Select>\r\n                    </FormControl>\r\n                  )}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {/* {filteredData?.map((row) => (\r\n            <TableRow key={row.id}>\r\n              {columns.map((column) => {\r\n                return (\r\n                  column.id !== \"actions\" && (\r\n                    <TableCell key={column.id}>{row[column.id]}</TableCell>\r\n                  )\r\n                );\r\n              })} */}\r\n            <TableRow>\r\n              <TableCell>No Data</TableCell>\r\n            </TableRow>\r\n            {/* ))} */}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PatientList;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Box } from \"@mui/material\";\nimport ScreenWrapper from \"../../components/global/ScreenWrapper\";\nimport EMRtabs from \"../../components/global/EMRtabs\";\nimport RegisterPatient from \"./component/RegisterPatient\";\nimport Emergency from \"./component/Emergency\";\nimport Revisit from \"./component/Revisit\";\nimport ScheduleList from \"../dashboard/components/ScheduleList\";\nimport PatientRecall from \"../dashboard/components/PatientRecall\";\nimport PatientVaccinationSchedule from \"../dashboard/components/PatientVaccinationSchedules\";\nimport VaccinesIcon from \"@mui/icons-material/Vaccines\";\nimport EventNoteIcon from \"@mui/icons-material/EventNote\";\nimport EventRepeatIcon from \"@mui/icons-material/EventRepeat\";\nimport PatientList from \"./component/PatientInfo/PatientList\";\n\nconst Registration = () => {\n  const [searchParams] = useSearchParams();\n  const defaultTab = searchParams.get(\"tab\") || \"register_patient\";\n  const [activeTab, setActiveTab] = useState(defaultTab);\n\n  const tabsList = [\n    { name: \"Register Patient\", value: \"register_patient\", icon: \"\" },\n    { name: \"Revisit\", value: \"revist_registration\", icon: \"\" },\n    {\n      name: \"Emergency Registration\",\n      value: \"emergency_registration\",\n      icon: \"\",\n    },\n    {\n      name: \"Patient List\",\n      value: \"patient_list\",\n      icon: \"\",\n    },\n    // { name: \"Schedule List\", value: \"schedule_list\", icon: EventNoteIcon },\n    // { name: \"Patient Recall\", value: \"patient_recall\", icon: EventRepeatIcon },\n    // {\n    //   name: \"Patient Vaccination Schedules\",\n    //   value: \"patient_vaccination_schedules\",\n    //   icon: VaccinesIcon,\n    // },\n  ];\n\n  useEffect(() => {\n    setActiveTab(defaultTab);\n  }, [defaultTab]);\n\n  return (\n    <ScreenWrapper style={{ padding: \"20px\" }}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <EMRtabs\n          tabsList={tabsList}\n          defaultTab={defaultTab}\n          setActiveTab={setActiveTab}\n        />\n      </Box>\n      <Box>\n        {activeTab === \"register_patient\" && <RegisterPatient />}\n        {activeTab === \"revist_registration\" && <Revisit />}\n        {activeTab === \"emergency_registration\" && <Emergency />}\n        {activeTab === \"patient_list\" && <PatientList />}\n        {/* {activeTab === \"schedule_list\" && <ScheduleList />}\n        {activeTab === \"patient_recall\" && <PatientRecall />}\n        {activeTab === \"patient_vaccination_schedules\" && (\n          <PatientVaccinationSchedule />\n        )} */}\n      </Box>\n    </ScreenWrapper>\n  );\n};\n\nexport default Registration;\n","import React, { useState } from 'react';\nimport { Box, Button, Menu, MenuItem, Typography, TextField, InputAdornment, IconButton, Chip, Badge, Stack, Tooltip } from '@mui/material';\nimport ArrowBackIosNewSharpIcon from '@mui/icons-material/ArrowBackIosNewSharp';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport { DemoItem } from '@mui/x-date-pickers/internals/demo';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport dayjs from 'dayjs';\nimport SearchIcon from '@mui/icons-material/Search';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { FilterList } from '@mui/icons-material';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\n\nconst DocOptions = ({ cardTitle, searchByPatientName, searchByStatus }) => {\n  const [value, setValue] = useState(dayjs());\n  const [searchTerm, setSearchTerm] = useState('');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [appliedFilters, setAppliedFilters] = useState([]);\n\n  const filterOptions = [\n    { label: 'New Patient', color: '#ADD8E6' },\n    { label: 'Old Patient', color: '#d9f2d0' },\n    { label: 'Revisit', color: '#fae2d5' },\n    { label: 'Walking', color: '#cce7ff' }\n  ];\n\n  const handleButtonClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleFilterClick = (filter) => {\n    searchByStatus(filter)\n    setAppliedFilters((prev) =>\n      prev.includes(filter.label)\n        ? prev.filter((item) => item !== filter.label)\n        : [...prev, filter.label]\n    );\n  };\n\n\n\n  const handleChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n    if (event.target.value) {\n      searchByPatientName(event.target.value)\n    } else {\n      searchByPatientName(\"\")\n    }\n  };\n\n  const clearSearch = () => {\n    setSearchTerm('');\n    searchByPatientName(\"\")\n  };\n\n  const handleStatusReset = () => {\n    setAppliedFilters([])\n    setAnchorEl(null);\n    searchByStatus(\"\")\n  }\n\n  return (\n    <div>\n      {cardTitle === \"Revenue\" ? <Box sx={{ display: 'flex', alignItems: 'center', mt: 2, marginBottom: 5 }}>\n\n\n        <Typography variant=\"h6\" align=\"center\" sx={{ flexGrow: 1, display: 'flex', ml: '250px' }}>\n          Transaction Details\n        </Typography> {\"   \"}\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DesktopDatePicker\n            label=\"Date\"\n            inputFormat=\"MM/DD/YYYY\"\n            value={value}\n            onChange={handleChange}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n\n      </Box> : cardTitle === \"\" ? \"\" :\n\n\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 2 }}>\n          {/* Card Title and Search Box */}\n          <Box sx={{ display: 'flex', alignItems: 'center', flexGrow: 1 }}>\n            <Typography variant=\"h6\" sx={{ flexGrow: 1, ml: 2 }}>\n              {cardTitle}\n            </Typography>\n            <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              placeholder=\"Patient Name/ MRD No\"\n              value={searchTerm}\n              onChange={handleSearchChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      onClick={clearSearch}\n                      aria-label=\"clear search\"\n                      edge=\"end\"\n                      size=\"small\"\n                      sx={{ visibility: searchTerm ? 'visible' : 'hidden' }}\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Box>\n\n\n          <Box sx={{ display: 'flex', alignItems: 'center', ml: 2, mr: 2 }}>\n            <Button\n              variant=\"contained\"\n              color={appliedFilters.length > 0 ? 'success' : 'primary'}\n              startIcon={<FilterList />}\n              onClick={handleButtonClick}\n            >\n              {appliedFilters.length > 0\n                ? `Filter Applied ${appliedFilters.length}`\n                : 'Filter'}\n            </Button>\n\n            <Menu\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n              PaperProps={{ style: { maxHeight: 48 * 4.5, width: 'fit-content' } }}\n            >\n              <Stack direction=\"row\" spacing={0} p={1} flexWrap=\"wrap\">\n                {filterOptions.map((option) => (\n                  <div>\n                    <MenuItem\n                      key={option.label}\n                      onClick={() => handleFilterClick(option)}\n                      style={{\n                        padding: '8px 16px',\n                        cursor: 'pointer',\n                        backgroundColor: appliedFilters.includes(option.label) ? option.color : 'transparent',\n                        color: appliedFilters.includes(option.label) ? 'black' : 'inherit',\n                      }}\n                    >\n                      {option.label}\n                    </MenuItem>\n\n                  </div>\n                ))}\n                <MenuItem>\n                  <IconButton color=\"primary\" onClick={handleStatusReset}>\n                    <RestartAltIcon />\n                  </IconButton>\n                </MenuItem>\n              </Stack>\n            </Menu>\n          </Box>\n\n         \n        </Box>\n      }\n\n\n    </div>\n  );\n};\n\nexport default DocOptions;\n","import React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { styled } from '@mui/material/styles';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  IconButton,\n  Grid,\n  Typography,\n  Divider,\n  DialogActions,\n  Button\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst CustomDataGrid = styled(DataGrid)(({ theme }) => ({\n  '.MuiDataGrid-columnHeaders': {\n    textAlign: 'center',\n  },\n  '.MuiDataGrid-groupHeader': {\n    textAlign: 'center',\n  },\n  '& .MuiDataGrid-scrollbar--horizontal': {\n    height: '8px !important',\n    backgroundColor: '#f0f0f0',\n    borderRadius: '4px',\n  },\n  '& .MuiDataGrid-scrollbar--horizontal .MuiDataGrid-scrollbarContent': {\n    backgroundColor: '#888',\n    borderRadius: '4px',\n  },\n  '& .MuiDataGrid-scrollbar--horizontal .MuiDataGrid-scrollbarContent:hover': {\n    backgroundColor: '#555',\n  },\n}));\n\nexport default function RevenueDataList({ dashboardList }) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const handleClickOpen = (row) => {\n    setSelectedRow(row);\n    setOpen(true);\n  };\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const formatDate = (dateString) => {\n    if (!dateString) return '-';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-GB'); \n  };\n\n  \n  const handleEmpty = (value) => (value ? value : '-');\n\n  \n  const columns = [\n    { field: 'sno', headerName: 'S. No', width: 90 },\n    {\n      field: 'date',\n      headerName: 'Date',\n      width: 150,\n      valueGetter: (params) => formatDate(params.row.date), \n    },\n    {\n      field: 'regNo',\n      headerName: 'Reg No',\n      width: 150,\n      valueGetter: (params) => handleEmpty(params.row.regNo), \n    },\n    {\n      field: 'patientName',\n      headerName: 'Patient Name',\n      width: 200,\n      valueGetter: (params) => handleEmpty(params.row.patientName), \n    },\n    {\n      field: 'view',\n      headerName: 'Revenue Details',\n      width: 150,\n      renderCell: (params) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => handleClickOpen(params.row)}\n        >\n          View\n        </Button>\n      ),\n    },\n    {\n      field: 'gross',\n      headerName: 'Gross',\n      width: 150,\n      align: 'right',\n      headerAlign: 'center',\n      valueGetter: (params) => handleEmpty(params.row.gross), \n    },\n    {\n      field: 'discount',\n      headerName: 'Discount',\n      width: 150,\n      align: 'right',\n      headerAlign: 'center',\n      valueGetter: (params) => handleEmpty(params.row.discount), \n    },\n    {\n      field: 'net',\n      headerName: 'Net',\n      width: 150,\n      align: 'right',\n      headerAlign: 'center',\n      valueGetter: (params) => handleEmpty(params.row.net), \n    },\n    {\n      field: 'revenue',\n      headerName: 'Revenue',\n      width: 150,\n      align: 'right',\n      headerAlign: 'center',\n      valueGetter: (params) => handleEmpty(params.row.revenue), \n    },\n  ];\n\n\n  const rows = dashboardList.map((item, index) => ({\n    id: index + 1,\n    sno: index + 1,\n    date: item.date,\n    regNo: item.regNo,\n    patientName: item.patientName,\n    gross: item.gross,\n    discount: item.discount,\n    net: item.net,\n    revenue: item.revenue,\n  }));\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <CustomDataGrid rows={rows} columns={columns} pageSize={5} />\n\n      \n      <Dialog open={open} onClose={handleClose} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>\n          Revenue Details\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            style={{ position: 'absolute', right: 8, top: 8 }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent>\n          {selectedRow && (\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant=\"body1\">\n                  <strong>Date: </strong>\n                  {formatDate(selectedRow.date)}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"body1\">\n                  <strong>Reg No: </strong>\n                  {handleEmpty(selectedRow.regNo)}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"body1\">\n                  <strong>Patient Name: </strong>\n                  {handleEmpty(selectedRow.patientName)}\n                </Typography>\n              </Grid>\n              <Divider style={{ marginTop: 20, marginBottom: 20 }} />\n              <Grid item xs={12}>\n                <Typography variant=\"body1\">\n                  <strong>Gross: </strong>\n                  {handleEmpty(selectedRow.gross)}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"body1\">\n                  <strong>Discount: </strong>\n                  {handleEmpty(selectedRow.discount)}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"body1\">\n                  <strong>Net: </strong>\n                  {handleEmpty(selectedRow.net)}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"body1\">\n                  <strong>Revenue: </strong>\n                  {handleEmpty(selectedRow.revenue)}\n                </Typography>\n              </Grid>\n            </Grid>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { IconButton, Avatar, Menu, MenuItem, ListItemIcon, ListItemText } from '@mui/material';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport { useNavigate } from \"react-router-dom\";\n\nconst columns = [\n  {\n    field: 'sNo',\n    headerName: 'Queue No',\n    width: 150,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n  {\n    field: 'mrdNo',\n    headerName: 'MRD No',\n    width: 150,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n  {\n    field: 'name',\n    headerName: 'Patient Name',\n    width: 200,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n  {\n    field: 'consultationDate',\n    headerName: 'Last Consultation Date',\n    width: 200,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n  {\n    field: 'procedure',\n    headerName: 'Procedure',\n    width: 180,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n  {\n    field: 'insuranceName',\n    headerName: 'Insurance',\n    width: 180,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n  {\n    field: 'status',\n    headerName: 'Status',\n    width: 180,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    renderCell: (params) => (\n      <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\n        <Avatar sx={{ bgcolor: params.value.color, color: '#fff' }}>\n          {params.value.initials}\n        </Avatar>\n      </div>\n    ),\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n  {\n    field: 'actions',\n    headerName: 'Actions',\n    width: 100,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    renderCell: (params) => (\n      <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\n        <ActionsMenu mrdNo={params.row.mrdNo} />\n      </div>\n    ),\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n];\n\nexport default function OthersDataList({ dashboardList }) {\n  const [rows, setRows] = React.useState([]);\n\n  React.useEffect(() => {\n    const transformedData = dashboardList.map((item, index) => ({\n      id: item.mrdNo || index,\n      sNo: item.sNo,\n      mrdNo: item.mrdNo,\n      name: item.name,\n      consultationDate: item.consultationDate || '-',\n      procedure: item.procedure || '-',\n      insuranceName: item.insuranceName,\n      status: {\n        color: item.status === 'N' ? '#ADD8E6' : '#fae2d0',\n        initials: item.status === 'N' ? 'N' : item.status\n      },\n      actions: item.mrdNo,\n    }));\n\n    setRows(transformedData);\n  }, [dashboardList]);\n\n\n\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        disableSelectionOnClick\n      />\n    </div>\n  );\n}\n\nfunction ActionsMenu({ mrdNo }) {\n  const navigate = useNavigate();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuClick = (action) => {\n    if (action === \"Open encounter\") {\n      navigate('/doctor/doctorEmr')\n    }\n\n    handleClose();\n  };\n\n  return (\n    <div>\n      <IconButton onClick={handleClick} size=\"small\">\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorEl} open={open} onClose={handleClose}>\n        <MenuItem onClick={() => handleMenuClick('Refer to OP')}>\n          <ListItemIcon>\n            <LocalHospitalIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Refer to OP\" />\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuClick('Refer to IP')}>\n          <ListItemIcon>\n            <AssignmentIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Refer to IP\" />\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuClick('View Order Form')}>\n          <ListItemIcon>\n            <VisibilityIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"View Order Form\" />\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuClick('Download Report')}>\n          <ListItemIcon>\n            <DownloadIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Download Report\" />\n        </MenuItem>\n        <MenuItem >\n          <ListItemIcon>\n            <VisibilityIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"View Paitent Details\" />\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuClick('Open encounter')}>\n          <ListItemIcon>\n            <VisibilityIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Open encounter\" />\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React from 'react';\nimport DocOptions from './docOptions';\nimport RevenueDataList from './RevenueDataList';\nimport OthersDataList from './OthersDataList';\n\nconst MainDataList = ({ selectedCard, dashboardList, searchByPatientName , searchByStatus }) => {\n  return (\n    <div>\n      <DocOptions cardTitle={selectedCard} searchByPatientName={searchByPatientName} searchByStatus={searchByStatus}/>\n      {selectedCard === \"Revenue\" ? <RevenueDataList dashboardList={dashboardList}/> : <OthersDataList dashboardList={dashboardList}/>}\n    </div>\n  );\n};\n\nexport default MainDataList;\n","function DoctorNurseLoader() {\n    return (\n        <div style={styles.loaderContainer}>\n            <svg version=\"1.1\" id=\"L4\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                viewBox=\"0 0 100 100\" xmlSpace=\"preserve\" style={styles.svg}>\n                <circle fill=\"#ADD8E6\" stroke=\"none\" cx=\"20\" cy=\"50\" r=\"4\">\n                    <animate\n                        attributeName=\"opacity\"\n                        dur=\"1s\"\n                        values=\"0;1;0\"\n                        repeatCount=\"indefinite\"\n                        begin=\"0.1s\" />\n                </circle>\n                <circle fill=\"#fae2d5\" stroke=\"none\" cx=\"40\" cy=\"50\" r=\"4\">\n                    <animate\n                        attributeName=\"opacity\"\n                        dur=\"1s\"\n                        values=\"0;1;0\"\n                        repeatCount=\"indefinite\"\n                        begin=\"0.2s\" />\n                </circle>\n                <circle fill=\"#cce7ff\" stroke=\"none\" cx=\"60\" cy=\"50\" r=\"4\">\n                    <animate\n                        attributeName=\"opacity\"\n                        dur=\"1s\"\n                        values=\"0;1;0\"\n                        repeatCount=\"indefinite\"\n                        begin=\"0.3s\" />\n                </circle>\n            </svg>\n        </div>\n    );\n}\n\nconst styles = {\n    loaderContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '50vh',  \n        width: '150vw',   \n    },\n    svg: {\n        width: '600px',   \n        height: '600px',  \n    }\n};\n\nexport default DoctorNurseLoader;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, Row, Col, Button, Container } from 'react-bootstrap';\nimport TodayIcon from '@mui/icons-material/Today';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport EmergencyIcon from '@mui/icons-material/LocalHospital';\nimport WaitingIcon from '@mui/icons-material/HourglassEmpty';\nimport TelemedicineIcon from '@mui/icons-material/Computer';\nimport doctorImage from \"../../assets/doc2.jpg\";\nimport MainDataList from './components/mainDataList';\nimport { doctorDashboardCount } from \"../../core/services/APIService\";\nimport { doctorDashboardDataList } from \"../../core/services/APIService\";\nimport DoctorNurseLoader from \"../../components/global/doctorNurseLoader\";\nimport Box from '@mui/material/Box';\nconst cardColors = {\n  \"Today's Appointment\": '#ADD8E6',\n  'Revenue': '#d9f2d0',\n  'Emergency Patient': '#fae2d5',\n  'Waiting List': '#fae2d5',\n  'Telemedicine Appointment': '#cce7ff',\n};\n\n\nconst DoctorDashboard = () => {\n  const [selectedCard, setSelectedCard] = useState(\"Today's Appointment\")\n  const [dashboardCountResp, setDashboardCountResp] = useState([])\n  const [dashboardlistResp, setDashboardlistResp] = useState([])\n  const [searchPatientName, setsearchPatientName] = useState('');\n  const [PatientStatus, setPatientStatus] = useState('');\n\n  const handleCardClick = async (title) => {\n    setSelectedCard(title)\n    switch (title) {\n      case \"Today's Appointment\":\n        let todaysAppointmentResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"todaysAppointment\", page: 1, size: 100, ptName: searchPatientName, status: PatientStatus })\n        setDashboardlistResp(todaysAppointmentResponse)\n        setsearchPatientName(\"\")\n        break;\n      case \"Revenue\":\n        let revenueResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"revenue\", page: 1, size: 100, ptName: searchPatientName, status: PatientStatus })\n        setDashboardlistResp(revenueResponse)\n        setsearchPatientName(\"\")\n        break;\n      case \"Emergency Patient\":\n        let emergencyPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"emergencyPatient\", page: 1, size: 100, ptName: searchPatientName, status: PatientStatus })\n        setDashboardlistResp(emergencyPatientResponse)\n        setsearchPatientName(\"\")\n        break;\n      case \"Waiting list\":\n        let waitingListResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"waitingList\", page: 1, size: 100, ptName: searchPatientName, status: PatientStatus })\n        setDashboardlistResp(waitingListResponse)\n        setsearchPatientName(\"\")\n        break;\n      case \"Telemedicine Appointment\":\n        let teleAppointmentResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"teleAppointment\", page: 1, size: 100, ptName: searchPatientName, status: PatientStatus })\n        setDashboardlistResp(teleAppointmentResponse)\n        setsearchPatientName(\"\")\n        break;\n      default:\n      // code block\n    }\n\n  };\n\n  const dashboardCount = async () => {\n    let response = await doctorDashboardCount(\"/doctorService/doctor/getCount\", { doctorId: 1, ipOpFlag: 0 })\n    let cardDetails = response.map((cardData) => {\n      switch (cardData.displayName) {\n        case \"Today's Appointment\":\n          cardData['color'] = cardColors[\"Today's Appointment\"]\n          cardData['icon'] = <TodayIcon style={{ fontSize: '40px' }} />\n          break;\n        case \"Revenue\":\n          cardData['color'] = cardColors['Revenue']\n          cardData['icon'] = <MonetizationOnIcon style={{ fontSize: '40px' }} />\n          break;\n        case \"Emergency Patient\":\n          cardData['color'] = cardColors['Emergency Patient']\n          cardData['icon'] = <EmergencyIcon style={{ fontSize: '40px' }} />\n          break;\n        case \"Waiting list\":\n          cardData['color'] = cardColors['Waiting List']\n          cardData['icon'] = <WaitingIcon style={{ fontSize: '40px' }} />\n          break;\n        case \"Telemedicine Appointment\":\n          cardData['color'] = cardColors['Telemedicine Appointment']\n          cardData['icon'] = <TelemedicineIcon style={{ fontSize: '40px' }} />\n          break;\n        default:\n        // code block\n      }\n      return cardData\n    })\n    setDashboardCountResp(cardDetails)\n  }\n\n  const dashboardListDefault = async () => {\n    if (selectedCard === \"Today's Appointment\") {\n      let response = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"todaysAppointment\", page: 1, size: 100, ptName: searchPatientName, status: PatientStatus })\n      setDashboardlistResp(response)\n    }\n  }\n  useEffect(() => {\n    dashboardCount()\n    dashboardListDefault()\n  }, [])\n\n  const checkValue = (value) => {\n    if (value === \"\" || value === undefined || value === NaN || value === null) {\n      return \"-\"\n    } else {\n      return value\n    }\n  }\n\n  const searchByPatientName = async (patientName) => {\n    setsearchPatientName(patientName)\n    switch (selectedCard) {\n      case \"Today's Appointment\":\n        let TodayAppointmentsearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"todaysAppointment\", page: 1, size: 100, ptName: patientName, status: PatientStatus })\n        setDashboardlistResp(TodayAppointmentsearchPatientResponse)\n\n        break;\n      case \"Revenue\":\n        let RevenuSearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"revenue\", page: 1, size: 100, ptName: patientName, status: PatientStatus })\n        setDashboardlistResp(RevenuSearchPatientResponse)\n\n        break;\n      case \"Emergency Patient\":\n        let EmergencySearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"emergencyPatient\", page: 1, size: 100, ptName: patientName, status: PatientStatus })\n        setDashboardlistResp(EmergencySearchPatientResponse)\n\n        break;\n      case \"Waiting list\":\n        let searchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"waitingList\", page: 1, size: 100, ptName: patientName, status: PatientStatus })\n        setDashboardlistResp(searchPatientResponse)\n\n        break;\n      case \"Telemedicine Appointment\":\n        let TeleSearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"teleAppointment\", page: 1, size: 100, ptName: patientName, status: PatientStatus })\n        setDashboardlistResp(TeleSearchPatientResponse)\n\n        break;\n      default:\n      // code block\n    }\n  }\n\n  const searchByStatus = async (value) => {\n    if (value === 'Old Patient') {\n      setPatientStatus('O')\n    } else if (value === \"New Patient\") {\n      setPatientStatus('N')\n    } else if (value === \"Revisit\") {\n      setPatientStatus('R')\n    } else if (value === \"Walking\") {\n      setPatientStatus('W')\n    }\n    switch (selectedCard) {\n      case \"Today's Appointment\":\n        let TodayAppointmentsearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"todaysAppointment\", page: 1, size: 100, ptName: searchPatientName, status: value ? value.label.charAt(0) : \"\" })\n        setDashboardlistResp(TodayAppointmentsearchPatientResponse)\n        break;\n      case \"Revenue\":\n        let RevenuSearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"revenue\", page: 1, size: 100, ptName: searchPatientName, status: value ? value.label.charAt(0) : \"\" })\n        setDashboardlistResp(RevenuSearchPatientResponse)\n        break;\n      case \"Emergency Patient\":\n        let EmergencySearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"emergencyPatient\", page: 1, size: 100, ptName: searchPatientName, status: value ? value.label.charAt(0) : \"\" })\n        setDashboardlistResp(EmergencySearchPatientResponse)\n        break;\n      case \"Waiting list\":\n        let searchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"waitingList\", page: 1, size: 100, ptName: searchPatientName, status: value ? value.label.charAt(0) : \"\" })\n        setDashboardlistResp(searchPatientResponse)\n        break;\n      case \"Telemedicine Appointment\":\n        let TeleSearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"teleAppointment\", page: 1, size: 100, ptName: searchPatientName, status: value ? value.label.charAt(0) : \"\" })\n        setDashboardlistResp(TeleSearchPatientResponse)\n        break;\n      default:\n      // code block\n    }\n  }\n\n\n  return (\n    <div>\n      {dashboardCountResp.length === 0 && dashboardlistResp.length === 0\n        ?\n        <DoctorNurseLoader />\n        :\n        <div>\n          <Container fluid >\n            <Row className=\"flex-nowrap\">\n              <Col xs={12} sm={6} md={4} lg={2}>\n                <Card style={{ width: '200px', height: '200px', backgroundColor: '#fff', borderRadius: '10px', boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.1)' }}>\n                  <Card.Img variant=\"top\" src={doctorImage} style={{ height: '60%' }} />\n                  <Card.Body className=\"d-flex align-items-center justify-content-center\">\n                    <Card.Title className=\"text-center\">Welcome, Dr. John!</Card.Title>\n                  </Card.Body>\n                </Card>\n              </Col>\n\n              {dashboardCountResp.map((card, index) => (\n                <Col xs={12} sm={6} md={4} lg={2} key={card.displayIndex}>\n                  <Button variant=\"light\" className=\"p-0\" onClick={() => handleCardClick(card.displayName)}>\n                    <Card style={{ width: '200px', height: '200px', backgroundColor: card.color, borderRadius: '10px', boxShadow: `0px 4px 10px rgba(0, 0, 0, 0.1)` }}>\n                      <Card.Body className=\"d-flex flex-column align-items-center justify-content-center text-white\">\n                        {card.icon}\n                        <Card.Title className=\"mt-2\">{checkValue(card.displayName)}</Card.Title>\n                        <Card.Text className=\"mt-1\" style={{ fontSize: '24px' }}>{checkValue(card.totalCount)}</Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </Button>\n                </Col>\n              ))}\n            </Row>\n            <MainDataList selectedCard={selectedCard} dashboardList={dashboardlistResp} searchByPatientName={searchByPatientName} searchByStatus={searchByStatus} />\n          </Container>\n        </div>\n      }\n\n\n    </div>\n  );\n};\n\nexport default DoctorDashboard;\n","import React, { useState, useEffect } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Row, Form, Button } from \"react-bootstrap\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\n\nconst BlockAvailability = () => {\n  const [formData, setFormData] = useState({\n    doctorId: \"\",\n    title: \"\",\n    startTime: \"\",\n    endTime: \"\"\n  });\n  const [specialistList, setSpecialistList] = useState([]);\n\n  // useEffect(() => {\n  //   setEventData(formData);\n  // }, [formData]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  const handleChangeStartTime = (e) => {\n    setFormData({\n      ...formData,\n      [\"startTime\"]: e?.format(\"HH:mm:ss\")\n    });\n  };\n\n  const handleChangeEndTime = (e) => {\n    setFormData({\n      ...formData,\n      [\"endTime\"]: e?.format(\"HH:mm:ss\")\n    });\n  };\n\n  const blockAvailability = () => {};\n\n  return (\n    <Box width={\"50%\"}>\n      <Form>\n        <Row className=\"mb-3\">\n          <Form.Group>\n            <Form.Label className=\"mt-3\">{\"Specialist\"}</Form.Label>\n            <Form.Select\n              value={formData.doctorId}\n              onChange={handleChange}\n              name=\"doctorId\"\n            >\n              <option value={\"-1\"}>select...</option>\n              {specialistList.map((type) => {\n                return <option value={type.doctorId}>{type.doctorName}</option>;\n              })}\n            </Form.Select>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label className=\"mt-3\">Title</Form.Label>\n            <Form.Control\n              name=\"title\"\n              required={true}\n              value={formData.title}\n              type=\"text\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label className=\"mt-3\">Start Time</Form.Label>\n            <Box width={\"100%\"}>\n              <TimePicker\n                name=\"startTime\"\n                onChange={handleChangeStartTime}\n                ampm={false}\n                // value={formData.startTime}\n                sx={{ width: \"100%\" }}\n              />\n            </Box>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label className=\"mt-3\">End Time</Form.Label>\n            <Box width={\"100%\"}>\n              <TimePicker\n                name=\"endTime\"\n                // value={formData.endTime}\n                onChange={handleChangeEndTime}\n                sx={{ width: \"100%\" }}\n                ampm={false}\n              />\n            </Box>\n          </Form.Group>\n        </Row>\n      </Form>\n\n      <Box\n        display={\"flex\"}\n        padding={\"0.5em\"}\n        width={\"100%\"}\n        justifyContent={\"flex-end\"}\n      >\n        <Button color=\"danger\" onClick={blockAvailability}>\n          Block Availability\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default BlockAvailability;\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Checkbox\r\n} from \"@mui/material\";\r\nimport ScreenWrapper from \"../../components/global/ScreenWrapper\";\r\nimport EMRtabs from \"../../components/global/EMRtabs\";\r\nimport BlockAvailability from \"../appointment/component/BlockAvailability\";\r\n\r\nconst Privileges = () => {\r\n  const [activeTab, setActiveTab] = useState(\"user_privileges\");\r\n  const initialRoles = [\r\n    {\r\n      role: \"Admin\",\r\n      canViewPage1: true,\r\n      canViewPage2: true,\r\n      canEdit: true,\r\n      canDelete: true\r\n    },\r\n    {\r\n      role: \"Receptionist\",\r\n      canViewPage1: true,\r\n      canViewPage2: false,\r\n      canEdit: false,\r\n      canDelete: false\r\n    },\r\n    {\r\n      role: \"Doctor\",\r\n      canViewPage1: true,\r\n      canViewPage2: true,\r\n      canEdit: true,\r\n      canDelete: false\r\n    },\r\n    {\r\n      role: \"Nurse\",\r\n      canViewPage1: true,\r\n      canViewPage2: false,\r\n      canEdit: false,\r\n      canDelete: false\r\n    },\r\n    {\r\n      role: \"Cash Counter\",\r\n      canViewPage1: true,\r\n      canViewPage2: false,\r\n      canEdit: false,\r\n      canDelete: false\r\n    }\r\n  ];\r\n  const [roles, setRoles] = useState(initialRoles);\r\n  const tabsList = [\r\n    { name: \"User privileges\", value: \"user_privileges\", icon: \"\" },\r\n    {\r\n      name: \"Block Availability\",\r\n      value: \"block_availability\",\r\n      icon: \"\"\r\n    },\r\n    {\r\n      name: \"Release Availability\",\r\n      value: \"release_availability\",\r\n      icon: \"\"\r\n    }\r\n  ];\r\n\r\n  const handleCheckboxChange = (roleIndex, permission) => {\r\n    const updatedRoles = [...roles];\r\n    updatedRoles[roleIndex][permission] = !updatedRoles[roleIndex][permission];\r\n    setRoles(updatedRoles);\r\n  };\r\n\r\n  return (\r\n    <ScreenWrapper>\r\n      <Box p={2} sx={{ backgroundColor: \"white\", borderRadius: \"8px\" }}>\r\n        <Box display={\"flex\"} justifyContent={\"flex-start\"}>\r\n          <EMRtabs\r\n            tabsList={tabsList}\r\n            defaultTab={\"user_privileges\"}\r\n            setActiveTab={setActiveTab}\r\n          />\r\n        </Box>\r\n        {activeTab === \"user_privileges\" && (\r\n          <Box mt={4}>\r\n            <TableContainer component={Paper} elevation={3}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      sx={{ fontWeight: \"bold\", backgroundColor: \"#e0e0e0\" }}\r\n                    >\r\n                      Roles\r\n                    </TableCell>\r\n                    {roles.map((role) => (\r\n                      <TableCell\r\n                        key={role.role}\r\n                        sx={{ fontWeight: \"bold\", backgroundColor: \"#e0e0e0\" }}\r\n                      >\r\n                        {role.role}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      sx={{ fontWeight: \"bold\", backgroundColor: \"#e0f7fa\" }}\r\n                    >\r\n                      Dashboard\r\n                    </TableCell>\r\n                    {roles.map((role, index) => (\r\n                      <TableCell key={`${role.role}-dashboard`} align=\"center\">\r\n                        <Checkbox\r\n                          checked={role.canViewPage1}\r\n                          onChange={() =>\r\n                            handleCheckboxChange(index, \"canViewPage1\")\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      sx={{ fontWeight: \"bold\", backgroundColor: \"#e0f7fa\" }}\r\n                    >\r\n                      Appointment\r\n                    </TableCell>\r\n                    {roles.map((role, index) => (\r\n                      <TableCell\r\n                        key={`${role.role}-appointment`}\r\n                        align=\"center\"\r\n                      >\r\n                        <Checkbox\r\n                          checked={role.canViewPage1}\r\n                          onChange={() =>\r\n                            handleCheckboxChange(index, \"canViewPage1\")\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      sx={{ fontWeight: \"bold\", backgroundColor: \"#e0f7fa\" }}\r\n                    >\r\n                      Registration\r\n                    </TableCell>\r\n                    {roles.map((role, index) => (\r\n                      <TableCell\r\n                        key={`${role.role}-registration`}\r\n                        align=\"center\"\r\n                      >\r\n                        <Checkbox\r\n                          checked={role.canViewPage1}\r\n                          onChange={() =>\r\n                            handleCheckboxChange(index, \"canViewPage1\")\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      sx={{ fontWeight: \"bold\", backgroundColor: \"#e0f7fa\" }}\r\n                    >\r\n                      Billing\r\n                    </TableCell>\r\n                    {roles.map((role, index) => (\r\n                      <TableCell key={`${role.role}-billing`} align=\"center\">\r\n                        <Checkbox\r\n                          checked={role.canViewPage1}\r\n                          onChange={() =>\r\n                            handleCheckboxChange(index, \"canViewPage1\")\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      sx={{ fontWeight: \"bold\", backgroundColor: \"#e0f7fa\" }}\r\n                    >\r\n                      Previllages\r\n                    </TableCell>\r\n                    {roles.map((role, index) => (\r\n                      <TableCell key={`${role.role}-billing`} align=\"center\">\r\n                        <Checkbox\r\n                          checked={role.canViewPage1}\r\n                          onChange={() =>\r\n                            handleCheckboxChange(index, \"canViewPage1\")\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Box>\r\n        )}\r\n\r\n        {activeTab === \"release_availability\" && (\r\n          <Box>Release Availability</Box>\r\n        )}\r\n        {activeTab === \"block_availability\" && (\r\n          <Box display={\"flex\"} justifyContent={\"center\"} mt={2}>\r\n            <BlockAvailability />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </ScreenWrapper>\r\n  );\r\n};\r\n\r\nexport default Privileges;\r\n","export const ipInsurance = [\n  {\n    claim_no: 1,\n    insurar_name: \"Test\",\n    invoice_no: \"31312\",\n    invoice_date: \"28-11-2024\",\n    patient_name: \"Akash\",\n    mrd_no: \"233423\",\n    status: \"Confirmed\",\n    actions: \"\"\n  },\n  {\n    claim_no: 2,\n    insurar_name: \"Test\",\n    invoice_no: \"31312\",\n    invoice_date: \"28-11-2024\",\n    patient_name: \"Akash\",\n    mrd_no: \"233423\",\n    status: \"Confirmed\",\n    actions: \"\"\n  },\n  {\n    claim_no: 3,\n    insurar_name: \"Test\",\n    invoice_no: \"31312\",\n    invoice_date: \"28-11-2024\",\n    patient_name: \"Akash\",\n    mrd_no: \"233423\",\n    status: \"Confirmed\",\n    actions: \"\"\n  },\n  {\n    claim_no: 6,\n    insurar_name: \"Test\",\n    invoice_no: \"31312\",\n    invoice_date: \"28-11-2024\",\n    patient_name: \"Akash\",\n    mrd_no: \"233423\",\n    status: \"Confirmed\",\n    actions: \"\"\n  },\n  {\n    claim_no: 7,\n    insurar_name: \"Test\",\n    invoice_no: \"31312\",\n    invoice_date: \"28-11-2024\",\n    patient_name: \"Akash\",\n    mrd_no: \"233423\",\n    status: \"Confirmed\",\n    actions: \"\"\n  }\n];\n","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport {\n  Box,\n  TableContainer,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Select,\n  FormControl,\n  MenuItem,\n  Paper\n} from \"@mui/material\";\nimport EMRLoader from \"../../../../../components/global/loader/EMRLoaderOverlay\";\nimport { useLoading } from \"../../../../../components/global/loader/LoadingContext\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport moment from \"moment\";\nimport EMRMenuIcon from \"../../../../../components/global/EMRMenuIcon\";\nimport MedicalInformationOutlined from \"@mui/icons-material/MedicalInformationOutlined\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ipInsurance } from \"../../../data\";\n\nconst ClaimDetails = () => {\n  const [filter, setFilter] = useState({});\n  const [statusFilter, setStatusFilter] = useState(\"--All--\");\n  const [appointments, setAppointments] = useState([]);\n  const { loading, setLoading } = useLoading();\n  const [numberOfElements, setNumberOfElements] = useState(0);\n  const [totalElements, setTotalElements] = useState(0);\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(false);\n  const tableRef = useRef();\n  const navigate = useNavigate();\n\n  const columns = [\n    { id: \"SI.No\", label: \"SI.No\", filter: false },\n    { id: \"insurar_name\", label: \"Insurar Name\", filter: true, type: \"input\" },\n    { id: \"Total Claims\", label: \"Invoice NO\", filter: true, type: \"input\" },\n    { id: \"invoice_date\", label: \" Invoice Date\", filter: true, type: \"date\" },\n    { id: \"patient_name\", label: \"Patient Name\", filter: true, type: \"input\" },\n    { id: \"mrd_no\", label: \"MRD No\", filter: true, type: \"input\" },\n    { id: \"status\", label: \"Status\", filter: true, type: \"select\" },\n    { id: \"actions\", label: \"Options\", filter: false }\n  ];\n\n  const status = [\n    { id: \"all\", label: \"--All--\" },\n    { id: \"pending\", label: \"Pending\" },\n    { id: \"verified\", label: \"Verified\" },\n    { id: \"submitted\", label: \"Submitted\" },\n    { id: \"re-submitted_pending\", label: \"Re-Submitted Pending\" },\n    { id: \"re-verified\", label: \"Re-Verified\" },\n    { id: \"re-submitted\", label: \"Re-Submitted\" },\n    { id: \"re-re-submitted_pending\", label: \"Re-Re-Submitted Pending\" },\n    { id: \"re-re-verified\", label: \"Re-Re-Verified\" },\n    { id: \"re-re-submitted\", label: \"Re-Re-Submitted\" },\n    { id: \"write_off\", label: \"Write Off\" },\n    { id: \"cancelled \", label: \"Cancelled\" }\n  ];\n\n  const handleFilterChange = (columnId, value, type) => {\n    if (type === \"select\") {\n      setStatusFilter(value);\n    }\n    setFilter({ ...filter, [columnId]: value });\n  };\n\n  const onCreatePatientVisit = (params) => {\n    navigate(\"/secure/registration\");\n  };\n\n  const dropDownMenuItems = [\n    {\n      name: \"Create Patient Visit\",\n      icon: MedicalInformationOutlined,\n      callback: onCreatePatientVisit\n    }\n  ];\n\n  const handleDateChange = (columnId, e) => {\n    let value = moment(e).format(\"DD/MM/YYYY\");\n    if (value === \"Invalid date\") {\n      setFilter({ ...filter, [columnId]: \"\" });\n    } else {\n      setFilter({ ...filter, [columnId]: value });\n    }\n  };\n\n  const handleScroll = () => {\n    const { scrollTop, clientHeight, scrollHeight } = tableRef.current;\n    if (scrollHeight - scrollTop <= clientHeight + 1 && hasMore) {\n      setPage((prev) => prev + 1);\n    }\n  };\n\n  return (\n    <Box padding={\"1em\"} width={\"100%\"}>\n      <Box display={\"flex\"} justifyContent={\"space-between\"}>\n        <Box>OP INSURANCE : CLAIM INVOICES LIST</Box>\n        <Box>{moment().format(\"LLLL\")}</Box>\n      </Box>\n      <EMRLoader show={loading} />\n      <TableContainer\n        style={{ height: \"75vh\" }}\n        component={Paper}\n        onScroll={handleScroll}\n        ref={tableRef}\n      >\n        <Table style={{ overflow: \"auto\" }}>\n          <TableHead sx={{ height: \"1em\" }}>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell>{column.label}</TableCell>\n              ))}\n            </TableRow>\n            <TableRow style={{ backgroundColor: \"white\" }}>\n              {columns.map((column) => (\n                <TableCell padding=\"8px\">\n                  {column.filter && column.type === \"input\" && (\n                    <TextField\n                      size=\"small\"\n                      id={column.id}\n                      className=\"filter-input\"\n                      value={filter[column.id] || \"\"}\n                      onChange={(e) =>\n                        handleFilterChange(column.id, e.target.value, \"input\")\n                      }\n                    >\n                      {column.label}\n                    </TextField>\n                  )}\n                  {column.filter && column.type === \"date\" && (\n                    <DatePicker\n                      className=\"filter-input\"\n                      slotProps={{ actionBar: { actions: [\"clear\"] } }}\n                      onChange={(e) => handleDateChange(column.id, e)}\n                    />\n                  )}\n                  {column.filter && column.type === \"select\" && (\n                    <FormControl fullWidth>\n                      <Select\n                        id=\"status-select\"\n                        className=\"filter-input\"\n                        value={statusFilter}\n                        onChange={(e) =>\n                          handleFilterChange(\n                            column.id,\n                            e.target.value,\n                            \"select\"\n                          )\n                        }\n                      >\n                        {status.map((option, index) => {\n                          return (\n                            <MenuItem\n                              key={`${option.id}_${index}`}\n                              value={option.label}\n                            >\n                              {option.label}\n                            </MenuItem>\n                          );\n                        })}\n                      </Select>\n                    </FormControl>\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ipInsurance?.map((row) => (\n              <TableRow key={row.id}>\n                {columns.map((column) => {\n                  return (\n                    column.id !== \"actions\" && (\n                      <TableCell key={column.id}>{row[column.id]}</TableCell>\n                    )\n                  );\n                })}\n                <TableCell>\n                  <EMRMenuIcon\n                    itemsArray={dropDownMenuItems}\n                    callbackParam={{ data: row, from: \"schedule_list\" }}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default ClaimDetails;\n","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport {\n  Box,\n  TableContainer,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Select,\n  FormControl,\n  MenuItem,\n  Paper\n} from \"@mui/material\";\nimport EMRLoader from \"../../../../../components/global/loader/EMRLoaderOverlay\";\nimport { useLoading } from \"../../../../../components/global/loader/LoadingContext\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport moment from \"moment\";\nimport EMRMenuIcon from \"../../../../../components/global/EMRMenuIcon\";\nimport MedicalInformationOutlined from \"@mui/icons-material/MedicalInformationOutlined\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ipInsurance } from \"../../../data\";\nimport \"../../../insurance.css\";\n\nconst ManualSubmission = () => {\n  const [filter, setFilter] = useState({});\n  const [statusFilter, setStatusFilter] = useState(\"--All--\");\n  const [appointments, setAppointments] = useState([]);\n  const { loading, setLoading } = useLoading();\n  const [numberOfElements, setNumberOfElements] = useState(0);\n  const [totalElements, setTotalElements] = useState(0);\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(false);\n  const tableRef = useRef();\n  const navigate = useNavigate();\n\n  const columns = [\n    { id: \"claim_no\", label: \"Claim No\", filter: false },\n    { id: \"insurar_name\", label: \"Insurar Name\", filter: false },\n    {\n      id: \"total_claims\",\n      label: \"Total Claims\",\n      width: 200,\n      filter: false,\n      children: [\n        {\n          id: \"count\",\n          label: \"Count\",\n          filter: true,\n          type: \"input\"\n        },\n        { id: \"Amount\", label: \"amount\", filter: true, type: \"input\" }\n      ]\n    },\n    {\n      id: \"pending_claims\",\n      label: \"Pending Claims\",\n      filter: false,\n      width: 500,\n      children: [\n        {\n          id: \"verification\",\n          label: \"Verification\",\n          filter: false,\n          children: [\n            {\n              id: \"count\",\n              label: \"Count\",\n              filter: true,\n              type: \"input\"\n            },\n            { id: \"Amount\", label: \"amount\", filter: true, type: \"input\" }\n          ]\n        },\n        {\n          id: \"submission\",\n          label: \"Submission\",\n          filter: false,\n          children: [\n            {\n              id: \"count\",\n              label: \"Count\",\n              filter: true,\n              type: \"input\"\n            },\n            { id: \"Amount\", label: \"amount\", filter: true, type: \"input\" }\n          ]\n        }\n      ]\n    },\n    {\n      id: \"Submitted Claims\",\n      label: \"submitted_claims\",\n      filter: false,\n      width: 250,\n      children: [\n        {\n          id: \"count\",\n          label: \"Count\",\n          filter: true,\n          type: \"input\"\n        },\n        { id: \"Amount\", label: \"amount\", filter: true, type: \"input\" }\n      ]\n    }\n  ];\n\n  const status = [\n    { id: \"all\", label: \"--All--\" },\n    { id: \"pending\", label: \"Pending\" },\n    { id: \"verified\", label: \"Verified\" },\n    { id: \"submitted\", label: \"Submitted\" },\n    { id: \"re-submitted_pending\", label: \"Re-Submitted Pending\" },\n    { id: \"re-verified\", label: \"Re-Verified\" },\n    { id: \"re-submitted\", label: \"Re-Submitted\" },\n    { id: \"re-re-submitted_pending\", label: \"Re-Re-Submitted Pending\" },\n    { id: \"re-re-verified\", label: \"Re-Re-Verified\" },\n    { id: \"re-re-submitted\", label: \"Re-Re-Submitted\" },\n    { id: \"write_off\", label: \"Write Off\" },\n    { id: \"cancelled \", label: \"Cancelled\" }\n  ];\n\n  const handleFilterChange = (columnId, value, type) => {\n    if (type === \"select\") {\n      setStatusFilter(value);\n    }\n    setFilter({ ...filter, [columnId]: value });\n  };\n\n  const onCreatePatientVisit = (params) => {\n    navigate(\"/secure/registration\");\n  };\n\n  const dropDownMenuItems = [\n    {\n      name: \"Create Patient Visit\",\n      icon: MedicalInformationOutlined,\n      callback: onCreatePatientVisit\n    }\n  ];\n\n  const handleDateChange = (columnId, e) => {\n    let value = moment(e).format(\"DD/MM/YYYY\");\n    if (value === \"Invalid date\") {\n      setFilter({ ...filter, [columnId]: \"\" });\n    } else {\n      setFilter({ ...filter, [columnId]: value });\n    }\n  };\n\n  const handleScroll = () => {\n    const { scrollTop, clientHeight, scrollHeight } = tableRef.current;\n    if (scrollHeight - scrollTop <= clientHeight + 1 && hasMore) {\n      setPage((prev) => prev + 1);\n    }\n  };\n\n  return (\n    <Box padding={\"1em\"} width={\"100%\"} id=\"manual-insurance-page\">\n      <Box display={\"flex\"} justifyContent={\"space-between\"}>\n        <Box>OP INSURANCE : CLAIM INVOICES LIST</Box>\n        <Box>{moment().format(\"LLLL\")}</Box>\n      </Box>\n      <EMRLoader show={loading} />\n      <TableContainer\n        style={{ height: \"75vh\" }}\n        component={Paper}\n        onScroll={handleScroll}\n        ref={tableRef}\n      >\n        <Table style={{ overflow: \"auto\" }}>\n          <TableHead sx={{ height: \"1em\" }}>\n            <TableRow>\n              {columns.map((column) => {\n                return (\n                  <TableCell>\n                    {column.children ? (\n                      <Box width={column.width ? `${column.width}px` : \"200px\"}>\n                        <Box>{column.label}</Box>\n                        <hr></hr>\n                        <Box display={\"flex\"} px={1}>\n                          {column.children.map((child) => {\n                            console.log({ child });\n                            return child.children ? (\n                              <Box width={\"500px\"}>\n                                <Box>{child.label}</Box>\n                                <hr></hr>\n                                <Box display={\"flex\"} px={1}>\n                                  {child.children.map((innerChild) => {\n                                    return (\n                                      <Box width={\"50%\"}>\n                                        {innerChild.label} <hr></hr>\n                                      </Box>\n                                    );\n                                  })}\n                                </Box>\n                              </Box>\n                            ) : (\n                              <Box width={\"50%\"}>\n                                {child.label} <hr></hr>\n                              </Box>\n                            );\n                          })}\n                        </Box>\n                      </Box>\n                    ) : (\n                      <Box>{column.label}</Box>\n                    )}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n            <TableRow style={{ backgroundColor: \"white\" }}>\n              {columns.map((column) => (\n                <TableCell padding=\"8px\">\n                  {column.filter && column.type === \"input\" && (\n                    <TextField\n                      size=\"small\"\n                      id={column.id}\n                      className=\"filter-input\"\n                      value={filter[column.id] || \"\"}\n                      onChange={(e) =>\n                        handleFilterChange(column.id, e.target.value, \"input\")\n                      }\n                    >\n                      {column.label}\n                    </TextField>\n                  )}\n                  {column.filter && column.type === \"date\" && (\n                    <DatePicker\n                      className=\"filter-input\"\n                      slotProps={{ actionBar: { actions: [\"clear\"] } }}\n                      onChange={(e) => handleDateChange(column.id, e)}\n                    />\n                  )}\n                  {column.filter && column.type === \"select\" && (\n                    <FormControl fullWidth>\n                      <Select\n                        id=\"status-select\"\n                        className=\"filter-input\"\n                        value={statusFilter}\n                        onChange={(e) =>\n                          handleFilterChange(\n                            column.id,\n                            e.target.value,\n                            \"select\"\n                          )\n                        }\n                      >\n                        {status.map((option, index) => {\n                          return (\n                            <MenuItem\n                              key={`${option.id}_${index}`}\n                              value={option.label}\n                            >\n                              {option.label}\n                            </MenuItem>\n                          );\n                        })}\n                      </Select>\n                    </FormControl>\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ipInsurance?.map((row) => (\n              <TableRow key={row.id}>\n                {columns.map((column) => {\n                  return (\n                    column.id !== \"actions\" && (\n                      <TableCell key={column.id}>{row[column.id]}</TableCell>\n                    )\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default ManualSubmission;\n","import React, { useState } from \"react\";\nimport EMRtabs from \"../../../../components/global/EMRtabs\";\nimport { Box } from \"@mui/material\";\nimport ClaimDetails from \"./components/ClaimDetails\";\nimport ManualSubmission from \"./components/ManualSubmission\";\nimport moment from \"moment\";\n\nconst OPInsurance = () => {\n  const [activeTab, setActiveTab] = useState(\"claim_details\");\n  const tabsList = [\n    { name: \"Claim Details\", value: \"claim_details\" },\n    { name: \"Manual Submission\", value: \"manual_submission\" },\n    { name: \"E-submission\", value: \"e_submission\" },\n    { name: \"Re-Submission\", value: \"re_submission\" },\n    { name: \"Prior Request\", value: \"prior_request\" }\n  ];\n\n  return (\n    <Box m=\"20px\">\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <EMRtabs\n          tabsList={tabsList}\n          defaultTab={\"claim_details\"}\n          setActiveTab={setActiveTab}\n        />\n      </Box>\n      <Box>\n        {activeTab === \"claim_details\" && <ClaimDetails />}\n        {activeTab === \"manual_submission\" && <ManualSubmission />}\n        {activeTab === \"e_submission\" && <></>}\n        {activeTab === \"re_submission\" && <></>}\n        {activeTab === \"prior_request\" && <></>}\n      </Box>\n    </Box>\n  );\n};\n\nexport default OPInsurance;\n","import React, { useState } from \"react\";\nimport EMRtabs from \"../../../../components/global/EMRtabs\";\nimport { Box } from \"@mui/material\";\n\nconst IPInsurance = () => {\n  const [activeTab, setActiveTab] = useState(\"generate_claim\");\n  const tabsList = [\n    { name: \"Generate Claim\", value: \"generate_claim\" },\n    { name: \"List of Claims\", value: \"list_of_claims\" },\n    { name: \"Manual Submission \", value: \"manual_submission\" },\n    { name: \"E-submission\", value: \"e_submission\" },\n    { name: \"Re-Submission\", value: \"re_submission\" }\n  ];\n\n  return (\n    <Box m=\"20px\">\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <EMRtabs\n          tabsList={tabsList}\n          defaultTab={\"generate_claim\"}\n          setActiveTab={setActiveTab}\n        />\n      </Box>\n      <Box>\n        {activeTab === \"generate_claim\" && <></>}\n        {activeTab === \"list_of_claims\" && <></>}\n        {activeTab === \"manual_submission\" && <></>}\n        {activeTab === \"e_submission\" && <></>}\n        {activeTab === \"re_submission\" && <></>}\n      </Box>\n    </Box>\n  );\n};\n\nexport default IPInsurance;\n","import React, { useState } from \"react\";\nimport EMRtabs from \"../../../../components/global/EMRtabs\";\nimport { Box } from \"@mui/material\";\n\nconst ReferralRegistration = () => {\n  const [activeTab, setActiveTab] = useState(\"referral_registration\");\n  const tabsList = [\n    { name: \"Referral Registration\", value: \"referral_registration\" },\n    { name: \"Referral Visit\", value: \"referral_visit\" },\n    { name: \"Referral Registration List\", value: \"referral_Registration_list\" }\n  ];\n\n  return (\n    <Box m=\"20px\">\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <EMRtabs\n          tabsList={tabsList}\n          defaultTab={\"referral_registration\"}\n          setActiveTab={setActiveTab}\n        />\n      </Box>\n      <Box>\n        {activeTab === \"referral_registration\" && <></>}\n        {activeTab === \"referral_visit\" && <></>}\n        {activeTab === \"referral_Registration_list\" && <></>}\n      </Box>\n    </Box>\n  );\n};\n\nexport default ReferralRegistration;\n","import React, { useState } from \"react\";\nimport ScreenWrapper from \"../../components/global/ScreenWrapper\";\nimport EMRtabs from \"../../components/global/EMRtabs\";\nimport OPInsurance from \"./components/opInsurance/OPInsurance\";\nimport { Box } from \"@mui/material\";\nimport IPInsurance from \"./components/ipInsurance/IPInsurance\";\nimport ReferralRegistration from \"./components/referralRegistration/ReferralRegistration\";\nimport { ipInsurance } from \"./data\";\n\nconst Insurance = () => {\n  const [activeTab, setActiveTab] = useState(\"op_insurance\");\n  const tabsList = [\n    { name: \"OP INSURANCE\", value: \"op_insurance\" },\n    { name: \"IP INSURANCE\", value: \"ip_insurance\" },\n    { name: \"REFERRAL REGISTRATION\", value: \"referral_registration\" },\n  ];\n\n  const data = ipInsurance;\n  console.log(data, \"data\");\n\n  return (\n    <ScreenWrapper>\n      <Box m=\"20px\" id=\"insurance-page\">\n        <EMRtabs\n          tabsList={tabsList}\n          defaultTab={\"op_insurance\"}\n          setActiveTab={setActiveTab}\n        />\n        <Box>\n          {activeTab === \"op_insurance\" && <OPInsurance />}\n          {activeTab === \"ip_insurance\" && <IPInsurance />}\n          {activeTab === \"referral_registration\" && <ReferralRegistration />}\n        </Box>\n      </Box>\n    </ScreenWrapper>\n  );\n};\n\nexport default Insurance;\n","import React from \"react\";\r\nimport { CircularProgress, Box } from \"@mui/material\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const doctorAvailability = createAsyncThunk(\r\n  \"timeslot/doctorAvailability\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.DOC_AVAILABLE, {\r\n        params: credentials,\r\n      });\r\n      const { data, status, statusText } = response;\r\n\r\n      return { data, status, statusText };\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst doctorAvailabilitySlice = createSlice({\r\n  name: \"doctorAvailability\",\r\n  initialState: {\r\n    doctorAvailableData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(doctorAvailability.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(doctorAvailability.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.doctorAvailableData = action.payload.data;\r\n      })\r\n      .addCase(doctorAvailability.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default doctorAvailabilitySlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const bookAppointment = createAsyncThunk(\r\n  \"appointment/bookAppointment\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        API_ENDPOINTS.BOOK_APPOINTMENT,\r\n\r\n        credentials\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst bookAppointmentSlice = createSlice({\r\n  name: \"bookAppointment\",\r\n  initialState: {\r\n    bookAppointmentdata: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(bookAppointment.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(bookAppointment.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.bookAppointmentdata = action.payload.data;\r\n      })\r\n      .addCase(bookAppointment.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default bookAppointmentSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\n// import { Modal, Button, Row, Col, Form, InputGroup } from \"react-bootstrap\";\n// import { Box } from \"@mui/material\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"../Appointment.css\";\nimport { fetchData, postData } from \"../../../core/services/APIService\";\nimport { useLoading } from \"../../../components/global/loader/LoadingContext\";\nimport EMRLoader from \"../../../components/global/loader/EMRLoaderOverlay\";\nimport { showToast } from \"../../../components/global/Toast\";\n// import Search from \"@mui/icons-material/Search\";\n// import { Autocomplete, TextField, CircularProgress } from \"@mui/material\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Autocomplete,\n  Button,\n  Box,\n  useTheme,\n  MenuItem,\n  // Typography,\n  // InputAdornment,\n  FormControlLabel,\n  Checkbox,\n  Grid,\n  RadioGroup,\n  Radio,\n  FormControl,\n  FormLabel,\n} from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { searchPatients } from \"../../../Redux/slice/appointement/searchPatientSlice\";\nimport { useSelector } from \"react-redux\";\nimport { bookAppointment } from \"../../../Redux/slice/appointement/bookAppointementSlice\";\nimport FormInput from \"../../../components/FormFields/FormInput\";\n\nconst NewEventModal = ({\n  open,\n  setOpen,\n  handleClose,\n  selectedSlot,\n  activeTab,\n  specialistList,\n  facilityList,\n  slotDuration,\n  getAvailableSlotsForAllDoctors,\n  getAllFacilitySchedules,\n  addEventToState,\n  slotInfo,\n  selecteddoctorData,\n}) => {\n  // let dateFormat = \"LLL\";\n  const theme = useTheme();\n  const dateFormat = \"MMMM Do YYYY, h:mm A\";\n  const [eventData, setEventData] = useState(null);\n  const { loading, setLoading } = useLoading();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedPatient, setSelectedPatient] = useState();\n\n  const dispatch = useDispatch();\n  // console.log(\"selectedData:\", selecteddoctorData);\n  const { searchPatientData } = useSelector((state) => state?.searchPatient);\n\n  const handleSearchChange = (e) => {\n    const inputValue = e.target.value;\n    dispatch(searchPatients({ searchKey: inputValue }));\n    setSearchQuery(inputValue);\n  };\n\n  const handleOptionSelect = (event, value) => {\n    setSelectedPatient(value);\n  };\n\n  const handleCreateEvent = async (e) => {\n    if (!eventData) {\n      console.error(\"eventData is not available\");\n      return;\n    }\n\n    const formattedDate = moment(selectedSlot.start).format(\"YYYY-MM-DD\");\n    let otherData = {\n      branchId: selecteddoctorData.branchId,\n      timeInterval: parseInt(slotDuration),\n      appointmentTime: moment(selectedSlot.start).format(\"HH:mm:ss\"),\n      appointmentEndTime: moment(selectedSlot.end).format(\"HH:mm:ss\"),\n      specialityId: selecteddoctorData.specialityId,\n      doctorId: selecteddoctorData.doctorId,\n    };\n\n    let payload = { ...eventData, ...otherData };\n\n    payload = {\n      branchId: payload.branchId,\n      specialityId: payload.specialityId,\n      doctorId: payload.doctorId,\n      appointmentDate: formattedDate,\n      appointmentTime: payload.appointmentTime,\n      timeInterval: payload.timeInterval,\n      scheduleType: payload.scheduleType,\n      mrdNo: payload.mrdNo,\n      notes: payload.notes,\n      additionalInfo: payload.additionalInfo,\n      insurarName: payload.insurarName,\n      numberOfSlots: payload.numberOfSlots,\n      notifyPatient: payload.notifyPatient,\n      patientName: payload.patientName,\n      dob: payload.dob,\n      age: payload.age,\n      gender: payload.gender,\n      phoneNo: payload.phoneNo,\n      email: payload.email,\n    };\n\n    try {\n      setLoading(true);\n      const response = await dispatch(bookAppointment(payload));\n      const msg =\n        response?.payload?.message ?? \"Appointment booked successfully\";\n\n      const newEvent = {\n        id: `appointment_${Date.now()}`,\n        title: \"\",\n        start: slotInfo.start,\n        end: slotInfo.end,\n        resourceId: slotInfo.resourceId,\n      };\n\n      addEventToState(newEvent);\n      console.log(\"New Event Added:\", newEvent);\n\n      // Optionally handle additional logic based on tabs\n      if (activeTab === \"users\") {\n        getAvailableSlotsForAllDoctors();\n      } else if (activeTab === \"rooms\") {\n        getAllFacilitySchedules();\n      }\n\n      showToast([msg], \"success\");\n      setOpen(false);\n    } catch (error) {\n      console.error(\"Booking Error:\", error);\n      showToast(\n        [error?.message ?? \"Something went wrong! Please try again.\"],\n        \"error\"\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" fullWidth>\n      <EMRLoader show={loading} />\n\n      <DialogContent dividers>\n        <h5>Book New Appointment</h5>\n        <Box paddingTop={\"1em\"}>\n          <b>Booking Date:</b> {moment(selectedSlot?.start).format(dateFormat)}{\" \"}\n          - {moment(selectedSlot?.end).format(dateFormat)}\n        </Box>\n\n        {typeof selectedSlot?.resourceId === \"string\" &&\n          !_.isNull(parseInt(selectedSlot.resourceId.split(\"_\")[1])) && (\n            <Box paddingY={\"1em\"}>\n              <b>{activeTab === \"users\" ? \"With Doctor:\" : \"For Facility:\"}</b>{\" \"}\n              {activeTab === \"users\"\n                ? specialistList.find(\n                    (specialist) =>\n                      specialist.doctorId ===\n                      parseInt(selectedSlot.resourceId.split(\"_\")[1])\n                  )?.doctorName\n                : facilityList.find(\n                    (facility) =>\n                      facility.facilityId ===\n                      parseInt(selectedSlot.resourceId.split(\"_\")[1])\n                  )?.doctorName}\n            </Box>\n          )}\n        <Box\n          padding={\"1em\"}\n          border={`1px solid ${theme.palette.divider}`}\n          mt={1}\n          borderRadius={2}\n        >\n          <Box pb={4} pt={1}>\n            <Autocomplete\n              freeSolo\n              options={searchPatientData?.data || []}\n              getOptionLabel={(option) => option.name || \"\"}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Search Patients\"\n                  variant=\"outlined\"\n                  value={searchQuery}\n                  onChange={handleSearchChange}\n                  placeholder=\"Type to search...\"\n                  size=\"small\"\n                  sx={{ width: 300 }}\n                />\n              )}\n              onChange={handleOptionSelect}\n            />\n            <div style={{ fontSize: \"0.7em\" }}>\n              For existing patients search patients with phone, name, dob, or\n              email for auto fill.\n            </div>\n          </Box>\n          <AppointmentTabContent\n            activeTab={activeTab}\n            setEventData={setEventData}\n            resourceId={selectedSlot.resourceId}\n            specialistList={specialistList}\n            setLoading={setLoading}\n            loading={loading}\n            selectedPatient={selectedPatient}\n          />\n        </Box>\n        <DialogActions>\n          <Button variant=\"outlined\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleCreateEvent}>\n            Create\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst AppointmentTabContent = ({ setEventData, selectedPatient }) => {\n  const [formData, setFormData] = useState({\n    scheduleType: \"\",\n    numberOfSlots: 1,\n    mrdNo: \"\",\n    patientName: \"\",\n    dob: \"\",\n    age: \"\",\n    gender: \"\",\n    phoneNo: \"\",\n    email: \"\",\n    notes: \"\",\n    additionalInfo: \"\",\n    insurarName: \"\",\n    notifyPatient: false,\n  });\n  const [showNotify, setShowNotify] = useState(false);\n  const ScheduleTypes = [\n    { type: \"Routine Check-Up\", id: \"1\" },\n    { type: \"Consultation\", id: \"2\" },\n    { type: \"Follow-Up Appointment\", id: \"3\" },\n    { type: \"Urgent Care\", id: \"4\" },\n    { type: \"Pediatric Appointment\", id: \"5\" },\n    { type: \"Chronic Disease Management\", id: \"6\" },\n    { type: \"Emergency Visit\", id: \"7\" },\n  ];\n\n  useEffect(() => {\n    setEventData(formData);\n  }, [formData]);\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: type === \"checkbox\" ? checked : value,\n    }));\n  };\n\n  useEffect(() => {\n    if (selectedPatient) {\n      let dob = selectedPatient.dob;\n      let patientName = selectedPatient.name;\n      dob = dob ? dob.split(\"T\")[0] : \"\";\n      setFormData({ ...formData, ...selectedPatient, dob, patientName });\n    }\n  }, [selectedPatient]);\n\n  return (\n    <>\n      <Box\n        display=\"grid\"\n        gridTemplateColumns=\"repeat(auto-fit, minmax(250px, 1fr))\"\n        gap={2}\n      >\n        <TextField\n          select\n          fullWidth\n          value={formData.scheduleType}\n          onChange={handleChange}\n          name=\"scheduleType\"\n          variant=\"outlined\"\n          size=\"small\"\n          label={\n            <>\n              Schedule Type <span style={{ color: \"red\" }}>*</span>\n            </>\n          }\n        >\n          <MenuItem value={\"-1\"}>Select...</MenuItem>\n          {ScheduleTypes.map((type) => (\n            <MenuItem key={type.type} value={type.type}>\n              {type.type}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        <TextField\n          select\n          fullWidth\n          value={formData.numberOfSlots}\n          onChange={(e) => handleChange(e, \"input\", true)}\n          name=\"numberOfSlots\"\n          variant=\"outlined\"\n          size=\"small\"\n          label=\"No of Slots\"\n        >\n          <MenuItem value={\"-1\"}>Select...</MenuItem>\n          {[1, 2, 3, 4, 5, 6, 7, 8].map((count) => (\n            <MenuItem key={count} value={count}>\n              {count}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        <TextField\n          fullWidth\n          name=\"mrdNo\"\n          value={formData.mrdNo}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          label=\"MRD No\"\n        />\n\n        <TextField\n          fullWidth\n          name=\"patientName\"\n          value={formData.patientName}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          label={\n            <>\n              Patient Name <span style={{ color: \"red\" }}>*</span>\n            </>\n          }\n        />\n\n        <TextField\n          fullWidth\n          name=\"dob\"\n          value={formData.dob}\n          type=\"date\"\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          label={\n            <>\n              {\" \"}\n              Date of Birth <span style={{ color: \"red\" }}>*</span>\n            </>\n          }\n          InputLabelProps={{ shrink: true }}\n        />\n\n        <TextField\n          fullWidth\n          name=\"age\"\n          value={formData.age}\n          type=\"number\"\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          label={\n            <>\n              {\" \"}\n              Age <span style={{ color: \"red\" }}>*</span>\n            </>\n          }\n        />\n\n        <TextField\n          fullWidth\n          name=\"gender\"\n          value={formData.gender}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          label={\n            <>\n              {\" \"}\n              Gender <span style={{ color: \"red\" }}>*</span>\n            </>\n          }\n        />\n\n        <TextField\n          fullWidth\n          name=\"phoneNo\"\n          value={formData.phoneNo}\n          type=\"tel\"\n          onChange={handleChange}\n          placeholder=\"Search or type...\"\n          variant=\"outlined\"\n          size=\"small\"\n          label={\n            <>\n              {\" \"}\n              Mobile <span style={{ color: \"red\" }}>*</span>\n            </>\n          }\n          // InputProps={{\n          //   startAdornment: (\n          //     <InputAdornment position=\"start\">+91</InputAdornment>\n          //   ),\n          // }}\n        />\n\n        <TextField\n          fullWidth\n          name=\"email\"\n          value={formData.email}\n          type=\"email\"\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          label={\n            <>\n              {\" \"}\n              Email <span style={{ color: \"red\" }}>*</span>\n            </>\n          }\n        />\n\n        <TextField\n          fullWidth\n          label=\"Insurer Name\"\n          name=\"insurarName\"\n          value={formData.insurarName}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n\n        <TextField\n          fullWidth\n          name=\"notes\"\n          value={formData.notes}\n          multiline\n          // rows={3}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          label=\"Notes\"\n        />\n\n        <TextField\n          fullWidth\n          name=\"additionalInfo\"\n          value={formData.additionalInfo}\n          multiline\n          // rows={3}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          label=\"Additional Info\"\n        />\n      </Box>\n      <Box display={\"flex\"} flexDirection={\"column\"}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={showNotify}\n              onChange={(e) => setShowNotify(e.target.checked)}\n              name=\"showNotify\"\n            />\n          }\n          label=\"Notify Patient\"\n        />\n        {showNotify && (\n          <FormControl component=\"fieldset\"  >\n            {/* <FormLabel component=\"legend\">Notification Method</FormLabel> */}\n            <RadioGroup\n              name=\"notifyPatient\"\n              value={formData.notifyPatient}\n              onChange={(e) => handleChange(e, \"checkbox\")}\n              row\n            >\n              <FormControlLabel value=\"sms\" control={<Radio />} label=\"SMS\" />\n              <FormControlLabel\n                value=\"whatsapp\"\n                control={<Radio />}\n                label=\"WhatsApp\"\n              />\n              <FormControlLabel value=\"mail\" control={<Radio />} label=\"Mail\" />\n            </RadioGroup>\n          </FormControl>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default NewEventModal;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const reSchedule = createAsyncThunk(\r\n  \"appointment/reSchedule\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.put(\r\n        API_ENDPOINTS.RE_SCHEDULE,\r\n        credentials\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst reScheduleSlice = createSlice({\r\n  name: \"reSchedule\",\r\n  initialState: {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(reSchedule.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(reSchedule.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.data = action.payload.data;\r\n      })\r\n      .addCase(reSchedule.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default reScheduleSlice.reducer;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport {\r\n  DatePicker,\r\n  TimePicker,\r\n  LocalizationProvider,\r\n} from \"@mui/x-date-pickers\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport dayjs from \"dayjs\";\r\nimport React, { useState } from \"react\";\r\nimport { useLoading } from \"../../../../components/global/loader/LoadingContext\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { reSchedule } from \"../../../../Redux/slice/appointement/reScheduleSlice\";\r\nimport { showToast } from \"../../../../components/global/Toast\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Reschedule = ({\r\n  handleClose,\r\n  appointmentId,\r\n  doctorId,\r\n  getAvailableSlotsForAllDoctors,\r\n}) => {\r\n  const { loading } = useLoading();\r\n  const [date, setDate] = useState(dayjs());\r\n  const [time, setTime] = useState(dayjs());\r\n  const dispatch = useDispatch();\r\n  const { data } = useSelector((state) => state.reschedule);\r\n\r\n  const status = data.statusCode;\r\n\r\n  console.log(\"doctor id:\", doctorId);\r\n\r\n  const handleChangeStartDate = (newValue) => {\r\n    setDate(newValue);\r\n  };\r\n\r\n  const handleChangeStartTime = (newValue) => {\r\n    setTime(newValue);\r\n  };\r\n\r\n  const handleReschedule = async () => {\r\n    try {\r\n      await dispatch(\r\n        reSchedule({\r\n          appointmentId: appointmentId,\r\n          appointmentDate: date.format(\"YYYY-MM-DD\"),\r\n          appointmentTime: time.format(\"HH:mm:ss\"),\r\n          doctorId: doctorId,\r\n        })\r\n      ).unwrap();\r\n\r\n      await getAvailableSlotsForAllDoctors();\r\n      handleClose();\r\n      showToast([\"Appointment Re scheduled successfully\"], \"success\");\r\n    } catch (error) {\r\n      showToast([error || \"Something went wrong\"], \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={true}\r\n      onClose={() => handleClose(false)}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      {loading && <Typography align=\"center\">Loading...</Typography>}\r\n\r\n      <DialogTitle>Reschedule Appointment</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n          <div style={{ display: \"flex\", gap: \"16px\", flexWrap: \"wrap\" }}>\r\n            <div>\r\n              <Typography variant=\"body1\" sx={{ marginBottom: 1 }}>\r\n                Appointment Date\r\n              </Typography>\r\n              <DatePicker\r\n                value={date}\r\n                onChange={handleChangeStartDate}\r\n                slotProps={{\r\n                  textField: {\r\n                    size: \"small\",\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Typography variant=\"body1\" sx={{ marginBottom: 1 }}>\r\n                Appointment Time\r\n              </Typography>\r\n              <TimePicker\r\n                value={time}\r\n                onChange={handleChangeStartTime}\r\n                ampm={false}\r\n                minutesStep={15}\r\n                slotProps={{\r\n                  textField: {\r\n                    size: \"small\",\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </LocalizationProvider>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" onClick={() => handleClose(false)}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleReschedule}>\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Reschedule;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const cancelSchedule = createAsyncThunk(\r\n  \"appointment/cancelSchedule\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        API_ENDPOINTS.CANCEL_SCHEDULE,\r\n        credentials\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst cancelScheduleSlice = createSlice({\r\n  name: \"cancelSchedule\",\r\n  initialState: {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(cancelSchedule.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(cancelSchedule.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.data = action.payload.data;\r\n      })\r\n      .addCase(cancelSchedule.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default cancelScheduleSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Box,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@mui/material\";\r\nimport { useLoading } from \"../../../../components/global/loader/LoadingContext\";\r\nimport EMRLoader from \"../../../../components/global/loader/EMRLoaderOverlay\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { cancelSchedule } from \"../../../../Redux/slice/appointement/cancelScheduleSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { showToast } from \"../../../../components/global/Toast\";\r\n\r\nconst CancelAlertModal = ({\r\n  handleClose,\r\n  appointmentId,\r\n  getAvailableSlotsForAllDoctors,\r\n}) => {\r\n  const { loading, setLoading } = useLoading();\r\n  const [displayReasonInput, setDisplayReasonInput] = useState(false);\r\n  const [reason, setReason] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const loginUser = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  const { data } = useSelector((state) => state.cancel);\r\n\r\n  const status = data.statusCode;\r\n\r\n  console.log(appointmentId, \"events\");\r\n\r\n  const onReasonSelect = (e) => {\r\n    const selectedValue = e.target.value;\r\n    setReason(selectedValue);\r\n    setDisplayReasonInput(selectedValue === \"Others\");\r\n  };\r\n\r\n  const handleReasonChange = (e) => {\r\n    setReason(e.target.value);\r\n  };\r\n\r\n  const handleCancel = async () => {\r\n    if (!reason) {\r\n      showToast([\"Please select a reason for cancellation\"], \"warning\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const resultAction = await dispatch(\r\n        cancelSchedule({\r\n          appointmentId: appointmentId,\r\n          cancellationReason: reason,\r\n          cancelledBy: loginUser?.data?.userName,\r\n        })\r\n      ).unwrap(); // Ensures we wait for the action to complete\r\n\r\n      await getAvailableSlotsForAllDoctors(); // ✅ Refresh slots after rescheduling\r\n\r\n      showToast([\"Appointment Cancelled successfully\"], \"success\");\r\n      handleClose();\r\n    } catch (error) {\r\n      showToast([error || \"Something went wrong\"], \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={true} onClose={handleClose} fullWidth maxWidth=\"sm\">\r\n      <EMRLoader show={loading} />\r\n      <DialogTitle>Cancel Appointment</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <Box paddingY={2} fontWeight=\"bold\">\r\n          Are you sure you want to cancel this appointment?\r\n        </Box>\r\n\r\n        <FormControl fullWidth margin=\"normal\" size=\"small\">\r\n          <InputLabel>Reason For Cancellation</InputLabel>\r\n          <Select\r\n            value={reason}\r\n            onChange={onReasonSelect}\r\n            label=\"Reason For Cancellation\"\r\n            // size=\"small\"\r\n          >\r\n            <MenuItem value=\"\">Select...</MenuItem>\r\n            {[\r\n              \"No Show\",\r\n              \"Change of Plans\",\r\n              \"Overlapping Appointments\",\r\n              \"Doctor Unavailability\",\r\n              \"Others\",\r\n            ].map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {displayReasonInput && (\r\n          <TextField\r\n            label=\"Reason\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            onChange={handleReasonChange}\r\n          />\r\n        )}\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={handleClose} variant=\"outlined\" color=\"secondary\">\r\n          Go Back\r\n        </Button>\r\n        <Button onClick={handleCancel} variant=\"contained\" color=\"error\">\r\n          Yes, Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CancelAlertModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Tooltip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { AppRegistration, Cancel, Schedule, Replay } from \"@mui/icons-material\";\r\nimport CancelAlertModal from \"./modal/Cancel\";\r\nimport Reschedule from \"./modal/Reschedule\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst EventDisplayComponent = ({\r\n  slotDuration = 15,\r\n  setEvents,\r\n  getAvailableSlotsForAllDoctors,\r\n}) => {\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const [rescheduleBooking, setRescheduleBooking] = useState(false);\r\n  const [cancelBooking, setCancelBooking] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const { doctorAvailableData } = useSelector(\r\n    (state) => state?.docAvailable || []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!doctorAvailableData?.data) {\r\n      console.warn(\"No doctorAvailableData found.\");\r\n      return;\r\n    }\r\n\r\n    const groupedBookings = {};\r\n\r\n    doctorAvailableData.data.forEach((doctor) => {\r\n      doctor?.bookedSlotDetails?.forEach((slot) => {\r\n        const timeKey = moment(slot.appointmentTime, \"HH:mm\").format(\"HH:mm\");\r\n\r\n        if (!groupedBookings[timeKey]) groupedBookings[timeKey] = [];\r\n        groupedBookings[timeKey].push({ ...slot, doctorId: doctor.doctorId });\r\n      });\r\n    });\r\n\r\n    const bookedEvents = Object.entries(groupedBookings).map(\r\n      ([timeKey, slots]) => {\r\n        const firstSlot = slots[0];\r\n\r\n        return {\r\n          title: (\r\n            <div style={{ display: \"flex\", alignItems: \"center\", gap: \"8px\" }}>\r\n              {slots.length === 1 ? (\r\n                <div className=\"d-flex flex-column\">\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <div style={avatarStyle}>\r\n                      {firstSlot.patientName?.charAt(0) || \"--\"}\r\n                    </div>\r\n                    <span style={{ fontWeight: \"bold\" }}>\r\n                      {firstSlot.patientName || \"--\"}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-1\">\r\n                    <i className=\"bi bi-telephone m-1\"></i>{\" \"}\r\n                    {firstSlot.phoneNo || \"--\"}\r\n                  </div>\r\n                  <Box>\r\n                    <Tooltip title=\"Reschedule\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          setRescheduleBooking(true);\r\n                          setSelectedSlot(firstSlot);\r\n                        }}\r\n                        color=\"primary\"\r\n                      >\r\n                        <Schedule />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Cancel\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          setCancelBooking(true);\r\n                          setSelectedSlot(firstSlot);\r\n                        }}\r\n                      >\r\n                        <Cancel />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip\r\n                      title={firstSlot.mrdNo ? \"Revisit\" : \"Registration\"}\r\n                    >\r\n                      <IconButton\r\n                        onClick={() =>\r\n                          navigate(\"/secure/registration\", {\r\n                            state: { bookedDetails: firstSlot },\r\n                          })\r\n                        }\r\n                      >\r\n                        {firstSlot.mrdNo ? <Replay /> : <AppRegistration />}\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </Box>\r\n                </div>\r\n              ) : (\r\n                slots.map((slot, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className=\"slot-avatar\"\r\n                    onClick={() => {\r\n                      setSelectedSlot(slot);\r\n                      setPopupOpen(true);\r\n                    }}\r\n                  >\r\n                    {slot.patientName?.charAt(0) || \"--\"}\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          ),\r\n          start: moment(timeKey, \"HH:mm\").toDate(),\r\n          end: moment(timeKey, \"HH:mm\").add(slotDuration, \"minutes\").toDate(),\r\n          resourceId: firstSlot.doctorId,\r\n          appointmentId: firstSlot.appointmentId,\r\n          className: \"booked-slot\", // Add a class for styling\r\n        };\r\n      }\r\n    );\r\n\r\n    if (typeof setEvents === \"function\") {\r\n      setEvents(bookedEvents); // Update events directly (no duplicates)\r\n    }\r\n  }, [doctorAvailableData, slotDuration]);\r\n\r\n  // console.log(\"selected events doctor:\", selectedSlot?.doctorId);\r\n\r\n  return (\r\n    <>\r\n      {/* Popup Modal */}\r\n      <Dialog\r\n        open={popupOpen}\r\n        onClose={() => setPopupOpen(false)}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Appointment Details</DialogTitle>\r\n        <DialogContent>\r\n          {selectedSlot && (\r\n            <>\r\n              <Box className=\"d-flex gap-2\" style={{ alignItems: \"center\" }}>\r\n                <div style={avatarStyle}>\r\n                  {selectedSlot.patientName?.charAt(0) || \"--\"}\r\n                </div>\r\n                <span style={{ fontWeight: \"bold\" }}>\r\n                  {selectedSlot.patientName || \"--\"}\r\n                </span>\r\n              </Box>\r\n              <div className=\"mt-2\">\r\n                <i className=\"bi bi-telephone m-1\"></i>{\" \"}\r\n                {selectedSlot.phoneNo || \"--\"}\r\n              </div>\r\n            </>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Tooltip title=\"Reschedule\">\r\n            <IconButton\r\n              onClick={() => {\r\n                setRescheduleBooking(true);\r\n                setPopupOpen(false);\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              <Schedule />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Cancel\">\r\n            <IconButton\r\n              onClick={() => {\r\n                setCancelBooking(true);\r\n                setPopupOpen(false);\r\n              }}\r\n            >\r\n              <Cancel />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Registration\">\r\n            <IconButton\r\n              onClick={() => {\r\n                navigate(\"/secure/registration\", {\r\n                  state: { bookedDetails: selectedSlot },\r\n                });\r\n                setPopupOpen(false);\r\n              }}\r\n            >\r\n              {selectedSlot?.mrdNo ? <Replay /> : <AppRegistration />}\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Button onClick={() => setPopupOpen(false)}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Cancel & Reschedule Modals */}\r\n      {cancelBooking && (\r\n        <CancelAlertModal\r\n          handleClose={() => setCancelBooking(false)}\r\n          appointmentId={selectedSlot?.appointmentId}\r\n          getAvailableSlotsForAllDoctors={getAvailableSlotsForAllDoctors}\r\n        />\r\n      )}\r\n      {rescheduleBooking && (\r\n        <Reschedule\r\n          handleClose={() => setRescheduleBooking(false)}\r\n          appointmentId={selectedSlot?.appointmentId}\r\n          doctorId={selectedSlot?.doctorId}\r\n          getAvailableSlotsForAllDoctors={getAvailableSlotsForAllDoctors}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst avatarStyle = {\r\n  width: \"30px\",\r\n  height: \"30px\",\r\n  borderRadius: \"50%\",\r\n  backgroundColor: \"rgb(93, 104, 104)\",\r\n  color: \"white\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  fontSize: \"14px\",\r\n  fontWeight: \"bold\",\r\n  textTransform: \"uppercase\",\r\n  cursor: \"pointer\",\r\n};\r\n\r\nexport default EventDisplayComponent;\r\n","import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport { doctorAvailability } from \"../../../Redux/slice/appointement/doctorAvailableSlotSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { showToast } from \"../../../components/global/Toast\";\r\nimport NewEventModal from \"../component/NewEvent\";\r\nimport EMRLoader from \"../../../components/global/loader/EMRLoaderOverlay\";\r\nimport Reschedule from \"./modal/Reschedule\";\r\nimport CancelAlertModal from \"./modal/Cancel\";\r\nimport EventDisplayComponent from \"./Events\";\r\n\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\n\r\nconst CalendarView = ({\r\n  selectedDate,\r\n  setSelectedDate,\r\n  filteredDoctors,\r\n  slotDuration,\r\n  activeTab,\r\n}) => {\r\n  const localizer = momentLocalizer(moment);\r\n  const dispatch = useDispatch();\r\n  const [doctorAvailabilities, setDoctorAvailabilities] = useState([]);\r\n  const [usersResources, setUsersResources] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const [events, setEvents] = useState([]);\r\n  const [selectedDoctorAvailability, setSelectedDoctorAvailability] =\r\n    useState(null);\r\n  const [rescheduleBooking, setRescheduleBooking] = useState(false);\r\n  const [cancelBooking, setCancelBooking] = useState(false);\r\n\r\n  const addEventToState = (newEvent) => {\r\n    setEvents([...events, newEvent]);\r\n  };\r\n\r\n  const { doctorAvailableData, loading } = useSelector(\r\n    (state) => state?.docAvailable || []\r\n  );\r\n  useEffect(() => {\r\n    setDoctorAvailabilities(doctorAvailableData?.data);\r\n  }, [doctorAvailableData]);\r\n  const formatTime = (date) => moment(date).format(\"HH:mm\");\r\n\r\n  const isSlotAvailable = (slotTime, resourceId) => {\r\n    if (!doctorAvailabilities || !Array.isArray(doctorAvailabilities))\r\n      return false;\r\n\r\n    const availability = doctorAvailabilities.find(\r\n      (doctor) => doctor.doctorId === Number(resourceId)\r\n    )?.availableSlots;\r\n\r\n    return availability?.includes(slotTime);\r\n  };\r\n\r\n  const isSlotBooked = (slotTime, resourceId) => {\r\n    if (!doctorAvailabilities || !Array.isArray(doctorAvailabilities))\r\n      return false;\r\n\r\n    const booked = doctorAvailabilities.find(\r\n      (doctor) => doctor.doctorId === Number(resourceId)\r\n    )?.bookedSlots;\r\n\r\n    return booked?.includes(slotTime);\r\n  };\r\n\r\n  const customSlotPropGetter = useMemo(() => {\r\n    return (date, resourceId) => {\r\n      const timeString = formatTime(date);\r\n      const isAvailable = isSlotAvailable(timeString, resourceId);\r\n      const isBooked = isSlotBooked(timeString, resourceId);\r\n\r\n      let className = \"\";\r\n      let bgColor = \"rgb(197, 197, 197)\"; // Default Unavailable Color\r\n\r\n      if (isBooked) {\r\n        className = \"booked-slot\";\r\n        bgColor = \"rgb(138, 216, 190)\"; // Booked slot color\r\n      } else if (isAvailable) {\r\n        className = \"available-slot\";\r\n        bgColor = \"rgb(158, 213, 223)\"; // Available slot color\r\n      }\r\n\r\n      return {\r\n        className,\r\n        style: {\r\n          backgroundColor: bgColor,\r\n          borderRadius: \"3px\",\r\n        },\r\n      };\r\n    };\r\n  }, [doctorAvailabilities]);\r\n\r\n  const getAvailableSlotsForAllDoctors = useCallback(() => {\r\n    if (selectedDate) {\r\n      const formattedDate = moment(selectedDate).format(\"YYYY-MM-DD\");\r\n      const interval =\r\n        slotDuration === \"60\"\r\n          ? \"SIXTY_MINUTES\"\r\n          : slotDuration === \"30\"\r\n          ? \"THIRTY_MINUTES\"\r\n          : \"FIFTEEN_MINUTES\";\r\n\r\n      dispatch(doctorAvailability({ interval, date: formattedDate }));\r\n    }\r\n  }, [dispatch, selectedDate, slotDuration]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Fetching available slots...\");\r\n    getAvailableSlotsForAllDoctors();\r\n  }, [getAvailableSlotsForAllDoctors]);\r\n\r\n  const setCalendarResources = useCallback(\r\n    (resourcesList, activeTab = \"users\") => {\r\n      if (activeTab === \"users\") {\r\n        setUsersResources(\r\n          resourcesList.map((doctor) => ({\r\n            id: doctor.doctorId,\r\n            title: doctor.doctorName,\r\n          }))\r\n        );\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (filteredDoctors) {\r\n      setCalendarResources(filteredDoctors, activeTab);\r\n    }\r\n  }, [filteredDoctors, activeTab, setCalendarResources]);\r\n\r\n  const onSelectSlot = (slotInfo) => {\r\n    const selectedTime = moment(slotInfo.start);\r\n    if (selectedTime.isBefore(moment(), \"minute\")) {\r\n      showToast([\"You cannot select a past time slot.\"], \"error\");\r\n      return;\r\n    }\r\n\r\n    if (\r\n      isSlotAvailable(formatTime(slotInfo.start), slotInfo.resourceId) ||\r\n      isSlotBooked(formatTime(slotInfo.start), slotInfo.resourceId)\r\n    ) {\r\n      setSelectedSlot(slotInfo);\r\n      setSelectedDoctorAvailability(\r\n        doctorAvailabilities.find(\r\n          (doctor) => doctor.doctorId === parseInt(slotInfo.resourceId)\r\n        )\r\n      );\r\n      setOpen(true);\r\n    } else {\r\n      showToast([\"The selected time slot is not available.\"], \"error\");\r\n    }\r\n  };\r\n\r\n  const eventStyleGetter = () => ({\r\n    style: {\r\n      backgroundColor: \"inherit\",\r\n      color: \"black\",\r\n      border: \"none\",\r\n      width: \"192px\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  });\r\n\r\n  console.log(\"selectedDoctorAvailability\", selectedDoctorAvailability);\r\n\r\n  return (\r\n    <Box width=\"100%\" overflow=\"auto\">\r\n      <EMRLoader show={loading} />\r\n      <EventDisplayComponent\r\n        slotDuration={slotDuration}\r\n        setEvents={setEvents}\r\n        getAvailableSlotsForAllDoctors={getAvailableSlotsForAllDoctors}\r\n      />\r\n      <DnDCalendar\r\n        key={events.length}\r\n        date={selectedDate}\r\n        selectable\r\n        localizer={localizer}\r\n        events={events}\r\n        resources={usersResources}\r\n        resourceIdAccessor=\"id\"\r\n        resourceTitleAccessor=\"title\"\r\n        onNavigate={setSelectedDate}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: \"80vh\", width: \"100%\" }}\r\n        step={slotDuration}\r\n        timeslots={1}\r\n        views={[\"day\", \"agenda\"]}\r\n        defaultView=\"day\"\r\n        onSelectSlot={onSelectSlot}\r\n        toolbar\r\n        eventPropGetter={eventStyleGetter}\r\n        slotPropGetter={customSlotPropGetter}\r\n        tooltipAccessor={() => \"\"}\r\n        scrollToTime={new Date(1970, 1, 1, 9, 0, 0)}\r\n      />\r\n      {open && (\r\n        <NewEventModal\r\n          open={open}\r\n          setOpen={setOpen}\r\n          selectedSlot={selectedSlot}\r\n          handleClose={() => setOpen(false)}\r\n          activeTab={activeTab}\r\n          slotDuration={slotDuration}\r\n          getAvailableSlotsForAllDoctors={getAvailableSlotsForAllDoctors}\r\n          setSelectedSlot={setSelectedSlot}\r\n          slotInfo={selectedSlot}\r\n          selecteddoctorData={selectedDoctorAvailability}\r\n          addEventToState={addEventToState}\r\n        />\r\n      )}\r\n      {/* {rescheduleBooking && (\r\n        <Reschedule\r\n          handleClose={() => setRescheduleBooking(false)}\r\n          appointmentId={selectedSlot.appointmentId}\r\n          // doctorId = \"\"\r\n        />\r\n      )}\r\n      {cancelBooking && (\r\n        <CancelAlertModal\r\n          handleClose={() => setCancelBooking(false)}\r\n          appointmentId={selectedSlot.appointmentId}\r\n          getAvailableSlotsForAllDoctors={getAvailableSlotsForAllDoctors}\r\n        />\r\n      )} */}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CalendarView;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const allDoctors = createAsyncThunk(\r\n  \"doctor/allDoctors\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(\r\n        API_ENDPOINTS.All_DOCTORS,\r\n        credentials\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst allDoctorsSlice = createSlice({\r\n  name: \"allDoctors\",\r\n  initialState: {\r\n    doctorData: [],\r\n    docloading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(allDoctors.pending, (state) => {\r\n        state.docloading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(allDoctors.fulfilled, (state, action) => {\r\n        state.docloading = false;\r\n        state.doctorData = action.payload.data;\r\n      })\r\n      .addCase(allDoctors.rejected, (state, action) => {\r\n        state.docloading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default allDoctorsSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const searchDoctors = createAsyncThunk(\r\n  \"doctor/searchDoctors\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.SEARCH_DOCTOR, {\r\n        params: credentials,\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst searchDoctorsSlice = createSlice({\r\n  name: \"searchDoctors\",\r\n  initialState: {\r\n    searchdoctorData: [],\r\n    searchDocloading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(searchDoctors.pending, (state) => {\r\n        state.searchDocloading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(searchDoctors.fulfilled, (state, action) => {\r\n        state.searchDocloading = false;\r\n        state.searchdoctorData = action.payload.data;\r\n      })\r\n      .addCase(searchDoctors.rejected, (state, action) => {\r\n        state.searchDocloading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default searchDoctorsSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, Checkbox, FormControlLabel, Input, styled } from \"@mui/material\";\r\nimport { Select, MenuItem, InputLabel, FormControl } from \"@mui/material\";\r\nimport moment from \"moment\";\r\nimport CalendarView from \"./CalendarView\";\r\nimport EMRtabs from \"../../../components/global/EMRtabs\";\r\nimport { ChevronLeft, ChevronRight } from \"@mui/icons-material\";\r\nimport { DateCalendar } from \"@mui/x-date-pickers\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { allDoctors } from \"../../../Redux/slice/appointement/allDoctorsSlice\";\r\nimport { searchDoctors } from \"../../../Redux/slice/appointement/searchDoctorSilce\";\r\nimport EMRLoader from \"../../../components/global/loader/EMRLoaderOverlay\";\r\nimport { debounce } from \"lodash\"; // Import debounce\r\nimport FormInput from \"../../../components/FormFields/FormInput\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const [showFilter, setShowFilter] = useState(true);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [activeTab, setActiveTab] = useState(\"users\");\r\n  const [selectedDoctors, setSelectedDoctors] = useState({});\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selectedSpeciality, setSelectedSpeciality] = useState(\"\");\r\n\r\n  const { doctorData, docloading } = useSelector((state) => state?.allDoctor);\r\n  const allDoctorData = doctorData?.data || [];\r\n\r\n  const { searchdoctorData, searchDocloading } = useSelector(\r\n    (state) => state?.searchDoctor\r\n  );\r\n  const searchDoctorResults = searchdoctorData?.data || [];\r\n\r\n  const loading = docloading || searchDocloading;\r\n\r\n  useEffect(() => {\r\n    dispatch(allDoctors());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (allDoctorData?.length > 0) {\r\n      const initialSelection = allDoctorData.reduce((acc, doctor) => {\r\n        const doctorKey = `${doctor.doctorId}-${doctor.specialityId}`;\r\n        acc[doctorKey] = true;\r\n        return acc;\r\n      }, {});\r\n      setSelectedDoctors(initialSelection);\r\n    }\r\n  }, [allDoctorData]);\r\n\r\n  const toggleFilter = () => setShowFilter(!showFilter);\r\n\r\n  const groupDoctorsBySpeciality = (doctors) => {\r\n    const grouped = {};\r\n    doctors.forEach((doctor) => {\r\n      if (!grouped[doctor.specialityId]) {\r\n        grouped[doctor.specialityId] = [];\r\n      }\r\n      if (\r\n        !grouped[doctor.specialityId].find(\r\n          (d) => d.doctorId === doctor.doctorId\r\n        )\r\n      ) {\r\n        grouped[doctor.specialityId].push(doctor);\r\n      }\r\n    });\r\n    return grouped;\r\n  };\r\n\r\n  const displayedDoctors = searchQuery ? searchDoctorResults : allDoctorData;\r\n  // const groupedDoctors = groupDoctorsBySpeciality(displayedDoctors);\r\n\r\n  // const handleDoctorSelect = (doctorId, specialityId) => {\r\n  //   setSelectedDoctors((prev) => {\r\n  //     const newSelection = { ...prev };\r\n  //     const doctorKey = `${doctorId}-${specialityId}`;\r\n\r\n  //     if (newSelection[doctorKey]) {\r\n  //       delete newSelection[doctorKey];\r\n  //     } else {\r\n  //       newSelection[doctorKey] = true;\r\n  //     }\r\n  //     return newSelection;\r\n  //   });\r\n  // };\r\n\r\n  const handleSpecialityChange = (e) => {\r\n    const selectedValue = e?.target?.value || \"\";\r\n    console.log(\"Selected Speciality ID:\", selectedValue); // Debugging\r\n    setSelectedSpeciality(selectedValue);\r\n  };\r\n\r\n  const filteredDoctors = selectedSpeciality\r\n    ? allDoctorData.filter((doc) => doc.specialityId === selectedSpeciality)\r\n    : [];\r\n\r\n  console.log(\"filteredDoctors\", filteredDoctors);\r\n  // Debounced search function\r\n  // const debouncedSearch = debounce(async (input) => {\r\n  //   setSearchQuery(input);\r\n  //   if (activeTab === \"users\") {\r\n  //     await dispatch(searchDoctors({ searchKey: input }));\r\n  //   }\r\n  // }, 500); // Adjust the debounce delay as needed (500ms here)\r\n\r\n  // const handleSearch = (e) => {\r\n  //   const input = e.target.value;\r\n  //   debouncedSearch(input); // Call the debounced search function\r\n  // };\r\n\r\n  return (\r\n    <Box display=\"flex\"  width={\"100%\"}>\r\n      <EMRLoader show={loading} />\r\n      <div>\r\n        <div>\r\n          <button\r\n            onClick={toggleFilter}\r\n            style={{\r\n              backgroundColor: \"#F0F8F8\",\r\n              color: \"#333\",\r\n              border: \"1px solid #ccc\",\r\n              borderRadius: \"8px\",\r\n              padding: \"5px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              gap: \"10px\",\r\n              boxShadow: \"0px 2px 5px rgba(0, 0, 0, 0.1)\",\r\n              cursor: \"pointer\",\r\n              fontSize: \"12px\",\r\n              transition:\r\n                \"background-color 0.3s ease, box-shadow 0.3s ease, transform 0.3s ease\",\r\n            }}\r\n          >\r\n            {showFilter ? (\r\n              <div\r\n                style={{ display: \"flex\", gap: \"10px\", alignItems: \"center\" }}\r\n              >\r\n                <ChevronLeft />\r\n                <span style={{ fontWeight: \"500\" }}>Filter Calendar</span>\r\n              </div>\r\n            ) : (\r\n              <ChevronRight />\r\n            )}\r\n          </button>\r\n        </div>\r\n        {showFilter && (\r\n          <Box\r\n            width=\"280px\"\r\n            overflow=\"auto\"\r\n            maxHeight=\"calc(100vh - 80px)\"\r\n            borderRight=\"1px solid #ccc\"\r\n            padding=\"5px\"\r\n          >\r\n            <CustomDateCalendar\r\n              value={moment(selectedDate)}\r\n              onChange={(newValue) => setSelectedDate(newValue.toDate())}\r\n            />\r\n            <Box mt={2}>\r\n              <EMRtabs\r\n                tabsList={[\r\n                  { name: \"Doctors\", value: \"users\" },\r\n                  { name: \"Rooms\", value: \"rooms\" },\r\n                ]}\r\n                defaultTab=\"users\"\r\n                setActiveTab={setActiveTab}\r\n              />\r\n            </Box>\r\n\r\n            {activeTab === \"users\" && (\r\n              <Box display=\"flex\" flexDirection=\"column\" mt={1} >\r\n                <FormControl fullWidth size=\"small\" >\r\n                  <InputLabel>Select Speciality</InputLabel>\r\n                  <Select\r\n                    value={selectedSpeciality}\r\n                    onChange={handleSpecialityChange}\r\n                    label=\"Select Speciality\"\r\n                  >\r\n                    <MenuItem value=\"\">Select</MenuItem>\r\n                    {Array.from(\r\n                      new Map(\r\n                        allDoctorData.map((doc) => [\r\n                          doc.specialityId,\r\n                          {\r\n                            label: doc.specialityName || \"Unknown\",\r\n                            value: doc.specialityId,\r\n                          },\r\n                        ])\r\n                      ).values()\r\n                    ).map((speciality) => (\r\n                      <MenuItem key={speciality.value} value={speciality.value}>\r\n                        {speciality.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n                {/* {Object.entries(groupDoctorsBySpeciality(displayedDoctors)).map(\r\n                  ([specialityId, doctors]) => (\r\n                    <Box key={specialityId} p={1}>\r\n                      <Box fontWeight=\"bold\" mb={1}>\r\n                        {doctors[0]?.specialityName || \"Speciality\"}\r\n                      </Box>\r\n                      {doctors.map((doctor) => (\r\n                        <Box key={doctor.doctorId} pl={2}>\r\n                          {doctor.doctorName}\r\n                        </Box>\r\n                      ))}\r\n                      <hr style={{ margin: \"0.5em 0\" }} />\r\n                    </Box>\r\n                  )\r\n                )}\r\n                {Object.keys(groupDoctorsBySpeciality(displayedDoctors))\r\n                  .length === 0 && (\r\n                  <Box textAlign=\"center\" mt={2}>\r\n                    No doctors found\r\n                  </Box>\r\n                )} */}\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        )}\r\n      </div>\r\n      <Box flex={1} sx={{ ml: \"10px\" }}>\r\n        <Box flex={1}>\r\n          <CalendarView\r\n            selectedDate={selectedDate}\r\n            setSelectedDate={setSelectedDate}\r\n            filteredDoctors={filteredDoctors}\r\n            slotDuration={15}\r\n            allDoctorData={searchQuery ? searchDoctorResults : allDoctorData}\r\n            activeTab={activeTab}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nconst CustomDateCalendar = styled(DateCalendar)(() => ({\r\n  backgroundColor: \"#fff\",\r\n  maxHeight: \"320px\",\r\n  width: \"250px\",\r\n  transformOrigin: \"top left\",\r\n  \"& .MuiDateCalendar-days\": {\r\n    fontSize: \"12px\",\r\n  },\r\n  \"& .MuiPickersCalendarHeader-root\": {\r\n    backgroundColor: \"rgb(172, 233, 233)\",\r\n    fontSize: \"14px\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport Filter from \"./Filter\";\r\n\r\nconst Appointment = () => {\r\n  return (\r\n    <div>\r\n      <Filter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n","import React, { useState } from \"react\";\r\nimport ScreenWrapper from \"../../components/global/ScreenWrapper\";\r\nimport { Box } from \"@mui/material\";\r\nimport EMRtabs from \"../../components/global/EMRtabs\";\r\nimport Appointment from \"./bookSlot/Appointment\";\r\nimport ScheduleList from \"../dashboard/components/ScheduleList\";\r\nimport PatientRecall from \"../dashboard/components/PatientRecall\";\r\nimport PatientVaccinationSchedule from \"../dashboard/components/PatientVaccinationSchedules\";\r\n\r\nconst AllAppointment = () => {\r\n  const [activeTab, setActiveTab] = useState(\"doctor_appointment\");\r\n\r\n  const tabsList = [\r\n    { name: \"Doctor Appointment\", value: \"doctor_appointment\", icon: \"\" },\r\n    { name: \"Schedule List\", value: \"schedule_list\", icon: \"\" },\r\n    {\r\n      name: \"Facility Schedule List\",\r\n      value: \"facility_schedule_list\",\r\n      icon: \"\",\r\n    },\r\n    { name: \"Patient Recall\", value: \"patient_recall\", icon: \"\" },\r\n    {\r\n      name: \"Patient Vaccination Schedules\",\r\n      value: \"patient_vaccination_schedules\",\r\n      icon: \"\",\r\n    },\r\n\r\n    //   { name: \"Revisit\", value: \"revist_registration\", icon: \"\" },\r\n    //   {\r\n    //     name: \"Emergency Registration\",\r\n    //     value: \"emergency_registration\",\r\n    //     icon: \"\",\r\n    //   },\r\n\r\n    //   { name: \"Patient Recall\", value: \"patient_recall\", icon: EventRepeatIcon },\r\n    //   {\r\n    //     name: \"Patient Vaccination Schedules\",\r\n    //     value: \"patient_vaccination_schedules\",\r\n    //     icon: VaccinesIcon,\r\n    //   },\r\n  ];\r\n  return (\r\n    <Box style={{ width: \"100%\" }} className=\"p-3\">\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <EMRtabs\r\n          tabsList={tabsList}\r\n          defaultTab={\"doctor_appointment\"}\r\n          setActiveTab={setActiveTab}\r\n        />\r\n      </Box>\r\n      <Box width={\"100%\"}>\r\n        {activeTab === \"doctor_appointment\" && <Appointment />}\r\n        {activeTab === \"schedule_list\" && <ScheduleList />}\r\n        {activeTab === \"patient_recall\" && <PatientRecall />}\r\n        {activeTab === \"patient_vaccination_schedules\" && (\r\n          <PatientVaccinationSchedule />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AllAppointment;\r\n","import React, { useState } from \"react\";\r\nimport FormInput from \"../../../components/FormFields/FormInput\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst AddOrg = () => {\r\n  const [showBranch, setShowBranch] = useState(false);\r\n  return (\r\n    <div>\r\n      {!showBranch ? (\r\n        <div className=\"form-details-section \">\r\n          <FormInput label={\" Hospital Name\"} />\r\n          <FormInput label={\"Address\"} />\r\n          <FormInput label={\"Zone(district)\"} />\r\n          <FormInput label={\"City\"} />\r\n          <FormInput label={\"Postal Code\"} />\r\n          <div>\r\n            <Button color=\"primary\" onClick={() => setShowBranch(true)}>\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"form-details-section mt-4\">\r\n          <FormInput label={\" No. of Branches\"} />\r\n          <FormInput label={\"Logo\"} type=\"file\" />\r\n          <FormInput label={\"TRN No\"} />\r\n          <FormInput label={\"Location\"} />\r\n          <FormInput label={\"DHA License No\"} />\r\n          <FormInput label={\"Address\"} />\r\n          <FormInput label={\"DHA User Name\"} />\r\n          <FormInput label={\"Password\"} />\r\n          <FormInput label={\"Email ID\"} />\r\n          <FormInput label={\"Mobile No\"} />\r\n          <FormInput label={\"Website Link\"} />\r\n          <div>\r\n            <Button color=\"primary\">Create</Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddOrg;\r\n","import { Button, Dialog, DialogContent } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport FormInput from \"../../../components/FormFields/FormInput\";\r\n\r\nexport const EditOrgName = ({ onClose }) => {\r\n  return (\r\n    <Dialog open={true} onClose={onClose} fullWidth>\r\n      <DialogContent>\r\n        <h6>Edit Hospital</h6>\r\n        <div>\r\n          <FormInput label={\" Hospital Name\"} />\r\n          <FormInput label={\"Address\"} />\r\n          <FormInput label={\"Zone(district)\"} />\r\n          <FormInput label={\"City\"} />\r\n          <FormInput label={\"Postal Code\"} />\r\n          <div>\r\n            <Button>Update</Button>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport const EditOrgBranch = ({ onClose }) => {\r\n  return (\r\n    <Dialog open={true} onClose={onClose} fullWidth>\r\n      <DialogContent>\r\n        <h6>Edit Branch</h6>\r\n        <div className=\"form-container\">\r\n          <FormInput label={\" No. of Branches\"} />\r\n          <FormInput label={\"Logo\"} type=\"file\" />\r\n          <FormInput label={\"TRN No\"} />\r\n          <FormInput label={\"Location\"} />\r\n          <FormInput label={\"DHA License No\"} />\r\n          <FormInput label={\"Address\"} />\r\n          <FormInput label={\"DHA User Name\"} />\r\n          <FormInput label={\"Password\"} />\r\n          <FormInput label={\"Email ID\"} />\r\n          <FormInput label={\"Mobile No\"} />\r\n          <FormInput label={\"Website Link\"} />\r\n          <div>\r\n            <Button color=\"primary\">Update</Button>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddOrg from \"./AddOrg\";\r\nimport { Table } from \"antd\";\r\nimport { DeleteOutline, EditOutlined } from \"@mui/icons-material\";\r\nimport { EditOrgBranch, EditOrgName } from \"./EditOrg\";\r\nimport { IconButton } from \"@mui/material\";\r\n\r\nconst OrgSetup = () => {\r\n  const [transfer, setTransfer] = useState(false);\r\n  const [hospitalNameEdit, setHospitalNameEdit] = useState();\r\n  const [hospitalBranchEdit, setHospitalBranchEdit] = useState();\r\n\r\n  const handleTransfer = () => {\r\n    setTransfer(true);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setHospitalBranchEdit(true);\r\n  };\r\n  const handleDelete = () => {\r\n    // setDeleteModal(true);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"S No\",\r\n      dataIndex: \"sNo\",\r\n      key: \"sNo\",\r\n    },\r\n    {\r\n      title: \"Branch Name\",\r\n      dataIndex: \"BranchName\",\r\n      key: \"BranchName\",\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      dataIndex: \"address\",\r\n      key: \"address\",\r\n    },\r\n    {\r\n      title: \"Speciality/Department\",\r\n      dataIndex: \"SpecialityDepartment\",\r\n      key: \"SpecialityDepartment\",\r\n      render: (text, record) => (\r\n        <span\r\n          style={{ color: \"blue\", fontWeight: \"bold\", cursor: \"pointer\" }}\r\n          onClick={() => handleTransfer(record)}\r\n        >\r\n          {text}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Options\",\r\n      key: \"actions\",\r\n      render: (_, record) => (\r\n        <div>\r\n          <EditOutlined\r\n            style={{ color: \"blue\", cursor: \"pointer\" }}\r\n            onClick={() => handleEdit()}\r\n          />\r\n          <DeleteOutline\r\n            style={{ color: \"red\", cursor: \"pointer\", marginLeft: \"10px\" }}\r\n            onClick={() => handleDelete()}\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const data = [\r\n    {\r\n      key: \"1\",\r\n      sNo: 1,\r\n      BranchName: \"ABC Hospital-Thanjavur\",\r\n      address: \"123 Street, NY\",\r\n      SpecialityDepartment: \"Add\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      sNo: 2,\r\n      BranchName: \"ABC Hospital-Kumbakonam\",\r\n      address: \"456 Avenue, LA\",\r\n      SpecialityDepartment: \"\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <AddOrg />\r\n      <div className=\"table-container\">\r\n        <h6>\r\n          ABC Hospital{\" \"}\r\n          <span>\r\n            <IconButton size=\"small\" onClick={() => setHospitalNameEdit(true)}>\r\n              <EditOutlined />\r\n            </IconButton>\r\n          </span>\r\n        </h6>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={data}\r\n          size=\"middle\"\r\n          className=\"m-4\"\r\n        />\r\n      </div>\r\n      {hospitalNameEdit && (\r\n        <EditOrgName onClose={() => setHospitalNameEdit(false)} />\r\n      )}\r\n      {hospitalBranchEdit && (\r\n        <EditOrgBranch onClose={() => setHospitalBranchEdit(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrgSetup;\r\n","import React from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport OrgSetup from \"./Org/OrgSetup\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst Master = () => {\r\n  return (\r\n    <div className=\"w-100 m-3\" style={{ overflow: \"auto\" }}>\r\n      <Tabs defaultActiveKey=\"1\" type=\"card\">\r\n        <TabPane tab=\"Org\" key=\"1\">\r\n          <OrgSetup />\r\n        </TabPane>\r\n        <TabPane tab=\"Speciality\" key=\"2\">\r\n          {/* <Speciality /> */}\r\n        </TabPane>\r\n        <TabPane tab=\"User Setup\" key=\"3\">\r\n          {/* <Usersetup /> */}\r\n        </TabPane>\r\n        <TabPane tab=\"InPatient\" key=\"4\">\r\n          {/* <InPatient /> */}\r\n        </TabPane>\r\n        <TabPane tab=\"Appointment\" key=\"5\">\r\n          {/* <Appointment /> */}\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Master;\r\n","import React, { Suspense } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport Registration from \"../../../secure/registration/Registration\";\nimport DoctorDashboard from \"../../../secure/doctorNurseDashboard/doctorDashboard\";\nimport Privileges from \"../../../secure/privileges/Privileges\";\nimport Insurance from \"../../../secure/insurance/Insurance\";\nimport Loading from \"../../../components/FormFields/Loading\";\nimport AllAppointment from \"../../../secure/appointment/AllAppointment\";\nimport Master from \"../../../secure/masterSetup/master\";\nimport Landing from \"../../../components/other/Landing\";\n\nconst BillingLandingModule = React.lazy(() =>\n  import(\"emr_billing/BillingLanding\")\n);\nconst BillingPageModule = React.lazy(() => import(\"emr_billing/BillingPage\"));\nconst IPEmrModule = React.lazy(() => import(\"emr_ip/IpHeaderTab\"));\nconst BedAndWardModule = React.lazy(() =>\n  import(\"emr_bedAndWard/BedAndWardHeaderTab\")\n);\nconst WardRoomDetail = React.lazy(() =>\n  import(\"emr_bedAndWard/WardRoomDetail\")\n);\nconst DoctorEmrModule = React.lazy(() => import(\"emr_doctor/DoctorEmr\"));\nconst IPDetails = React.lazy(() => import(\"emr_doctor/IPDetails\"));\nconst OPDetails = React.lazy(() => import(\"emr_doctor/OPDetails\"));\n// const LabMdl = React.lazy(() => import(\"emr_lab/LabHeaderTab\"));\nconst NurseModule = React.lazy(() => import(\"emr_nurse/Dashboard\"));\nconst NursePage = React.lazy(() => import(\"emr_nurse/Nurse\"));\n\nconst BillingLanding = () => {\n  const navigate = useNavigate();\n  return (\n    <Suspense fallback={<Loading />}>\n      <BillingLandingModule navigate={navigate} />\n    </Suspense>\n  );\n};\nconst BillingPage = () => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <BillingPageModule />\n    </Suspense>\n  );\n};\nconst IPEmr = () => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <IPEmrModule />\n    </Suspense>\n  );\n};\nconst BedAndWard = () => {\n  const navigate = useNavigate();\n  return (\n    <Suspense fallback={<Loading />}>\n      <BedAndWardModule navigate={navigate} />\n    </Suspense>\n  );\n};\nconst RoomDetail = () => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <WardRoomDetail />\n    </Suspense>\n  );\n};\nconst DoctorEmrMdl = () => {\n  const navigate = useNavigate();\n  return (\n    <Suspense fallback={<Loading />}>\n      <DoctorEmrModule navigate={navigate} />\n    </Suspense>\n  );\n};\nconst IpDetailEmrMdl = () => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <IPDetails />\n    </Suspense>\n  );\n};\nconst OpDetailEmrMdl = () => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <OPDetails />\n    </Suspense>\n  );\n};\n\n// const LabModule = () => {\n//   return (\n//     <Suspense fallback={<Loading />}>\n//       <LabMdl />\n//     </Suspense>\n//   );\n// };\n\nconst NurseMdl = () => {\n  const navigate = useNavigate();\n  return (\n    <Suspense fallback={<Loading />}>\n      <NurseModule navigate={navigate} />\n    </Suspense>\n  );\n};\nconst NursePages = () => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <NursePage />\n    </Suspense>\n  );\n};\n\nexport const SECURE_ROUTES = [\n  {\n    path: \"/secure\",\n    exact: true,\n    secure: true,\n    component: () => <Navigate to=\"/secure/landing\" />,\n  },\n  {\n    path: `/secure/landing`,\n    exact: true,\n    secure: true,\n    component: Landing,\n  },\n  // {\n  //   path: `/secure/dashboard`,\n  //   exact: true,\n  //   secure: true,\n  //   component: Dashboard,\n  // },\n  {\n    path: `/secure/appointment`,\n    exact: true,\n    secure: true,\n    component: AllAppointment,\n  },\n  {\n    path: `/secure/registration`,\n    exact: true,\n    secure: true,\n    component: Registration,\n  },\n  {\n    path: `/secure/billing/list`,\n    exact: true,\n    secure: true,\n    component: BillingLanding,\n  },\n  {\n    path: `/secure/billing/details`,\n    exact: true,\n    secure: true,\n    component: BillingPage,\n  },\n  {\n    path: `/secure/ipemr`,\n    exact: true,\n    secure: true,\n    component: IPEmr,\n  },\n  {\n    path: `/secure/bedandward`,\n    exact: true,\n    secure: true,\n    component: BedAndWard,\n  },\n  {\n    path: `/secure/bedandward/:name`,\n    exact: true,\n    secure: true,\n    component: RoomDetail,\n  },\n  {\n    path: `/secure/doctorEmr`,\n    exact: true,\n    secure: true,\n    component: DoctorEmrMdl,\n  },\n  {\n    path: `/secure/doctorEmr/ipDetails/:name`,\n    exact: true,\n    secure: true,\n    component: IpDetailEmrMdl,\n  },\n  {\n    path: `/secure/doctorEmr/opDetails/:name`,\n    exact: true,\n    secure: true,\n    component: OpDetailEmrMdl,\n  },\n  // {\n  //   path: `/secure/lab`,\n  //   exact: true,\n  //   secure: true,\n  //   component: LabModule,\n  // },\n  {\n    path: `/secure/nurseEmr`,\n    exact: true,\n    secure: true,\n    component: NurseMdl,\n  },\n  {\n    path: `/secure/nurseEmr/:name`,\n    exact: true,\n    secure: true,\n    component: NursePages,\n  },\n  {\n    path: `/secure/privileges`,\n    exact: true,\n    secure: true,\n    component: Privileges,\n  },\n  {\n    path: `/secure/insurance`,\n    exact: true,\n    secure: true,\n    component: Insurance,\n  },\n  {\n    path: \"/doctor/dashboard\",\n    exact: true,\n    secure: true,\n    component: DoctorDashboard,\n  },\n  {\n    path: \"/secure/master\",\n    exact: true,\n    secure: true,\n    component: Master,\n  },\n];\n","import { PUBLIC_ROUTES } from \"./modules/public/PublicRoutes\";\nimport { SECURE_ROUTES } from \"./modules/secure/SecureRoutes\";\n\nexport const EMR_ROUTES = [...PUBLIC_ROUTES, ...SECURE_ROUTES];\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./toast.css\";\n\nconst ToastProvider = ({ children }) => {\n  return (\n    <>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={false}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnHover\n        closeButton={false}\n        theme=\"light\"\n        toastClassName={({ type }) => {\n          switch (type) {\n            case \"success\":\n              return \"toast-success\";\n            case \"error\":\n              return \"toast-error\";\n            case \"warning\":\n              return \"toast-warning\";\n            case \"info\":\n            default:\n              return \"toast-info\";\n          }\n        }}\n      />\n      {children}\n    </>\n  );\n};\n\nexport default ToastProvider;\n","import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state to render fallback UI\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Log the error to an error reporting service\n    console.error(\"Error caught in Error Boundary:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // Render fallback UI\n      return <h3>Something went wrong. Please try again later.</h3>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const allAppointment = createAsyncThunk(\r\n  \"appointment/allAppointment\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.ALL_APPOINTMENT, {\r\n        params: credentials,\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst allAppointmentSlice = createSlice({\r\n  name: \"allAppointment\",\r\n  initialState: {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(allAppointment.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(allAppointment.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.data = action.payload.data;\r\n      })\r\n      .addCase(allAppointment.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default allAppointmentSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const allFacilitySchedules = createAsyncThunk(\r\n  \"facility/allFacilitySchedules\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(\r\n        API_ENDPOINTS.FACILITY_SCHEDULES,\r\n        credentials\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst allFacilitySchedulesSlice = createSlice({\r\n  name: \"allFacilitySchedules\",\r\n  initialState: {\r\n    facilitiesSheduleData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(allFacilitySchedules.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(allFacilitySchedules.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.facilitiesSheduleData = action.payload.data;\r\n      })\r\n      .addCase(allFacilitySchedules.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default allFacilitySchedulesSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const facilitiesAvailability = createAsyncThunk(\r\n  \"timeslot/facilitiesAvailability\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.FACILITY_AVAILABLE, {\r\n        params: credentials,\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst facilitiesAvailabilitySlice = createSlice({\r\n  name: \"facilitiesAvailability\",\r\n  initialState: {\r\n    facilitiesAvailableData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(facilitiesAvailability.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(facilitiesAvailability.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.facilitiesAvailableData = action.payload.data;\r\n      })\r\n      .addCase(facilitiesAvailability.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default facilitiesAvailabilitySlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const allFacilities = createAsyncThunk(\r\n  \"facility/allFacilities\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.ALL_FACILITIES, {\r\n        params: credentials,\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst allFacilitiesSlice = createSlice({\r\n  name: \"allFacilities\",\r\n  initialState: {\r\n    facilitiesData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(allFacilities.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(allFacilities.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.facilitiesData = action.payload.data;\r\n      })\r\n      .addCase(allFacilities.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default allFacilitiesSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const searchFacilities = createAsyncThunk(\r\n  \"facility/searchFacilities\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.SEARCH_FACILITY, {\r\n        params: credentials,\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst searchFacilitiesSlice = createSlice({\r\n  name: \"searchFacilities\",\r\n  initialState: {\r\n    searchfacilityData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(searchFacilities.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(searchFacilities.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.searchfacilityData = action.payload.data;\r\n      })\r\n      .addCase(searchFacilities.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default searchFacilitiesSlice.reducer;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport allDoctorsReducer from \"./slice/appointement/allDoctorsSlice\";\r\nimport authReducer from \"./slice/login/authSlice\";\r\nimport allBranchReducer from \"./slice/appointement/allBranchSlice\";\r\nimport allAppointmentReducer from \"./slice/appointement/allAppointmentSlice\";\r\nimport doctorAvailabilitieReducer from \"./slice/appointement/doctorAvailableSlotSlice\";\r\nimport allFacilitySchedulesReducer from \"./slice/appointement/allFacilitySheduleSlice\";\r\nimport facilitiesAvailabilityReducer from \"./slice/appointement/facilitiesAvailableSlotSlice\";\r\nimport allFacilitiesReducer from \"./slice/appointement/allFacilitiesSlice\";\r\nimport searchDoctorsReducer from \"./slice/appointement/searchDoctorSilce\";\r\nimport searchFacilitiesReducer from \"./slice/appointement/searchFacilitiesSlice\";\r\nimport searchPatientsReducer from \"./slice/appointement/searchPatientSlice\";\r\nimport registerPatientsReducer from \"./slice/registration/registerPatientsSlice\";\r\nimport revisitPatientsReducer from \"./slice/registration/revisitSlice\";\r\nimport emergencyPatientsReducer from \"./slice/registration/emergencyPatientSlice\";\r\nimport bookAppointmentReducer from \"./slice/appointement/bookAppointementSlice\";\r\nimport scheduleListReducer from \"./slice/dashboard/scheduleListSlice\";\r\nimport reScheduleReducer from \"./slice/appointement/reScheduleSlice\";\r\nimport cancelScheduleReducer from \"./slice/appointement/cancelScheduleSlice\";\r\n\r\nconst staticReducers = {\r\n  auth: authReducer,\r\n  allBranch: allBranchReducer,\r\n  allAppoint: allAppointmentReducer,\r\n  allDoctor: allDoctorsReducer,\r\n  allFacility: allFacilitiesReducer,\r\n  docAvailable: doctorAvailabilitieReducer,\r\n  facilitySchedule: allFacilitySchedulesReducer,\r\n  facilityAvailable: facilitiesAvailabilityReducer,\r\n  searchDoctor: searchDoctorsReducer,\r\n  searchFacility: searchFacilitiesReducer,\r\n  searchPatient: searchPatientsReducer,\r\n  regPatient: registerPatientsReducer,\r\n  revisit: revisitPatientsReducer,\r\n  emergency: emergencyPatientsReducer,\r\n  bookAppoint: bookAppointmentReducer,\r\n  schedule: scheduleListReducer,\r\n  reschedule: reScheduleReducer,\r\n  cancel: cancelScheduleReducer,\r\n};\r\n\r\nconst createReducer = (asyncReducers = {}) =>\r\n  combineReducers({\r\n    ...staticReducers,\r\n    ...asyncReducers,\r\n  });\r\n\r\nconst store = configureStore({\r\n  reducer: createReducer(),\r\n});\r\n\r\nstore.asyncReducers = {}; // Store injected reducers\r\n\r\nstore.injectReducer = (key, asyncReducer) => {\r\n  if (!store.asyncReducers[key]) {\r\n    console.log(`Injecting reducer: ${key}`);\r\n    store.asyncReducers[key] = asyncReducer;\r\n\r\n    // Ensure the store is updated with the new reducer\r\n    store.replaceReducer(createReducer(store.asyncReducers));\r\n\r\n    console.log(\"Updated Redux state:\", store.getState());\r\n  } else {\r\n    console.warn(`Reducer \"${key}\" is already injected.`);\r\n  }\r\n};\r\n\r\nexport default store;\r\n","import React, { useEffect } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { ColorModeContext, useMode } from \"./theme\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { EMRRouteBuilder } from \"./core/EMRRouteBuilder\";\nimport { EMR_ROUTES } from \"./core/Routes\";\nimport { LoadingProvider } from \"./components/global/loader/LoadingContext\";\nimport ToastProvider from \"./components/global/ToastProvider\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport ErrorBoundary from \"./components/global/ErrorBoundary\";\nimport store from \"./Redux/store\";\n\nconst App = () => {\n  const [theme, colorMode] = useMode();\n\n  useEffect(() => {\n    import(\"emr_billing/billingReducer\")\n      .then(({ default: billingReducer }) => {\n        console.log(\"Billing Reducer Loaded:\", billingReducer);\n        if (store.injectReducer) {\n          store.injectReducer(\"billing\", billingReducer);\n        }\n      })\n      .catch((error) => console.error(\"Failed to load billingReducer:\", error));\n\n    import(\"emr_ip/ipReducer\")\n      .then(({ default: ipReducer }) => {\n        console.log(\"ip Reducer Loaded:\", ipReducer);\n        if (store.injectReducer) {\n          store.injectReducer(\"ip\", ipReducer);\n        }\n      })\n      .catch((error) => console.error(\"Failed to load ipReducer:\", error));\n\n    import(\"emr_bedAndWard/bedAndWardReducer\")\n      .then(({ default: bedAndWardReducer }) => {\n        console.log(\"bedAndWardReducer Loaded:\", bedAndWardReducer);\n        if (store.injectReducer) {\n          store.injectReducer(\"bedAndWard\", bedAndWardReducer);\n        }\n      })\n      .catch((error) =>\n        console.error(\"Failed to load bedAndWardReducer:\", error)\n      );\n  }, []);\n\n  return (\n    <ErrorBoundary>\n      <Provider store={store}>\n        <LocalizationProvider dateAdapter={AdapterMoment}>\n          <LoadingProvider>\n            <ColorModeContext.Provider value={colorMode}>\n              <ThemeProvider theme={theme}>\n                <ToastProvider>\n                  <CssBaseline />\n                  <EMRRouteBuilder routes={EMR_ROUTES} />\n                </ToastProvider>\n              </ThemeProvider>\n            </ColorModeContext.Provider>\n          </LoadingProvider>\n        </LocalizationProvider>\n      </Provider>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n"],"names":["ColorModeContext","createContext","toggleColorMode","axios","baseURL","headers","Accept","API_ENDPOINTS","login","createAsyncThunk","async","credentials","_ref","rejectWithValue","axiosInstance","post","error","_error$response","_error$response$data","response","data","message","authSlice","createSlice","name","initialState","user","loading","reducers","logout","state","localStorage","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","setItem","JSON","stringify","rejected","actions","allBranch","get","connect","_state$auth","_state$auth$user","_state$auth$user$data","_state$auth2","_state$auth2$user","_state$auth2$user$dat","_state$auth3","_state$auth3$user","_state$auth3$user$dat","_state$auth3$user$dat2","branchId","auth","branchMaster","username","userName","role","roleMaster","roleName","_branches$find","_userData$roleMaster","reloadApp","branches","setBranches","useState","userData","setUserData","selectedBranchId","setSelectedBranchId","useEffect","loginUser","getItem","_parsedUser$data","_parsedUser$data$bran","parsedUser","parse","console","log","currentURL","window","location","href","dispatch","useDispatch","useSelector","branchData","navigate","useNavigate","length","theme","useTheme","colorMode","useContext","open","setOpen","branchName","find","branch","_jsxs","Box","id","display","justifyContent","p","padding","height","sx","backgroundColor","children","includes","_Fragment","my","gap","_jsx","alignSelf","fontSize","color","IconButton","onClick","Menu","className","Chip","label","variant","position","borderRadius","cursor","alignItems","width","icon","ShareLocationIcon","textTransform","boxShadow","transform","top","left","right","zIndex","minWidth","overflowY","map","MenuItem","handleChange","palette","mode","DarkModeOutlinedIcon","LightModeOutlinedIcon","NotificationsOutlinedIcon","margin","logoutApp","LogoutIcon","allModules","FaCalendarCheck","path","FaUserPlus","FaUserMd","FaUserNurse","FaFileInvoiceDollar","FaFileAlt","FaProcedures","FaBed","FaFlask","FaClipboardList","Landing","filteredModules","setFilteredModules","_userData$data","_userData$data$roleMa","userRole","allowedModules","filter","mod","style","flexDirection","gridTemplateColumns","maxWidth","module","index","transition","fontWeight","textAlign","onMouseEnter","e","currentTarget","onMouseLeave","marginBottom","isSidebar","setIsSidebar","Topbar","EMRRouteBuilder","props","routes","setRoutes","isRemembered","rememberedUsername","_","isAuthenticated","buildRoutes","promiseRoutes","route","Component","component","interceptor","secure","Route","exact","element","SecureLayout","Navigate","to","buildRoute","Promise","all","then","Routes","setShowForgotPage","setShowLoginPage","setShowSignup","formValues","setFormValues","email","password","errors","setErrors","field","target","value","prevErrors","onSubmit","preventDefault","formErrors","validateForm","trim","Object","keys","TextField","fullWidth","onChange","size","type","FormControlLabel","control","Checkbox","handleShowForgot","Button","disabled","CircularProgress","handleClickSignup","handleClickLogin","setShowReset","validationErrors","test","interceptors","request","use","config","method","url","URL","searchParams","append","parseInt","pathname","search","reject","doctorDashboardDataList","params","doctorId","ipOpFlag","context","page","ptName","status","LoadingContext","LoadingProvider","setLoading","Provider","useLoading","ResetPassword","confirmPassword","setMessage","alertMessage","setAlertMessage","Alert","severity","token","URLSearchParams","postData","helperText","PUBLIC_ROUTES","AuthPage","showLoginPage","showForgotPage","showSignup","showReset","backgroundImage","bgImg","backgroundSize","Paper","elevation","bgcolor","opacity","LoginForm","ForgotPassword","Signup","overflow","boxSizing","TabPane","Tabs","_tabsList$","tabsList","defaultTab","setActiveTab","activeKey","setActiveKey","key","tabBarStyle","tab","AnimatePresence","motion","div","initial","x","animate","exit","duration","content","calculateAge","dob","birthDate","Date","today","age","getFullYear","m","getMonth","getDate","options","required","setDependentValue","setError","handleBlur","FormControl","InputLabel","shrink","Select","selectedOption","option","onBlur","borderBottom","FormHelperText","date","toISOString","split","newValue","calculatedAge","undefined","multiline","rows","InputLabelProps","inputProps","pattern","DropdownOptions","visitOptions","genderOpton","nationalityOptions","getNames","toLowerCase","visaTypeOptions","specialityOptions","encounterTypeOptions","ipEncounterTypeOptions","doctorOptions","paymentOptions","infoSourceOptions","patientTypeOptions","otherIdOptions","addressOptions","referralOptions","religionOptions","patientPriorityOptions","maritalStatusOptions","occupationOptions","registerPatients","registerPatientData","showToast","messages","arguments","toastContent","ToastMessage","toastOptions","autoClose","toast","success","warn","info","messageArray","Array","isArray","i","PatientInfo","patientData","setShowPatientInfo","sigCanvas","useRef","signatureURL","setSignatureURL","qrCodeUrl","origin","flexWrap","mrdNo","patientName","visitType","nationality","visaType","phoneNumber","infoSource","address","referralCase","regDate","nationalId","workPhoneNumber","language","religion","referredBy","patientType","patientPriority","gender","maritalStatus","otherId","landPhone","occupation","place","patientRemarks","_ref2","mt","QRCode","SignatureCanvas","ref","penColor","canvasProps","border","saveSignature","current","trimmedCanvas","getTrimmedCanvas","toDataURL","clearSignature","clear","src","alt","RegisterPatient","_location$state","_location$state2","_location$state3","OPTION","useLocation","bookedDetails","surgeryPatientData","schedulePatientData","rowData","showPatientInfo","setPatientData","regPatient","getCurrentDate","formData","setFormData","image","patient","phoneNo","mobile","emailId","speciality","encounterType","doctorName","doctor","paymentType","subInsurance","networkType","insuranceCardNo","insuranceEffectiveFrom","certificateNumber","maxInsuranceLiability","maxInsuranceCopay","extraCardNumber","insuranceExpireDate","dependentsNo","insuranceClaimNumber","insuranceApprovalLimit","copayPatient","admissionDate","admissionTime","expectedDischargeDate","exp_discharge_date","expectedDischargeTime","admissionNote","ward","roomNo","bedNo","bedRate","accomodationNote","handleInputChange","prevData","statusCode","paddingBottom","FormInput","file","accept","Link","registerPatient","prev","emergencyPatients","emergencyPatientData","Emergency","mrdNumber","getCurrentDateTime","now","toLocaleTimeString","hour12","workPhoneNo","searchPatients","searchPatientData","revisitPatients","patientId","put","revisitPatientData","Revisit","searchQuery","setSearchQuery","selectedPatient","setSelectedPatient","searchPatient","revisit","handleSearchChange","inputValue","searchKey","mr_no","mobileNumber","dependents","ml","Autocomplete","freeSolo","getOptionLabel","renderInput","placeholder","handleOptionSelect","event","revisitPatient","scheduleList","show","Spinner","itemsArray","callbackParam","anchorEl","setAnchorEl","handleClose","callback","MenuIcon","keepMounted","Boolean","onClose","item","Option","ScheduleList","filters","setFilters","appointments","setAppointments","setPage","rowsPerPage","setRowsPerPage","schedule","appointmentData","handleFilterChange","dropDownMenuItems","MedicalInformationOutlined","onCreatePatientVisit","columns","title","dataIndex","render","__","filterDropdown","DatePicker","format","handleDateChange","formattedDate","moment","Input","row","EMRMenuIcon","from","EMRLoader","Table","dataSource","rowKey","record","PatientRecall","setData","s_no","mr_number","visit_date","patient_name","recall_date","filteredData","setFilteredData","result","every","String","defaultValue","pagination","pageSize","PatientVaccinationSchedule","schedule_date","vaccination_name","remarks","vaccine_date","statusOptions","columnId","prevFilters","filtered","_filters$columnId","filterValue","Schedule","bordered","PatientList","setFilter","statusFilter","setStatusFilter","TableContainer","maxHeight","TableHead","TableRow","column","TableCell","slotProps","actionBar","TableBody","Registration","useSearchParams","activeTab","ScreenWrapper","EMRtabs","cardTitle","searchByPatientName","searchByStatus","setValue","dayjs","searchTerm","setSearchTerm","appliedFilters","setAppliedFilters","Typography","align","flexGrow","LocalizationProvider","dateAdapter","AdapterDayjs","DesktopDatePicker","inputFormat","InputProps","startAdornment","InputAdornment","SearchIcon","endAdornment","clearSearch","edge","visibility","CloseIcon","mr","startIcon","FilterList","PaperProps","Stack","direction","spacing","handleFilterClick","handleStatusReset","RestartAltIcon","CustomDataGrid","styled","DataGrid","RevenueDataList","dashboardList","React","selectedRow","setSelectedRow","formatDate","dateString","toLocaleDateString","handleEmpty","headerName","valueGetter","regNo","renderCell","handleClickOpen","headerAlign","gross","discount","net","revenue","sno","Dialog","DialogTitle","DialogContent","Grid","container","xs","Divider","marginTop","DialogActions","sortable","filterable","disableColumnMenu","cellClassName","Avatar","initials","ActionsMenu","OthersDataList","setRows","transformedData","sNo","consultationDate","procedure","insuranceName","rowsPerPageOptions","disableSelectionOnClick","handleMenuClick","MoreVertIcon","ListItemIcon","LocalHospitalIcon","ListItemText","primary","AssignmentIcon","VisibilityIcon","DownloadIcon","selectedCard","DocOptions","styles","loaderContainer","svg","version","xmlns","y","viewBox","xmlSpace","fill","stroke","cx","cy","r","attributeName","dur","values","repeatCount","begin","cardColors","DoctorDashboard","setSelectedCard","dashboardCountResp","setDashboardCountResp","dashboardlistResp","setDashboardlistResp","searchPatientName","setsearchPatientName","PatientStatus","setPatientStatus","dashboardCount","cardDetails","doctorDashboardCount","cardData","displayName","TodayIcon","MonetizationOnIcon","EmergencyIcon","WaitingIcon","TelemedicineIcon","dashboardListDefault","checkValue","NaN","DoctorNurseLoader","Container","fluid","Row","Col","sm","md","lg","Card","Img","doctorImage","Body","Title","card","todaysAppointmentResponse","revenueResponse","emergencyPatientResponse","waitingListResponse","teleAppointmentResponse","handleCardClick","Text","totalCount","displayIndex","MainDataList","TodayAppointmentsearchPatientResponse","RevenuSearchPatientResponse","EmergencySearchPatientResponse","searchPatientResponse","TeleSearchPatientResponse","charAt","BlockAvailability","startTime","endTime","specialistList","setSpecialistList","Form","Group","Label","Control","TimePicker","ampm","blockAvailability","Privileges","roles","setRoles","canViewPage1","canViewPage2","canEdit","canDelete","handleCheckboxChange","roleIndex","permission","updatedRoles","checked","ipInsurance","claim_no","insurar_name","invoice_no","invoice_date","mrd_no","ClaimDetails","numberOfElements","setNumberOfElements","totalElements","setTotalElements","hasMore","setHasMore","tableRef","onScroll","handleScroll","scrollTop","clientHeight","scrollHeight","ManualSubmission","px","child","innerChild","OPInsurance","IPInsurance","ReferralRegistration","Insurance","Loading","doctorAvailability","statusText","doctorAvailableData","bookAppointment","bookAppointmentdata","AppointmentTabContent","setEventData","scheduleType","numberOfSlots","notes","additionalInfo","insurarName","notifyPatient","showNotify","setShowNotify","select","count","RadioGroup","Radio","_specialistList$find","_facilityList$find","selectedSlot","facilityList","slotDuration","getAvailableSlotsForAllDoctors","getAllFacilitySchedules","addEventToState","slotInfo","selecteddoctorData","dateFormat","eventData","suggestions","setSuggestions","dividers","paddingTop","start","end","resourceId","paddingY","specialist","facility","facilityId","divider","pb","pt","otherData","timeInterval","appointmentTime","appointmentEndTime","specialityId","appointmentDate","_response$payload$mes","_response$payload","msg","newEvent","_error$message","reSchedule","appointmentId","setDate","time","setTime","reschedule","textField","minutesStep","unwrap","cancelSchedule","displayReasonInput","setDisplayReasonInput","reason","setReason","cancel","selectedValue","_loginUser$data","cancellationReason","cancelledBy","avatarStyle","_selectedSlot$patient","setEvents","popupOpen","setPopupOpen","setSelectedSlot","rescheduleBooking","setRescheduleBooking","cancelBooking","setCancelBooking","docAvailable","groupedBookings","forEach","_doctor$bookedSlotDet","bookedSlotDetails","slot","timeKey","push","bookedEvents","entries","_firstSlot$patientNam","slots","firstSlot","Tooltip","Cancel","Replay","AppRegistration","_slot$patientName","toDate","add","CancelAlertModal","Reschedule","DnDCalendar","withDragAndDrop","Calendar","selectedDate","setSelectedDate","filteredDoctors","localizer","momentLocalizer","doctorAvailabilities","setDoctorAvailabilities","usersResources","setUsersResources","events","selectedDoctorAvailability","setSelectedDoctorAvailability","formatTime","isSlotAvailable","slotTime","_doctorAvailabilities","availability","Number","availableSlots","isSlotBooked","_doctorAvailabilities2","booked","bookedSlots","customSlotPropGetter","useMemo","timeString","isAvailable","bgColor","useCallback","interval","setCalendarResources","resourcesList","EventDisplayComponent","selectable","resources","resourceIdAccessor","resourceTitleAccessor","onNavigate","startAccessor","endAccessor","step","timeslots","views","defaultView","onSelectSlot","isBefore","toolbar","eventPropGetter","eventStyleGetter","slotPropGetter","tooltipAccessor","scrollToTime","NewEventModal","allDoctors","doctorData","docloading","searchDoctors","searchdoctorData","searchDocloading","Filter","showFilter","setShowFilter","selectedDoctors","setSelectedDoctors","selectedSpeciality","setSelectedSpeciality","allDoctor","allDoctorData","searchDoctor","searchDoctorResults","initialSelection","reduce","acc","doc","toggleFilter","ChevronLeft","ChevronRight","borderRight","CustomDateCalendar","_e$target","Map","specialityName","flex","CalendarView","DateCalendar","transformOrigin","Appointment","AllAppointment","AddOrg","showBranch","setShowBranch","EditOrgName","EditOrgBranch","OrgSetup","transfer","setTransfer","hospitalNameEdit","setHospitalNameEdit","hospitalBranchEdit","setHospitalBranchEdit","text","EditOutlined","DeleteOutline","marginLeft","BranchName","SpecialityDepartment","Master","defaultActiveKey","BillingLandingModule","BillingPageModule","IPEmrModule","BedAndWardModule","WardRoomDetail","DoctorEmrModule","IPDetails","OPDetails","NurseModule","NursePage","EMR_ROUTES","BillingLanding","Suspense","fallback","BillingPage","IPEmr","BedAndWard","RoomDetail","DoctorEmrMdl","IpDetailEmrMdl","OpDetailEmrMdl","NurseMdl","NursePages","ToastContainer","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnHover","closeButton","toastClassName","ErrorBoundary","constructor","super","this","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","allAppointment","allFacilitySchedules","facilitiesSheduleData","facilitiesAvailability","facilitiesAvailableData","allFacilities","facilitiesData","searchFacilities","staticReducers","authReducer","allBranchReducer","allAppoint","allAppointmentReducer","allDoctorsReducer","allFacility","allFacilitiesReducer","doctorAvailabilitieReducer","facilitySchedule","allFacilitySchedulesReducer","facilityAvailable","facilitiesAvailabilityReducer","searchDoctorsReducer","searchFacility","searchfacilityData","searchPatientsReducer","registerPatientsReducer","revisitPatientsReducer","emergency","emergencyPatientsReducer","bookAppoint","bookAppointmentReducer","scheduleListReducer","reScheduleReducer","cancelScheduleReducer","createReducer","asyncReducers","combineReducers","store","configureStore","reducer","injectReducer","asyncReducer","replaceReducer","getState","App","useMode","setMode","createTheme","colors","grey","greenAccent","redAccent","blueAccent","tokens","main","secondary","neutral","dark","light","background","default","typography","fontFamily","join","h1","h2","h3","h4","h5","h6","themeSettings","billingReducer","catch","ipReducer","_ref3","bedAndWardReducer","AdapterMoment","ThemeProvider","ToastProvider","CssBaseline","ReactDOM","document","getElementById","BrowserRouter"],"sourceRoot":""}