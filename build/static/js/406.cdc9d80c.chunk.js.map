{"version":3,"file":"static/js/406.cdc9d80c.chunk.js","mappings":"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","sources":["../node_modules/use-sync-external-store/shim/index.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@mui/x-data-grid/components/GridApiContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiRef.js","../node_modules/@mui/x-data-grid/context/GridRootPropsContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridRootProps.js","../node_modules/@mui/x-internals/esm/reactMajor.js","../node_modules/@mui/x-internals/esm/forwardRef/forwardRef.js","../node_modules/@mui/x-internals/esm/fastObjectShallowCompare/fastObjectShallowCompare.js","../node_modules/@mui/x-internals/esm/fastMemo/fastMemo.js","../node_modules/@mui/x-data-grid/constants/gridClasses.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridPrivateApiContext.js","../node_modules/@mui/x-data-grid/components/containers/GridRootStyles.js","../node_modules/@mui/x-data-grid/utils/createSelector.js","../node_modules/@mui/x-data-grid/hooks/features/density/densitySelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useIsSSR.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsInterfaces.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsSelector.js","../node_modules/@mui/x-data-grid/hooks/core/gridCoreSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelSelector.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/gridPreferencePanelsValue.js","../node_modules/@mui/x-data-grid/components/panel/GridPreferencesPanel.js","../node_modules/@mui/x-data-grid/components/GridHeader.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/gridDimensionsSelectors.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/TimerBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiEventHandler.js","../node_modules/@mui/x-data-grid/components/cell/GridEditInputCell.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingUtils.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputValue.js","../node_modules/@mui/x-data-grid/utils/utils.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleValue.js","../node_modules/@mui/x-data-grid/models/gridFilterItem.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterState.js","../node_modules/@mui/x-data-grid/utils/getPublicApiRef.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterUtils.js","../node_modules/@mui/x-data-grid/colDef/gridStringOperators.js","../node_modules/@mui/x-data-grid/colDef/gridStringColDef.js","../node_modules/@mui/x-data-grid/colDef/gridNumericOperators.js","../node_modules/@mui/x-data-grid/colDef/gridNumericColDef.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputDate.js","../node_modules/@mui/x-data-grid/colDef/gridDateOperators.js","../node_modules/@mui/x-data-grid/components/cell/GridEditDateCell.js","../node_modules/@mui/x-data-grid/colDef/gridDateColDef.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsUtils.js","../node_modules/@mui/x-data-grid/internals/constants.js","../node_modules/@mui/x-data-grid/components/cell/GridBooleanCell.js","../node_modules/@mui/x-data-grid/components/cell/GridEditBooleanCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputBoolean.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanOperators.js","../node_modules/@mui/x-data-grid/colDef/gridBooleanColDef.js","../node_modules/@mui/x-data-grid/models/params/gridEditCellParams.js","../node_modules/@mui/x-data-grid/models/gridEditRowModel.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/filterPanelUtils.js","../node_modules/@mui/x-data-grid/components/cell/GridEditSingleSelectCell.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputSingleSelect.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectOperators.js","../node_modules/@mui/x-data-grid/colDef/gridSingleSelectColDef.js","../node_modules/@mui/x-data-grid/components/menu/GridMenu.js","../node_modules/@mui/x-data-grid/components/cell/GridActionsCell.js","../node_modules/@mui/x-data-grid/colDef/gridActionsColDef.js","../node_modules/@mui/x-data-grid/colDef/gridDefaultColumnTypes.js","../node_modules/@mui/x-data-grid/hooks/features/headerFiltering/gridHeaderFilteringSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsSelector.js","../node_modules/@mui/x-data-grid/hooks/features/columns/gridColumnsUtils.js","../node_modules/@mui/x-data-grid/components/GridScrollArea.js","../node_modules/@mui/x-data-grid/hooks/utils/useRunOnce.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/gridSortingSelector.js","../node_modules/@mui/x-data-grid/hooks/features/filter/gridFilterSelector.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationUtils.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/gridPaginationSelector.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridVisibleRows.js","../node_modules/@mui/x-data-grid/utils/platform.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/gridRowSelectionSelector.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowsMetaSelector.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridVirtualizationSelectors.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridApiMethod.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualization.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/listView/gridListViewSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/focus/gridFocusStateSelector.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/gridFocusedVirtualCellSelector.js","../node_modules/@mui/x-data-grid/utils/roundToDecimalPlaces.js","../node_modules/@mui/x-data-grid/utils/isJSDOM.js","../node_modules/@mui/x-data-grid/hooks/features/virtualization/useGridVirtualScroller.js","../node_modules/@mui/x-data-grid/hooks/features/overlays/useGridOverlays.js","../node_modules/@mui/x-data-grid/components/base/GridOverlays.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/columnMenuSelector.js","../node_modules/@mui/x-data-grid/components/GridHeaders.js","../node_modules/@mui/x-data-grid/components/GridConfigurationContext.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridConfiguration.js","../node_modules/@mui/x-data-grid/components/virtualization/GridMainContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridTopContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridBottomContainer.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerContent.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerFiller.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollerRenderZone.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScrollbar.js","../node_modules/@mui/x-data-grid/components/virtualization/GridVirtualScroller.js","../node_modules/@mui/x-data-grid/components/base/GridFooterPlaceholder.js","../node_modules/@mui/x-data-grid/components/containers/GridRoot.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/utils.js","../node_modules/@mui/x-data-grid/context/GridContextProvider.js","../node_modules/@mui/x-data-grid/hooks/core/useGridRefs.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLoggerFactory.js","../node_modules/@mui/x-internals/esm/EventManager/EventManager.js","../node_modules/@mui/x-data-grid/utils/Store.js","../node_modules/@mui/x-data-grid/hooks/core/useGridApiInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridPipeProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridStrategyProcessing.js","../node_modules/@mui/x-data-grid/hooks/core/useGridInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridIsRtl.js","../node_modules/@mui/x-data-grid/hooks/core/useGridStateInitialization.js","../node_modules/@mui/x-data-grid/hooks/core/useGridLocaleText.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridInitializeState.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridLogger.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridNativeEventListener.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridCellCheckboxRenderer.js","../node_modules/@mui/x-data-grid/components/columnSelection/GridHeaderCheckbox.js","../node_modules/@mui/x-data-grid/colDef/gridCheckboxSelectionColDef.js","../node_modules/@mui/x-data-grid/hooks/features/export/serializers/csvSerializer.js","../node_modules/@mui/x-data-grid/utils/keyboardUtils.js","../node_modules/@mui/x-data-grid/hooks/features/clipboard/useGridClipboard.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenu.js","../node_modules/@mui/x-data-grid/hooks/utils/useFirstRender.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeProcessor.js","../node_modules/@mui/x-data-grid/hooks/core/pipeProcessing/useGridRegisterPipeApplier.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumns.js","../node_modules/@mui/x-data-grid/hooks/features/density/useGridDensity.js","../node_modules/@mui/x-data-grid/hooks/features/export/utils.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExportContainer.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarExport.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridCsvExport.js","../node_modules/@mui/x-data-grid/utils/exportAs.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationModel.js","../node_modules/@mui/x-data-grid/hooks/features/export/useGridPrintExport.js","../node_modules/@mui/x-data-grid/hooks/core/strategyProcessing/useGridRegisterStrategyProcessor.js","../node_modules/@mui/x-data-grid/hooks/features/filter/useGridFilter.js","../node_modules/@mui/x-data-grid/hooks/features/focus/useGridFocus.js","../node_modules/@mui/x-data-grid/utils/domUtils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/utils.js","../node_modules/@mui/x-data-grid/hooks/features/keyboardNavigation/useGridKeyboardNavigation.js","../node_modules/@mui/x-data-grid/internals/utils/gridRowGroupingUtils.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPagination.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridPaginationMeta.js","../node_modules/@mui/x-data-grid/hooks/features/pagination/useGridRowCount.js","../node_modules/@mui/x-data-grid/hooks/features/preferencesPanel/useGridPreferencesPanel.js","../node_modules/@mui/x-data-grid/hooks/features/editing/gridEditingSelectors.js","../node_modules/@mui/x-data-grid/hooks/features/editing/utils.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridCellEditing.js","../node_modules/@mui/x-data-grid/models/params/gridRowParams.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridRowEditing.js","../node_modules/@mui/x-data-grid/hooks/features/editing/useGridEditing.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRows.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridParamsApi.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelection.js","../node_modules/@mui/x-data-grid/hooks/features/rowSelection/useGridRowSelectionPreProcessors.js","../node_modules/@mui/x-data-grid/hooks/features/sorting/useGridSorting.js","../node_modules/@mui/x-data-grid/hooks/features/scroll/useGridScroll.js","../node_modules/@mui/x-data-grid/constants/dataGridPropsDefaultValues.js","../node_modules/@mui/x-data-grid/hooks/features/dimensions/useGridDimensions.js","../node_modules/@mui/x-internals/esm/throttle/throttle.js","../node_modules/@mui/x-data-grid/utils/ResizeObserver.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowsMeta.js","../node_modules/@mui/x-data-grid/hooks/features/columns/useGridColumnSpanning.js","../node_modules/@mui/x-data-grid/models/gridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/gridColumnGroupsUtils.js","../node_modules/@mui/x-data-grid/hooks/features/columnGrouping/useGridColumnGrouping.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/gridColumnResizeApi.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/useGridColumnResize.js","../node_modules/@mui/x-data-grid/utils/createControllablePromise.js","../node_modules/@mui/x-data-grid/hooks/features/rows/gridRowSpanningUtils.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowSpanning.js","../node_modules/@mui/x-internals/esm/warning/warning.js","../node_modules/@mui/x-data-grid/hooks/features/listView/useGridListView.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridComponent.js","../node_modules/@mui/x-data-grid/hooks/features/events/useGridEvents.js","../node_modules/@mui/x-data-grid/hooks/features/statePersistence/useGridStatePersistence.js","../node_modules/@mui/x-data-grid/constants/localeTextConstants.js","../node_modules/@mui/x-data-grid/components/cell/GridSkeletonCell.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridIconButtonContainer.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderFilterIconButton.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSortIcon.js","../node_modules/@mui/x-data-grid/components/GridSelectedRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridFooterContainer.js","../node_modules/@mui/x-data-grid/components/GridFooter.js","../node_modules/@mui/x-data-grid/components/GridRowCount.js","../node_modules/@mui/x-data-grid/components/containers/GridOverlay.js","../node_modules/@mui/x-data-grid/internals/utils/getPinnedCellOffset.js","../node_modules/@mui/x-data-grid/utils/cellBorderUtils.js","../node_modules/@mui/x-data-grid/components/GridScrollbarFillerCell.js","../node_modules/@mui/x-data-grid/utils/rtlFlipSide.js","../node_modules/@mui/x-data-grid/internals/utils/attachPinnedStyle.js","../node_modules/@mui/x-data-grid/components/GridSkeletonLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridLoadingOverlay.js","../node_modules/@mui/x-data-grid/components/GridNoRowsOverlay.js","../node_modules/@mui/x-data-grid/components/GridPagination.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelContent.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelFooter.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelWrapper.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterForm.js","../node_modules/@mui/x-data-grid/components/panel/filterPanel/GridFilterPanel.js","../node_modules/@mui/x-data-grid/components/panel/GridColumnsPanel.js","../node_modules/@mui/x-data-grid/components/columnsManagement/utils.js","../node_modules/@mui/x-data-grid/components/columnsManagement/GridColumnsManagement.js","../node_modules/@mui/x-data-grid/components/panel/GridPanel.js","../node_modules/@mui/x-data-grid/components/GridRow.js","../node_modules/@mui/x-internals/esm/isObjectEmpty/isObjectEmpty.js","../node_modules/@mui/x-data-grid/utils/composeGridClasses.js","../node_modules/@mui/x-data-grid/utils/doesSupportPreventScroll.js","../node_modules/@mui/x-data-grid/components/cell/GridCell.js","../node_modules/@mui/x-data-grid/components/columnHeaders/ColumnHeaderMenuIcon.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnHeaderMenu.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderTitle.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderSeparator.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridGenericColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnHeaderItem.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridColumnGroupHeader.js","../node_modules/@mui/x-data-grid/hooks/features/columnHeaders/useGridColumnHeaders.js","../node_modules/@mui/x-data-grid/components/columnHeaders/GridBaseColumnHeaders.js","../node_modules/@mui/x-data-grid/components/GridColumnHeaders.js","../node_modules/@mui/x-data-grid/hooks/features/columnMenu/useGridColumnMenuSlots.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenuContainer.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuHideItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuManageItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuColumnsItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuFilterItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/menuItems/GridColumnMenuSortItem.js","../node_modules/@mui/x-data-grid/components/menu/columnMenu/GridColumnMenu.js","../node_modules/@mui/x-data-grid/components/GridNoResultsOverlay.js","../node_modules/@mui/x-data-grid/material/icons/GridColumnUnsortedIcon.js","../node_modules/@mui/x-data-grid/material/icons/index.js","../node_modules/@mui/x-data-grid/material/components/MUISelectOption.js","../node_modules/@mui/x-data-grid/material/index.js","../node_modules/@mui/x-data-grid/constants/defaultGridSlotsComponents.js","../node_modules/@mui/x-data-grid/components/GridDetailPanels.js","../node_modules/@mui/x-data-grid/components/GridPinnedRows.js","../node_modules/@mui/x-data-grid/internals/utils/useProps.js","../node_modules/@mui/x-data-grid/DataGrid/useDataGridProps.js","../node_modules/@mui/x-data-grid/internals/utils/computeSlots.js","../node_modules/@mui/x-data-grid/DataGrid/DataGrid.js","../node_modules/@mui/x-data-grid/hooks/utils/useGridAriaAttributes.js","../node_modules/@mui/x-data-grid/hooks/features/rows/useGridRowAriaAttributes.js","../node_modules/@mui/x-data-grid/components/cell/GridActionsCellItem.js","../node_modules/@mui/x-data-grid/components/containers/GridToolbarContainer.js","../node_modules/@mui/x-data-grid/components/panel/GridPanelHeader.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarColumnsButton.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarDensitySelector.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarFilterButton.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbarQuickFilter.js","../node_modules/@mui/x-data-grid/components/toolbar/GridToolbar.js","../node_modules/@mui/x-data-grid/constants/envConstants.js","../node_modules/@mui/x-data-grid/hooks/features/columnResize/columnResizeSelector.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@mui/x-internals/reactMajor.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.js"],"sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import * as React from 'react';\nexport const GridApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridApiContext.displayName = 'GridApiContext';\n}","import * as React from 'react';\nimport { GridApiContext } from \"../../components/GridApiContext.js\";\nexport function useGridApiContext() {\n  const apiRef = React.useContext(GridApiContext);\n  if (apiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return apiRef;\n}","import * as React from 'react';\n/**\n * Hook that instantiate a [[GridApiRef]].\n */\nexport const useGridApiRef = () =>\n// TODO v8: initialize with null (see https://github.com/mui/mui-x/issues/16135#issuecomment-2589395230 and https://github.com/mui/mui-x/issues/16000#issuecomment-2567820735)\nReact.useRef({});","import * as React from 'react';\nconst GridRootPropsContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridRootPropsContext.displayName = 'GridRootPropsContext';\n}\nexport { GridRootPropsContext };","import * as React from 'react';\nimport { GridRootPropsContext } from \"../../context/GridRootPropsContext.js\";\nexport const useGridRootProps = () => {\n  const contextValue = React.useContext(GridRootPropsContext);\n  if (!contextValue) {\n    throw new Error('MUI X: useGridRootProps should only be used inside the DataGrid, DataGridPro or DataGridPremium component.');\n  }\n  return contextValue;\n};","import * as React from 'react';\nexport default parseInt(React.version, 10);","import * as React from 'react';\nimport reactMajor from \"../reactMajor.js\";\n\n// Compatibility shim that ensures stable props object for forwardRef components\n// Fixes https://github.com/facebook/react/issues/31613\n// We ensure that the ref is always present in the props object (even if that's not the case for older versions of React) to avoid the footgun of spreading props over the ref in the newer versions of React.\n// Footgun: <Component ref={ref} {...props} /> will break past React 19, but the types will now warn us that we should use <Component {...props} ref={ref} /> instead.\nexport const forwardRef = render => {\n  if (reactMajor >= 19) {\n    const Component = props => render(props, props.ref ?? null);\n    Component.displayName = render.displayName ?? render.name;\n    return Component;\n  }\n  return /*#__PURE__*/React.forwardRef(render);\n};","const is = Object.is;\nexport function fastObjectShallowCompare(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (!(a instanceof Object) || !(b instanceof Object)) {\n    return false;\n  }\n  let aLength = 0;\n  let bLength = 0;\n\n  /* eslint-disable guard-for-in */\n  for (const key in a) {\n    aLength += 1;\n    if (!is(a[key], b[key])) {\n      return false;\n    }\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  /* eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-unused-vars */\n  for (const _ in b) {\n    bLength += 1;\n  }\n  return aLength === bLength;\n}","import * as React from 'react';\nimport { fastObjectShallowCompare } from \"../fastObjectShallowCompare/index.js\";\nexport function fastMemo(component) {\n  return /*#__PURE__*/React.memo(component, fastObjectShallowCompare);\n}","import { unstable_generateUtilityClasses as generateUtilityClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nexport function getDataGridUtilityClass(slot) {\n  return generateUtilityClass('MuiDataGrid', slot);\n}\nexport const gridClasses = generateUtilityClasses('MuiDataGrid', ['actionsCell', 'aggregationColumnHeader', 'aggregationColumnHeader--alignLeft', 'aggregationColumnHeader--alignCenter', 'aggregationColumnHeader--alignRight', 'aggregationColumnHeaderLabel', 'autoHeight', 'autosizing', 'booleanCell', 'cell--editable', 'cell--editing', 'cell--flex', 'cell--textCenter', 'cell--textLeft', 'cell--textRight', 'cell--rangeTop', 'cell--rangeBottom', 'cell--rangeLeft', 'cell--rangeRight', 'cell--pinnedLeft', 'cell--pinnedRight', 'cell--selectionMode', 'cell', 'cellCheckbox', 'cellEmpty', 'cellSkeleton', 'cellOffsetLeft', 'checkboxInput', 'columnHeader', 'columnHeader--alignCenter', 'columnHeader--alignLeft', 'columnHeader--alignRight', 'columnHeader--dragging', 'columnHeader--moving', 'columnHeader--numeric', 'columnHeader--sortable', 'columnHeader--sorted', 'columnHeader--filtered', 'columnHeader--pinnedLeft', 'columnHeader--pinnedRight', 'columnHeader--last', 'columnHeader--lastUnpinned', 'columnHeader--siblingFocused', 'columnHeaderCheckbox', 'columnHeaderDraggableContainer', 'columnHeaderTitle', 'columnHeaderTitleContainer', 'columnHeaderTitleContainerContent', 'columnHeader--filledGroup', 'columnHeader--emptyGroup', 'columnHeaders', 'columnSeparator--resizable', 'columnSeparator--resizing', 'columnSeparator--sideLeft', 'columnSeparator--sideRight', 'columnSeparator', 'columnsManagement', 'columnsManagementRow', 'columnsManagementHeader', 'columnsManagementSearchInput', 'columnsManagementFooter', 'container--top', 'container--bottom', 'detailPanel', 'detailPanels', 'detailPanelToggleCell', 'detailPanelToggleCell--expanded', 'footerCell', 'panel', 'panelHeader', 'panelWrapper', 'panelContent', 'panelFooter', 'paper', 'editBooleanCell', 'editInputCell', 'filler', 'filler--borderBottom', 'filler--pinnedLeft', 'filler--pinnedRight', 'filterForm', 'filterFormDeleteIcon', 'filterFormLogicOperatorInput', 'filterFormColumnInput', 'filterFormOperatorInput', 'filterFormValueInput', 'filterIcon', 'footerContainer', 'headerFilterRow', 'iconButtonContainer', 'iconSeparator', 'main', 'main--hasPinnedRight', 'main--hasSkeletonLoadingOverlay', 'menu', 'menuIcon', 'menuIconButton', 'menuOpen', 'menuList', 'overlay', 'overlayWrapper', 'overlayWrapperInner', 'root', 'root--densityStandard', 'root--densityComfortable', 'root--densityCompact', 'root--disableUserSelection', 'root--noToolbar', 'row', 'row--editable', 'row--editing', 'row--firstVisible', 'row--lastVisible', 'row--dragging', 'row--dynamicHeight', 'row--detailPanelExpanded', 'row--borderBottom', 'rowReorderCellPlaceholder', 'rowCount', 'rowReorderCellContainer', 'rowReorderCell', 'rowReorderCell--draggable', 'rowSkeleton', 'scrollArea--left', 'scrollArea--right', 'scrollArea', 'scrollbar', 'scrollbar--vertical', 'scrollbar--horizontal', 'scrollbarFiller', 'scrollbarFiller--header', 'scrollbarFiller--borderTop', 'scrollbarFiller--borderBottom', 'scrollbarFiller--pinnedRight', 'selectedRowCount', 'sortIcon', 'toolbarContainer', 'toolbarFilterList', 'virtualScroller', 'virtualScroller--hasScrollX', 'virtualScrollerContent', 'virtualScrollerContent--overflowed', 'virtualScrollerRenderZone', 'pinnedColumns', 'withVerticalBorder', 'withBorderColor', 'cell--withRightBorder', 'cell--withLeftBorder', 'columnHeader--withRightBorder', 'columnHeader--withLeftBorder', 'treeDataGroupingCell', 'treeDataGroupingCellToggle', 'treeDataGroupingCellLoadingContainer', 'groupingCriteriaCell', 'groupingCriteriaCellToggle', 'groupingCriteriaCellLoadingContainer', 'pinnedRows', 'pinnedRows--top', 'pinnedRows--bottom', 'pinnedRowsRenderZone']);","import * as React from 'react';\nimport { fastObjectShallowCompare } from '@mui/x-internals/fastObjectShallowCompare';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport { useLazyRef } from \"./useLazyRef.js\";\nfunction isOutputSelector(selector) {\n  return selector.acceptsApiRef;\n}\n// TODO v8: Remove this function\nfunction applySelector(apiRef, selector) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef);\n  }\n  return selector(apiRef.current.state);\n}\n\n// TODO v8: Rename this function to `applySelector`\nfunction applySelectorV8(apiRef, selector, args, instanceId) {\n  if (isOutputSelector(selector)) {\n    return selector(apiRef, args);\n  }\n  return selector(apiRef.current.state, instanceId);\n}\nconst defaultCompare = Object.is;\nexport const objectShallowCompare = fastObjectShallowCompare;\nconst arrayShallowCompare = (a, b) => {\n  if (a === b) {\n    return true;\n  }\n  return a.length === b.length && a.every((v, i) => v === b[i]);\n};\nexport const argsEqual = (prev, curr) => {\n  let fn = Object.is;\n  if (curr instanceof Array) {\n    fn = arrayShallowCompare;\n  } else if (curr instanceof Object) {\n    fn = objectShallowCompare;\n  }\n  return fn(prev, curr);\n};\nconst createRefs = () => ({\n  state: null,\n  equals: null,\n  selector: null,\n  args: undefined\n});\nconst EMPTY = [];\nconst emptyGetSnapshot = () => null;\n\n// TODO v8: Remove this function\nexport const useGridSelector = (apiRef, selector, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelector(apiRef, selector));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  const subscribe = React.useCallback(() => {\n    if (refs.current.subscription) {\n      return null;\n    }\n    refs.current.subscription = apiRef.current.store.subscribe(() => {\n      const newState = applySelector(apiRef, refs.current.selector);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n    return null;\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  EMPTY);\n  const unsubscribe = React.useCallback(() => {\n    return () => {\n      if (refs.current.subscription) {\n        refs.current.subscription();\n        refs.current.subscription = undefined;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, EMPTY);\n  useSyncExternalStore(unsubscribe, subscribe, emptyGetSnapshot);\n  return state;\n};\n\n// TODO v8: Rename this function to `useGridSelector`\nexport const useGridSelectorV8 = (apiRef, selector, args = undefined, equals = defaultCompare) => {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!apiRef.current.state) {\n      warnOnce(['MUI X: `useGridSelector` has been called before the initialization of the state.', 'This hook can only be used inside the context of the grid.']);\n    }\n  }\n  const refs = useLazyRef(createRefs);\n  const didInit = refs.current.selector !== null;\n  const [state, setState] = React.useState(\n  // We don't use an initialization function to avoid allocations\n  didInit ? null : applySelectorV8(apiRef, selector, args, apiRef.current.instanceId));\n  refs.current.state = state;\n  refs.current.equals = equals;\n  refs.current.selector = selector;\n  const prevArgs = refs.current.args;\n  refs.current.args = args;\n  if (didInit && !argsEqual(prevArgs, args)) {\n    const newState = applySelectorV8(apiRef, refs.current.selector, refs.current.args, apiRef.current.instanceId);\n    if (!refs.current.equals(refs.current.state, newState)) {\n      refs.current.state = newState;\n      setState(newState);\n    }\n  }\n  const subscribe = React.useCallback(() => {\n    if (refs.current.subscription) {\n      return null;\n    }\n    refs.current.subscription = apiRef.current.store.subscribe(() => {\n      const newState = applySelectorV8(apiRef, refs.current.selector, refs.current.args, apiRef.current.instanceId);\n      if (!refs.current.equals(refs.current.state, newState)) {\n        refs.current.state = newState;\n        setState(newState);\n      }\n    });\n    return null;\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  EMPTY);\n  const unsubscribe = React.useCallback(() => {\n    return () => {\n      if (refs.current.subscription) {\n        refs.current.subscription();\n        refs.current.subscription = undefined;\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, EMPTY);\n  useSyncExternalStore(unsubscribe, subscribe, emptyGetSnapshot);\n  return state;\n};","import * as React from 'react';\nexport const GridPrivateApiContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridPrivateApiContext.displayName = 'GridPrivateApiContext';\n}\nexport function useGridPrivateApiContext() {\n  const privateApiRef = React.useContext(GridPrivateApiContext);\n  if (privateApiRef === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid private context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return privateApiRef;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { alpha, styled, darken, lighten, decomposeColor, recomposeColor } from '@mui/material/styles';\nimport { gridClasses as c } from \"../../constants/gridClasses.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nfunction getBorderColor(theme) {\n  if (theme.vars) {\n    return theme.vars.palette.TableCell.border;\n  }\n  if (theme.palette.mode === 'light') {\n    return lighten(alpha(theme.palette.divider, 1), 0.88);\n  }\n  return darken(alpha(theme.palette.divider, 1), 0.68);\n}\nconst columnHeaderStyles = {\n  [`& .${c.iconButtonContainer}`]: {\n    visibility: 'visible',\n    width: 'auto'\n  },\n  [`& .${c.menuIcon}`]: {\n    width: 'auto',\n    visibility: 'visible'\n  }\n};\nconst columnSeparatorTargetSize = 10;\nconst columnSeparatorOffset = -5;\nconst focusOutlineWidth = 1;\nconst separatorIconDragStyles = {\n  width: 3,\n  rx: 1.5,\n  x: 10.5\n};\n\n// Emotion thinks it knows better than us which selector we should use.\n// https://github.com/emotion-js/emotion/issues/1105#issuecomment-1722524968\nconst ignoreSsrWarning = '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\nconst shouldShowBorderTopRightRadiusSelector = state => state.dimensions.hasScrollX && (!state.dimensions.hasScrollY || state.dimensions.scrollbarSize === 0);\nexport const GridRootStyles = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [\n  // Root overrides\n  styles.root, {\n    [`&.${c.autoHeight}`]: styles.autoHeight\n  }, {\n    [`&.${c.autosizing}`]: styles.autosizing\n  }, {\n    [`&.${c['root--densityStandard']}`]: styles['root--densityStandard']\n  }, {\n    [`&.${c['root--densityComfortable']}`]: styles['root--densityComfortable']\n  }, {\n    [`&.${c['root--densityCompact']}`]: styles['root--densityCompact']\n  }, {\n    [`&.${c['root--disableUserSelection']}`]: styles['root--disableUserSelection']\n  }, {\n    [`&.${c['root--noToolbar']}`]: styles['root--noToolbar']\n  }, {\n    [`&.${c.withVerticalBorder}`]: styles.withVerticalBorder\n  },\n  // Child element overrides\n  // - Only declare overrides here for class names that are not applied to `styled` components.\n  // - For `styled` components, declare overrides in the component itself.\n  {\n    [`& .${c.actionsCell}`]: styles.actionsCell\n  }, {\n    [`& .${c.booleanCell}`]: styles.booleanCell\n  }, {\n    [`& .${c.cell}`]: styles.cell\n  }, {\n    [`& .${c['cell--editable']}`]: styles['cell--editable']\n  }, {\n    [`& .${c['cell--editing']}`]: styles['cell--editing']\n  }, {\n    [`& .${c['cell--flex']}`]: styles['cell--flex']\n  }, {\n    [`& .${c['cell--pinnedLeft']}`]: styles['cell--pinnedLeft']\n  }, {\n    [`& .${c['cell--pinnedRight']}`]: styles['cell--pinnedRight']\n  }, {\n    [`& .${c['cell--rangeBottom']}`]: styles['cell--rangeBottom']\n  }, {\n    [`& .${c['cell--rangeLeft']}`]: styles['cell--rangeLeft']\n  }, {\n    [`& .${c['cell--rangeRight']}`]: styles['cell--rangeRight']\n  }, {\n    [`& .${c['cell--rangeTop']}`]: styles['cell--rangeTop']\n  }, {\n    [`& .${c['cell--selectionMode']}`]: styles['cell--selectionMode']\n  }, {\n    [`& .${c['cell--textCenter']}`]: styles['cell--textCenter']\n  }, {\n    [`& .${c['cell--textLeft']}`]: styles['cell--textLeft']\n  }, {\n    [`& .${c['cell--textRight']}`]: styles['cell--textRight']\n  }, {\n    [`& .${c['cell--withLeftBorder']}`]: styles['cell--withLeftBorder']\n  }, {\n    [`& .${c['cell--withRightBorder']}`]: styles['cell--withRightBorder']\n  }, {\n    [`& .${c.cellCheckbox}`]: styles.cellCheckbox\n  }, {\n    [`& .${c.cellEmpty}`]: styles.cellEmpty\n  }, {\n    [`& .${c.cellOffsetLeft}`]: styles.cellOffsetLeft\n  }, {\n    [`& .${c.cellSkeleton}`]: styles.cellSkeleton\n  }, {\n    [`& .${c.checkboxInput}`]: styles.checkboxInput\n  }, {\n    [`& .${c.columnHeader}`]: styles.columnHeader\n  }, {\n    [`& .${c['columnHeader--alignCenter']}`]: styles['columnHeader--alignCenter']\n  }, {\n    [`& .${c['columnHeader--alignLeft']}`]: styles['columnHeader--alignLeft']\n  }, {\n    [`& .${c['columnHeader--alignRight']}`]: styles['columnHeader--alignRight']\n  }, {\n    [`& .${c['columnHeader--dragging']}`]: styles['columnHeader--dragging']\n  }, {\n    [`& .${c['columnHeader--emptyGroup']}`]: styles['columnHeader--emptyGroup']\n  }, {\n    [`& .${c['columnHeader--filledGroup']}`]: styles['columnHeader--filledGroup']\n  }, {\n    [`& .${c['columnHeader--filtered']}`]: styles['columnHeader--filtered']\n  }, {\n    [`& .${c['columnHeader--last']}`]: styles['columnHeader--last']\n  }, {\n    [`& .${c['columnHeader--lastUnpinned']}`]: styles['columnHeader--lastUnpinned']\n  }, {\n    [`& .${c['columnHeader--moving']}`]: styles['columnHeader--moving']\n  }, {\n    [`& .${c['columnHeader--numeric']}`]: styles['columnHeader--numeric']\n  }, {\n    [`& .${c['columnHeader--pinnedLeft']}`]: styles['columnHeader--pinnedLeft']\n  }, {\n    [`& .${c['columnHeader--pinnedRight']}`]: styles['columnHeader--pinnedRight']\n  }, {\n    [`& .${c['columnHeader--siblingFocused']}`]: styles['columnHeader--siblingFocused']\n  }, {\n    [`& .${c['columnHeader--sortable']}`]: styles['columnHeader--sortable']\n  }, {\n    [`& .${c['columnHeader--sorted']}`]: styles['columnHeader--sorted']\n  }, {\n    [`& .${c['columnHeader--withLeftBorder']}`]: styles['columnHeader--withLeftBorder']\n  }, {\n    [`& .${c['columnHeader--withRightBorder']}`]: styles['columnHeader--withRightBorder']\n  }, {\n    [`& .${c.columnHeaderCheckbox}`]: styles.columnHeaderCheckbox\n  }, {\n    [`& .${c.columnHeaderDraggableContainer}`]: styles.columnHeaderDraggableContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainer}`]: styles.columnHeaderTitleContainer\n  }, {\n    [`& .${c.columnHeaderTitleContainerContent}`]: styles.columnHeaderTitleContainerContent\n  }, {\n    [`& .${c.columnSeparator}`]: styles.columnSeparator\n  }, {\n    [`& .${c['columnSeparator--resizable']}`]: styles['columnSeparator--resizable']\n  }, {\n    [`& .${c['columnSeparator--resizing']}`]: styles['columnSeparator--resizing']\n  }, {\n    [`& .${c['columnSeparator--sideLeft']}`]: styles['columnSeparator--sideLeft']\n  }, {\n    [`& .${c['columnSeparator--sideRight']}`]: styles['columnSeparator--sideRight']\n  }, {\n    [`& .${c['container--bottom']}`]: styles['container--bottom']\n  }, {\n    [`& .${c['container--top']}`]: styles['container--top']\n  }, {\n    [`& .${c.detailPanelToggleCell}`]: styles.detailPanelToggleCell\n  }, {\n    [`& .${c['detailPanelToggleCell--expanded']}`]: styles['detailPanelToggleCell--expanded']\n  }, {\n    [`& .${c.editBooleanCell}`]: styles.editBooleanCell\n  }, {\n    [`& .${c.filterIcon}`]: styles.filterIcon\n  }, {\n    [`& .${c['filler--borderBottom']}`]: styles['filler--borderBottom']\n  }, {\n    [`& .${c['filler--pinnedLeft']}`]: styles['filler--pinnedLeft']\n  }, {\n    [`& .${c['filler--pinnedRight']}`]: styles['filler--pinnedRight']\n  }, {\n    [`& .${c.groupingCriteriaCell}`]: styles.groupingCriteriaCell\n  }, {\n    [`& .${c.groupingCriteriaCellLoadingContainer}`]: styles.groupingCriteriaCellLoadingContainer\n  }, {\n    [`& .${c.groupingCriteriaCellToggle}`]: styles.groupingCriteriaCellToggle\n  }, {\n    [`& .${c.headerFilterRow}`]: styles.headerFilterRow\n  }, {\n    [`& .${c.iconSeparator}`]: styles.iconSeparator\n  }, {\n    [`& .${c.menuIcon}`]: styles.menuIcon\n  }, {\n    [`& .${c.menuIconButton}`]: styles.menuIconButton\n  }, {\n    [`& .${c.menuList}`]: styles.menuList\n  }, {\n    [`& .${c.menuOpen}`]: styles.menuOpen\n  }, {\n    [`& .${c.overlayWrapperInner}`]: styles.overlayWrapperInner\n  }, {\n    [`& .${c.pinnedRows}`]: styles.pinnedRows\n  }, {\n    [`& .${c['pinnedRows--bottom']}`]: styles['pinnedRows--bottom']\n  }, {\n    [`& .${c['pinnedRows--top']}`]: styles['pinnedRows--top']\n  }, {\n    [`& .${c.row}`]: styles.row\n  }, {\n    [`& .${c['row--borderBottom']}`]: styles['row--borderBottom']\n  }, {\n    [`& .${c['row--detailPanelExpanded']}`]: styles['row--detailPanelExpanded']\n  }, {\n    [`& .${c['row--dragging']}`]: styles['row--dragging']\n  }, {\n    [`& .${c['row--dynamicHeight']}`]: styles['row--dynamicHeight']\n  }, {\n    [`& .${c['row--editable']}`]: styles['row--editable']\n  }, {\n    [`& .${c['row--editing']}`]: styles['row--editing']\n  }, {\n    [`& .${c['row--firstVisible']}`]: styles['row--firstVisible']\n  }, {\n    [`& .${c['row--lastVisible']}`]: styles['row--lastVisible']\n  }, {\n    [`& .${c.rowReorderCell}`]: styles.rowReorderCell\n  }, {\n    [`& .${c['rowReorderCell--draggable']}`]: styles['rowReorderCell--draggable']\n  }, {\n    [`& .${c.rowReorderCellContainer}`]: styles.rowReorderCellContainer\n  }, {\n    [`& .${c.rowReorderCellPlaceholder}`]: styles.rowReorderCellPlaceholder\n  }, {\n    [`& .${c.rowSkeleton}`]: styles.rowSkeleton\n  }, {\n    [`& .${c.scrollbar}`]: styles.scrollbar\n  }, {\n    [`& .${c['scrollbar--horizontal']}`]: styles['scrollbar--horizontal']\n  }, {\n    [`& .${c['scrollbar--vertical']}`]: styles['scrollbar--vertical']\n  }, {\n    [`& .${c.scrollbarFiller}`]: styles.scrollbarFiller\n  }, {\n    [`& .${c['scrollbarFiller--borderBottom']}`]: styles['scrollbarFiller--borderBottom']\n  }, {\n    [`& .${c['scrollbarFiller--borderTop']}`]: styles['scrollbarFiller--borderTop']\n  }, {\n    [`& .${c['scrollbarFiller--header']}`]: styles['scrollbarFiller--header']\n  }, {\n    [`& .${c['scrollbarFiller--pinnedRight']}`]: styles['scrollbarFiller--pinnedRight']\n  }, {\n    [`& .${c.sortIcon}`]: styles.sortIcon\n  }, {\n    [`& .${c.treeDataGroupingCell}`]: styles.treeDataGroupingCell\n  }, {\n    [`& .${c.treeDataGroupingCellLoadingContainer}`]: styles.treeDataGroupingCellLoadingContainer\n  }, {\n    [`& .${c.treeDataGroupingCellToggle}`]: styles.treeDataGroupingCellToggle\n  }, {\n    [`& .${c.withBorderColor}`]: styles.withBorderColor\n  }]\n})(({\n  theme: t\n}) => {\n  const apiRef = useGridPrivateApiContext();\n  const shouldShowBorderTopRightRadius = useGridSelector(apiRef, shouldShowBorderTopRightRadiusSelector);\n  const borderColor = getBorderColor(t);\n  const radius = t.shape.borderRadius;\n  const containerBackground = t.vars ? t.vars.palette.background.default : t.mixins.MuiDataGrid?.containerBackground ?? t.palette.background.default;\n  const pinnedBackground = t.mixins.MuiDataGrid?.pinnedBackground ?? containerBackground;\n  const overlayBackground = t.vars ? `rgba(${t.vars.palette.background.defaultChannel} / ${t.vars.palette.action.disabledOpacity})` : alpha(t.palette.background.default, t.palette.action.disabledOpacity);\n  const hoverOpacity = (t.vars || t).palette.action.hoverOpacity;\n  const hoverColor = (t.vars || t).palette.action.hover;\n  const selectedOpacity = (t.vars || t).palette.action.selectedOpacity;\n  const selectedHoverOpacity = t.vars ? `calc(${hoverOpacity} + ${selectedOpacity})` // TODO: Improve type\n  : hoverOpacity + selectedOpacity;\n  const selectedBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedOpacity})` : alpha(t.palette.primary.main, selectedOpacity);\n  const selectedHoverBackground = t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / ${selectedHoverOpacity})` : alpha(t.palette.primary.main, selectedHoverOpacity);\n  const blendFn = t.vars ? blendCssVars : blend;\n  const getPinnedBackgroundStyles = backgroundColor => ({\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      backgroundColor,\n      '&.Mui-selected': {\n        backgroundColor: blendFn(backgroundColor, selectedBackground, selectedOpacity),\n        '&:hover': {\n          backgroundColor: blendFn(backgroundColor, selectedBackground, selectedHoverOpacity)\n        }\n      }\n    }\n  });\n  const pinnedBackgroundColor = blendFn(pinnedBackground, hoverColor, hoverOpacity);\n  const pinnedHoverStyles = getPinnedBackgroundStyles(pinnedBackgroundColor);\n  const pinnedSelectedBackgroundColor = blendFn(pinnedBackground, selectedBackground, selectedOpacity);\n  const pinnedSelectedStyles = getPinnedBackgroundStyles(pinnedSelectedBackgroundColor);\n  const pinnedSelectedHoverBackgroundColor = blendFn(pinnedBackground, selectedHoverBackground, selectedHoverOpacity);\n  const pinnedSelectedHoverStyles = getPinnedBackgroundStyles(pinnedSelectedHoverBackgroundColor);\n  const selectedStyles = {\n    backgroundColor: selectedBackground,\n    '&:hover': {\n      backgroundColor: selectedHoverBackground,\n      // Reset on touch devices, it doesn't add specificity\n      '@media (hover: none)': {\n        backgroundColor: selectedBackground\n      }\n    }\n  };\n  const gridStyle = _extends({\n    '--unstable_DataGrid-radius': typeof radius === 'number' ? `${radius}px` : radius,\n    '--unstable_DataGrid-headWeight': t.typography.fontWeightMedium,\n    '--unstable_DataGrid-overlayBackground': overlayBackground,\n    '--DataGrid-containerBackground': containerBackground,\n    '--DataGrid-pinnedBackground': pinnedBackground,\n    '--DataGrid-rowBorderColor': borderColor,\n    '--DataGrid-cellOffsetMultiplier': 2,\n    '--DataGrid-width': '0px',\n    '--DataGrid-hasScrollX': '0',\n    '--DataGrid-hasScrollY': '0',\n    '--DataGrid-scrollbarSize': '10px',\n    '--DataGrid-rowWidth': '0px',\n    '--DataGrid-columnsTotalWidth': '0px',\n    '--DataGrid-leftPinnedWidth': '0px',\n    '--DataGrid-rightPinnedWidth': '0px',\n    '--DataGrid-headerHeight': '0px',\n    '--DataGrid-headersTotalHeight': '0px',\n    '--DataGrid-topContainerHeight': '0px',\n    '--DataGrid-bottomContainerHeight': '0px',\n    flex: 1,\n    boxSizing: 'border-box',\n    position: 'relative',\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderColor,\n    borderRadius: 'var(--unstable_DataGrid-radius)',\n    color: (t.vars || t).palette.text.primary\n  }, t.typography.body2, {\n    outline: 'none',\n    height: '100%',\n    display: 'flex',\n    minWidth: 0,\n    // See https://github.com/mui/mui-x/issues/8547\n    minHeight: 0,\n    flexDirection: 'column',\n    overflow: 'hidden',\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    [`.${c.main} > *:first-child${ignoreSsrWarning}`]: {\n      borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n      borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n    },\n    [`&.${c.autoHeight}`]: {\n      height: 'auto'\n    },\n    [`&.${c.autosizing}`]: {\n      [`& .${c.columnHeaderTitleContainerContent} > *`]: {\n        overflow: 'visible !important'\n      },\n      '@media (hover: hover)': {\n        [`& .${c.menuIcon}`]: {\n          width: '0 !important',\n          visibility: 'hidden !important'\n        }\n      },\n      [`& .${c.cell}`]: {\n        overflow: 'visible !important',\n        whiteSpace: 'nowrap',\n        minWidth: 'max-content !important',\n        maxWidth: 'max-content !important'\n      },\n      [`& .${c.groupingCriteriaCell}`]: {\n        width: 'unset'\n      },\n      [`& .${c.treeDataGroupingCell}`]: {\n        width: 'unset'\n      }\n    },\n    [`& .${c.columnHeader}, & .${c.cell}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      padding: '0 10px',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.columnHeader}:focus-within, & .${c.cell}:focus-within`]: {\n      outline: `solid ${t.vars ? `rgba(${t.vars.palette.primary.mainChannel} / 0.5)` : alpha(t.palette.primary.main, 0.5)} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    [`& .${c.columnHeader}:focus, & .${c.cell}:focus`]: {\n      outline: `solid ${t.palette.primary.main} ${focusOutlineWidth}px`,\n      outlineOffset: focusOutlineWidth * -1\n    },\n    // Hide the column separator when:\n    // - the column is focused and has an outline\n    // - the next column is focused and has an outline\n    // - the column has a left or right border\n    // - the next column is pinned right and has a left border\n    [`& .${c.columnHeader}:focus,\n      & .${c['columnHeader--withLeftBorder']},\n      & .${c['columnHeader--withRightBorder']},\n      & .${c['columnHeader--siblingFocused']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--lastUnpinned']},\n      & .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}\n      `]: {\n      [`& .${c.columnSeparator}`]: {\n        opacity: 0\n      },\n      // Show resizable separators at all times on touch devices\n      '@media (hover: none)': {\n        [`& .${c['columnSeparator--resizable']}`]: {\n          opacity: 1\n        }\n      },\n      [`& .${c['columnSeparator--resizable']}:hover`]: {\n        opacity: 1\n      }\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] [aria-colindex=\"1\"]`]: {\n      borderTopLeftRadius: 'calc(var(--unstable_DataGrid-radius) - 1px)'\n    },\n    [`&.${c['root--noToolbar']} [aria-rowindex=\"1\"] .${c['columnHeader--last']}`]: {\n      borderTopRightRadius: shouldShowBorderTopRightRadius ? 'calc(var(--unstable_DataGrid-radius) - 1px)' : undefined\n    },\n    [`& .${c.columnHeaderCheckbox}, & .${c.cellCheckbox}`]: {\n      padding: 0,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeader}`]: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['virtualScroller--hasScrollX']} .${c['columnHeader--last']}`]: {\n      overflow: 'hidden'\n    },\n    [`& .${c['columnHeader--sorted']} .${c.iconButtonContainer}, & .${c['columnHeader--filtered']} .${c.iconButtonContainer}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}) .${c.sortIcon}`]: {\n      opacity: 0,\n      transition: t.transitions.create(['opacity'], {\n        duration: t.transitions.duration.shorter\n      })\n    },\n    [`& .${c.columnHeaderTitleContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: t.spacing(0.25),\n      minWidth: 0,\n      flex: 1,\n      whiteSpace: 'nowrap',\n      overflow: 'hidden'\n    },\n    [`& .${c.columnHeaderTitleContainerContent}`]: {\n      overflow: 'hidden',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`& .${c['columnHeader--filledGroup']} .${c.columnHeaderTitleContainer}`]: {\n      borderBottomWidth: '1px',\n      borderBottomStyle: 'solid',\n      boxSizing: 'border-box'\n    },\n    [`& .${c.sortIcon}, & .${c.filterIcon}`]: {\n      fontSize: 'inherit'\n    },\n    [`& .${c['columnHeader--sortable']}`]: {\n      cursor: 'pointer'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.columnHeaderTitleContainer}`]: {\n      justifyContent: 'center'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.columnHeaderDraggableContainer}, & .${c['columnHeader--alignRight']} .${c.columnHeaderTitleContainer}`]: {\n      flexDirection: 'row-reverse'\n    },\n    [`& .${c['columnHeader--alignCenter']} .${c.menuIcon}`]: {\n      marginLeft: 'auto'\n    },\n    [`& .${c['columnHeader--alignRight']} .${c.menuIcon}`]: {\n      marginRight: 'auto',\n      marginLeft: -5\n    },\n    [`& .${c['columnHeader--moving']}`]: {\n      backgroundColor: (t.vars || t).palette.action.hover\n    },\n    [`& .${c['columnHeader--pinnedLeft']}, & .${c['columnHeader--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 4,\n      // Should be above the column separator\n      background: 'var(--DataGrid-pinnedBackground)'\n    },\n    [`& .${c.columnSeparator}`]: {\n      position: 'absolute',\n      overflow: 'hidden',\n      zIndex: 3,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      maxWidth: columnSeparatorTargetSize,\n      color: borderColor\n    },\n    [`& .${c.columnHeaders}`]: {\n      width: 'var(--DataGrid-rowWidth)'\n    },\n    '@media (hover: hover)': {\n      [`& .${c.columnHeader}:hover`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:not(.${c['columnHeader--sorted']}):hover .${c.sortIcon}`]: {\n        opacity: 0.5\n      }\n    },\n    '@media (hover: none)': {\n      [`& .${c.columnHeader}`]: columnHeaderStyles,\n      [`& .${c.columnHeader}:focus,\n        & .${c['columnHeader--siblingFocused']}`]: {\n        [`.${c['columnSeparator--resizable']}`]: {\n          color: (t.vars || t).palette.primary.main\n        }\n      }\n    },\n    [`& .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset\n    },\n    [`& .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideLeft']}`]: {\n      left: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnHeader--withRightBorder']} .${c['columnSeparator--sideRight']}`]: {\n      right: columnSeparatorOffset - 0.5\n    },\n    [`& .${c['columnSeparator--resizable']}`]: {\n      cursor: 'col-resize',\n      touchAction: 'none',\n      [`&.${c['columnSeparator--resizing']}`]: {\n        color: (t.vars || t).palette.primary.main\n      },\n      // Always appear as draggable on touch devices\n      '@media (hover: none)': {\n        [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n      },\n      '@media (hover: hover)': {\n        '&:hover': {\n          color: (t.vars || t).palette.primary.main,\n          [`& .${c.iconSeparator} rect`]: separatorIconDragStyles\n        }\n      },\n      '& svg': {\n        pointerEvents: 'none'\n      }\n    },\n    [`& .${c.iconSeparator}`]: {\n      color: 'inherit',\n      transition: t.transitions.create(['color', 'width'], {\n        duration: t.transitions.duration.shortest\n      })\n    },\n    [`& .${c.menuIcon}`]: {\n      width: 0,\n      visibility: 'hidden',\n      fontSize: 20,\n      marginRight: -5,\n      display: 'flex',\n      alignItems: 'center'\n    },\n    [`.${c.menuOpen}`]: {\n      visibility: 'visible',\n      width: 'auto'\n    },\n    [`& .${c.headerFilterRow}`]: {\n      [`& .${c.columnHeader}`]: {\n        boxSizing: 'border-box',\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      }\n    },\n    /* Bottom border of the top-container */\n    [`& .${c['row--borderBottom']} .${c.columnHeader},\n      & .${c['row--borderBottom']} .${c.filler},\n      & .${c['row--borderBottom']} .${c.scrollbarFiller}`]: {\n      borderBottom: `1px solid var(--DataGrid-rowBorderColor)`\n    },\n    [`& .${c['row--borderBottom']} .${c.cell}`]: {\n      borderBottom: `1px solid var(--rowBorderColor)`\n    },\n    /* Row styles */\n    [`.${c.row}`]: {\n      display: 'flex',\n      width: 'var(--DataGrid-rowWidth)',\n      breakInside: 'avoid',\n      // Avoid the row to be broken in two different print pages.\n\n      '--rowBorderColor': 'var(--DataGrid-rowBorderColor)',\n      [`&.${c['row--firstVisible']}`]: {\n        '--rowBorderColor': 'transparent'\n      },\n      '&:hover': {\n        backgroundColor: (t.vars || t).palette.action.hover,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      [`&.${c.rowSkeleton}:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['container--top']}, & .${c['container--bottom']}`]: {\n      '[role=row]': {\n        background: 'var(--DataGrid-containerBackground)'\n      }\n    },\n    /* Cell styles */\n    [`& .${c.cell}`]: {\n      flex: '0 0 auto',\n      height: 'var(--height)',\n      width: 'var(--width)',\n      lineHeight: 'calc(var(--height) - 1px)',\n      // -1px for the border\n\n      boxSizing: 'border-box',\n      borderTop: `1px solid var(--rowBorderColor)`,\n      overflow: 'hidden',\n      whiteSpace: 'nowrap',\n      textOverflow: 'ellipsis',\n      '&.Mui-selected': selectedStyles\n    },\n    [`& .${c['virtualScrollerContent--overflowed']} .${c['row--lastVisible']} .${c.cell}`]: {\n      borderTopColor: 'transparent'\n    },\n    [`& .${c['pinnedRows--top']} :first-of-type`]: {\n      [`& .${c.cell}, .${c.scrollbarFiller}`]: {\n        borderTop: 'none'\n      }\n    },\n    [`&.${c['root--disableUserSelection']} .${c.cell}`]: {\n      userSelect: 'none'\n    },\n    [`& .${c['row--dynamicHeight']} > .${c.cell}`]: {\n      whiteSpace: 'initial',\n      lineHeight: 'inherit'\n    },\n    [`& .${c.cellEmpty}`]: {\n      flex: 1,\n      padding: 0,\n      height: 'unset'\n    },\n    [`& .${c.cell}.${c['cell--selectionMode']}`]: {\n      cursor: 'default'\n    },\n    [`& .${c.cell}.${c['cell--editing']}`]: {\n      padding: 1,\n      display: 'flex',\n      boxShadow: t.shadows[2],\n      backgroundColor: (t.vars || t).palette.background.paper,\n      '&:focus-within': {\n        outline: `${focusOutlineWidth}px solid ${(t.vars || t).palette.primary.main}`,\n        outlineOffset: focusOutlineWidth * -1\n      }\n    },\n    [`& .${c['row--editing']}`]: {\n      boxShadow: t.shadows[2]\n    },\n    [`& .${c['row--editing']} .${c.cell}`]: {\n      boxShadow: t.shadows[0],\n      backgroundColor: (t.vars || t).palette.background.paper\n    },\n    [`& .${c.editBooleanCell}`]: {\n      display: 'flex',\n      height: '100%',\n      width: '100%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c.booleanCell}[data-value=\"true\"]`]: {\n      color: (t.vars || t).palette.text.secondary\n    },\n    [`& .${c.booleanCell}[data-value=\"false\"]`]: {\n      color: (t.vars || t).palette.text.disabled\n    },\n    [`& .${c.actionsCell}`]: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      gridGap: t.spacing(1)\n    },\n    [`& .${c.rowReorderCell}`]: {\n      display: 'inline-flex',\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['rowReorderCell--draggable']}`]: {\n      cursor: 'move',\n      opacity: 1\n    },\n    [`& .${c.rowReorderCellContainer}`]: {\n      padding: 0,\n      display: 'flex',\n      alignItems: 'stretch'\n    },\n    [`.${c.withBorderColor}`]: {\n      borderColor\n    },\n    [`& .${c['cell--withLeftBorder']}, & .${c['columnHeader--withLeftBorder']}`]: {\n      borderLeftColor: 'var(--DataGrid-rowBorderColor)',\n      borderLeftWidth: '1px',\n      borderLeftStyle: 'solid'\n    },\n    [`& .${c['cell--withRightBorder']}, & .${c['columnHeader--withRightBorder']}`]: {\n      borderRightColor: 'var(--DataGrid-rowBorderColor)',\n      borderRightWidth: '1px',\n      borderRightStyle: 'solid'\n    },\n    [`& .${c['cell--flex']}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      lineHeight: 'inherit'\n    },\n    [`& .${c['cell--textLeft']}`]: {\n      textAlign: 'left',\n      justifyContent: 'flex-start'\n    },\n    [`& .${c['cell--textRight']}`]: {\n      textAlign: 'right',\n      justifyContent: 'flex-end'\n    },\n    [`& .${c['cell--textCenter']}`]: {\n      textAlign: 'center',\n      justifyContent: 'center'\n    },\n    [`& .${c['cell--pinnedLeft']}, & .${c['cell--pinnedRight']}`]: {\n      position: 'sticky',\n      zIndex: 3,\n      background: 'var(--DataGrid-pinnedBackground)',\n      '&.Mui-selected': {\n        backgroundColor: pinnedSelectedBackgroundColor\n      }\n    },\n    [`& .${c.virtualScrollerContent} .${c.row}`]: {\n      '&:hover': pinnedHoverStyles,\n      '&.Mui-selected': pinnedSelectedStyles,\n      '&.Mui-selected:hover': pinnedSelectedHoverStyles\n    },\n    [`& .${c.cellOffsetLeft}`]: {\n      flex: '0 0 auto',\n      display: 'inline-block'\n    },\n    [`& .${c.cellSkeleton}`]: {\n      flex: '0 0 auto',\n      height: '100%',\n      display: 'inline-flex',\n      alignItems: 'center'\n    },\n    [`& .${c.columnHeaderDraggableContainer}`]: {\n      display: 'flex',\n      width: '100%',\n      height: '100%'\n    },\n    [`& .${c.rowReorderCellPlaceholder}`]: {\n      display: 'none'\n    },\n    [`& .${c['columnHeader--dragging']}, & .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity\n    },\n    [`& .${c['row--dragging']}`]: {\n      background: (t.vars || t).palette.background.paper,\n      padding: '0 12px',\n      borderRadius: 'var(--unstable_DataGrid-radius)',\n      opacity: (t.vars || t).palette.action.disabledOpacity,\n      [`& .${c.rowReorderCellPlaceholder}`]: {\n        display: 'flex'\n      }\n    },\n    [`& .${c.treeDataGroupingCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.treeDataGroupingCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    [`& .${c.treeDataGroupingCellLoadingContainer}, .${c.groupingCriteriaCellLoadingContainer}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100%'\n    },\n    [`& .${c.groupingCriteriaCell}`]: {\n      display: 'flex',\n      alignItems: 'center',\n      width: '100%'\n    },\n    [`& .${c.groupingCriteriaCellToggle}`]: {\n      flex: '0 0 28px',\n      alignSelf: 'stretch',\n      marginRight: t.spacing(2)\n    },\n    /* ScrollbarFiller styles */\n    [`.${c.scrollbarFiller}`]: {\n      minWidth: 'calc(var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize))',\n      alignSelf: 'stretch',\n      [`&.${c['scrollbarFiller--borderTop']}`]: {\n        borderTop: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--borderBottom']}`]: {\n        borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n      },\n      [`&.${c['scrollbarFiller--pinnedRight']}`]: {\n        backgroundColor: 'var(--DataGrid-pinnedBackground)',\n        position: 'sticky',\n        right: 0\n      }\n    },\n    [`& .${c.filler}`]: {\n      flex: '1 0 auto'\n    },\n    [`& .${c['filler--borderBottom']}`]: {\n      borderBottom: '1px solid var(--DataGrid-rowBorderColor)'\n    },\n    /* Hide grid rows, row filler, and vertical scrollbar when skeleton overlay is visible */\n    [`& .${c['main--hasSkeletonLoadingOverlay']}`]: {\n      [`& .${c.virtualScrollerContent}`]: {\n        // We use visibility hidden so that the virtual scroller content retains its height.\n        // Position fixed is used to remove the virtual scroller content from the flow.\n        // https://github.com/mui/mui-x/issues/14061\n        position: 'fixed',\n        visibility: 'hidden'\n      },\n      [`& .${c['scrollbar--vertical']}, & .${c.pinnedRows}, & .${c.virtualScroller} > .${c.filler}`]: {\n        display: 'none'\n      }\n    }\n  });\n  return gridStyle;\n});\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n */\nfunction blend(background, overlay, opacity, gamma = 1) {\n  const f = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [f(backgroundColor.values[0], overlayColor.values[0]), f(backgroundColor.values[1], overlayColor.values[1]), f(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}\nconst removeOpacity = color => `rgb(from ${color} r g b / 1)`;\nfunction blendCssVars(background, overlay, opacity) {\n  return `color-mix(in srgb,${background}, ${removeOpacity(overlay)} calc(${opacity} * 100%))`;\n}","import { lruMemoize, createSelectorCreator } from 'reselect';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { argsEqual } from \"../hooks/utils/useGridSelector.js\";\nconst reselectCreateSelector = createSelectorCreator({\n  memoize: lruMemoize,\n  memoizeOptions: {\n    maxSize: 1,\n    equalityCheck: Object.is\n  }\n});\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `OutputSelector`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `SelectorArgs`\n\n// TODO v8: Remove this type\n\n// TODO v8: Rename this type to `CreateSelectorFunction`\n\nconst cache = new WeakMap();\nfunction checkIsAPIRef(value) {\n  return 'current' in value && 'instanceId' in value.current;\n}\nconst DEFAULT_INSTANCE_ID = {\n  id: 'default'\n};\n\n// TODO v8: Remove this function\nexport const createSelector = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      const ve = e(state, instanceId);\n      return f(va, vb, vc, vd, ve);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      const vd = d(state, instanceId);\n      return e(va, vb, vc, vd);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      const vc = c(state, instanceId);\n      return d(va, vb, vc);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      const vb = b(state, instanceId);\n      return c(va, vb);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, instanceId);\n      return b(va);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelector`\nexport const createSelectorV8 = (a, b, c, d, e, f, ...other) => {\n  if (other.length > 0) {\n    throw new Error('Unsupported number of selectors');\n  }\n  let selector;\n\n  // eslint-disable-next-line id-denylist\n  if (a && b && c && d && e && f) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      const ve = e(state, args, instanceId);\n      return f(va, vb, vc, vd, ve, args);\n    };\n    // eslint-disable-next-line id-denylist\n  } else if (a && b && c && d && e) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      const vd = d(state, args, instanceId);\n      return e(va, vb, vc, vd, args);\n    };\n  } else if (a && b && c && d) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      const vc = c(state, args, instanceId);\n      return d(va, vb, vc, args);\n    };\n  } else if (a && b && c) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      const vb = b(state, args, instanceId);\n      return c(va, vb, args);\n    };\n  } else if (a && b) {\n    selector = (stateOrApiRef, args, instanceIdParam) => {\n      const isAPIRef = checkIsAPIRef(stateOrApiRef);\n      const instanceId = instanceIdParam ?? (isAPIRef ? stateOrApiRef.current.instanceId : DEFAULT_INSTANCE_ID);\n      const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n      const va = a(state, args, instanceId);\n      return b(va, args);\n    };\n  } else {\n    throw new Error('Missing arguments');\n  }\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Remove this function\nexport const createSelectorMemoized = (...args) => {\n  const selector = (stateOrApiRef, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, cacheKey);\n    }\n    const fn = reselectCreateSelector(...args);\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};\n\n// TODO v8: Rename this function to `createSelectorMemoized`\nexport const createSelectorMemoizedV8 = (...args) => {\n  const selector = (stateOrApiRef, selectorArgs, instanceId) => {\n    const isAPIRef = checkIsAPIRef(stateOrApiRef);\n    const cacheKey = isAPIRef ? stateOrApiRef.current.instanceId : instanceId ?? DEFAULT_INSTANCE_ID;\n    const state = isAPIRef ? stateOrApiRef.current.state : stateOrApiRef;\n    if (process.env.NODE_ENV !== 'production') {\n      if (cacheKey.id === 'default') {\n        warnOnce(['MUI X: A selector was called without passing the instance ID, which may impact the performance of the grid.', 'To fix, call it with `apiRef`, for example `mySelector(apiRef)`, or pass the instance ID explicitly, for example `mySelector(state, apiRef.current.instanceId)`.']);\n      }\n    }\n    const cacheArgsInit = cache.get(cacheKey);\n    const cacheArgs = cacheArgsInit ?? new Map();\n    const cacheFn = cacheArgs?.get(args);\n    if (cacheArgs && cacheFn) {\n      if (!argsEqual(cacheFn.selectorArgs, selectorArgs)) {\n        const reselectArgs = selectorArgs !== undefined ? [...args.slice(0, args.length - 1), () => selectorArgs, args[args.length - 1]] : args;\n        const fn = reselectCreateSelector(...reselectArgs);\n        fn.selectorArgs = selectorArgs;\n        cacheArgs.set(args, fn);\n        return fn(state, selectorArgs, cacheKey);\n      }\n      // We pass the cache key because the called selector might have as\n      // dependency another selector created with this `createSelector`.\n      return cacheFn(state, selectorArgs, cacheKey);\n    }\n    const reselectArgs = selectorArgs !== undefined ? [...args.slice(0, args.length - 1), () => selectorArgs, args[args.length - 1]] : args;\n    const fn = reselectCreateSelector(...reselectArgs);\n    fn.selectorArgs = selectorArgs;\n    if (!cacheArgsInit) {\n      cache.set(cacheKey, cacheArgs);\n    }\n    cacheArgs.set(args, fn);\n    return fn(state, selectorArgs, cacheKey);\n  };\n\n  // We use this property to detect if the selector was created with createSelector\n  // or it's only a simple function the receives the state and returns part of it.\n  selector.acceptsApiRef = true;\n  return selector;\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const COMPACT_DENSITY_FACTOR = 0.7;\nexport const COMFORTABLE_DENSITY_FACTOR = 1.3;\nconst DENSITY_FACTORS = {\n  compact: COMPACT_DENSITY_FACTOR,\n  comfortable: COMFORTABLE_DENSITY_FACTOR,\n  standard: 1\n};\nexport const gridDensitySelector = state => state.density;\nexport const gridDensityFactorSelector = createSelector(gridDensitySelector, density => DENSITY_FACTORS[density]);","import { useSyncExternalStore } from 'use-sync-external-store/shim';\nconst emptySubscribe = () => () => {};\nconst clientSnapshot = () => false;\nconst serverSnapshot = () => true;\nexport const useIsSSR = () => useSyncExternalStore(emptySubscribe, clientSnapshot, serverSnapshot);","export let GridPinnedColumnPosition = /*#__PURE__*/function (GridPinnedColumnPosition) {\n  GridPinnedColumnPosition[\"LEFT\"] = \"left\";\n  GridPinnedColumnPosition[\"RIGHT\"] = \"right\";\n  return GridPinnedColumnPosition;\n}({});\nexport const EMPTY_PINNED_COLUMN_FIELDS = {\n  left: [],\n  right: []\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { gridIsRtlSelector } from \"../../core/gridCoreSelector.js\";\n\n/**\n * Get the columns state\n * @category Columns\n */\nexport const gridColumnsStateSelector = state => state.columns;\n\n/**\n * Get an array of column fields in the order rendered on screen.\n * @category Columns\n */\nexport const gridColumnFieldsSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.orderedFields);\n\n/**\n * Get the columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridColumnLookupSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.lookup);\n\n/**\n * Get an array of column definitions in the order rendered on screen..\n * @category Columns\n */\nexport const gridColumnDefinitionsSelector = createSelectorMemoized(gridColumnFieldsSelector, gridColumnLookupSelector, (allFields, lookup) => allFields.map(field => lookup[field]));\n\n/**\n * Get the column visibility model, containing the visibility status of each column.\n * If a column is not registered in the model, it is visible.\n * @category Visible Columns\n */\nexport const gridColumnVisibilityModelSelector = createSelector(gridColumnsStateSelector, columnsState => columnsState.columnVisibilityModel);\n\n/**\n * Get the visible columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Visible Columns\n */\nexport const gridVisibleColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector, (columns, columnVisibilityModel) => columns.filter(column => columnVisibilityModel[column.field] !== false));\n\n/**\n * Get the field of each visible column.\n * @category Visible Columns\n */\nexport const gridVisibleColumnFieldsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => visibleColumns.map(column => column.field));\n\n/**\n * Get the visible pinned columns model.\n * @category Visible Columns\n */\nexport const gridPinnedColumnsSelector = state => state.pinnedColumns;\n\n/**\n * Get the visible pinned columns.\n * @category Visible Columns\n */\nexport const gridVisiblePinnedColumnDefinitionsSelector = createSelectorMemoized(gridColumnsStateSelector, gridPinnedColumnsSelector, gridVisibleColumnFieldsSelector, gridIsRtlSelector, (columnsState, model, visibleColumnFields, isRtl) => {\n  const visiblePinnedFields = filterVisibleColumns(model, visibleColumnFields, isRtl);\n  const visiblePinnedColumns = {\n    left: visiblePinnedFields.left.map(field => columnsState.lookup[field]),\n    right: visiblePinnedFields.right.map(field => columnsState.lookup[field])\n  };\n  return visiblePinnedColumns;\n});\nfunction filterVisibleColumns(pinnedColumns, columns, invert) {\n  if (!Array.isArray(pinnedColumns.left) && !Array.isArray(pinnedColumns.right)) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  if (pinnedColumns.left?.length === 0 && pinnedColumns.right?.length === 0) {\n    return EMPTY_PINNED_COLUMN_FIELDS;\n  }\n  const filter = (newPinnedColumns, remainingColumns) => {\n    if (!Array.isArray(newPinnedColumns)) {\n      return [];\n    }\n    return newPinnedColumns.filter(field => remainingColumns.includes(field));\n  };\n  const leftPinnedColumns = filter(pinnedColumns.left, columns);\n  const columnsWithoutLeftPinnedColumns = columns.filter(\n  // Filter out from the remaining columns those columns already pinned to the left\n  field => !leftPinnedColumns.includes(field));\n  const rightPinnedColumns = filter(pinnedColumns.right, columnsWithoutLeftPinnedColumns);\n  if (invert) {\n    return {\n      left: rightPinnedColumns,\n      right: leftPinnedColumns\n    };\n  }\n  return {\n    left: leftPinnedColumns,\n    right: rightPinnedColumns\n  };\n}\n\n/**\n * Get the left position in pixel of each visible columns relative to the left of the first column.\n * @category Visible Columns\n */\nexport const gridColumnPositionsSelector = createSelectorMemoized(gridVisibleColumnDefinitionsSelector, visibleColumns => {\n  const positions = [];\n  let currentPosition = 0;\n  for (let i = 0; i < visibleColumns.length; i += 1) {\n    positions.push(currentPosition);\n    currentPosition += visibleColumns[i].computedWidth;\n  }\n  return positions;\n});\n\n/**\n * Get the filterable columns as an array.\n * @category Columns\n */\nexport const gridFilterableColumnDefinitionsSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.filter(col => col.filterable));\n\n/**\n * Get the filterable columns as a lookup (an object containing the field for keys and the definition for values).\n * @category Columns\n */\nexport const gridFilterableColumnLookupSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.reduce((acc, col) => {\n  if (col.filterable) {\n    acc[col.field] = col;\n  }\n  return acc;\n}, {}));\n\n/**\n * Checks if some column has a colSpan field.\n * @category Columns\n * @ignore - Do not document\n */\nexport const gridHasColSpanSelector = createSelectorMemoized(gridColumnDefinitionsSelector, columns => columns.some(column => column.colSpan !== undefined));","/**\n * Get the theme state\n * @category Core\n */\nexport const gridIsRtlSelector = state => state.isRtl;","import { createSelectorV8 } from \"../../../utils/createSelector.js\";\nexport const gridPreferencePanelStateSelector = state => state.preferencePanel;\nexport const gridPreferencePanelSelectorWithLabel = createSelectorV8(gridPreferencePanelStateSelector, (panel, labelId) => {\n  if (panel.open && panel.labelId === labelId) {\n    return true;\n  }\n  return false;\n});","var GridPreferencePanelsValue = /*#__PURE__*/function (GridPreferencePanelsValue) {\n  GridPreferencePanelsValue[\"filters\"] = \"filters\";\n  GridPreferencePanelsValue[\"columns\"] = \"columns\";\n  return GridPreferencePanelsValue;\n}(GridPreferencePanelsValue || {});\nexport { GridPreferencePanelsValue };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridColumnDefinitionsSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridPreferencesPanel() {\n  const apiRef = useGridApiContext();\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const rootProps = useGridRootProps();\n  const preferencePanelState = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const panelContent = apiRef.current.unstable_applyPipeProcessors('preferencePanel', null, preferencePanelState.openedPanelValue ?? GridPreferencePanelsValue.filters);\n  return /*#__PURE__*/_jsx(rootProps.slots.panel, _extends({\n    as: rootProps.slots.basePopper,\n    open: columns.length > 0 && preferencePanelState.open,\n    id: preferencePanelState.panelId,\n    \"aria-labelledby\": preferencePanelState.labelId\n  }, rootProps.slotProps?.panel, rootProps.slotProps?.basePopper, {\n    children: panelContent\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { GridPreferencesPanel } from \"./panel/GridPreferencesPanel.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function GridHeader() {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridPreferencesPanel, {}), rootProps.slots.toolbar && /*#__PURE__*/_jsx(rootProps.slots.toolbar, _extends({}, rootProps.slotProps?.toolbar))]\n  });\n}","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridDimensionsSelector = state => state.dimensions;\n\n/**\n * Get the summed width of all the visible columns.\n * @category Visible Columns\n */\nexport const gridColumnsTotalWidthSelector = createSelector(gridDimensionsSelector, dimensions => dimensions.columnsTotalWidth);\nexport const gridRowHeightSelector = state => state.dimensions.rowHeight;\nexport const gridContentHeightSelector = state => state.dimensions.contentSize.height;\nexport const gridHasScrollXSelector = state => state.dimensions.hasScrollX;\nexport const gridHasScrollYSelector = state => state.dimensions.hasScrollY;\nexport const gridHasFillerSelector = state => state.dimensions.columnsTotalWidth < state.dimensions.viewportOuterSize.width;\nexport const gridHeaderHeightSelector = state => state.dimensions.headerHeight;\nexport const gridGroupHeaderHeightSelector = state => state.dimensions.groupHeaderHeight;\nexport const gridHeaderFilterHeightSelector = state => state.dimensions.headerFilterHeight;\nexport const gridVerticalScrollbarWidthSelector = state => state.dimensions.hasScrollY ? state.dimensions.scrollbarSize : 0;\nexport const gridHorizontalScrollbarHeightSelector = state => state.dimensions.hasScrollX ? state.dimensions.scrollbarSize : 0;\nexport const gridHasBottomFillerSelector = state => {\n  const height = state.dimensions.hasScrollX ? state.dimensions.scrollbarSize : 0;\n  const needsLastRowBorder = state.dimensions.viewportOuterSize.height - state.dimensions.minimumSize.height > 0;\n  if (height === 0 && !needsLastRowBorder) {\n    return false;\n  }\n  return true;\n};","// If no effect ran after this amount of time, we assume that the render was not committed by React\nconst CLEANUP_TIMER_LOOP_MILLIS = 1000;\nexport class TimerBasedCleanupTracking {\n  constructor(timeout = CLEANUP_TIMER_LOOP_MILLIS) {\n    this.timeouts = new Map();\n    this.cleanupTimeout = CLEANUP_TIMER_LOOP_MILLIS;\n    this.cleanupTimeout = timeout;\n  }\n  register(object, unsubscribe, unregisterToken) {\n    if (!this.timeouts) {\n      this.timeouts = new Map();\n    }\n    const timeout = setTimeout(() => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n      this.timeouts.delete(unregisterToken.cleanupToken);\n    }, this.cleanupTimeout);\n    this.timeouts.set(unregisterToken.cleanupToken, timeout);\n  }\n  unregister(unregisterToken) {\n    const timeout = this.timeouts.get(unregisterToken.cleanupToken);\n    if (timeout) {\n      this.timeouts.delete(unregisterToken.cleanupToken);\n      clearTimeout(timeout);\n    }\n  }\n  reset() {\n    if (this.timeouts) {\n      this.timeouts.forEach((value, key) => {\n        this.unregister({\n          cleanupToken: key\n        });\n      });\n      this.timeouts = undefined;\n    }\n  }\n}","export class FinalizationRegistryBasedCleanupTracking {\n  constructor() {\n    this.registry = new FinalizationRegistry(unsubscribe => {\n      if (typeof unsubscribe === 'function') {\n        unsubscribe();\n      }\n    });\n  }\n  register(object, unsubscribe, unregisterToken) {\n    this.registry.register(object, unsubscribe, unregisterToken);\n  }\n  unregister(unregisterToken) {\n    this.registry.unregister(unregisterToken);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  reset() {}\n}","import * as React from 'react';\nimport { TimerBasedCleanupTracking } from \"../../utils/cleanupTracking/TimerBasedCleanupTracking.js\";\nimport { FinalizationRegistryBasedCleanupTracking } from \"../../utils/cleanupTracking/FinalizationRegistryBasedCleanupTracking.js\";\n/**\n * Signal to the underlying logic what version of the public component API\n * of the Data Grid is exposed.\n */\nvar GridSignature = /*#__PURE__*/function (GridSignature) {\n  GridSignature[\"DataGrid\"] = \"DataGrid\";\n  GridSignature[\"DataGridPro\"] = \"DataGridPro\";\n  GridSignature[\"DataGridPremium\"] = \"DataGridPremium\";\n  return GridSignature;\n}(GridSignature || {});\n// We use class to make it easier to detect in heap snapshots by name\nclass ObjectToBeRetainedByReact {}\n\n// Based on https://github.com/Bnaya/use-dispose-uncommitted/blob/main/src/finalization-registry-based-impl.ts\n// Check https://github.com/facebook/react/issues/15317 to get more information\nexport function createUseGridApiEventHandler(registryContainer) {\n  let cleanupTokensCounter = 0;\n  return function useGridApiEventHandler(apiRef, eventName, handler, options) {\n    if (registryContainer.registry === null) {\n      registryContainer.registry = typeof FinalizationRegistry !== 'undefined' ? new FinalizationRegistryBasedCleanupTracking() : new TimerBasedCleanupTracking();\n    }\n    const [objectRetainedByReact] = React.useState(new ObjectToBeRetainedByReact());\n    const subscription = React.useRef(null);\n    const handlerRef = React.useRef(null);\n    handlerRef.current = handler;\n    const cleanupTokenRef = React.useRef(null);\n    if (!subscription.current && handlerRef.current) {\n      const enhancedHandler = (params, event, details) => {\n        if (!event.defaultMuiPrevented) {\n          handlerRef.current?.(params, event, details);\n        }\n      };\n      subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      cleanupTokensCounter += 1;\n      cleanupTokenRef.current = {\n        cleanupToken: cleanupTokensCounter\n      };\n      registryContainer.registry.register(objectRetainedByReact,\n      // The callback below will be called once this reference stops being retained\n      () => {\n        subscription.current?.();\n        subscription.current = null;\n        cleanupTokenRef.current = null;\n      }, cleanupTokenRef.current);\n    } else if (!handlerRef.current && subscription.current) {\n      subscription.current();\n      subscription.current = null;\n      if (cleanupTokenRef.current) {\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n    }\n    React.useEffect(() => {\n      if (!subscription.current && handlerRef.current) {\n        const enhancedHandler = (params, event, details) => {\n          if (!event.defaultMuiPrevented) {\n            handlerRef.current?.(params, event, details);\n          }\n        };\n        subscription.current = apiRef.current.subscribeEvent(eventName, enhancedHandler, options);\n      }\n      if (cleanupTokenRef.current && registryContainer.registry) {\n        // If the effect was called, it means that this render was committed\n        // so we can trust the cleanup function to remove the listener.\n        registryContainer.registry.unregister(cleanupTokenRef.current);\n        cleanupTokenRef.current = null;\n      }\n      return () => {\n        subscription.current?.();\n        subscription.current = null;\n      };\n    }, [apiRef, eventName, options]);\n  };\n}\nconst registryContainer = {\n  registry: null\n};\n\n// TODO: move to @mui/x-data-grid/internals\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const unstable_resetCleanupTracking = () => {\n  registryContainer.registry?.reset();\n  registryContainer.registry = null;\n};\nexport const useGridApiEventHandler = createUseGridApiEventHandler(registryContainer);\nconst optionsSubscriberOptions = {\n  isFirst: true\n};\nexport function useGridApiOptionHandler(apiRef, eventName, handler) {\n  useGridApiEventHandler(apiRef, eventName, handler, optionsSubscriberOptions);\n}\nexport { GridSignature };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"isValidating\", \"debounceMs\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridEditInputCellRoot = styled(InputBase, {\n  name: 'MuiDataGrid',\n  slot: 'EditInputCell',\n  overridesResolver: (props, styles) => styles.editInputCell\n})(({\n  theme\n}) => _extends({}, theme.typography.body2, {\n  padding: '1px 0',\n  '& input': {\n    padding: '0 16px',\n    height: '100%'\n  }\n}));\nconst GridEditInputCell = forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value,\n      field,\n      colDef,\n      hasFocus,\n      debounceMs = 200,\n      isProcessingProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const [valueState, setValueState] = React.useState(value);\n  const classes = useUtilityClasses(rootProps);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.value;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    const column = apiRef.current.getColumn(field);\n    let parsedValue = newValue;\n    if (column.valueParser) {\n      parsedValue = column.valueParser(newValue, apiRef.current.getRow(id), column, apiRef);\n    }\n    setValueState(parsedValue);\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: parsedValue,\n      debounceMs,\n      unstable_skipValueParser: true\n    }, event);\n  }, [apiRef, debounceMs, field, id, onValueChange]);\n  const meta = apiRef.current.unstable_getEditCellMeta(id, field);\n  React.useEffect(() => {\n    if (meta?.changeReason !== 'debouncedSetEditCellValue') {\n      setValueState(value);\n    }\n  }, [meta, value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(GridEditInputCellRoot, _extends({\n    inputRef: inputRef,\n    className: classes.root,\n    ownerState: rootProps,\n    fullWidth: true,\n    type: colDef.type === 'number' ? colDef.type : 'text',\n    value: valueState ?? '',\n    onChange: handleChange,\n    endAdornment: isProcessingProps ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n      fontSize: \"small\",\n      color: \"action\"\n    }) : undefined\n  }, other, {\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridEditInputCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  debounceMs: PropTypes.number,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditInputCell };\nexport const renderEditInputCell = params => /*#__PURE__*/_jsx(GridEditInputCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nexport const sanitizeSortModel = (model, disableMultipleColumnsSorting) => {\n  if (disableMultipleColumnsSorting && model.length > 1) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `sortModel` can only contain a single item when the `disableMultipleColumnsSorting` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    return [model[0]];\n  }\n  return model;\n};\nexport const mergeStateWithSortModel = (sortModel, disableMultipleColumnsSorting) => state => _extends({}, state, {\n  sorting: _extends({}, state.sorting, {\n    sortModel: sanitizeSortModel(sortModel, disableMultipleColumnsSorting)\n  })\n});\nconst isDesc = direction => direction === 'desc';\n\n/**\n * Transform an item of the sorting model into a method comparing two rows.\n * @param {GridSortItem} sortItem The sort item we want to apply.\n * @param {RefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridParsedSortItem | null} The parsed sort item. Returns `null` is the sort item is not valid.\n */\nconst parseSortItem = (sortItem, apiRef) => {\n  const column = apiRef.current.getColumn(sortItem.field);\n  if (!column || sortItem.sort === null) {\n    return null;\n  }\n  let comparator;\n  if (column.getSortComparator) {\n    comparator = column.getSortComparator(sortItem.sort);\n  } else {\n    comparator = isDesc(sortItem.sort) ? (...args) => -1 * column.sortComparator(...args) : column.sortComparator;\n  }\n  if (!comparator) {\n    return null;\n  }\n  const getSortCellParams = id => ({\n    id,\n    field: column.field,\n    rowNode: apiRef.current.getRowNode(id),\n    value: apiRef.current.getCellValue(id, column.field),\n    api: apiRef.current\n  });\n  return {\n    getSortCellParams,\n    comparator\n  };\n};\n/**\n * Compare two rows according to a list of valid sort items.\n * The `row1Params` and `row2Params` must have the same length as `parsedSortItems`,\n * and each of their index must contain the `GridSortCellParams` of the sort item with the same index.\n * @param {GridParsedSortItem[]} parsedSortItems All the sort items with which we want to compare the rows.\n * @param {GridRowAggregatedSortingParams} row1 The node and params of the 1st row for each sort item.\n * @param {GridRowAggregatedSortingParams} row2 The node and params of the 2nd row for each sort item.\n */\nconst compareRows = (parsedSortItems, row1, row2) => {\n  return parsedSortItems.reduce((res, item, index) => {\n    if (res !== 0) {\n      // return the results of the first comparator which distinguish the two rows\n      return res;\n    }\n    const sortCellParams1 = row1.params[index];\n    const sortCellParams2 = row2.params[index];\n    res = item.comparator(sortCellParams1.value, sortCellParams2.value, sortCellParams1, sortCellParams2);\n    return res;\n  }, 0);\n};\n\n/**\n * Generates a method to easily sort a list of rows according to the current sort model.\n * @param {GridSortModel} sortModel The model with which we want to sort the rows.\n * @param {RefObject<GridApiCommunity>} apiRef The API of the grid.\n * @returns {GridSortingModelApplier | null} A method that generates a list of sorted row ids from a list of rows according to the current sort model. If `null`, we consider that the rows should remain in the order there were provided.\n */\nexport const buildAggregatedSortingApplier = (sortModel, apiRef) => {\n  const comparatorList = sortModel.map(item => parseSortItem(item, apiRef)).filter(comparator => !!comparator);\n  if (comparatorList.length === 0) {\n    return null;\n  }\n  return rowList => rowList.map(node => ({\n    node,\n    params: comparatorList.map(el => el.getSortCellParams(node.id))\n  })).sort((a, b) => compareRows(comparatorList, a, b)).map(row => row.node.id);\n};\nexport const getNextGridSortDirection = (sortingOrder, current) => {\n  const currentIdx = sortingOrder.indexOf(current);\n  if (!current || currentIdx === -1 || currentIdx + 1 === sortingOrder.length) {\n    return sortingOrder[0];\n  }\n  return sortingOrder[currentIdx + 1];\n};\nconst gridNillComparator = (v1, v2) => {\n  if (v1 == null && v2 != null) {\n    return -1;\n  }\n  if (v2 == null && v1 != null) {\n    return 1;\n  }\n  if (v1 == null && v2 == null) {\n    return 0;\n  }\n  return null;\n};\nconst collator = new Intl.Collator();\nexport const gridStringOrNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (typeof value1 === 'string') {\n    return collator.compare(value1.toString(), value2.toString());\n  }\n  return value1 - value2;\n};\nexport const gridNumberComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  return Number(value1) - Number(value2);\n};\nexport const gridDateComparator = (value1, value2) => {\n  const nillResult = gridNillComparator(value1, value2);\n  if (nillResult !== null) {\n    return nillResult;\n  }\n  if (value1 > value2) {\n    return 1;\n  }\n  if (value1 < value2) {\n    return -1;\n  }\n  return 0;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"tabIndex\", \"disabled\", \"isFilterActive\", \"clearButton\", \"InputProps\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      tabIndex,\n      disabled,\n      clearButton,\n      InputProps,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(sanitizeFilterItemValue(item.value));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    const value = sanitizeFilterItemValue(event.target.value);\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const newItem = _extends({}, item, {\n        value: type === 'number' && !Number.isNaN(Number(value)) ? Number(value) : value,\n        fromInput: id\n      });\n      applyValue(newItem);\n      setIsApplying(false);\n    });\n  }, [filterTimeout, rootProps.filterDebounceMs, item, type, id, applyValue]);\n  React.useEffect(() => {\n    const itemPlusTag = item;\n    if (itemPlusTag.fromInput !== id || item.value == null) {\n      setFilterValueState(sanitizeFilterItemValue(item.value));\n    }\n  }, [id, item]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState ?? '',\n    onChange: onFilterChange,\n    variant: variant,\n    type: type || 'text',\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        tabIndex\n      }, InputProps?.inputProps)\n    }),\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef\n  }, others, rootProps.slotProps?.baseTextField));\n}\nfunction sanitizeFilterItemValue(value) {\n  if (value == null || value === '') {\n    return undefined;\n  }\n  return String(value);\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputValue };","export function isNumber(value) {\n  return typeof value === 'number' && !Number.isNaN(value);\n}\nexport function isFunction(value) {\n  return typeof value === 'function';\n}\nexport function isObject(value) {\n  return typeof value === 'object' && value !== null;\n}\nexport function localStorageAvailable() {\n  try {\n    // Incognito mode might reject access to the localStorage for security reasons.\n    // window isn't defined on Node.js\n    // https://stackoverflow.com/questions/16427636/check-if-localstorage-is-available\n    const key = '__some_random_key_you_are_not_going_to_use__';\n    window.localStorage.setItem(key, key);\n    window.localStorage.removeItem(key);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\nexport function escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\n/**\n * Follows the CSS specification behavior for min and max\n * If min > max, then the min have priority\n */\nexport const clamp = (value, min, max) => Math.max(min, Math.min(max, value));\n\n/**\n * Create an array containing the range [from, to[\n */\nexport function range(from, to) {\n  return Array.from({\n    length: to - from\n  }).map((_, i) => from + i);\n}\n\n/**\n * Based on `fast-deep-equal`\n *\n * MIT License\n *\n * Copyright (c) 2017 Evgeny Poberezkin\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n * We only type the public interface to avoid dozens of `as` in the function.\n */\n\nexport function isDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a && b && typeof a === 'object' && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n    if (Array.isArray(a)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (!isDeepEqual(a[i], b[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Map && b instanceof Map) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entriesA = Array.from(a.entries());\n      for (let i = 0; i < entriesA.length; i += 1) {\n        if (!b.has(entriesA[i][0])) {\n          return false;\n        }\n      }\n      for (let i = 0; i < entriesA.length; i += 1) {\n        const entryA = entriesA[i];\n        if (!isDeepEqual(entryA[1], b.get(entryA[0]))) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a instanceof Set && b instanceof Set) {\n      if (a.size !== b.size) {\n        return false;\n      }\n      const entries = Array.from(a.entries());\n      for (let i = 0; i < entries.length; i += 1) {\n        if (!b.has(entries[i][0])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      const length = a.length;\n      if (length !== b.length) {\n        return false;\n      }\n      for (let i = 0; i < length; i += 1) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (a.constructor === RegExp) {\n      return a.source === b.source && a.flags === b.flags;\n    }\n    if (a.valueOf !== Object.prototype.valueOf) {\n      return a.valueOf() === b.valueOf();\n    }\n    if (a.toString !== Object.prototype.toString) {\n      return a.toString() === b.toString();\n    }\n    const keys = Object.keys(a);\n    const length = keys.length;\n    if (length !== Object.keys(b).length) {\n      return false;\n    }\n    for (let i = 0; i < length; i += 1) {\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) {\n        return false;\n      }\n    }\n    for (let i = 0; i < length; i += 1) {\n      const key = keys[i];\n      if (!isDeepEqual(a[key], b[key])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  // eslint-disable-next-line no-self-compare\n  return a !== a && b !== b;\n}\n\n// Pseudo random number. See https://stackoverflow.com/a/47593316\nfunction mulberry32(a) {\n  return () => {\n    /* eslint-disable */\n    let t = a += 0x6d2b79f5;\n    t = Math.imul(t ^ t >>> 15, t | 1);\n    t ^= t + Math.imul(t ^ t >>> 7, t | 61);\n    return ((t ^ t >>> 14) >>> 0) / 4294967296;\n    /* eslint-enable */\n  };\n}\n\n/**\n * Create a random number generator from a seed. The seed\n * ensures that the random number generator produces the\n * same sequence of 'random' numbers on every render. It\n * returns a function that generates a random number between\n * a specified min and max.\n */\nexport function createRandomNumberGenerator(seed) {\n  const random = mulberry32(seed);\n  return (min, max) => min + (max - min) * random();\n}\nexport function deepClone(obj) {\n  if (typeof structuredClone === 'function') {\n    return structuredClone(obj);\n  }\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/**\n * Mark a value as used so eslint doesn't complain. Use this instead\n * of a `eslint-disable-next-line react-hooks/exhaustive-deps` because\n * that hint disables checks on all values instead of just one.\n */\nexport function eslintUseValue(_) {}\nexport const runIf = (condition, fn) => params => {\n  if (condition) {\n    fn(params);\n  }\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridFilterInputMultipleValue(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const [filterValueState, setFilterValueState] = React.useState(item.value || []);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  React.useEffect(() => {\n    const itemValue = item.value ?? [];\n    setFilterValueState(itemValue.map(String));\n  }, [item.value]);\n  const handleChange = React.useCallback((event, value) => {\n    setFilterValueState(value.map(String));\n    applyValue(_extends({}, item, {\n      value: [...value.map(filterItemValue => type === 'number' ? Number(filterItemValue) : filterItemValue)]\n    }));\n  }, [applyValue, item, type]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    freeSolo: true,\n    options: [],\n    filterOptions: (options, params) => {\n      const {\n        inputValue\n      } = params;\n      return inputValue == null || inputValue === '' ? [] : [inputValue];\n    },\n    id: id,\n    value: filterValueState,\n    onChange: handleChange,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: option\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: type || 'text'\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleValue.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['date', 'datetime-local', 'number', 'text'])\n} : void 0;\nexport { GridFilterInputMultipleValue };","/**\n * Filter item definition interface.\n * @demos\n *   - [Custom filter operator](/x/react-data-grid/filtering/customization/#create-a-custom-operator)\n */\nvar GridLogicOperator = /*#__PURE__*/function (GridLogicOperator) {\n  GridLogicOperator[\"And\"] = \"and\";\n  GridLogicOperator[\"Or\"] = \"or\";\n  return GridLogicOperator;\n}(GridLogicOperator || {});\nexport { GridLogicOperator };","import { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nexport const defaultGridFilterLookup = {\n  filteredRowsLookup: {},\n  filteredChildrenCountLookup: {},\n  filteredDescendantCountLookup: {}\n};\nexport const getDefaultGridFilterModel = () => ({\n  items: [],\n  logicOperator: GridLogicOperator.And,\n  quickFilterValues: [],\n  quickFilterLogicOperator: GridLogicOperator.And\n});\n\n/**\n * @param {GridRowId} rowId The id of the row we want to filter.\n * @param {(filterItem: GridFilterItem) => boolean} shouldApplyItem An optional callback to allow the filtering engine to only apply some items.\n */\n\n/**\n * Visibility status for each row.\n * A row is visible if it is passing the filters AND if its parents are expanded.\n * If a row is not registered in this lookup, it is visible.\n */","export function getPublicApiRef(apiRef) {\n  return {\n    current: apiRef.current.getPublicApi()\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { GridLogicOperator } from \"../../../models/index.js\";\nimport { getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { getPublicApiRef } from \"../../../utils/getPublicApiRef.js\";\nimport { gridColumnFieldsSelector, gridColumnLookupSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nlet hasEval;\nfunction getHasEval() {\n  if (hasEval !== undefined) {\n    return hasEval;\n  }\n  try {\n    hasEval = new Function('return true')();\n  } catch (_) {\n    hasEval = false;\n  }\n  return hasEval;\n}\n/**\n * Adds default values to the optional fields of a filter items.\n * @param {GridFilterItem} item The raw filter item.\n * @param {RefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @return {GridFilterItem} The clean filter item with an uniq ID and an always-defined operator.\n * TODO: Make the typing reflect the different between GridFilterInputItem and GridFilterItem.\n */\nexport const cleanFilterItem = (item, apiRef) => {\n  const cleanItem = _extends({}, item);\n  if (cleanItem.id == null) {\n    cleanItem.id = Math.round(Math.random() * 1e5);\n  }\n  if (cleanItem.operator == null) {\n    // Selects a default operator\n    // We don't use `apiRef.current.getColumn` because it is not ready during state initialization\n    const column = gridColumnLookupSelector(apiRef)[cleanItem.field];\n    cleanItem.operator = column && column.filterOperators[0].value;\n  }\n  return cleanItem;\n};\nexport const sanitizeFilterModel = (model, disableMultipleColumnsFiltering, apiRef) => {\n  const hasSeveralItems = model.items.length > 1;\n  let items;\n  if (hasSeveralItems && disableMultipleColumnsFiltering) {\n    if (process.env.NODE_ENV !== 'production') {\n      warnOnce(['MUI X: The `filterModel` can only contain a single item when the `disableMultipleColumnsFiltering` prop is set to `true`.', 'If you are using the community version of the Data Grid, this prop is always `true`.'], 'error');\n    }\n    items = [model.items[0]];\n  } else {\n    items = model.items;\n  }\n  const hasItemsWithoutIds = hasSeveralItems && items.some(item => item.id == null);\n  const hasItemWithoutOperator = items.some(item => item.operator == null);\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemsWithoutIds) {\n      warnOnce('MUI X: The `id` field is required on `filterModel.items` when you use multiple filters.', 'error');\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (hasItemWithoutOperator) {\n      warnOnce('MUI X: The `operator` field is required on `filterModel.items`, one or more of your filtering item has no `operator` provided.', 'error');\n    }\n  }\n  if (hasItemWithoutOperator || hasItemsWithoutIds) {\n    return _extends({}, model, {\n      items: items.map(item => cleanFilterItem(item, apiRef))\n    });\n  }\n  if (model.items !== items) {\n    return _extends({}, model, {\n      items\n    });\n  }\n  return model;\n};\nexport const mergeStateWithFilterModel = (filterModel, disableMultipleColumnsFiltering, apiRef) => filteringState => _extends({}, filteringState, {\n  filterModel: sanitizeFilterModel(filterModel, disableMultipleColumnsFiltering, apiRef)\n});\nexport const removeDiacritics = value => {\n  if (typeof value === 'string') {\n    return value.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n  }\n  return value;\n};\nconst getFilterCallbackFromItem = (filterItem, apiRef) => {\n  if (!filterItem.field || !filterItem.operator) {\n    return null;\n  }\n  const column = apiRef.current.getColumn(filterItem.field);\n  if (!column) {\n    return null;\n  }\n  let parsedValue;\n  if (column.valueParser) {\n    const parser = column.valueParser;\n    parsedValue = Array.isArray(filterItem.value) ? filterItem.value?.map(x => parser(x, undefined, column, apiRef)) : parser(filterItem.value, undefined, column, apiRef);\n  } else {\n    parsedValue = filterItem.value;\n  }\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  if (ignoreDiacritics) {\n    parsedValue = removeDiacritics(parsedValue);\n  }\n  const newFilterItem = _extends({}, filterItem, {\n    value: parsedValue\n  });\n  const filterOperators = column.filterOperators;\n  if (!filterOperators?.length) {\n    throw new Error(`MUI X: No filter operators found for column '${column.field}'.`);\n  }\n  const filterOperator = filterOperators.find(operator => operator.value === newFilterItem.operator);\n  if (!filterOperator) {\n    throw new Error(`MUI X: No filter operator found for column '${column.field}' and operator value '${newFilterItem.operator}'.`);\n  }\n  const publicApiRef = getPublicApiRef(apiRef);\n  const applyFilterOnRow = filterOperator.getApplyFilterFn(newFilterItem, column);\n  if (typeof applyFilterOnRow !== 'function') {\n    return null;\n  }\n  return {\n    item: newFilterItem,\n    fn: row => {\n      let value = apiRef.current.getRowValue(row, column);\n      if (ignoreDiacritics) {\n        value = removeDiacritics(value);\n      }\n      return applyFilterOnRow(value, row, column, publicApiRef);\n    }\n  };\n};\nlet filterItemsApplierId = 1;\n\n/**\n * Generates a method to easily check if a row is matching the current filter model.\n * @param {GridFilterModel} filterModel The model with which we want to filter the rows.\n * @param {RefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedFilterItemsApplier = (filterModel, apiRef, disableEval) => {\n  const {\n    items\n  } = filterModel;\n  const appliers = items.map(item => getFilterCallbackFromItem(item, apiRef)).filter(callback => !!callback);\n  if (appliers.length === 0) {\n    return null;\n  }\n  if (disableEval || !getHasEval()) {\n    // This is the original logic, which is used if `eval()` is not supported (aka prevented by CSP).\n    return (row, shouldApplyFilter) => {\n      const resultPerItemId = {};\n      for (let i = 0; i < appliers.length; i += 1) {\n        const applier = appliers[i];\n        if (!shouldApplyFilter || shouldApplyFilter(applier.item.field)) {\n          resultPerItemId[applier.item.id] = applier.fn(row);\n        }\n      }\n      return resultPerItemId;\n    };\n  }\n\n  // We generate a new function with `new Function()` to avoid expensive patterns for JS engines\n  // such as a dynamic object assignment, for example `{ [dynamicKey]: value }`.\n  const filterItemCore = new Function('appliers', 'row', 'shouldApplyFilter', `\"use strict\";\n${appliers.map((applier, i) => `const shouldApply${i} = !shouldApplyFilter || shouldApplyFilter(${JSON.stringify(applier.item.field)});`).join('\\n')}\n\nconst result$$ = {\n${appliers.map((applier, i) => `  ${JSON.stringify(String(applier.item.id))}: !shouldApply${i} ? false : appliers[${i}].fn(row),`).join('\\n')}\n};\n\nreturn result$$;`.replaceAll('$$', String(filterItemsApplierId)));\n  filterItemsApplierId += 1;\n\n  // Assign to the arrow function a name to help debugging\n  const filterItem = (row, shouldApplyItem) => filterItemCore(appliers, row, shouldApplyItem);\n  return filterItem;\n};\nexport const shouldQuickFilterExcludeHiddenColumns = filterModel => {\n  return filterModel.quickFilterExcludeHiddenColumns ?? true;\n};\n\n/**\n * Generates a method to easily check if a row is matching the current quick filter.\n * @param {any[]} filterModel The model with which we want to filter the rows.\n * @param {RefObject<GridPrivateApiCommunity>} apiRef The API of the grid.\n * @returns {GridAggregatedFilterItemApplier | null} A method that checks if a row is matching the current filter model. If `null`, we consider that all the rows are matching the filters.\n */\nconst buildAggregatedQuickFilterApplier = (filterModel, apiRef) => {\n  const quickFilterValues = filterModel.quickFilterValues?.filter(Boolean) ?? [];\n  if (quickFilterValues.length === 0) {\n    return null;\n  }\n  const columnFields = shouldQuickFilterExcludeHiddenColumns(filterModel) ? gridVisibleColumnFieldsSelector(apiRef) : gridColumnFieldsSelector(apiRef);\n  const appliersPerField = [];\n  const {\n    ignoreDiacritics\n  } = apiRef.current.rootProps;\n  const publicApiRef = getPublicApiRef(apiRef);\n  columnFields.forEach(field => {\n    const column = apiRef.current.getColumn(field);\n    const getApplyQuickFilterFn = column?.getApplyQuickFilterFn;\n    if (getApplyQuickFilterFn) {\n      appliersPerField.push({\n        column,\n        appliers: quickFilterValues.map(quickFilterValue => {\n          const value = ignoreDiacritics ? removeDiacritics(quickFilterValue) : quickFilterValue;\n          return {\n            fn: getApplyQuickFilterFn(value, column, publicApiRef)\n          };\n        })\n      });\n    }\n  });\n  return function isRowMatchingQuickFilter(row, shouldApplyFilter) {\n    const result = {};\n\n    /* eslint-disable no-labels */\n    outer: for (let v = 0; v < quickFilterValues.length; v += 1) {\n      const filterValue = quickFilterValues[v];\n      for (let i = 0; i < appliersPerField.length; i += 1) {\n        const {\n          column,\n          appliers\n        } = appliersPerField[i];\n        const {\n          field\n        } = column;\n        if (shouldApplyFilter && !shouldApplyFilter(field)) {\n          continue;\n        }\n        const applier = appliers[v];\n        let value = apiRef.current.getRowValue(row, column);\n        if (applier.fn === null) {\n          continue;\n        }\n        if (ignoreDiacritics) {\n          value = removeDiacritics(value);\n        }\n        const isMatching = applier.fn(value, row, column, publicApiRef);\n        if (isMatching) {\n          result[filterValue] = true;\n          continue outer;\n        }\n      }\n      result[filterValue] = false;\n    }\n    return result;\n  };\n};\nexport const buildAggregatedFilterApplier = (filterModel, apiRef, disableEval) => {\n  const isRowMatchingFilterItems = buildAggregatedFilterItemsApplier(filterModel, apiRef, disableEval);\n  const isRowMatchingQuickFilter = buildAggregatedQuickFilterApplier(filterModel, apiRef);\n  return function isRowMatchingFilters(row, shouldApplyFilter, result) {\n    result.passingFilterItems = isRowMatchingFilterItems?.(row, shouldApplyFilter) ?? null;\n    result.passingQuickFilterValues = isRowMatchingQuickFilter?.(row, shouldApplyFilter) ?? null;\n  };\n};\nconst isNotNull = result => result != null;\nconst filterModelItems = (cache, apiRef, items) => {\n  if (!cache.cleanedFilterItems) {\n    cache.cleanedFilterItems = items.filter(item => getFilterCallbackFromItem(item, apiRef) !== null);\n  }\n  return cache.cleanedFilterItems;\n};\nexport const passFilterLogic = (allFilterItemResults, allQuickFilterResults, filterModel, apiRef, cache) => {\n  const cleanedFilterItems = filterModelItems(cache, apiRef, filterModel.items);\n  const cleanedFilterItemResults = allFilterItemResults.filter(isNotNull);\n  const cleanedQuickFilterResults = allQuickFilterResults.filter(isNotNull);\n\n  // get result for filter items model\n  if (cleanedFilterItemResults.length > 0) {\n    // Return true if the item pass with one of the rows\n    const filterItemPredicate = item => {\n      return cleanedFilterItemResults.some(filterItemResult => filterItemResult[item.id]);\n    };\n    const logicOperator = filterModel.logicOperator ?? getDefaultGridFilterModel().logicOperator;\n    if (logicOperator === GridLogicOperator.And) {\n      const passesAllFilters = cleanedFilterItems.every(filterItemPredicate);\n      if (!passesAllFilters) {\n        return false;\n      }\n    } else {\n      const passesSomeFilters = cleanedFilterItems.some(filterItemPredicate);\n      if (!passesSomeFilters) {\n        return false;\n      }\n    }\n  }\n\n  // get result for quick filter model\n  if (cleanedQuickFilterResults.length > 0 && filterModel.quickFilterValues != null) {\n    // Return true if the item pass with one of the rows\n    const quickFilterValuePredicate = value => {\n      return cleanedQuickFilterResults.some(quickFilterValueResult => quickFilterValueResult[value]);\n    };\n    const quickFilterLogicOperator = filterModel.quickFilterLogicOperator ?? getDefaultGridFilterModel().quickFilterLogicOperator;\n    if (quickFilterLogicOperator === GridLogicOperator.And) {\n      const passesAllQuickFilterValues = filterModel.quickFilterValues.every(quickFilterValuePredicate);\n      if (!passesAllQuickFilterValues) {\n        return false;\n      }\n    } else {\n      const passesSomeQuickFilterValues = filterModel.quickFilterValues.some(quickFilterValuePredicate);\n      if (!passesSomeQuickFilterValues) {\n        return false;\n      }\n    }\n  }\n  return true;\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { escapeRegExp } from \"../utils/utils.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nimport { removeDiacritics } from \"../hooks/features/filter/gridFilterUtils.js\";\nexport const getGridStringQuickFilterFn = value => {\n  if (!value) {\n    return null;\n  }\n  const filterRegex = new RegExp(escapeRegExp(value), 'i');\n  return (_, row, column, apiRef) => {\n    let columnValue = apiRef.current.getRowFormattedValue(row, column);\n    if (apiRef.current.ignoreDiacritics) {\n      columnValue = removeDiacritics(columnValue);\n    }\n    return columnValue != null ? filterRegex.test(columnValue.toString()) : false;\n  };\n};\nconst createContainsFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const filterRegex = new RegExp(escapeRegExp(trimmedValue), 'i');\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const matches = filterRegex.test(String(value));\n    return negate ? !matches : matches;\n  };\n};\nconst createEqualityFilterFn = (disableTrim, negate) => filterItem => {\n  if (!filterItem.value) {\n    return null;\n  }\n  const trimmedValue = disableTrim ? filterItem.value : filterItem.value.trim();\n  const collator = new Intl.Collator(undefined, {\n    sensitivity: 'base',\n    usage: 'search'\n  });\n  return value => {\n    if (value == null) {\n      return negate;\n    }\n    const isEqual = collator.compare(trimmedValue, value.toString()) === 0;\n    return negate ? !isEqual : isEqual;\n  };\n};\nconst createEmptyFilterFn = negate => () => {\n  return value => {\n    const isEmpty = value === '' || value == null;\n    return negate ? !isEmpty : isEmpty;\n  };\n};\nexport const getGridStringOperators = (disableTrim = false) => [{\n  value: 'contains',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotContain',\n  getApplyFilterFn: createContainsFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'equals',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, false),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'doesNotEqual',\n  getApplyFilterFn: createEqualityFilterFn(disableTrim, true),\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'startsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`^${escapeRegExp(filterItemValue)}.*$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'endsWith',\n  getApplyFilterFn: filterItem => {\n    if (!filterItem.value) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.trim();\n    const filterRegex = new RegExp(`.*${escapeRegExp(filterItemValue)}$`, 'i');\n    return value => {\n      return value != null ? filterRegex.test(value.toString()) : false;\n    };\n  },\n  InputComponent: GridFilterInputValue\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: createEmptyFilterFn(false),\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: createEmptyFilterFn(true),\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValue = disableTrim ? filterItem.value : filterItem.value.map(val => val.trim());\n    const collator = new Intl.Collator(undefined, {\n      sensitivity: 'base',\n      usage: 'search'\n    });\n    return value => value != null ? filterItemValue.some(filterValue => {\n      return collator.compare(filterValue, value.toString() || '') === 0;\n    }) : false;\n  },\n  InputComponent: GridFilterInputMultipleValue\n}];","import { renderEditInputCell } from \"../components/cell/GridEditInputCell.js\";\nimport { gridStringOrNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridStringOperators, getGridStringQuickFilterFn } from \"./gridStringOperators.js\";\n\n/**\n * TODO: Move pro and premium properties outside of this Community file\n */\nexport const GRID_STRING_COL_DEF = {\n  width: 100,\n  minWidth: 50,\n  maxWidth: Infinity,\n  hideable: true,\n  sortable: true,\n  resizable: true,\n  filterable: true,\n  groupable: true,\n  pinnable: true,\n  // @ts-ignore\n  aggregable: true,\n  editable: false,\n  sortComparator: gridStringOrNumberComparator,\n  type: 'string',\n  align: 'left',\n  filterOperators: getGridStringOperators(),\n  renderEditCell: renderEditInputCell,\n  getApplyQuickFilterFn: getGridStringQuickFilterFn\n};","import { GridFilterInputValue } from \"../components/panel/filterPanel/GridFilterInputValue.js\";\nimport { GridFilterInputMultipleValue } from \"../components/panel/filterPanel/GridFilterInputMultipleValue.js\";\nconst parseNumericValue = value => {\n  if (value == null) {\n    return null;\n  }\n  return Number(value);\n};\nexport const getGridNumericQuickFilterFn = value => {\n  if (value == null || Number.isNaN(value) || value === '') {\n    return null;\n  }\n  return columnValue => {\n    return parseNumericValue(columnValue) === parseNumericValue(value);\n  };\n};\nexport const getGridNumericOperators = () => [{\n  value: '=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) === filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '!=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      return parseNumericValue(value) !== filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) > filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '>=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) >= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) < filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: '<=',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || Number.isNaN(filterItem.value)) {\n      return null;\n    }\n    return value => {\n      if (value == null) {\n        return false;\n      }\n      return parseNumericValue(value) <= filterItem.value;\n    };\n  },\n  InputComponent: GridFilterInputValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    return value => {\n      return value != null && filterItem.value.includes(Number(value));\n    };\n  },\n  InputComponent: GridFilterInputMultipleValue,\n  InputComponentProps: {\n    type: 'number'\n  }\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { isNumber } from \"../utils/utils.js\";\nimport { getGridNumericOperators, getGridNumericQuickFilterFn } from \"./gridNumericOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nexport const GRID_NUMERIC_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'number',\n  align: 'right',\n  headerAlign: 'right',\n  sortComparator: gridNumberComparator,\n  valueParser: value => value === '' ? null : Number(value),\n  valueFormatter: value => isNumber(value) ? value.toLocaleString() : value || '',\n  filterOperators: getGridNumericOperators(),\n  getApplyQuickFilterFn: getGridNumericQuickFilterFn\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"InputProps\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { useTimeout } from \"../../../hooks/utils/useTimeout.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction convertFilterItemValueToInputValue(itemValue, inputType) {\n  if (itemValue == null) {\n    return '';\n  }\n  const dateCopy = new Date(itemValue);\n  if (Number.isNaN(dateCopy.getTime())) {\n    return '';\n  }\n  if (inputType === 'date') {\n    return dateCopy.toISOString().substring(0, 10);\n  }\n  if (inputType === 'datetime-local') {\n    // The date picker expects the date to be in the local timezone.\n    // But .toISOString() converts it to UTC with zero offset.\n    // So we need to subtract the timezone offset.\n    dateCopy.setMinutes(dateCopy.getMinutes() - dateCopy.getTimezoneOffset());\n    return dateCopy.toISOString().substring(0, 19);\n  }\n  return dateCopy.toISOString().substring(0, 10);\n}\nfunction GridFilterInputDate(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      InputProps,\n      clearButton,\n      tabIndex,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterTimeout = useTimeout();\n  const [filterValueState, setFilterValueState] = React.useState(() => convertFilterItemValueToInputValue(item.value, type));\n  const [applying, setIsApplying] = React.useState(false);\n  const id = useId();\n  const rootProps = useGridRootProps();\n  const onFilterChange = React.useCallback(event => {\n    filterTimeout.clear();\n    const value = event.target.value;\n    setFilterValueState(value);\n    setIsApplying(true);\n    filterTimeout.start(rootProps.filterDebounceMs, () => {\n      const date = new Date(value);\n      applyValue(_extends({}, item, {\n        value: Number.isNaN(date.getTime()) ? undefined : date\n      }));\n      setIsApplying(false);\n    });\n  }, [applyValue, item, rootProps.filterDebounceMs, filterTimeout]);\n  React.useEffect(() => {\n    const value = convertFilterItemValueToInputValue(item.value, type);\n    setFilterValueState(value);\n  }, [item.value, type]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({\n    fullWidth: true,\n    id: id,\n    label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n    placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n    value: filterValueState,\n    onChange: onFilterChange,\n    variant: \"standard\",\n    type: type || 'text',\n    InputLabelProps: {\n      shrink: true\n    },\n    inputRef: focusElementRef,\n    InputProps: _extends({}, applying || clearButton ? {\n      endAdornment: applying ? /*#__PURE__*/_jsx(rootProps.slots.loadIcon, {\n        fontSize: \"small\",\n        color: \"action\"\n      }) : clearButton\n    } : {}, {\n      disabled\n    }, InputProps, {\n      inputProps: _extends({\n        max: type === 'datetime-local' ? '9999-12-31T23:59' : '9999-12-31',\n        tabIndex\n      }, InputProps?.inputProps)\n    })\n  }, other, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputDate.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputDate };","import { GridFilterInputDate } from \"../components/panel/filterPanel/GridFilterInputDate.js\";\nfunction buildApplyFilterFn(filterItem, compareFn, showTime, keepHours) {\n  if (!filterItem.value) {\n    return null;\n  }\n  const date = new Date(filterItem.value);\n  if (showTime) {\n    date.setSeconds(0, 0);\n  } else {\n    // In GMT-X timezone, the date will be one day behind.\n    // For 2022-08-16:\n    // GMT+2: Tue Aug 16 2022 02:00:00 GMT+0200\n    // GMT-4: Mon Aug 15 2022 20:00:00 GMT-0400\n    //\n    // We need to add the offset before resetting the hours.\n    date.setMinutes(date.getMinutes() + date.getTimezoneOffset());\n    date.setHours(0, 0, 0, 0);\n  }\n  const time = date.getTime();\n  return value => {\n    if (!value) {\n      return false;\n    }\n    if (keepHours) {\n      return compareFn(value.getTime(), time);\n    }\n\n    // Make a copy of the date to not reset the hours in the original object\n    const dateCopy = new Date(value);\n    if (showTime) {\n      dateCopy.setSeconds(0, 0);\n    } else {\n      dateCopy.setHours(0, 0, 0, 0);\n    }\n    return compareFn(dateCopy.getTime(), time);\n  };\n}\nexport const getGridDateOperators = showTime => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 === value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 !== value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'after',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 > value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrAfter',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 >= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'before',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 < value2, showTime, !showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'onOrBefore',\n  getApplyFilterFn: filterItem => {\n    return buildApplyFilterFn(filterItem, (value1, value2) => value1 <= value2, showTime);\n  },\n  InputComponent: GridFilterInputDate,\n  InputComponentProps: {\n    type: showTime ? 'datetime-local' : 'date'\n  }\n}, {\n  value: 'isEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value == null;\n    };\n  },\n  requiresFilterValue: false\n}, {\n  value: 'isNotEmpty',\n  getApplyFilterFn: () => {\n    return value => {\n      return value != null;\n    };\n  },\n  requiresFilterValue: false\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"hasFocus\", \"inputProps\", \"isValidating\", \"isProcessingProps\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport InputBase from '@mui/material/InputBase';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledInputBase = styled(InputBase)({\n  fontSize: 'inherit'\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editInputCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditDateCell(props) {\n  const {\n      id,\n      value: valueProp,\n      field,\n      colDef,\n      hasFocus,\n      inputProps,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const isDateTime = colDef.type === 'dateTime';\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const valueTransformed = React.useMemo(() => {\n    let parsedDate;\n    if (valueProp == null) {\n      parsedDate = null;\n    } else if (valueProp instanceof Date) {\n      parsedDate = valueProp;\n    } else {\n      parsedDate = new Date((valueProp ?? '').toString());\n    }\n    let formattedDate;\n    if (parsedDate == null || Number.isNaN(parsedDate.getTime())) {\n      formattedDate = '';\n    } else {\n      const localDate = new Date(parsedDate.getTime() - parsedDate.getTimezoneOffset() * 60 * 1000);\n      formattedDate = localDate.toISOString().substr(0, isDateTime ? 16 : 10);\n    }\n    return {\n      parsed: parsedDate,\n      formatted: formattedDate\n    };\n  }, [valueProp, isDateTime]);\n  const [valueState, setValueState] = React.useState(valueTransformed);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const parseValueToDate = React.useCallback(value => {\n    if (value === '') {\n      return null;\n    }\n    const [date, time] = value.split('T');\n    const [year, month, day] = date.split('-');\n    const parsedDate = new Date();\n    parsedDate.setFullYear(Number(year), Number(month) - 1, Number(day));\n    parsedDate.setHours(0, 0, 0, 0);\n    if (time) {\n      const [hours, minutes] = time.split(':');\n      parsedDate.setHours(Number(hours), Number(minutes), 0, 0);\n    }\n    return parsedDate;\n  }, []);\n  const handleChange = React.useCallback(async event => {\n    const newFormattedDate = event.target.value;\n    const newParsedDate = parseValueToDate(newFormattedDate);\n    if (onValueChange) {\n      await onValueChange(event, newParsedDate);\n    }\n    setValueState({\n      parsed: newParsedDate,\n      formatted: newFormattedDate\n    });\n    apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: newParsedDate\n    }, event);\n  }, [apiRef, field, id, onValueChange, parseValueToDate]);\n  React.useEffect(() => {\n    setValueState(state => {\n      if (valueTransformed.parsed !== state.parsed && valueTransformed.parsed?.getTime() !== state.parsed?.getTime()) {\n        return valueTransformed;\n      }\n      return state;\n    });\n  }, [valueTransformed]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(StyledInputBase, _extends({\n    inputRef: inputRef,\n    fullWidth: true,\n    className: classes.root,\n    type: isDateTime ? 'datetime-local' : 'date',\n    inputProps: _extends({\n      max: isDateTime ? '9999-12-31T23:59' : '9999-12-31'\n    }, inputProps),\n    value: valueState.formatted,\n    onChange: handleChange\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditDateCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {Date | null} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditDateCell };\nexport const renderEditDateCell = params => /*#__PURE__*/_jsx(GridEditDateCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { gridDateComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridDateOperators } from \"./gridDateOperators.js\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditDateCell } from \"../components/cell/GridEditDateCell.js\";\nfunction throwIfNotDateObject({\n  value,\n  columnType,\n  rowId,\n  field\n}) {\n  if (!(value instanceof Date)) {\n    throw new Error([`MUI X: \\`${columnType}\\` column type only accepts \\`Date\\` objects as values.`, 'Use `valueGetter` to transform the value into a `Date` object.', `Row ID: ${rowId}, field: \"${field}\".`].join('\\n'));\n  }\n}\nexport const gridDateFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'date',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleDateString();\n};\nexport const gridDateTimeFormatter = (value, row, column, apiRef) => {\n  if (!value) {\n    return '';\n  }\n  const rowId = apiRef.current.getRowId(row);\n  throwIfNotDateObject({\n    value,\n    columnType: 'dateTime',\n    rowId,\n    field: column.field\n  });\n  return value.toLocaleString();\n};\nexport const GRID_DATE_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'date',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateFormatter,\n  filterOperators: getGridDateOperators(),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});\nexport const GRID_DATETIME_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'dateTime',\n  sortComparator: gridDateComparator,\n  valueFormatter: gridDateTimeFormatter,\n  filterOperators: getGridDateOperators(true),\n  renderEditCell: renderEditDateCell,\n  // @ts-ignore\n  pastedValueParser: value => new Date(value)\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nconst gridRowsStateSelector = state => state.rows;\nexport const gridRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalRowCount);\nexport const gridRowsLoadingSelector = createSelector(gridRowsStateSelector, rows => rows.loading);\nexport const gridTopLevelRowCountSelector = createSelector(gridRowsStateSelector, rows => rows.totalTopLevelRowCount);\n\n// TODO rows v6: Rename\nexport const gridRowsLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToModelLookup);\nexport const gridRowsDataRowIdToIdLookupSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIdToIdLookup);\nexport const gridRowTreeSelector = createSelector(gridRowsStateSelector, rows => rows.tree);\nexport const gridRowGroupsToFetchSelector = createSelector(gridRowsStateSelector, rows => rows.groupsToFetch);\nexport const gridRowGroupingNameSelector = createSelector(gridRowsStateSelector, rows => rows.groupingName);\nexport const gridRowTreeDepthsSelector = createSelector(gridRowsStateSelector, rows => rows.treeDepths);\nexport const gridRowMaximumTreeDepthSelector = createSelectorMemoized(gridRowsStateSelector, rows => {\n  const entries = Object.entries(rows.treeDepths);\n  if (entries.length === 0) {\n    return 1;\n  }\n  return (entries.filter(([, nodeCount]) => nodeCount > 0).map(([depth]) => Number(depth)).sort((a, b) => b - a)[0] ?? 0) + 1;\n});\nexport const gridDataRowIdsSelector = createSelector(gridRowsStateSelector, rows => rows.dataRowIds);\n\n/**\n * @ignore - do not document.\n */\nexport const gridAdditionalRowGroupsSelector = createSelector(gridRowsStateSelector, rows => rows?.additionalRowGroups);\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsSelector = createSelectorMemoized(gridAdditionalRowGroupsSelector, additionalRowGroups => {\n  const rawPinnedRows = additionalRowGroups?.pinnedRows;\n  return {\n    bottom: rawPinnedRows?.bottom?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? [],\n    top: rawPinnedRows?.top?.map(rowEntry => ({\n      id: rowEntry.id,\n      model: rowEntry.model ?? {}\n    })) ?? []\n  };\n});\n\n/**\n * @ignore - do not document.\n */\nexport const gridPinnedRowsCountSelector = createSelector(gridPinnedRowsSelector, pinnedRows => {\n  return (pinnedRows?.top?.length || 0) + (pinnedRows?.bottom?.length || 0);\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport const GRID_ROOT_GROUP_ID = `auto-generated-group-node-root`;\nexport const GRID_ID_AUTOGENERATED = Symbol('mui.id_autogenerated');\nexport const buildRootGroup = () => ({\n  type: 'group',\n  id: GRID_ROOT_GROUP_ID,\n  depth: -1,\n  groupingField: null,\n  groupingKey: null,\n  isAutoGenerated: true,\n  children: [],\n  childrenFromPath: {},\n  childrenExpanded: true,\n  parent: null\n});\n\n/**\n * A helper function to check if the id provided is valid.\n * @param {GridRowId} id Id as [[GridRowId]].\n * @param {GridRowModel | Partial<GridRowModel>} row Row as [[GridRowModel]].\n * @param {string} detailErrorMessage A custom error message to display for invalid IDs\n */\nexport function checkGridRowIdIsValid(id, row, detailErrorMessage = 'A row was provided without id in the rows prop:') {\n  if (id == null) {\n    throw new Error(['MUI X: The Data Grid component requires all rows to have a unique `id` property.', 'Alternatively, you can use the `getRowId` prop to specify a custom id for each row.', detailErrorMessage, JSON.stringify(row)].join('\\n'));\n  }\n}\nexport const getRowIdFromRowModel = (rowModel, getRowId, detailErrorMessage) => {\n  const id = getRowId ? getRowId(rowModel) : rowModel.id;\n  checkGridRowIdIsValid(id, rowModel, detailErrorMessage);\n  return id;\n};\nexport const createRowsInternalCache = ({\n  rows,\n  getRowId,\n  loading,\n  rowCount\n}) => {\n  const updates = {\n    type: 'full',\n    rows: []\n  };\n  const dataRowIdToModelLookup = {};\n  const dataRowIdToIdLookup = {};\n  for (let i = 0; i < rows.length; i += 1) {\n    const model = rows[i];\n    const id = getRowIdFromRowModel(model, getRowId);\n    dataRowIdToModelLookup[id] = model;\n    dataRowIdToIdLookup[id] = id;\n    updates.rows.push(id);\n  }\n  return {\n    rowsBeforePartialUpdates: rows,\n    loadingPropBeforePartialUpdates: loading,\n    rowCountPropBeforePartialUpdates: rowCount,\n    updates,\n    dataRowIdToIdLookup,\n    dataRowIdToModelLookup\n  };\n};\nexport const getTopLevelRowCount = ({\n  tree,\n  rowCountProp = 0\n}) => {\n  const rootGroupNode = tree[GRID_ROOT_GROUP_ID];\n  return Math.max(rowCountProp, rootGroupNode.children.length + (rootGroupNode.footerId == null ? 0 : 1));\n};\nexport const getRowsStateFromCache = ({\n  apiRef,\n  rowCountProp = 0,\n  loadingProp,\n  previousTree,\n  previousTreeDepths,\n  previousGroupsToFetch\n}) => {\n  const cache = apiRef.current.caches.rows;\n\n  // 1. Apply the \"rowTreeCreation\" family processing.\n  const {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIds: unProcessedDataRowIds,\n    groupingName,\n    groupsToFetch = []\n  } = apiRef.current.applyStrategyProcessor('rowTreeCreation', {\n    previousTree,\n    previousTreeDepths,\n    updates: cache.updates,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup,\n    previousGroupsToFetch\n  });\n\n  // 2. Apply the \"hydrateRows\" pipe-processing.\n  const groupingParamsWithHydrateRows = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n    tree: unProcessedTree,\n    treeDepths: unProcessedTreeDepths,\n    dataRowIdToIdLookup: cache.dataRowIdToIdLookup,\n    dataRowIds: unProcessedDataRowIds,\n    dataRowIdToModelLookup: cache.dataRowIdToModelLookup\n  });\n\n  // 3. Reset the cache updates\n  apiRef.current.caches.rows.updates = {\n    type: 'partial',\n    actions: {\n      insert: [],\n      modify: [],\n      remove: []\n    },\n    idToActionLookup: {}\n  };\n  return _extends({}, groupingParamsWithHydrateRows, {\n    totalRowCount: Math.max(rowCountProp, groupingParamsWithHydrateRows.dataRowIds.length),\n    totalTopLevelRowCount: getTopLevelRowCount({\n      tree: groupingParamsWithHydrateRows.tree,\n      rowCountProp\n    }),\n    groupingName,\n    loading: loadingProp,\n    groupsToFetch\n  });\n};\nexport const isAutogeneratedRow = row => GRID_ID_AUTOGENERATED in row;\nexport const isAutogeneratedRowNode = rowNode => rowNode.type === 'skeletonRow' || rowNode.type === 'footer' || rowNode.type === 'group' && rowNode.isAutoGenerated || rowNode.type === 'pinnedRow' && rowNode.isAutoGenerated;\nexport const getTreeNodeDescendants = (tree, parentId, skipAutoGeneratedRows) => {\n  const node = tree[parentId];\n  if (node.type !== 'group') {\n    return [];\n  }\n  const validDescendants = [];\n  for (let i = 0; i < node.children.length; i += 1) {\n    const child = node.children[i];\n    if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[child])) {\n      validDescendants.push(child);\n    }\n    const childDescendants = getTreeNodeDescendants(tree, child, skipAutoGeneratedRows);\n    for (let j = 0; j < childDescendants.length; j += 1) {\n      validDescendants.push(childDescendants[j]);\n    }\n  }\n  if (!skipAutoGeneratedRows && node.footerId != null) {\n    validDescendants.push(node.footerId);\n  }\n  return validDescendants;\n};\nexport const updateCacheWithNewRows = ({\n  previousCache,\n  getRowId,\n  updates,\n  groupKeys\n}) => {\n  if (previousCache.updates.type === 'full') {\n    throw new Error('MUI X: Unable to prepare a partial update if a full update is not applied yet.');\n  }\n\n  // Remove duplicate updates.\n  // A server can batch updates, and send several updates for the same row in one fn call.\n  const uniqueUpdates = new Map();\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    if (uniqueUpdates.has(id)) {\n      uniqueUpdates.set(id, _extends({}, uniqueUpdates.get(id), update));\n    } else {\n      uniqueUpdates.set(id, update);\n    }\n  });\n  const partialUpdates = {\n    type: 'partial',\n    actions: {\n      insert: [...(previousCache.updates.actions.insert ?? [])],\n      modify: [...(previousCache.updates.actions.modify ?? [])],\n      remove: [...(previousCache.updates.actions.remove ?? [])]\n    },\n    idToActionLookup: _extends({}, previousCache.updates.idToActionLookup),\n    groupKeys\n  };\n  const dataRowIdToModelLookup = _extends({}, previousCache.dataRowIdToModelLookup);\n  const dataRowIdToIdLookup = _extends({}, previousCache.dataRowIdToIdLookup);\n  const alreadyAppliedActionsToRemove = {\n    insert: {},\n    modify: {},\n    remove: {}\n  };\n\n  // Depending on the action already applied to the data row,\n  // We might want drop the already-applied-update.\n  // For instance:\n  // - if you delete then insert, then you don't want to apply the deletion in the tree.\n  // - if you insert, then modify, then you just want to apply the insertion in the tree.\n  uniqueUpdates.forEach((partialRow, id) => {\n    const actionAlreadyAppliedToRow = partialUpdates.idToActionLookup[id];\n\n    // Action === \"delete\"\n    // eslint-disable-next-line no-underscore-dangle\n    if (partialRow._action === 'delete') {\n      // If the data row has been removed since the last state update,\n      // Then do nothing.\n      if (actionAlreadyAppliedToRow === 'remove' || !dataRowIdToModelLookup[id]) {\n        return;\n      }\n\n      // If the data row has been inserted / modified since the last state update,\n      // Then drop this \"insert\" / \"modify\" update.\n      if (actionAlreadyAppliedToRow != null) {\n        alreadyAppliedActionsToRemove[actionAlreadyAppliedToRow][id] = true;\n      }\n\n      // Remove the data row from the lookups and add it to the \"delete\" update.\n      partialUpdates.actions.remove.push(id);\n      delete dataRowIdToModelLookup[id];\n      delete dataRowIdToIdLookup[id];\n      return;\n    }\n    const oldRow = dataRowIdToModelLookup[id];\n\n    // Action === \"modify\"\n    if (oldRow) {\n      // If the data row has been removed since the last state update,\n      // Then drop this \"remove\" update and add it to the \"modify\" update instead.\n      if (actionAlreadyAppliedToRow === 'remove') {\n        alreadyAppliedActionsToRemove.remove[id] = true;\n        partialUpdates.actions.modify.push(id);\n      }\n      // If the date has not been inserted / modified since the last state update,\n      // Then add it to the \"modify\" update (if it has been inserted it should just remain \"inserted\").\n      else if (actionAlreadyAppliedToRow == null) {\n        partialUpdates.actions.modify.push(id);\n      }\n\n      // Update the data row lookups.\n      dataRowIdToModelLookup[id] = _extends({}, oldRow, partialRow);\n      return;\n    }\n\n    // Action === \"insert\"\n    // If the data row has been removed since the last state update,\n    // Then drop the \"remove\" update and add it to the \"insert\" update instead.\n    if (actionAlreadyAppliedToRow === 'remove') {\n      alreadyAppliedActionsToRemove.remove[id] = true;\n      partialUpdates.actions.insert.push(id);\n    }\n    // If the data row has not been inserted since the last state update,\n    // Then add it to the \"insert\" update.\n    // `actionAlreadyAppliedToRow` can't be equal to \"modify\", otherwise we would have an `oldRow` above.\n    else if (actionAlreadyAppliedToRow == null) {\n      partialUpdates.actions.insert.push(id);\n    }\n\n    // Update the data row lookups.\n    dataRowIdToModelLookup[id] = partialRow;\n    dataRowIdToIdLookup[id] = id;\n  });\n  const actionTypeWithActionsToRemove = Object.keys(alreadyAppliedActionsToRemove);\n  for (let i = 0; i < actionTypeWithActionsToRemove.length; i += 1) {\n    const actionType = actionTypeWithActionsToRemove[i];\n    const idsToRemove = alreadyAppliedActionsToRemove[actionType];\n    if (Object.keys(idsToRemove).length > 0) {\n      partialUpdates.actions[actionType] = partialUpdates.actions[actionType].filter(id => !idsToRemove[id]);\n    }\n  }\n  return {\n    dataRowIdToModelLookup,\n    dataRowIdToIdLookup,\n    updates: partialUpdates,\n    rowsBeforePartialUpdates: previousCache.rowsBeforePartialUpdates,\n    loadingPropBeforePartialUpdates: previousCache.loadingPropBeforePartialUpdates,\n    rowCountPropBeforePartialUpdates: previousCache.rowCountPropBeforePartialUpdates\n  };\n};\nexport const minimalContentHeight = 'var(--DataGrid-overlayHeight, calc(var(--height) * 2))';\nexport function computeRowsUpdates(apiRef, updates, getRowId) {\n  const nonPinnedRowsUpdates = [];\n  updates.forEach(update => {\n    const id = getRowIdFromRowModel(update, getRowId, 'A row was provided without id when calling updateRows():');\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'pinnedRow') {\n      // @ts-ignore because otherwise `release:build` doesn't work\n      const pinnedRowsCache = apiRef.current.caches.pinnedRows;\n      const prevModel = pinnedRowsCache.idLookup[id];\n      if (prevModel) {\n        pinnedRowsCache.idLookup[id] = _extends({}, prevModel, update);\n      }\n    } else {\n      nonPinnedRowsUpdates.push(update);\n    }\n  });\n  return nonPinnedRowsUpdates;\n}\nlet warnedOnceInvalidRowHeight = false;\nexport const getValidRowHeight = (rowHeightProp, defaultRowHeight, warningMessage) => {\n  if (typeof rowHeightProp === 'number' && rowHeightProp > 0) {\n    return rowHeightProp;\n  }\n  if (process.env.NODE_ENV !== 'production' && !warnedOnceInvalidRowHeight && typeof rowHeightProp !== 'undefined' && rowHeightProp !== null) {\n    console.warn(warningMessage);\n    warnedOnceInvalidRowHeight = true;\n  }\n  return defaultRowHeight;\n};\nexport const rowHeightWarning = [`MUI X: The \\`rowHeight\\` prop should be a number greater than 0.`, `The default value will be used instead.`].join('\\n');\nexport const getRowHeightWarning = [`MUI X: The \\`getRowHeight\\` prop should return a number greater than 0 or 'auto'.`, `The default value will be used instead.`].join('\\n');","export const GRID_TREE_DATA_GROUPING_FIELD = '__tree_data_group__';\nexport const GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD = '__row_group_by_columns_group__';\nexport const GRID_DETAIL_PANEL_TOGGLE_FIELD = '__detail_panel_toggle__';\nexport let PinnedColumnPosition = /*#__PURE__*/function (PinnedColumnPosition) {\n  PinnedColumnPosition[PinnedColumnPosition[\"NONE\"] = 0] = \"NONE\";\n  PinnedColumnPosition[PinnedColumnPosition[\"LEFT\"] = 1] = \"LEFT\";\n  PinnedColumnPosition[PinnedColumnPosition[\"RIGHT\"] = 2] = \"RIGHT\";\n  PinnedColumnPosition[PinnedColumnPosition[\"VIRTUAL\"] = 3] = \"VIRTUAL\";\n  return PinnedColumnPosition;\n}({});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"hasFocus\", \"tabIndex\", \"hideDescendantCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../../hooks/features/rows/gridRowsSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { isAutogeneratedRowNode } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD } from \"../../internals/constants.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['booleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridBooleanCellRaw(props) {\n  const {\n      value,\n      rowNode\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const maxDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const isServerSideRowGroupingRow =\n  // @ts-expect-error - Access tree data prop\n  maxDepth > 0 && rowNode.type === 'group' && rootProps.treeData === false;\n  const Icon = React.useMemo(() => value ? rootProps.slots.booleanCellTrueIcon : rootProps.slots.booleanCellFalseIcon, [rootProps.slots.booleanCellFalseIcon, rootProps.slots.booleanCellTrueIcon, value]);\n  if (isServerSideRowGroupingRow && value === undefined) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: classes.root,\n    titleAccess: apiRef.current.getLocaleText(value ? 'booleanCellTrueLabel' : 'booleanCellFalseLabel'),\n    \"data-value\": Boolean(value)\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridBooleanCellRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  hideDescendantCount: PropTypes.bool,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nconst GridBooleanCell = /*#__PURE__*/React.memo(GridBooleanCellRaw);\nexport { GridBooleanCell };\nexport const renderBooleanCell = params => {\n  if (params.field !== GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD && isAutogeneratedRowNode(params.rowNode)) {\n    return '';\n  }\n  return /*#__PURE__*/_jsx(GridBooleanCell, _extends({}, params));\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['editBooleanCell']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridEditBooleanCell(props) {\n  const {\n      id: idProp,\n      value,\n      field,\n      className,\n      hasFocus,\n      onValueChange\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const inputRef = React.useRef(null);\n  const id = useId();\n  const [valueState, setValueState] = React.useState(value);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const handleChange = React.useCallback(async event => {\n    const newValue = event.target.checked;\n    if (onValueChange) {\n      await onValueChange(event, newValue);\n    }\n    setValueState(newValue);\n    await apiRef.current.setEditCellValue({\n      id: idProp,\n      field,\n      value: newValue\n    }, event);\n  }, [apiRef, field, idProp, onValueChange]);\n  React.useEffect(() => {\n    setValueState(value);\n  }, [value]);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current.focus();\n    }\n  }, [hasFocus]);\n  return /*#__PURE__*/_jsx(\"label\", _extends({\n    htmlFor: id,\n    className: clsx(classes.root, className)\n  }, other, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n      id: id,\n      inputRef: inputRef,\n      checked: Boolean(valueState),\n      onChange: handleChange,\n      size: \"small\"\n    }, rootProps.slotProps?.baseCheckbox))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditBooleanCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {boolean} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditBooleanCell };\nexport const renderEditBooleanCell = params => /*#__PURE__*/_jsx(GridEditBooleanCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"apiRef\", \"focusElementRef\", \"isFilterActive\", \"clearButton\", \"tabIndex\", \"label\", \"variant\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { refType, unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const sanitizeFilterItemValue = value => {\n  if (String(value).toLowerCase() === 'true') {\n    return true;\n  }\n  if (String(value).toLowerCase() === 'false') {\n    return false;\n  }\n  return undefined;\n};\nconst BooleanOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'center',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputBoolean(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      clearButton,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard'\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const [filterValueState, setFilterValueState] = React.useState(sanitizeFilterItemValue(item.value));\n  const rootProps = useGridRootProps();\n  const labelId = useId();\n  const selectId = useId();\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const onFilterChange = React.useCallback(event => {\n    const value = sanitizeFilterItemValue(event.target.value);\n    setFilterValueState(value);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [applyValue, item]);\n  React.useEffect(() => {\n    setFilterValueState(sanitizeFilterItemValue(item.value));\n  }, [item.value]);\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(BooleanOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsxs(rootProps.slots.baseSelect, _extends({\n        labelId: labelId,\n        id: selectId,\n        label: label,\n        value: filterValueState === undefined ? '' : String(filterValueState),\n        onChange: onFilterChange,\n        variant: variant,\n        notched: variant === 'outlined' ? true : undefined,\n        native: isSelectNative,\n        displayEmpty: true,\n        inputProps: {\n          ref: focusElementRef,\n          tabIndex\n        }\n      }, others /* FIXME: typing error */, baseSelectProps, {\n        children: [/*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"\",\n          children: apiRef.current.getLocaleText('filterValueAny')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"true\",\n          children: apiRef.current.getLocaleText('filterValueTrue')\n        })), /*#__PURE__*/_jsx(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isSelectNative,\n          value: \"false\",\n          children: apiRef.current.getLocaleText('filterValueFalse')\n        }))]\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputBoolean.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: refType,\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputBoolean };","import { GridFilterInputBoolean, sanitizeFilterItemValue } from \"../components/panel/filterPanel/GridFilterInputBoolean.js\";\nexport const getGridBooleanOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    const sanitizedValue = sanitizeFilterItemValue(filterItem.value);\n    if (sanitizedValue === undefined) {\n      return null;\n    }\n    return value => Boolean(value) === sanitizedValue;\n  },\n  InputComponent: GridFilterInputBoolean\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderBooleanCell } from \"../components/cell/GridBooleanCell.js\";\nimport { renderEditBooleanCell } from \"../components/cell/GridEditBooleanCell.js\";\nimport { gridNumberComparator } from \"../hooks/features/sorting/gridSortingUtils.js\";\nimport { getGridBooleanOperators } from \"./gridBooleanOperators.js\";\nconst gridBooleanFormatter = (value, row, column, apiRef) => {\n  return value ? apiRef.current.getLocaleText('booleanCellTrueLabel') : apiRef.current.getLocaleText('booleanCellFalseLabel');\n};\nconst stringToBoolean = value => {\n  switch (value.toLowerCase().trim()) {\n    case 'true':\n    case 'yes':\n    case '1':\n      return true;\n    case 'false':\n    case 'no':\n    case '0':\n    case 'null':\n    case 'undefined':\n      return false;\n    default:\n      return undefined;\n  }\n};\nexport const GRID_BOOLEAN_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'boolean',\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  renderCell: renderBooleanCell,\n  renderEditCell: renderEditBooleanCell,\n  sortComparator: gridNumberComparator,\n  valueFormatter: gridBooleanFormatter,\n  filterOperators: getGridBooleanOperators(),\n  getApplyQuickFilterFn: undefined,\n  // @ts-ignore\n  aggregable: false,\n  // @ts-ignore\n  pastedValueParser: value => stringToBoolean(value)\n});","/**\n * Params passed to `apiRef.current.setEditCellValue`.\n */\nvar GridCellEditStartReasons = /*#__PURE__*/function (GridCellEditStartReasons) {\n  GridCellEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridCellEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridCellEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  GridCellEditStartReasons[\"pasteKeyDown\"] = \"pasteKeyDown\";\n  return GridCellEditStartReasons;\n}(GridCellEditStartReasons || {});\n/**\n * Params passed to the `cellEditStart` event.\n */\nvar GridCellEditStopReasons = /*#__PURE__*/function (GridCellEditStopReasons) {\n  GridCellEditStopReasons[\"cellFocusOut\"] = \"cellFocusOut\";\n  GridCellEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridCellEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridCellEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridCellEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridCellEditStopReasons;\n}(GridCellEditStopReasons || {});\n/**\n * Params passed to the `cellEditStop event.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridCellEditStartReasons, GridCellEditStopReasons };","var GridEditModes = /*#__PURE__*/function (GridEditModes) {\n  GridEditModes[\"Cell\"] = \"cell\";\n  GridEditModes[\"Row\"] = \"row\";\n  return GridEditModes;\n}(GridEditModes || {});\nvar GridCellModes = /*#__PURE__*/function (GridCellModes) {\n  GridCellModes[\"Edit\"] = \"edit\";\n  GridCellModes[\"View\"] = \"view\";\n  return GridCellModes;\n}(GridCellModes || {});\nvar GridRowModes = /*#__PURE__*/function (GridRowModes) {\n  GridRowModes[\"Edit\"] = \"edit\";\n  GridRowModes[\"View\"] = \"view\";\n  return GridRowModes;\n}(GridRowModes || {});\nexport { GridEditModes, GridCellModes, GridRowModes };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isSingleSelectColDef(colDef) {\n  return colDef?.type === 'singleSelect';\n}\nexport function getValueOptions(column, additionalParams) {\n  if (!column) {\n    return undefined;\n  }\n  return typeof column.valueOptions === 'function' ? column.valueOptions(_extends({\n    field: column.field\n  }, additionalParams)) : column.valueOptions;\n}\nexport function getValueFromValueOptions(value, valueOptions, getOptionValue) {\n  if (valueOptions === undefined) {\n    return undefined;\n  }\n  const result = valueOptions.find(option => {\n    const optionValue = getOptionValue(option);\n    return String(optionValue) === String(value);\n  });\n  return getOptionValue(result);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"id\", \"value\", \"formattedValue\", \"api\", \"field\", \"row\", \"rowNode\", \"colDef\", \"cellMode\", \"isEditable\", \"tabIndex\", \"className\", \"hasFocus\", \"isValidating\", \"isProcessingProps\", \"error\", \"onValueChange\", \"initialOpen\"],\n  _excluded2 = [\"MenuProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { GridCellEditStopReasons } from \"../../models/params/gridEditCellParams.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridEditModes } from \"../../models/gridEditRowModel.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"../panel/filterPanel/filterPanelUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction isKeyboardEvent(event) {\n  return !!event.key;\n}\nfunction GridEditSingleSelectCell(props) {\n  const rootProps = useGridRootProps();\n  const {\n      id,\n      value: valueProp,\n      field,\n      row,\n      colDef,\n      hasFocus,\n      error,\n      onValueChange,\n      initialOpen = rootProps.editMode === GridEditModes.Cell\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ref = React.useRef(null);\n  const inputRef = React.useRef(null);\n  const [open, setOpen] = React.useState(initialOpen);\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isSelectNative = baseSelectProps.native ?? false;\n  const _ref = rootProps.slotProps?.baseSelect || {},\n    {\n      MenuProps\n    } = _ref,\n    otherBaseSelectProps = _objectWithoutPropertiesLoose(_ref, _excluded2);\n  useEnhancedEffect(() => {\n    if (hasFocus) {\n      inputRef.current?.focus();\n    }\n  }, [hasFocus]);\n  if (!isSingleSelectColDef(colDef)) {\n    return null;\n  }\n  const valueOptions = getValueOptions(colDef, {\n    id,\n    row\n  });\n  if (!valueOptions) {\n    return null;\n  }\n  const getOptionValue = colDef.getOptionValue;\n  const getOptionLabel = colDef.getOptionLabel;\n  const handleChange = async event => {\n    if (!isSingleSelectColDef(colDef) || !valueOptions) {\n      return;\n    }\n    setOpen(false);\n    const target = event.target;\n    // NativeSelect casts the value to a string.\n    const formattedTargetValue = getValueFromValueOptions(target.value, valueOptions, getOptionValue);\n    if (onValueChange) {\n      await onValueChange(event, formattedTargetValue);\n    }\n    await apiRef.current.setEditCellValue({\n      id,\n      field,\n      value: formattedTargetValue\n    }, event);\n  };\n  const handleClose = (event, reason) => {\n    if (rootProps.editMode === GridEditModes.Row) {\n      setOpen(false);\n      return;\n    }\n    if (reason === 'backdropClick' || event.key === 'Escape') {\n      const params = apiRef.current.getCellParams(id, field);\n      apiRef.current.publishEvent('cellEditStop', _extends({}, params, {\n        reason: event.key === 'Escape' ? GridCellEditStopReasons.escapeKeyDown : GridCellEditStopReasons.cellFocusOut\n      }));\n    }\n  };\n  const handleOpen = event => {\n    if (isKeyboardEvent(event) && event.key === 'Enter') {\n      return;\n    }\n    setOpen(true);\n  };\n  if (!valueOptions || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n    ref: ref,\n    inputRef: inputRef,\n    value: valueProp,\n    onChange: handleChange,\n    open: open,\n    onOpen: handleOpen,\n    MenuProps: _extends({\n      onClose: handleClose\n    }, MenuProps),\n    error: error,\n    native: isSelectNative,\n    fullWidth: true\n  }, other, otherBaseSelectProps, {\n    children: valueOptions.map(valueOption => {\n      const value = getOptionValue(valueOption);\n      return /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, rootProps.slotProps?.baseSelectOption || {}, {\n        native: isSelectNative,\n        key: value,\n        value: value\n      }), getOptionLabel(valueOption));\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridEditSingleSelectCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  changeReason: PropTypes.oneOf(['debouncedSetEditCellValue', 'setEditCellValue']),\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the select opens by default.\n   */\n  initialOpen: PropTypes.bool,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  isProcessingProps: PropTypes.bool,\n  isValidating: PropTypes.bool,\n  /**\n   * Callback called when the value is changed by the user.\n   * @param {SelectChangeEvent<any>} event The event source of the callback.\n   * @param {any} newValue The value that is going to be passed to `apiRef.current.setEditCellValue`.\n   * @returns {Promise<void> | void} A promise to be awaited before calling `apiRef.current.setEditCellValue`\n   */\n  onValueChange: PropTypes.func,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridEditSingleSelectCell };\nexport const renderEditSingleSelectCell = params => /*#__PURE__*/_jsx(GridEditSingleSelectCell, _extends({}, params));","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"placeholder\", \"tabIndex\", \"label\", \"variant\", \"isFilterActive\", \"clearButton\", \"InputLabelProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getValueFromValueOptions, getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst renderSingleSelectOptions = ({\n  column,\n  OptionComponent,\n  getOptionLabel,\n  getOptionValue,\n  isSelectNative,\n  baseSelectOptionProps\n}) => {\n  const iterableColumnValues = ['', ...(getValueOptions(column) || [])];\n  return iterableColumnValues.map(option => {\n    const value = getOptionValue(option);\n    let label = getOptionLabel(option);\n    if (label === '') {\n      label = ' '; // To force the height of the empty option\n    }\n    return /*#__PURE__*/_createElement(OptionComponent, _extends({}, baseSelectOptionProps, {\n      native: isSelectNative,\n      key: value,\n      value: value\n    }), label);\n  });\n};\nconst SingleSelectOperatorContainer = styled('div')({\n  display: 'flex',\n  alignItems: 'flex-end',\n  width: '100%',\n  [`& button`]: {\n    margin: 'auto 0px 5px 5px'\n  }\n});\nfunction GridFilterInputSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      type,\n      apiRef,\n      focusElementRef,\n      placeholder,\n      tabIndex,\n      label: labelProp,\n      variant = 'standard',\n      clearButton\n    } = props,\n    others = _objectWithoutPropertiesLoose(props, _excluded);\n  const filterValue = item.value ?? '';\n  const id = useId();\n  const labelId = useId();\n  const rootProps = useGridRootProps();\n  const isSelectNative = rootProps.slotProps?.baseSelect?.native ?? false;\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const currentValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn);\n  }, [resolvedColumn]);\n  const onFilterChange = React.useCallback(event => {\n    let value = event.target.value;\n\n    // NativeSelect casts the value to a string.\n    value = getValueFromValueOptions(value, currentValueOptions, getOptionValue);\n    applyValue(_extends({}, item, {\n      value\n    }));\n  }, [currentValueOptions, getOptionValue, applyValue, item]);\n  if (!isSingleSelectColDef(resolvedColumn)) {\n    return null;\n  }\n  const label = labelProp ?? apiRef.current.getLocaleText('filterPanelInputLabel');\n  return /*#__PURE__*/_jsxs(SingleSelectOperatorContainer, {\n    children: [/*#__PURE__*/_jsxs(rootProps.slots.baseFormControl, {\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, rootProps.slotProps?.baseInputLabel, {\n        id: labelId,\n        htmlFor: id,\n        shrink: true,\n        variant: variant,\n        children: label\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        id: id,\n        label: label,\n        labelId: labelId,\n        value: filterValue,\n        onChange: onFilterChange,\n        variant: variant,\n        type: type || 'text',\n        inputProps: {\n          tabIndex,\n          ref: focusElementRef,\n          placeholder: placeholder ?? apiRef.current.getLocaleText('filterPanelInputPlaceholder')\n        },\n        native: isSelectNative,\n        notched: variant === 'outlined' ? true : undefined\n      }, others /* FIXME: typing error */, rootProps.slotProps?.baseSelect, {\n        children: renderSingleSelectOptions({\n          column: resolvedColumn,\n          OptionComponent: rootProps.slots.baseSelectOption,\n          getOptionLabel,\n          getOptionValue,\n          isSelectNative,\n          baseSelectOptionProps: rootProps.slotProps?.baseSelectOption\n        })\n      }))]\n    }), clearButton]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  clearButton: PropTypes.node,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * It is `true` if the filter either has a value or an operator with no value\n   * required is selected (for example `isEmpty`)\n   */\n  isFilterActive: PropTypes.bool,\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired\n} : void 0;\nexport { GridFilterInputSingleSelect };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"applyValue\", \"type\", \"apiRef\", \"focusElementRef\", \"color\", \"error\", \"helperText\", \"size\", \"variant\"],\n  _excluded2 = [\"key\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { getValueOptions, isSingleSelectColDef } from \"./filterPanelUtils.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst filter = createFilterOptions();\nfunction GridFilterInputMultipleSingleSelect(props) {\n  const {\n      item,\n      applyValue,\n      apiRef,\n      focusElementRef,\n      color,\n      error,\n      helperText,\n      size,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const TextFieldProps = {\n    color,\n    error,\n    helperText,\n    size,\n    variant\n  };\n  const id = useId();\n  const rootProps = useGridRootProps();\n  let resolvedColumn = null;\n  if (item.field) {\n    const column = apiRef.current.getColumn(item.field);\n    if (isSingleSelectColDef(column)) {\n      resolvedColumn = column;\n    }\n  }\n  const getOptionValue = resolvedColumn?.getOptionValue;\n  const getOptionLabel = resolvedColumn?.getOptionLabel;\n  const isOptionEqualToValue = React.useCallback((option, value) => getOptionValue(option) === getOptionValue(value), [getOptionValue]);\n  const resolvedValueOptions = React.useMemo(() => {\n    return getValueOptions(resolvedColumn) || [];\n  }, [resolvedColumn]);\n\n  // The value is computed from the item.value and used directly\n  // If it was done by a useEffect/useState, the Autocomplete could receive incoherent value and options\n  const filteredValues = React.useMemo(() => {\n    if (!Array.isArray(item.value)) {\n      return [];\n    }\n    return item.value.reduce((acc, value) => {\n      const resolvedValue = resolvedValueOptions.find(v => getOptionValue(v) === value);\n      if (resolvedValue != null) {\n        acc.push(resolvedValue);\n      }\n      return acc;\n    }, []);\n  }, [getOptionValue, item.value, resolvedValueOptions]);\n  const handleChange = React.useCallback((event, value) => {\n    applyValue(_extends({}, item, {\n      value: value.map(getOptionValue)\n    }));\n  }, [applyValue, item, getOptionValue]);\n  return /*#__PURE__*/_jsx(Autocomplete, _extends({\n    multiple: true,\n    options: resolvedValueOptions,\n    isOptionEqualToValue: isOptionEqualToValue,\n    filterOptions: filter,\n    id: id,\n    value: filteredValues,\n    onChange: handleChange,\n    getOptionLabel: getOptionLabel,\n    renderTags: (value, getTagProps) => value.map((option, index) => {\n      const _getTagProps = getTagProps({\n          index\n        }),\n        {\n          key\n        } = _getTagProps,\n        tagProps = _objectWithoutPropertiesLoose(_getTagProps, _excluded2);\n      return /*#__PURE__*/_jsx(rootProps.slots.baseChip, _extends({\n        variant: \"outlined\",\n        size: \"small\",\n        label: getOptionLabel(option)\n      }, tagProps), key);\n    }),\n    renderInput: params => /*#__PURE__*/_jsx(rootProps.slots.baseTextField, _extends({}, params, {\n      label: apiRef.current.getLocaleText('filterPanelInputLabel'),\n      placeholder: apiRef.current.getLocaleText('filterPanelInputPlaceholder'),\n      InputLabelProps: _extends({}, params.InputLabelProps, {\n        shrink: true\n      }),\n      inputRef: focusElementRef,\n      type: \"singleSelect\"\n    }, TextFieldProps, rootProps.slotProps?.baseTextField))\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridFilterInputMultipleSingleSelect.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }).isRequired,\n  applyValue: PropTypes.func.isRequired,\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  type: PropTypes.oneOf(['singleSelect'])\n} : void 0;\nexport { GridFilterInputMultipleSingleSelect };","import { GridFilterInputSingleSelect } from \"../components/panel/filterPanel/GridFilterInputSingleSelect.js\";\nimport { GridFilterInputMultipleSingleSelect } from \"../components/panel/filterPanel/GridFilterInputMultipleSingleSelect.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst parseObjectValue = value => {\n  if (value == null || !isObject(value)) {\n    return value;\n  }\n  return value.value;\n};\nexport const getGridSingleSelectOperators = () => [{\n  value: 'is',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) === parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'not',\n  getApplyFilterFn: filterItem => {\n    if (filterItem.value == null || filterItem.value === '') {\n      return null;\n    }\n    return value => parseObjectValue(value) !== parseObjectValue(filterItem.value);\n  },\n  InputComponent: GridFilterInputSingleSelect\n}, {\n  value: 'isAnyOf',\n  getApplyFilterFn: filterItem => {\n    if (!Array.isArray(filterItem.value) || filterItem.value.length === 0) {\n      return null;\n    }\n    const filterItemValues = filterItem.value.map(parseObjectValue);\n    return value => filterItemValues.includes(parseObjectValue(value));\n  },\n  InputComponent: GridFilterInputMultipleSingleSelect\n}];","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderEditSingleSelectCell } from \"../components/cell/GridEditSingleSelectCell.js\";\nimport { getGridSingleSelectOperators } from \"./gridSingleSelectOperators.js\";\nimport { getValueOptions, isSingleSelectColDef } from \"../components/panel/filterPanel/filterPanelUtils.js\";\nimport { isObject } from \"../utils/utils.js\";\nconst isArrayOfObjects = options => {\n  return typeof options[0] === 'object';\n};\nconst defaultGetOptionValue = value => {\n  return isObject(value) ? value.value : value;\n};\nconst defaultGetOptionLabel = value => {\n  return isObject(value) ? value.label : String(value);\n};\nexport const GRID_SINGLE_SELECT_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  type: 'singleSelect',\n  getOptionLabel: defaultGetOptionLabel,\n  getOptionValue: defaultGetOptionValue,\n  valueFormatter(value, row, colDef, apiRef) {\n    // const { id, field, value, api } = params;\n    const rowId = apiRef.current.getRowId(row);\n    if (!isSingleSelectColDef(colDef)) {\n      return '';\n    }\n    const valueOptions = getValueOptions(colDef, {\n      id: rowId,\n      row\n    });\n    if (value == null) {\n      return '';\n    }\n    if (!valueOptions) {\n      return value;\n    }\n    if (!isArrayOfObjects(valueOptions)) {\n      return colDef.getOptionLabel(value);\n    }\n    const valueOption = valueOptions.find(option => colDef.getOptionValue(option) === value);\n    return valueOption ? colDef.getOptionLabel(valueOption) : '';\n  },\n  renderEditCell: renderEditSingleSelectCell,\n  filterOperators: getGridSingleSelectOperators(),\n  // @ts-ignore\n  pastedValueParser: (value, row, column) => {\n    const colDef = column;\n    const valueOptions = getValueOptions(colDef) || [];\n    const getOptionValue = colDef.getOptionValue;\n    const valueOption = valueOptions.find(option => {\n      if (getOptionValue(option) === value) {\n        return true;\n      }\n      return false;\n    });\n    if (valueOption) {\n      return value;\n    }\n    // do not paste the value if it is not in the valueOptions\n    return undefined;\n  }\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"open\", \"target\", \"onClose\", \"children\", \"position\", \"className\", \"onExited\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport { unstable_composeClasses as composeClasses, unstable_useEnhancedEffect as useEnhancedEffect, HTMLElementType } from '@mui/utils';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { styled } from '@mui/material/styles';\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['menu']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridMenuRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Menu',\n  overridesResolver: (_, styles) => styles.menu\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal,\n  [`& .${gridClasses.menuList}`]: {\n    outline: 0\n  }\n}));\nconst transformOrigin = {\n  'bottom-start': 'top left',\n  'bottom-end': 'top right'\n};\nfunction GridMenu(props) {\n  const {\n      open,\n      target,\n      onClose,\n      children,\n      position,\n      className,\n      onExited\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const savedFocusRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (open) {\n      savedFocusRef.current = document.activeElement instanceof HTMLElement ? document.activeElement : null;\n    } else {\n      savedFocusRef.current?.focus?.();\n      savedFocusRef.current = null;\n    }\n  }, [open]);\n  React.useEffect(() => {\n    // Emit menuOpen or menuClose events\n    const eventName = open ? 'menuOpen' : 'menuClose';\n    apiRef.current.publishEvent(eventName, {\n      target\n    });\n  }, [apiRef, open, target]);\n  const handleExited = popperOnExited => node => {\n    if (popperOnExited) {\n      popperOnExited();\n    }\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleClickAway = event => {\n    if (event.target && (target === event.target || target?.contains(event.target))) {\n      return;\n    }\n    onClose(event);\n  };\n  return /*#__PURE__*/_jsx(GridMenuRoot, _extends({\n    as: rootProps.slots.basePopper,\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    open: open,\n    anchorEl: target,\n    transition: true,\n    placement: position\n  }, other, rootProps.slotProps?.basePopper, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(ClickAwayListener, {\n      onClickAway: handleClickAway,\n      mouseEvent: \"onMouseDown\",\n      children: /*#__PURE__*/_jsx(Grow, _extends({}, TransitionProps, {\n        style: {\n          transformOrigin: transformOrigin[placement]\n        },\n        onExited: handleExited(TransitionProps?.onExited),\n        children: /*#__PURE__*/_jsx(Paper, {\n          children: children\n        })\n      }))\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired,\n  onExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  target: HTMLElementType\n} : void 0;\nexport { GridMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"api\", \"colDef\", \"id\", \"hasFocus\", \"isEditable\", \"field\", \"value\", \"formattedValue\", \"row\", \"rowNode\", \"cellMode\", \"tabIndex\", \"position\", \"focusElementRef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuList from '@mui/material/MenuList';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { unstable_useId as useId } from '@mui/utils';\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst hasActions = colDef => typeof colDef.getActions === 'function';\nfunction GridActionsCell(props) {\n  const {\n      colDef,\n      id,\n      hasFocus,\n      tabIndex,\n      position = 'bottom-end',\n      focusElementRef\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [focusedButtonIndex, setFocusedButtonIndex] = React.useState(-1);\n  const [open, setOpen] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootRef = React.useRef(null);\n  const buttonRef = React.useRef(null);\n  const ignoreCallToFocus = React.useRef(false);\n  const touchRippleRefs = React.useRef({});\n  const isRtl = useRtl();\n  const menuId = useId();\n  const buttonId = useId();\n  const rootProps = useGridRootProps();\n  if (!hasActions(colDef)) {\n    throw new Error('MUI X: Missing the `getActions` property in the `GridColDef`.');\n  }\n  const options = colDef.getActions(apiRef.current.getRowParams(id));\n  const iconButtons = options.filter(option => !option.props.showInMenu);\n  const menuButtons = options.filter(option => option.props.showInMenu);\n  const numberOfButtons = iconButtons.length + (menuButtons.length ? 1 : 0);\n  React.useLayoutEffect(() => {\n    if (!hasFocus) {\n      Object.entries(touchRippleRefs.current).forEach(([index, ref]) => {\n        ref?.stop({}, () => {\n          delete touchRippleRefs.current[index];\n        });\n      });\n    }\n  }, [hasFocus]);\n  React.useEffect(() => {\n    if (focusedButtonIndex < 0 || !rootRef.current) {\n      return;\n    }\n    if (focusedButtonIndex >= rootRef.current.children.length) {\n      return;\n    }\n    const child = rootRef.current.children[focusedButtonIndex];\n    child.focus({\n      preventScroll: true\n    });\n  }, [focusedButtonIndex]);\n  React.useEffect(() => {\n    if (!hasFocus) {\n      setFocusedButtonIndex(-1);\n      ignoreCallToFocus.current = false;\n    }\n  }, [hasFocus]);\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus() {\n      // If ignoreCallToFocus is true, then one of the buttons was clicked and the focus is already set\n      if (!ignoreCallToFocus.current) {\n        // find the first focusable button and pass the index to the state\n        const focusableButtonIndex = options.findIndex(o => !o.props.disabled);\n        setFocusedButtonIndex(focusableButtonIndex);\n      }\n    }\n  }), [options]);\n  React.useEffect(() => {\n    if (focusedButtonIndex >= numberOfButtons) {\n      setFocusedButtonIndex(numberOfButtons - 1);\n    }\n  }, [focusedButtonIndex, numberOfButtons]);\n  const showMenu = () => {\n    setOpen(true);\n    setFocusedButtonIndex(numberOfButtons - 1);\n    ignoreCallToFocus.current = true;\n  };\n  const hideMenu = () => {\n    setOpen(false);\n  };\n  const toggleMenu = () => {\n    if (open) {\n      hideMenu();\n    } else {\n      showMenu();\n    }\n  };\n  const handleTouchRippleRef = index => instance => {\n    touchRippleRefs.current[index] = instance;\n  };\n  const handleButtonClick = (index, onClick) => event => {\n    setFocusedButtonIndex(index);\n    ignoreCallToFocus.current = true;\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const handleRootKeyDown = event => {\n    if (numberOfButtons <= 1) {\n      return;\n    }\n    const getNewIndex = (index, direction) => {\n      if (index < 0 || index > options.length) {\n        return index;\n      }\n\n      // for rtl mode we need to reverse the direction\n      const rtlMod = isRtl ? -1 : 1;\n      const indexMod = (direction === 'left' ? -1 : 1) * rtlMod;\n\n      // if the button that should receive focus is disabled go one more step\n      return options[index + indexMod]?.props.disabled ? getNewIndex(index + indexMod, direction) : index + indexMod;\n    };\n    let newIndex = focusedButtonIndex;\n    if (event.key === 'ArrowRight') {\n      newIndex = getNewIndex(focusedButtonIndex, 'right');\n    } else if (event.key === 'ArrowLeft') {\n      newIndex = getNewIndex(focusedButtonIndex, 'left');\n    }\n    if (newIndex < 0 || newIndex >= numberOfButtons) {\n      return; // We're already in the first or last item = do nothing and let the grid listen the event\n    }\n    if (newIndex !== focusedButtonIndex) {\n      event.preventDefault(); // Prevent scrolling\n      event.stopPropagation(); // Don't stop propagation for other keys, for example ArrowUp\n      setFocusedButtonIndex(newIndex);\n    }\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (['Tab', 'Escape'].includes(event.key)) {\n      hideMenu();\n    }\n  };\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    role: \"menu\",\n    ref: rootRef,\n    tabIndex: -1,\n    className: gridClasses.actionsCell,\n    onKeyDown: handleRootKeyDown\n  }, other, {\n    children: [iconButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n      key: index,\n      touchRippleRef: handleTouchRippleRef(index),\n      onClick: handleButtonClick(index, button.props.onClick),\n      tabIndex: focusedButtonIndex === index ? tabIndex : -1\n    })), menuButtons.length > 0 && buttonId && /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      ref: buttonRef,\n      id: buttonId,\n      \"aria-label\": apiRef.current.getLocaleText('actionsCellMore'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": open,\n      \"aria-controls\": open ? menuId : undefined,\n      role: \"menuitem\",\n      size: \"small\",\n      onClick: toggleMenu,\n      touchRippleRef: handleTouchRippleRef(buttonId),\n      tabIndex: focusedButtonIndex === iconButtons.length ? tabIndex : -1\n    }, rootProps.slotProps?.baseIconButton, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.moreActionsIcon, {\n        fontSize: \"small\"\n      })\n    })), menuButtons.length > 0 && /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      position: position,\n      onClose: hideMenu,\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: menuId,\n        className: gridClasses.menuList,\n        onKeyDown: handleListKeyDown,\n        \"aria-labelledby\": buttonId,\n        variant: \"menu\",\n        autoFocusItem: true,\n        children: menuButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button, {\n          key: index,\n          closeMenu: hideMenu\n        }))\n      })\n    })]\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  api: PropTypes.object,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  position: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridActionsCell };\nexport const renderActionsCell = params => /*#__PURE__*/_jsx(GridActionsCell, _extends({}, params));","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { renderActionsCell } from \"../components/cell/GridActionsCell.js\";\nexport const GRID_ACTIONS_COLUMN_TYPE = 'actions';\nexport const GRID_ACTIONS_COL_DEF = _extends({}, GRID_STRING_COL_DEF, {\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  width: 100,\n  display: 'flex',\n  align: 'center',\n  headerAlign: 'center',\n  headerName: '',\n  disableColumnMenu: true,\n  disableExport: true,\n  renderCell: renderActionsCell,\n  getApplyQuickFilterFn: undefined\n});","import { GRID_STRING_COL_DEF } from \"./gridStringColDef.js\";\nimport { GRID_NUMERIC_COL_DEF } from \"./gridNumericColDef.js\";\nimport { GRID_DATE_COL_DEF, GRID_DATETIME_COL_DEF } from \"./gridDateColDef.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { GRID_SINGLE_SELECT_COL_DEF } from \"./gridSingleSelectColDef.js\";\nimport { GRID_ACTIONS_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"./gridActionsColDef.js\";\nexport const DEFAULT_GRID_COL_TYPE_KEY = 'string';\nexport const getGridDefaultColumnTypes = () => {\n  const nativeColumnTypes = {\n    string: GRID_STRING_COL_DEF,\n    number: GRID_NUMERIC_COL_DEF,\n    date: GRID_DATE_COL_DEF,\n    dateTime: GRID_DATETIME_COL_DEF,\n    boolean: GRID_BOOLEAN_COL_DEF,\n    singleSelect: GRID_SINGLE_SELECT_COL_DEF,\n    [GRID_ACTIONS_COLUMN_TYPE]: GRID_ACTIONS_COL_DEF,\n    custom: GRID_STRING_COL_DEF\n  };\n  return nativeColumnTypes;\n};","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridHeaderFilteringStateSelector = state => state.headerFiltering;\nexport const gridHeaderFilteringEnabledSelector = createSelector(gridHeaderFilteringStateSelector,\n// No initialization in MIT, so we need to default to false to be used by `getTotalHeaderHeight`\nheaderFilteringState => headerFilteringState?.enabled ?? false);\nexport const gridHeaderFilteringEditFieldSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.editing);\nexport const gridHeaderFilteringMenuSelector = createSelector(gridHeaderFilteringStateSelector, headerFilteringState => headerFilteringState.menuOpen);","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * @category ColumnGrouping\n * @ignore - do not document.\n */\nexport const gridColumnGroupingSelector = state => state.columnGrouping;\nexport const gridColumnGroupsUnwrappedModelSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.unwrappedGroupingModel ?? {});\nexport const gridColumnGroupsLookupSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.lookup ?? {});\nexport const gridColumnGroupsHeaderStructureSelector = createSelectorMemoized(gridColumnGroupingSelector, columnGrouping => columnGrouping?.headerStructure ?? []);\nexport const gridColumnGroupsHeaderMaxDepthSelector = createSelector(gridColumnGroupingSelector, columnGrouping => columnGrouping?.maxDepth ?? 0);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport resolveProps from '@mui/utils/resolveProps';\nimport { DEFAULT_GRID_COL_TYPE_KEY, GRID_STRING_COL_DEF, getGridDefaultColumnTypes } from \"../../../colDef/index.js\";\nimport { gridColumnsStateSelector, gridColumnVisibilityModelSelector } from \"./gridColumnsSelector.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridHeaderFilteringEnabledSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nexport const COLUMNS_DIMENSION_PROPERTIES = ['maxWidth', 'minWidth', 'width', 'flex'];\nconst COLUMN_TYPES = getGridDefaultColumnTypes();\n\n/**\n * Computes width for flex columns.\n * Based on CSS Flexbox specification:\n * https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n */\nexport function computeFlexColumnsWidth({\n  initialFreeSpace,\n  totalFlexUnits,\n  flexColumns\n}) {\n  const uniqueFlexColumns = new Set(flexColumns.map(col => col.field));\n  const flexColumnsLookup = {\n    all: {},\n    frozenFields: [],\n    freeze: field => {\n      const value = flexColumnsLookup.all[field];\n      if (value && value.frozen !== true) {\n        flexColumnsLookup.all[field].frozen = true;\n        flexColumnsLookup.frozenFields.push(field);\n      }\n    }\n  };\n\n  // Step 5 of https://drafts.csswg.org/css-flexbox-1/#resolve-flexible-lengths\n  function loopOverFlexItems() {\n    // 5a: If all the flex items on the line are frozen, free space has been distributed.\n    if (flexColumnsLookup.frozenFields.length === uniqueFlexColumns.size) {\n      return;\n    }\n    const violationsLookup = {\n      min: {},\n      max: {}\n    };\n    let remainingFreeSpace = initialFreeSpace;\n    let flexUnits = totalFlexUnits;\n    let totalViolation = 0;\n\n    // 5b: Calculate the remaining free space\n    flexColumnsLookup.frozenFields.forEach(field => {\n      remainingFreeSpace -= flexColumnsLookup.all[field].computedWidth;\n      flexUnits -= flexColumnsLookup.all[field].flex;\n    });\n    for (let i = 0; i < flexColumns.length; i += 1) {\n      const column = flexColumns[i];\n      if (flexColumnsLookup.all[column.field] && flexColumnsLookup.all[column.field].frozen === true) {\n        continue;\n      }\n\n      // 5c: Distribute remaining free space proportional to the flex factors\n      const widthPerFlexUnit = remainingFreeSpace / flexUnits;\n      let computedWidth = widthPerFlexUnit * column.flex;\n\n      // 5d: Fix min/max violations\n      if (computedWidth < column.minWidth) {\n        totalViolation += column.minWidth - computedWidth;\n        computedWidth = column.minWidth;\n        violationsLookup.min[column.field] = true;\n      } else if (computedWidth > column.maxWidth) {\n        totalViolation += column.maxWidth - computedWidth;\n        computedWidth = column.maxWidth;\n        violationsLookup.max[column.field] = true;\n      }\n      flexColumnsLookup.all[column.field] = {\n        frozen: false,\n        computedWidth,\n        flex: column.flex\n      };\n    }\n\n    // 5e: Freeze over-flexed items\n    if (totalViolation < 0) {\n      // Freeze all the items with max violations\n      Object.keys(violationsLookup.max).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else if (totalViolation > 0) {\n      // Freeze all the items with min violations\n      Object.keys(violationsLookup.min).forEach(field => {\n        flexColumnsLookup.freeze(field);\n      });\n    } else {\n      // Freeze all items\n      flexColumns.forEach(({\n        field\n      }) => {\n        flexColumnsLookup.freeze(field);\n      });\n    }\n\n    // 5f: Return to the start of this loop\n    loopOverFlexItems();\n  }\n  loopOverFlexItems();\n  return flexColumnsLookup.all;\n}\n\n/**\n * Compute the `computedWidth` (ie: the width the column should have during rendering) based on the `width` / `flex` / `minWidth` / `maxWidth` properties of `GridColDef`.\n * The columns already have been merged with there `type` default values for `minWidth`, `maxWidth` and `width`, thus the `!` for those properties below.\n * TODO: Unit test this function in depth and only keep basic cases for the whole grid testing.\n * TODO: Improve the `GridColDef` typing to reflect the fact that `minWidth` / `maxWidth` and `width` can't be null after the merge with the `type` default values.\n */\nexport const hydrateColumnsWidth = (rawState, dimensions) => {\n  const columnsLookup = {};\n  let totalFlexUnits = 0;\n  let widthAllocatedBeforeFlex = 0;\n  const flexColumns = [];\n\n  // For the non-flex columns, compute their width\n  // For the flex columns, compute their minimum width and how much width must be allocated during the flex allocation\n  rawState.orderedFields.forEach(columnField => {\n    let column = rawState.lookup[columnField];\n    let computedWidth = 0;\n    let isFlex = false;\n    if (rawState.columnVisibilityModel[columnField] !== false) {\n      if (column.flex && column.flex > 0) {\n        totalFlexUnits += column.flex;\n        isFlex = true;\n      } else {\n        computedWidth = clamp(column.width || GRID_STRING_COL_DEF.width, column.minWidth || GRID_STRING_COL_DEF.minWidth, column.maxWidth || GRID_STRING_COL_DEF.maxWidth);\n      }\n      widthAllocatedBeforeFlex += computedWidth;\n    }\n    if (column.computedWidth !== computedWidth) {\n      column = _extends({}, column, {\n        computedWidth\n      });\n    }\n    if (isFlex) {\n      flexColumns.push(column);\n    }\n    columnsLookup[columnField] = column;\n  });\n  const availableWidth = dimensions === undefined ? 0 : dimensions.viewportOuterSize.width - (dimensions.hasScrollY ? dimensions.scrollbarSize : 0);\n  const initialFreeSpace = Math.max(availableWidth - widthAllocatedBeforeFlex, 0);\n\n  // Allocate the remaining space to the flex columns\n  if (totalFlexUnits > 0 && availableWidth > 0) {\n    const computedColumnWidths = computeFlexColumnsWidth({\n      initialFreeSpace,\n      totalFlexUnits,\n      flexColumns\n    });\n    Object.keys(computedColumnWidths).forEach(field => {\n      columnsLookup[field].computedWidth = computedColumnWidths[field].computedWidth;\n    });\n  }\n  return _extends({}, rawState, {\n    lookup: columnsLookup\n  });\n};\n\n/**\n * Apply the order and the dimensions of the initial state.\n * The columns not registered in `orderedFields` will be placed after the imported columns.\n */\nexport const applyInitialState = (columnsState, initialState) => {\n  if (!initialState) {\n    return columnsState;\n  }\n  const {\n    orderedFields = [],\n    dimensions = {}\n  } = initialState;\n  const columnsWithUpdatedDimensions = Object.keys(dimensions);\n  if (columnsWithUpdatedDimensions.length === 0 && orderedFields.length === 0) {\n    return columnsState;\n  }\n  const orderedFieldsLookup = {};\n  const cleanOrderedFields = [];\n  for (let i = 0; i < orderedFields.length; i += 1) {\n    const field = orderedFields[i];\n\n    // Ignores the fields in the initialState that matches no field on the current column state\n    if (columnsState.lookup[field]) {\n      orderedFieldsLookup[field] = true;\n      cleanOrderedFields.push(field);\n    }\n  }\n  const newOrderedFields = cleanOrderedFields.length === 0 ? columnsState.orderedFields : [...cleanOrderedFields, ...columnsState.orderedFields.filter(field => !orderedFieldsLookup[field])];\n  const newColumnLookup = _extends({}, columnsState.lookup);\n  for (let i = 0; i < columnsWithUpdatedDimensions.length; i += 1) {\n    const field = columnsWithUpdatedDimensions[i];\n    const newColDef = _extends({}, newColumnLookup[field], {\n      hasBeenResized: true\n    });\n    Object.entries(dimensions[field]).forEach(([key, value]) => {\n      newColDef[key] = value === -1 ? Infinity : value;\n    });\n    newColumnLookup[field] = newColDef;\n  }\n  const newColumnsState = _extends({}, columnsState, {\n    orderedFields: newOrderedFields,\n    lookup: newColumnLookup\n  });\n  return newColumnsState;\n};\nfunction getDefaultColTypeDef(type) {\n  let colDef = COLUMN_TYPES[DEFAULT_GRID_COL_TYPE_KEY];\n  if (type && COLUMN_TYPES[type]) {\n    colDef = COLUMN_TYPES[type];\n  }\n  return colDef;\n}\nexport const createColumnsState = ({\n  apiRef,\n  columnsToUpsert,\n  initialState,\n  columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef),\n  keepOnlyColumnsToUpsert = false\n}) => {\n  const isInsideStateInitializer = !apiRef.current.state.columns;\n  let columnsState;\n  if (isInsideStateInitializer) {\n    columnsState = {\n      orderedFields: [],\n      lookup: {},\n      columnVisibilityModel\n    };\n  } else {\n    const currentState = gridColumnsStateSelector(apiRef.current.state);\n    columnsState = {\n      orderedFields: keepOnlyColumnsToUpsert ? [] : [...currentState.orderedFields],\n      lookup: _extends({}, currentState.lookup),\n      // Will be cleaned later if keepOnlyColumnsToUpsert=true\n      columnVisibilityModel\n    };\n  }\n  let columnsToKeep = {};\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    columnsToKeep = Object.keys(columnsState.lookup).reduce((acc, key) => _extends({}, acc, {\n      [key]: false\n    }), {});\n  }\n  const columnsToUpsertLookup = {};\n  columnsToUpsert.forEach(newColumn => {\n    const {\n      field\n    } = newColumn;\n    columnsToUpsertLookup[field] = true;\n    columnsToKeep[field] = true;\n    let existingState = columnsState.lookup[field];\n    if (existingState == null) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field,\n        hasBeenResized: false\n      });\n      columnsState.orderedFields.push(field);\n    } else if (keepOnlyColumnsToUpsert) {\n      columnsState.orderedFields.push(field);\n    }\n\n    // If the column type has changed - merge the existing state with the default column type definition\n    if (existingState && existingState.type !== newColumn.type) {\n      existingState = _extends({}, getDefaultColTypeDef(newColumn.type), {\n        field\n      });\n    }\n    let hasBeenResized = existingState.hasBeenResized;\n    COLUMNS_DIMENSION_PROPERTIES.forEach(key => {\n      if (newColumn[key] !== undefined) {\n        hasBeenResized = true;\n        if (newColumn[key] === -1) {\n          newColumn[key] = Infinity;\n        }\n      }\n    });\n    columnsState.lookup[field] = resolveProps(existingState, _extends({}, newColumn, {\n      hasBeenResized\n    }));\n  });\n  if (keepOnlyColumnsToUpsert && !isInsideStateInitializer) {\n    Object.keys(columnsState.lookup).forEach(field => {\n      if (!columnsToKeep[field]) {\n        delete columnsState.lookup[field];\n      }\n    });\n  }\n  const columnsStateWithPreProcessing = apiRef.current.unstable_applyPipeProcessors('hydrateColumns', columnsState);\n  const columnsStateWithPortableColumns = applyInitialState(columnsStateWithPreProcessing, initialState);\n  return hydrateColumnsWidth(columnsStateWithPortableColumns, apiRef.current.getRootDimensions?.() ?? undefined);\n};\nexport function getFirstNonSpannedColumnToRender({\n  firstColumnToRender,\n  apiRef,\n  firstRowToRender,\n  lastRowToRender,\n  visibleRows\n}) {\n  let firstNonSpannedColumnToRender = firstColumnToRender;\n  for (let i = firstRowToRender; i < lastRowToRender; i += 1) {\n    const row = visibleRows[i];\n    if (row) {\n      const rowId = visibleRows[i].id;\n      const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, firstColumnToRender);\n      if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n        firstNonSpannedColumnToRender = cellColSpanInfo.leftVisibleCellIndex;\n      }\n    }\n  }\n  return firstNonSpannedColumnToRender;\n}\nexport function getTotalHeaderHeight(apiRef, props) {\n  if (props.unstable_listView) {\n    return 0;\n  }\n  const densityFactor = gridDensityFactorSelector(apiRef);\n  const maxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n  const isHeaderFilteringEnabled = gridHeaderFilteringEnabledSelector(apiRef);\n  const columnHeadersHeight = Math.floor(props.columnHeaderHeight * densityFactor);\n  const columnGroupHeadersHeight = Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * densityFactor);\n  const filterHeadersHeight = isHeaderFilteringEnabled ? Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * densityFactor) : 0;\n  return columnHeadersHeight + columnGroupHeadersHeight * maxDepth + filterHeadersHeight;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/index.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridApiEventHandler } from \"../hooks/utils/useGridApiEventHandler.js\";\nimport { useGridSelector, useGridSelectorV8 } from \"../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector, gridColumnsTotalWidthSelector } from \"../hooks/features/dimensions/gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../hooks/features/density/densitySelector.js\";\nimport { useTimeout } from \"../hooks/utils/useTimeout.js\";\nimport { getTotalHeaderHeight } from \"../hooks/features/columns/gridColumnsUtils.js\";\nimport { createSelectorV8 } from \"../utils/createSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CLIFF = 1;\nconst SLOP = 1.5;\nconst useUtilityClasses = ownerState => {\n  const {\n    scrollDirection,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollArea', `scrollArea--${scrollDirection}`]\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridScrollAreaRawRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ScrollArea',\n  overridesResolver: (props, styles) => [{\n    [`&.${gridClasses['scrollArea--left']}`]: styles['scrollArea--left']\n  }, {\n    [`&.${gridClasses['scrollArea--right']}`]: styles['scrollArea--right']\n  }, styles.scrollArea]\n})(() => ({\n  position: 'absolute',\n  top: 0,\n  zIndex: 101,\n  width: 20,\n  bottom: 0,\n  [`&.${gridClasses['scrollArea--left']}`]: {\n    left: 0\n  },\n  [`&.${gridClasses['scrollArea--right']}`]: {\n    right: 0\n  }\n}));\nconst offsetSelector = createSelectorV8(gridDimensionsSelector, (dimensions, direction) => {\n  if (direction === 'left') {\n    return dimensions.leftPinnedWidth;\n  }\n  if (direction === 'right') {\n    return dimensions.rightPinnedWidth + (dimensions.hasScrollX ? dimensions.scrollbarSize : 0);\n  }\n  return 0;\n});\nfunction GridScrollAreaWrapper(props) {\n  const apiRef = useGridApiContext();\n  const [dragging, setDragging] = React.useState(false);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', () => setDragging(true));\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', () => setDragging(false));\n  if (!dragging) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaContent, _extends({}, props));\n}\nfunction GridScrollAreaContent(props) {\n  const {\n    scrollDirection,\n    scrollPosition\n  } = props;\n  const rootRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const timeout = useTimeout();\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const sideOffset = useGridSelectorV8(apiRef, offsetSelector, scrollDirection);\n  const getCanScrollMore = () => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (scrollDirection === 'left') {\n      // Only render if the user has not reached yet the start of the list\n      return scrollPosition.current.left > 0;\n    }\n    if (scrollDirection === 'right') {\n      // Only render if the user has not reached yet the end of the list\n      const maxScrollLeft = columnsTotalWidth - dimensions.viewportInnerSize.width;\n      return scrollPosition.current.left < maxScrollLeft;\n    }\n    return false;\n  };\n  const [canScrollMore, setCanScrollMore] = React.useState(getCanScrollMore);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, rootProps, {\n    scrollDirection\n  });\n  const classes = useUtilityClasses(ownerState);\n  const totalHeaderHeight = getTotalHeaderHeight(apiRef, rootProps);\n  const headerHeight = Math.floor(rootProps.columnHeaderHeight * densityFactor);\n  const style = {\n    height: headerHeight,\n    top: totalHeaderHeight - headerHeight\n  };\n  if (scrollDirection === 'left') {\n    style.left = sideOffset;\n  } else if (scrollDirection === 'right') {\n    style.right = sideOffset;\n  }\n  const handleScrolling = () => {\n    setCanScrollMore(getCanScrollMore);\n  };\n  const handleDragOver = useEventCallback(event => {\n    let offset;\n\n    // Prevents showing the forbidden cursor\n    event.preventDefault();\n    if (scrollDirection === 'left') {\n      offset = event.clientX - rootRef.current.getBoundingClientRect().right;\n    } else if (scrollDirection === 'right') {\n      offset = Math.max(1, event.clientX - rootRef.current.getBoundingClientRect().left);\n    } else {\n      throw new Error('MUI X: Wrong drag direction');\n    }\n    offset = (offset - CLIFF) * SLOP + CLIFF;\n\n    // Avoid freeze and inertia.\n    timeout.start(0, () => {\n      apiRef.current.scroll({\n        left: scrollPosition.current.left + offset,\n        top: scrollPosition.current.top\n      });\n    });\n  });\n  useGridApiEventHandler(apiRef, 'scrollPositionChange', handleScrolling);\n  if (!canScrollMore) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridScrollAreaRawRoot, {\n    ref: rootRef,\n    className: clsx(classes.root),\n    ownerState: ownerState,\n    onDragOver: handleDragOver,\n    style: style\n  });\n}\nexport const GridScrollArea = fastMemo(GridScrollAreaWrapper);","import * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nconst noop = () => {};\n\n/**\n * Runs an effect once, when `condition` is true.\n */\nexport const useRunOnce = (condition, effect) => {\n  const didRun = React.useRef(false);\n  useEnhancedEffect(() => {\n    if (didRun.current || !condition) {\n      return noop;\n    }\n    didRun.current = true;\n    return effect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [didRun.current || condition]);\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowTreeSelector, gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { GRID_ID_AUTOGENERATED, isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nconst gridSortingStateSelector = state => state.sorting;\n\n/**\n * Get the id of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowIdsSelector = createSelector(gridSortingStateSelector, sortingState => sortingState.sortedRows);\n\n/**\n * Get the id and the model of the rows after the sorting process.\n * @category Sorting\n */\nexport const gridSortedRowEntriesSelector = createSelectorMemoized(gridSortedRowIdsSelector, gridRowsLookupSelector, gridRowTreeSelector, (sortedIds, idRowsLookup, rowTree) => sortedIds.reduce((acc, id) => {\n  const model = idRowsLookup[id];\n  if (model) {\n    acc.push({\n      id,\n      model\n    });\n  } else {\n    const rowNode = rowTree[id];\n    if (rowNode && isAutogeneratedRowNode(rowNode)) {\n      acc.push({\n        id,\n        model: {\n          [GRID_ID_AUTOGENERATED]: id\n        }\n      });\n    }\n  }\n  return acc;\n}, []));\n\n/**\n * Get the current sorting model.\n * @category Sorting\n */\nexport const gridSortModelSelector = createSelector(gridSortingStateSelector, sorting => sorting.sortModel);\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortColumnLookupSelector = createSelectorMemoized(gridSortModelSelector, sortModel => {\n  const result = sortModel.reduce((res, sortItem, index) => {\n    res[sortItem.field] = {\n      sortDirection: sortItem.sort,\n      sortIndex: sortModel.length > 1 ? index + 1 : undefined\n    };\n    return res;\n  }, {});\n  return result;\n});\n\n/**\n * @category Sorting\n * @ignore - do not document.\n */\nexport const gridSortedRowIndexLookupSelector = createSelectorMemoized(gridSortedRowIdsSelector, sortedIds => {\n  return sortedIds.reduce((acc, id, index) => {\n    acc[id] = index;\n    return acc;\n  }, Object.create(null));\n});","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridSortedRowEntriesSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\n\n/**\n * @category Filtering\n */\nconst gridFilterStateSelector = state => state.filter;\n\n/**\n * Get the current filter model.\n * @category Filtering\n */\nexport const gridFilterModelSelector = createSelector(gridFilterStateSelector, filterState => filterState.filterModel);\n\n/**\n * Get the current quick filter values.\n * @category Filtering\n */\nexport const gridQuickFilterValuesSelector = createSelector(gridFilterModelSelector, filterModel => filterModel.quickFilterValues);\n\n/**\n * @category Visible rows\n * @ignore - do not document.\n */\nexport const gridVisibleRowsLookupSelector = state => state.visibleRowsLookup;\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredRowsLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredRowsLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredChildrenCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredChildrenCountLookup);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilteredDescendantCountLookupSelector = createSelector(gridFilterStateSelector, filterState => filterState.filteredDescendantCountLookup);\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowEntriesSelector = createSelectorMemoized(gridVisibleRowsLookupSelector, gridSortedRowEntriesSelector, gridRowMaximumTreeDepthSelector, gridFilterModelSelector, gridQuickFilterValuesSelector, (visibleRowsLookup, sortedRows, maxDepth, filterModel, quickFilterValues) => {\n  if (maxDepth < 2 && !filterModel.items.length && !quickFilterValues?.length) {\n    return sortedRows;\n  }\n  return sortedRows.filter(row => visibleRowsLookup[row.id] !== false);\n});\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n */\nexport const gridExpandedSortedRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, visibleSortedRowEntries => visibleSortedRowEntries.map(row => row.id));\n\n/**\n * Get the id and the model of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowEntriesSelector = createSelectorMemoized(gridFilteredRowsLookupSelector, gridSortedRowEntriesSelector, (filteredRowsLookup, sortedRows) => sortedRows.filter(row => filteredRowsLookup[row.id] !== false));\n\n/**\n * Get the id of the rows accessible after the filtering process.\n * Contains the collapsed children.\n * @category Filtering\n */\nexport const gridFilteredSortedRowIdsSelector = createSelectorMemoized(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.map(row => row.id));\n\n/**\n * Get the ids to position in the current tree level lookup of the rows accessible after the filtering process.\n * Does not contain the collapsed children.\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridExpandedSortedRowTreeLevelPositionLookupSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridRowTreeSelector, (visibleSortedRowIds, rowTree) => {\n  const depthPositionCounter = {};\n  let lastDepth = 0;\n  return visibleSortedRowIds.reduce((acc, rowId) => {\n    const rowNode = rowTree[rowId];\n    if (!depthPositionCounter[rowNode.depth]) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n\n    // going deeper in the tree should reset the counter\n    // since it might have been used in some other branch at the same level, up in the tree\n    // going back up should keep the counter and continue where it left off\n    if (rowNode.depth > lastDepth) {\n      depthPositionCounter[rowNode.depth] = 0;\n    }\n    lastDepth = rowNode.depth;\n    depthPositionCounter[rowNode.depth] += 1;\n    acc[rowId] = depthPositionCounter[rowNode.depth];\n    return acc;\n  }, {});\n});\n\n/**\n * Get the id and the model of the top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredSortedTopLevelRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, (visibleSortedRows, rowTree, rowTreeDepth) => {\n  if (rowTreeDepth < 2) {\n    return visibleSortedRows;\n  }\n  return visibleSortedRows.filter(row => rowTree[row.id]?.depth === 0);\n});\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridExpandedRowCountSelector = createSelector(gridExpandedSortedRowEntriesSelector, visibleSortedRows => visibleSortedRows.length);\n\n/**\n * Get the amount of top level rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredTopLevelRowCountSelector = createSelector(gridFilteredSortedTopLevelRowEntriesSelector, visibleSortedTopLevelRows => visibleSortedTopLevelRows.length);\n\n/**\n * Get the amount of rows accessible after the filtering process.\n * Includes top level and descendant rows.\n * @category Filtering\n */\nexport const gridFilteredRowCountSelector = createSelector(gridFilteredSortedRowEntriesSelector, filteredSortedRowEntries => filteredSortedRowEntries.length);\n\n/**\n * Get the amount of descendant rows accessible after the filtering process.\n * @category Filtering\n */\nexport const gridFilteredDescendantRowCountSelector = createSelector(gridFilteredRowCountSelector, gridFilteredTopLevelRowCountSelector, (totalRowCount, topLevelRowCount) => totalRowCount - topLevelRowCount);\n\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsSelector = createSelectorMemoized(gridFilterModelSelector, gridColumnLookupSelector, (filterModel, columnLookup) => filterModel.items?.filter(item => {\n  if (!item.field) {\n    return false;\n  }\n  const column = columnLookup[item.field];\n  if (!column?.filterOperators || column?.filterOperators?.length === 0) {\n    return false;\n  }\n  const filterOperator = column.filterOperators.find(operator => operator.value === item.operator);\n  if (!filterOperator) {\n    return false;\n  }\n  return !filterOperator.InputComponent || item.value != null && item.value?.toString() !== '';\n}));\n/**\n * @category Filtering\n * @ignore - do not document.\n */\nexport const gridFilterActiveItemsLookupSelector = createSelectorMemoized(gridFilterActiveItemsSelector, activeFilters => {\n  const result = activeFilters.reduce((res, filterItem) => {\n    if (!res[filterItem.field]) {\n      res[filterItem.field] = [filterItem];\n    } else {\n      res[filterItem.field].push(filterItem);\n    }\n    return res;\n  }, {});\n  return result;\n});","import { GridSignature } from \"../../utils/index.js\";\nconst MAX_PAGE_SIZE = 100;\nexport const defaultPageSize = autoPageSize => autoPageSize ? 0 : 100;\nexport const getPageCount = (rowCount, pageSize, page) => {\n  if (pageSize > 0 && rowCount > 0) {\n    return Math.ceil(rowCount / pageSize);\n  }\n  if (rowCount === -1) {\n    // With unknown row-count, we can assume a page after the current one\n    return page + 2;\n  }\n  return 0;\n};\nexport const getDefaultGridPaginationModel = autoPageSize => ({\n  page: 0,\n  pageSize: autoPageSize ? 0 : 100\n});\nexport const getValidPage = (page, pageCount = 0) => {\n  if (pageCount === 0) {\n    return page;\n  }\n  return Math.max(Math.min(page, pageCount - 1), 0);\n};\nexport const throwIfPageSizeExceedsTheLimit = (pageSize, signatureProp) => {\n  if (signatureProp === GridSignature.DataGrid && pageSize > MAX_PAGE_SIZE) {\n    throw new Error(['MUI X: `pageSize` cannot exceed 100 in the MIT version of the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n  }\n};","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridExpandedSortedRowEntriesSelector, gridExpandedSortedRowIdsSelector, gridFilteredSortedTopLevelRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { getPageCount } from \"./gridPaginationUtils.js\";\nconst ALL_RESULTS_PAGE_VALUE = -1;\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationSelector = state => state.pagination;\n\n/**\n * @category Pagination\n * @ignore - do not document.\n */\nexport const gridPaginationEnabledClientSideSelector = createSelector(gridPaginationSelector, pagination => pagination.enabled && pagination.paginationMode === 'client');\n\n/**\n * Get the pagination model\n * @category Pagination\n */\nexport const gridPaginationModelSelector = createSelector(gridPaginationSelector, pagination => pagination.paginationModel);\n\n/**\n * Get the row count\n * @category Pagination\n */\nexport const gridPaginationRowCountSelector = createSelector(gridPaginationSelector, pagination => pagination.rowCount);\n\n/**\n * Get the pagination meta\n * @category Pagination\n */\nexport const gridPaginationMetaSelector = createSelector(gridPaginationSelector, pagination => pagination.meta);\n\n/**\n * Get the index of the page to render if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.page);\n\n/**\n * Get the maximum amount of rows to display on a single page if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageSizeSelector = createSelector(gridPaginationModelSelector, paginationModel => paginationModel.pageSize);\n\n/**\n * Get the amount of pages needed to display all the rows if the pagination is enabled\n * @category Pagination\n */\nexport const gridPageCountSelector = createSelector(gridPaginationModelSelector, gridPaginationRowCountSelector, (paginationModel, rowCount) => getPageCount(rowCount, paginationModel.pageSize, paginationModel.page));\n\n/**\n * Get the index of the first and the last row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginationRowRangeSelector = createSelectorMemoized(gridPaginationEnabledClientSideSelector, gridPaginationModelSelector, gridRowTreeSelector, gridRowMaximumTreeDepthSelector, gridExpandedSortedRowEntriesSelector, gridFilteredSortedTopLevelRowEntriesSelector, (clientSidePaginationEnabled, paginationModel, rowTree, rowTreeDepth, visibleSortedRowEntries, visibleSortedTopLevelRowEntries) => {\n  if (!clientSidePaginationEnabled) {\n    return null;\n  }\n  const visibleTopLevelRowCount = visibleSortedTopLevelRowEntries.length;\n  const topLevelFirstRowIndex = Math.min(paginationModel.pageSize * paginationModel.page, visibleTopLevelRowCount - 1);\n  const topLevelLastRowIndex = paginationModel.pageSize === ALL_RESULTS_PAGE_VALUE ? visibleTopLevelRowCount - 1 : Math.min(topLevelFirstRowIndex + paginationModel.pageSize - 1, visibleTopLevelRowCount - 1);\n\n  // The range contains no element\n  if (topLevelFirstRowIndex === -1 || topLevelLastRowIndex === -1) {\n    return null;\n  }\n\n  // The tree is flat, there is no need to look for children\n  if (rowTreeDepth < 2) {\n    return {\n      firstRowIndex: topLevelFirstRowIndex,\n      lastRowIndex: topLevelLastRowIndex\n    };\n  }\n  const topLevelFirstRow = visibleSortedTopLevelRowEntries[topLevelFirstRowIndex];\n  const topLevelRowsInCurrentPageCount = topLevelLastRowIndex - topLevelFirstRowIndex + 1;\n  const firstRowIndex = visibleSortedRowEntries.findIndex(row => row.id === topLevelFirstRow.id);\n  let lastRowIndex = firstRowIndex;\n  let topLevelRowAdded = 0;\n  while (lastRowIndex < visibleSortedRowEntries.length && topLevelRowAdded <= topLevelRowsInCurrentPageCount) {\n    const row = visibleSortedRowEntries[lastRowIndex];\n    const depth = rowTree[row.id]?.depth;\n    if (depth === undefined) {\n      lastRowIndex += 1;\n    } else {\n      if (topLevelRowAdded < topLevelRowsInCurrentPageCount || depth > 0) {\n        lastRowIndex += 1;\n      }\n      if (depth === 0) {\n        topLevelRowAdded += 1;\n      }\n    }\n  }\n  return {\n    firstRowIndex,\n    lastRowIndex: lastRowIndex - 1\n  };\n});\n\n/**\n * Get the id and the model of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowEntriesSelector = createSelectorMemoized(gridExpandedSortedRowEntriesSelector, gridPaginationRowRangeSelector, (visibleSortedRowEntries, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowEntries.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the id of each row to include in the current page if the pagination is enabled.\n * @category Pagination\n */\nexport const gridPaginatedVisibleSortedGridRowIdsSelector = createSelectorMemoized(gridExpandedSortedRowIdsSelector, gridPaginationRowRangeSelector, (visibleSortedRowIds, paginationRange) => {\n  if (!paginationRange) {\n    return [];\n  }\n  return visibleSortedRowIds.slice(paginationRange.firstRowIndex, paginationRange.lastRowIndex + 1);\n});\n\n/**\n * Get the rows, range and rowIndex lookup map after filtering and sorting.\n * Does not contain the collapsed children.\n * @category Pagination\n */\nexport const gridVisibleRowsSelector = createSelectorMemoized(gridPaginationEnabledClientSideSelector, gridPaginationRowRangeSelector, gridPaginatedVisibleSortedGridRowEntriesSelector, gridExpandedSortedRowEntriesSelector, (clientPaginationEnabled, paginationRowRange, paginationRows, expandedSortedRowEntries) => {\n  if (clientPaginationEnabled) {\n    return {\n      rows: paginationRows,\n      range: paginationRowRange,\n      rowToIndexMap: paginationRows.reduce((lookup, row, index) => {\n        lookup.set(row.model, index);\n        return lookup;\n      }, new Map())\n    };\n  }\n  return {\n    rows: expandedSortedRowEntries,\n    range: expandedSortedRowEntries.length === 0 ? null : {\n      firstRowIndex: 0,\n      lastRowIndex: expandedSortedRowEntries.length - 1\n    },\n    rowToIndexMap: expandedSortedRowEntries.reduce((lookup, row, index) => {\n      lookup.set(row.model, index);\n      return lookup;\n    }, new Map())\n  };\n});","import { gridVisibleRowsSelector } from \"../features/pagination/gridPaginationSelector.js\";\nimport { useGridSelector } from \"./index.js\";\nexport const getVisibleRows = (apiRef, props) => {\n  return gridVisibleRowsSelector(apiRef);\n};\n\n/**\n * Computes the list of rows that are reachable by scroll.\n * Depending on whether pagination is enabled, it will return the rows in the current page.\n * - If the pagination is disabled or in server mode, it equals all the visible rows.\n * - If the row tree has several layers, it contains up to `state.pageSize` top level rows and all their descendants.\n * - If the row tree is flat, it only contains up to `state.pageSize` rows.\n */\n\nexport const useGridVisibleRows = (apiRef, props) => {\n  return useGridSelector(apiRef, gridVisibleRowsSelector);\n};","const userAgent = typeof navigator !== 'undefined' ? navigator.userAgent.toLowerCase() : 'empty';\nexport const isFirefox = userAgent.includes('firefox');","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nexport const gridRowSelectionStateSelector = state => state.rowSelection;\nexport const selectedGridRowsCountSelector = createSelector(gridRowSelectionStateSelector, selection => selection.length);\nexport const selectedGridRowsSelector = createSelectorMemoized(gridRowSelectionStateSelector, gridRowsLookupSelector, (selectedRows, rowsLookup) => new Map(selectedRows.map(id => [id, rowsLookup[id]])));\nexport const selectedIdsLookupSelector = createSelectorMemoized(gridRowSelectionStateSelector, selection => selection.reduce((lookup, rowId) => {\n  lookup[rowId] = rowId;\n  return lookup;\n}, {}));","export const gridRowsMetaSelector = state => state.rowsMeta;","import { createSelector, createSelectorMemoized } from \"../../../utils/createSelector.js\";\n/**\n * Get the columns state\n * @category Virtualization\n */\nexport const gridVirtualizationSelector = state => state.virtualization;\n\n/**\n * Get the enabled state for virtualization\n * @category Virtualization\n * @deprecated Use `gridVirtualizationColumnEnabledSelector` and `gridVirtualizationRowEnabledSelector`\n */\nexport const gridVirtualizationEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabled);\n\n/**\n * Get the enabled state for column virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationColumnEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForColumns);\n\n/**\n * Get the enabled state for row virtualization\n * @category Virtualization\n */\nexport const gridVirtualizationRowEnabledSelector = createSelector(gridVirtualizationSelector, state => state.enabledForRows);\n\n/**\n * Get the render context\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextSelector = createSelector(gridVirtualizationSelector, state => state.renderContext);\n\n/**\n * Get the render context, with only columns filled in.\n * This is cached, so it can be used to only re-render when the column interval changes.\n * @category Virtualization\n * @ignore - do not document.\n */\nexport const gridRenderContextColumnsSelector = createSelectorMemoized(state => state.virtualization.renderContext.firstColumnIndex, state => state.virtualization.renderContext.lastColumnIndex, (firstColumnIndex, lastColumnIndex) => ({\n  firstColumnIndex,\n  lastColumnIndex\n}));","import * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nexport function useGridApiMethod(privateApiRef, apiMethods, visibility) {\n  const isFirstRender = React.useRef(true);\n  useEnhancedEffect(() => {\n    isFirstRender.current = false;\n    privateApiRef.current.register(visibility, apiMethods);\n  }, [privateApiRef, visibility, apiMethods]);\n  if (isFirstRender.current) {\n    privateApiRef.current.register(visibility, apiMethods);\n  }\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const EMPTY_RENDER_CONTEXT = {\n  firstRowIndex: 0,\n  lastRowIndex: 0,\n  firstColumnIndex: 0,\n  lastColumnIndex: 0\n};\nexport const virtualizationStateInitializer = (state, props) => {\n  const {\n    disableVirtualization,\n    autoHeight\n  } = props;\n  const virtualization = {\n    enabled: !disableVirtualization,\n    enabledForColumns: !disableVirtualization,\n    enabledForRows: !disableVirtualization && !autoHeight,\n    renderContext: EMPTY_RENDER_CONTEXT\n  };\n  return _extends({}, state, {\n    virtualization\n  });\n};\nexport function useGridVirtualization(apiRef, props) {\n  /*\n   * API METHODS\n   */\n\n  const setVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled,\n        enabledForColumns: enabled,\n        enabledForRows: enabled && !props.autoHeight\n      })\n    }));\n  };\n  const setColumnVirtualization = enabled => {\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabledForColumns: enabled\n      })\n    }));\n  };\n  const api = {\n    unstable_setVirtualization: setVirtualization,\n    unstable_setColumnVirtualization: setColumnVirtualization\n  };\n  useGridApiMethod(apiRef, api, 'public');\n\n  /*\n   * EFFECTS\n   */\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    setVirtualization(!props.disableVirtualization);\n  }, [props.disableVirtualization, props.autoHeight]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n}","import { createSelector } from \"../../../utils/createSelector.js\";\nconst gridRowSpanningStateSelector = state => state.rowSpanning;\nexport const gridRowSpanningHiddenCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCells);\nexport const gridRowSpanningSpannedCellsSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.spannedCells);\nexport const gridRowSpanningHiddenCellsOriginMapSelector = createSelector(gridRowSpanningStateSelector, rowSpanning => rowSpanning.hiddenCellOriginMap);","/**\n * Get the list column definition\n * @category List View\n * @ignore - Do not document\n */\nexport const gridListColumnSelector = state => state.listViewColumn;","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridFocusStateSelector = state => state.focus;\nexport const gridFocusCellSelector = createSelector(gridFocusStateSelector, focusState => focusState.cell);\nexport const gridFocusColumnHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeader);\nexport const gridFocusColumnHeaderFilterSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnHeaderFilter);\nexport const gridFocusColumnGroupHeaderSelector = createSelector(gridFocusStateSelector, focusState => focusState.columnGroupHeader);\nexport const gridTabIndexStateSelector = state => state.tabIndex;\nexport const gridTabIndexCellSelector = createSelector(gridTabIndexStateSelector, state => state.cell);\nexport const gridTabIndexColumnHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeader);\nexport const gridTabIndexColumnHeaderFilterSelector = createSelector(gridTabIndexStateSelector, state => state.columnHeaderFilter);\nexport const gridTabIndexColumnGroupHeaderSelector = createSelector(gridTabIndexStateSelector, state => state.columnGroupHeader);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createSelector } from 'reselect';\nimport { createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRenderContextSelector } from \"./gridVirtualizationSelectors.js\";\nimport { gridFocusCellSelector } from \"../focus/index.js\";\nimport { gridVisibleRowsSelector } from \"../pagination/index.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nconst gridIsFocusedCellOutOfContext = createSelector(gridFocusCellSelector, gridRenderContextSelector, gridVisibleRowsSelector, gridVisibleColumnDefinitionsSelector, gridRowsLookupSelector, (focusedCell, renderContext, currentPage, visibleColumns, rows) => {\n  if (!focusedCell) {\n    return false;\n  }\n  const row = rows[focusedCell.id];\n  if (!row) {\n    return false;\n  }\n  const rowIndex = currentPage.rowToIndexMap.get(row);\n  const columnIndex = visibleColumns.slice(renderContext.firstColumnIndex, renderContext.lastColumnIndex).findIndex(column => column.field === focusedCell.field);\n  const isInRenderContext = rowIndex !== undefined && columnIndex !== -1 && rowIndex >= renderContext.firstRowIndex && rowIndex <= renderContext.lastRowIndex;\n  return !isInRenderContext;\n});\nexport const gridFocusedVirtualCellSelector = createSelectorMemoized(gridIsFocusedCellOutOfContext, gridVisibleColumnDefinitionsSelector, gridVisibleRowsSelector, gridRowsLookupSelector, gridFocusCellSelector, (isFocusedCellOutOfRenderContext, visibleColumns, currentPage, rows, focusedCell) => {\n  if (!isFocusedCellOutOfRenderContext) {\n    return null;\n  }\n  const row = rows[focusedCell.id];\n  if (!row) {\n    return null;\n  }\n  const rowIndex = currentPage.rowToIndexMap.get(row);\n  if (rowIndex === undefined) {\n    return null;\n  }\n  const columnIndex = visibleColumns.findIndex(column => column.field === focusedCell.field);\n  if (columnIndex === -1) {\n    return null;\n  }\n  return _extends({}, focusedCell, {\n    rowIndex,\n    columnIndex\n  });\n});","export function roundToDecimalPlaces(value, decimals) {\n  return Math.round(value * 10 ** decimals) / 10 ** decimals;\n}","export const isJSDOM = typeof window !== 'undefined' && /jsdom|HappyDOM/.test(window.navigator.userAgent);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport useTimeout from '@mui/utils/useTimeout';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport reactMajor from '@mui/x-internals/reactMajor';\nimport { gridDimensionsSelector, gridColumnsTotalWidthSelector, gridContentHeightSelector, gridHasFillerSelector, gridRowHeightSelector, gridVerticalScrollbarWidthSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { useRunOnce } from \"../../utils/useRunOnce.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnPositionsSelector, gridHasColSpanSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nimport { useGridVisibleRows, getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { useGridApiOptionHandler } from \"../../utils/index.js\";\nimport * as platform from \"../../../utils/platform.js\";\nimport { clamp, range } from \"../../../utils/utils.js\";\nimport { selectedIdsLookupSelector } from \"../rowSelection/gridRowSelectionSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { getFirstNonSpannedColumnToRender } from \"../columns/gridColumnsUtils.js\";\nimport { gridRenderContextSelector, gridVirtualizationRowEnabledSelector, gridVirtualizationColumnEnabledSelector } from \"./gridVirtualizationSelectors.js\";\nimport { EMPTY_RENDER_CONTEXT } from \"./useGridVirtualization.js\";\nimport { gridRowSpanningHiddenCellsOriginMapSelector } from \"../rows/gridRowSpanningSelectors.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nimport { minimalContentHeight } from \"../rows/gridRowsUtils.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"../columns/index.js\";\nimport { gridFocusedVirtualCellSelector } from \"./gridFocusedVirtualCellSelector.js\";\nimport { roundToDecimalPlaces } from \"../../../utils/roundToDecimalPlaces.js\";\nimport { isJSDOM } from \"../../../utils/isJSDOM.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MINIMUM_COLUMN_WIDTH = 50;\nvar ScrollDirection = /*#__PURE__*/function (ScrollDirection) {\n  ScrollDirection[ScrollDirection[\"NONE\"] = 0] = \"NONE\";\n  ScrollDirection[ScrollDirection[\"UP\"] = 1] = \"UP\";\n  ScrollDirection[ScrollDirection[\"DOWN\"] = 2] = \"DOWN\";\n  ScrollDirection[ScrollDirection[\"LEFT\"] = 3] = \"LEFT\";\n  ScrollDirection[ScrollDirection[\"RIGHT\"] = 4] = \"RIGHT\";\n  return ScrollDirection;\n}(ScrollDirection || {});\nconst EMPTY_SCROLL_POSITION = {\n  top: 0,\n  left: 0\n};\nexport const EMPTY_DETAIL_PANELS = Object.freeze(new Map());\nconst createScrollCache = (isRtl, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) => ({\n  direction: ScrollDirection.NONE,\n  buffer: bufferForDirection(isRtl, ScrollDirection.NONE, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer)\n});\nexport const useGridVirtualScroller = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    unstable_listView: listView\n  } = rootProps;\n  const visibleColumns = useGridSelector(apiRef, () => listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef));\n  const enabledForRows = useGridSelector(apiRef, gridVirtualizationRowEnabledSelector) && !isJSDOM;\n  const enabledForColumns = useGridSelector(apiRef, gridVirtualizationColumnEnabledSelector) && !isJSDOM;\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const pinnedColumnDefinitions = gridVisiblePinnedColumnDefinitionsSelector(apiRef);\n  const pinnedColumns = listView ? EMPTY_PINNED_COLUMN_FIELDS : pinnedColumnDefinitions;\n  const hasBottomPinnedRows = pinnedRows.bottom.length > 0;\n  const [panels, setPanels] = React.useState(EMPTY_DETAIL_PANELS);\n  const isRtl = useRtl();\n  const selectedRowsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const currentPage = useGridVisibleRows(apiRef);\n  const mainRef = apiRef.current.mainElementRef;\n  const scrollerRef = apiRef.current.virtualScrollerRef;\n  const scrollbarVerticalRef = apiRef.current.virtualScrollbarVerticalRef;\n  const scrollbarHorizontalRef = apiRef.current.virtualScrollbarHorizontalRef;\n  const hasColSpan = useGridSelector(apiRef, gridHasColSpanSelector);\n  const isRenderContextReady = React.useRef(false);\n  const rowHeight = useGridSelector(apiRef, gridRowHeightSelector);\n  const contentHeight = useGridSelector(apiRef, gridContentHeightSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const needsHorizontalScrollbar = useGridSelector(apiRef, needsHorizontalScrollbarSelector);\n  const verticalScrollbarWidth = useGridSelector(apiRef, gridVerticalScrollbarWidthSelector);\n  const gridHasFiller = useGridSelector(apiRef, gridHasFillerSelector);\n  const previousSize = React.useRef(null);\n  const mainRefCallback = React.useCallback(node => {\n    mainRef.current = node;\n    if (!node) {\n      return undefined;\n    }\n    const initialRect = node.getBoundingClientRect();\n    let lastSize = {\n      width: roundToDecimalPlaces(initialRect.width, 1),\n      height: roundToDecimalPlaces(initialRect.height, 1)\n    };\n    if (!previousSize.current || lastSize.width !== previousSize.current.width && lastSize.height !== previousSize.current.height) {\n      previousSize.current = lastSize;\n      apiRef.current.publishEvent('resize', lastSize);\n    }\n    if (typeof ResizeObserver === 'undefined') {\n      return undefined;\n    }\n    const observer = new ResizeObserver(entries => {\n      const entry = entries[0];\n      if (!entry) {\n        return;\n      }\n      const newSize = {\n        width: roundToDecimalPlaces(entry.contentRect.width, 1),\n        height: roundToDecimalPlaces(entry.contentRect.height, 1)\n      };\n      if (newSize.width === lastSize.width && newSize.height === lastSize.height) {\n        return;\n      }\n      apiRef.current.publishEvent('resize', newSize);\n      lastSize = newSize;\n    });\n    observer.observe(node);\n    if (reactMajor >= 19) {\n      return () => {\n        mainRef.current = null;\n        observer.disconnect();\n      };\n    }\n    return undefined;\n  }, [apiRef, mainRef]);\n\n  /*\n   * Scroll context logic\n   * ====================\n   * We only render the cells contained in the `renderContext`. However, when the user starts scrolling the grid\n   * in a direction, we want to render as many cells as possible in that direction, as to avoid presenting white\n   * areas if the user scrolls too fast/far and the viewport ends up in a region we haven't rendered yet. To render\n   * more cells, we store some offsets to add to the viewport in `scrollCache.buffer`. Those offsets make the render\n   * context wider in the direction the user is going, but also makes the buffer around the viewport `0` for the\n   * dimension (horizontal or vertical) in which the user is not scrolling. So if the normal viewport is 8 columns\n   * wide, with a 1 column buffer (10 columns total), then we want it to be exactly 8 columns wide during vertical\n   * scroll.\n   * However, we don't want the rows in the old context to re-render from e.g. 10 columns to 8 columns, because that's\n   * work that's not necessary. Thus we store the context at the start of the scroll in `frozenContext`, and the rows\n   * that are part of this old context will keep their same render context as to avoid re-rendering.\n   */\n  const scrollPosition = React.useRef(rootProps.initialState?.scroll ?? EMPTY_SCROLL_POSITION);\n  const ignoreNextScrollEvent = React.useRef(false);\n  const previousContextScrollPosition = React.useRef(EMPTY_SCROLL_POSITION);\n  const previousRowContext = React.useRef(EMPTY_RENDER_CONTEXT);\n  const renderContext = useGridSelector(apiRef, gridRenderContextSelector);\n  const focusedVirtualCell = useGridSelector(apiRef, gridFocusedVirtualCellSelector);\n  const scrollTimeout = useTimeout();\n  const frozenContext = React.useRef(undefined);\n  const scrollCache = useLazyRef(() => createScrollCache(isRtl, rootProps.rowBufferPx, rootProps.columnBufferPx, rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6)).current;\n  const updateRenderContext = React.useCallback(nextRenderContext => {\n    if (areRenderContextsEqual(nextRenderContext, apiRef.current.state.virtualization.renderContext)) {\n      return;\n    }\n    const didRowsIntervalChange = nextRenderContext.firstRowIndex !== previousRowContext.current.firstRowIndex || nextRenderContext.lastRowIndex !== previousRowContext.current.lastRowIndex;\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        virtualization: _extends({}, state.virtualization, {\n          renderContext: nextRenderContext\n        })\n      });\n    });\n\n    // The lazy-loading hook is listening to `renderedRowsIntervalChange`,\n    // but only does something if we already have a render context, because\n    // otherwise we would call an update directly on mount\n    const isReady = gridDimensionsSelector(apiRef.current.state).isReady;\n    if (isReady && didRowsIntervalChange) {\n      previousRowContext.current = nextRenderContext;\n      apiRef.current.publishEvent('renderedRowsIntervalChange', nextRenderContext);\n    }\n    previousContextScrollPosition.current = scrollPosition.current;\n  }, [apiRef]);\n  const triggerUpdateRenderContext = useEventCallback(() => {\n    const scroller = scrollerRef.current;\n    if (!scroller) {\n      return undefined;\n    }\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const maxScrollTop = Math.ceil(dimensions.minimumSize.height - dimensions.viewportOuterSize.height);\n    const maxScrollLeft = Math.ceil(dimensions.minimumSize.width - dimensions.viewportInnerSize.width);\n\n    // Clamp the scroll position to the viewport to avoid re-calculating the render context for scroll bounce\n    const newScroll = {\n      top: clamp(scroller.scrollTop, 0, maxScrollTop),\n      left: isRtl ? clamp(scroller.scrollLeft, -maxScrollLeft, 0) : clamp(scroller.scrollLeft, 0, maxScrollLeft)\n    };\n    const dx = newScroll.left - scrollPosition.current.left;\n    const dy = newScroll.top - scrollPosition.current.top;\n    const isScrolling = dx !== 0 || dy !== 0;\n    scrollPosition.current = newScroll;\n    const direction = isScrolling ? directionForDelta(dx, dy) : ScrollDirection.NONE;\n\n    // Since previous render, we have scrolled...\n    const rowScroll = Math.abs(scrollPosition.current.top - previousContextScrollPosition.current.top);\n    const columnScroll = Math.abs(scrollPosition.current.left - previousContextScrollPosition.current.left);\n\n    // PERF: use the computed minimum column width instead of a static one\n    const didCrossThreshold = rowScroll >= rowHeight || columnScroll >= MINIMUM_COLUMN_WIDTH;\n    const didChangeDirection = scrollCache.direction !== direction;\n    const shouldUpdate = didCrossThreshold || didChangeDirection;\n    if (!shouldUpdate) {\n      return renderContext;\n    }\n\n    // Render a new context\n\n    if (didChangeDirection) {\n      switch (direction) {\n        case ScrollDirection.NONE:\n        case ScrollDirection.LEFT:\n        case ScrollDirection.RIGHT:\n          frozenContext.current = undefined;\n          break;\n        default:\n          frozenContext.current = renderContext;\n          break;\n      }\n    }\n    scrollCache.direction = direction;\n    scrollCache.buffer = bufferForDirection(isRtl, direction, rootProps.rowBufferPx, rootProps.columnBufferPx, rowHeight * 15, MINIMUM_COLUMN_WIDTH * 6);\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n\n    // Prevents batching render context changes\n    ReactDOM.flushSync(() => {\n      updateRenderContext(nextRenderContext);\n    });\n    scrollTimeout.start(1000, triggerUpdateRenderContext);\n    return nextRenderContext;\n  });\n  const forceUpdateRenderContext = () => {\n    // skip update if dimensions are not ready and virtualization is enabled\n    if (!gridDimensionsSelector(apiRef.current.state).isReady && (enabledForRows || enabledForColumns)) {\n      return;\n    }\n    const inputs = inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns);\n    const nextRenderContext = computeRenderContext(inputs, scrollPosition.current, scrollCache);\n    // Reset the frozen context when the render context changes, see the illustration in https://github.com/mui/mui-x/pull/12353\n    frozenContext.current = undefined;\n    updateRenderContext(nextRenderContext);\n  };\n  const handleScroll = useEventCallback(() => {\n    if (ignoreNextScrollEvent.current) {\n      ignoreNextScrollEvent.current = false;\n      return;\n    }\n    const nextRenderContext = triggerUpdateRenderContext();\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext: nextRenderContext\n    });\n  });\n  const handleWheel = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerWheel', {}, event);\n  });\n  const handleTouchMove = useEventCallback(event => {\n    apiRef.current.publishEvent('virtualScrollerTouchMove', {}, event);\n  });\n  const getRows = (params = {}) => {\n    if (!params.rows && !currentPage.range) {\n      return [];\n    }\n    let baseRenderContext = renderContext;\n    if (params.renderContext) {\n      baseRenderContext = params.renderContext;\n      baseRenderContext.firstColumnIndex = renderContext.firstColumnIndex;\n      baseRenderContext.lastColumnIndex = renderContext.lastColumnIndex;\n    }\n    const isLastSection = !hasBottomPinnedRows && params.position === undefined || hasBottomPinnedRows && params.position === 'bottom';\n    const isPinnedSection = params.position !== undefined;\n    let rowIndexOffset;\n    // FIXME: Why is the switch check exhaustiveness not validated with typescript-eslint?\n    // eslint-disable-next-line default-case\n    switch (params.position) {\n      case 'top':\n        rowIndexOffset = 0;\n        break;\n      case 'bottom':\n        rowIndexOffset = pinnedRows.top.length + currentPage.rows.length;\n        break;\n      case undefined:\n        rowIndexOffset = pinnedRows.top.length;\n        break;\n    }\n    const rowModels = params.rows ?? currentPage.rows;\n    const firstRowToRender = baseRenderContext.firstRowIndex;\n    const lastRowToRender = Math.min(baseRenderContext.lastRowIndex, rowModels.length);\n    const rowIndexes = params.rows ? range(0, params.rows.length) : range(firstRowToRender, lastRowToRender);\n    let virtualRowIndex = -1;\n    if (!isPinnedSection && focusedVirtualCell) {\n      if (focusedVirtualCell.rowIndex < firstRowToRender) {\n        rowIndexes.unshift(focusedVirtualCell.rowIndex);\n        virtualRowIndex = focusedVirtualCell.rowIndex;\n      }\n      if (focusedVirtualCell.rowIndex > lastRowToRender) {\n        rowIndexes.push(focusedVirtualCell.rowIndex);\n        virtualRowIndex = focusedVirtualCell.rowIndex;\n      }\n    }\n    const rows = [];\n    const rowProps = rootProps.slotProps?.row;\n    const columnPositions = gridColumnPositionsSelector(apiRef);\n    rowIndexes.forEach(rowIndexInPage => {\n      const {\n        id,\n        model\n      } = rowModels[rowIndexInPage];\n      const rowIndex = (currentPage?.range?.firstRowIndex || 0) + rowIndexOffset + rowIndexInPage;\n\n      // NOTE: This is an expensive feature, the colSpan code could be optimized.\n      if (hasColSpan) {\n        const minFirstColumn = pinnedColumns.left.length;\n        const maxLastColumn = visibleColumns.length - pinnedColumns.right.length;\n        apiRef.current.calculateColSpan({\n          rowId: id,\n          minFirstColumn,\n          maxLastColumn,\n          columns: visibleColumns\n        });\n        if (pinnedColumns.left.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: 0,\n            maxLastColumn: pinnedColumns.left.length,\n            columns: visibleColumns\n          });\n        }\n        if (pinnedColumns.right.length > 0) {\n          apiRef.current.calculateColSpan({\n            rowId: id,\n            minFirstColumn: visibleColumns.length - pinnedColumns.right.length,\n            maxLastColumn: visibleColumns.length,\n            columns: visibleColumns\n          });\n        }\n      }\n      const baseRowHeight = !apiRef.current.rowHasAutoHeight(id) ? apiRef.current.unstable_getRowHeight(id) : 'auto';\n      let isSelected;\n      if (selectedRowsLookup[id] == null) {\n        isSelected = false;\n      } else {\n        isSelected = apiRef.current.isRowSelectable(id);\n      }\n      let isFirstVisible = false;\n      if (params.position === undefined) {\n        isFirstVisible = rowIndexInPage === 0;\n      }\n      let isLastVisible = false;\n      const isLastVisibleInSection = rowIndexInPage === rowModels.length - 1;\n      if (isLastSection) {\n        if (!isPinnedSection) {\n          const lastIndex = currentPage.rows.length - 1;\n          const isLastVisibleRowIndex = rowIndexInPage === lastIndex;\n          if (isLastVisibleRowIndex) {\n            isLastVisible = true;\n          }\n        } else {\n          isLastVisible = isLastVisibleInSection;\n        }\n      }\n      let currentRenderContext = baseRenderContext;\n      if (frozenContext.current && rowIndexInPage >= frozenContext.current.firstRowIndex && rowIndexInPage < frozenContext.current.lastRowIndex) {\n        currentRenderContext = frozenContext.current;\n      }\n      const isVirtualFocusRow = rowIndexInPage === virtualRowIndex;\n      const isVirtualFocusColumn = focusedVirtualCell?.rowIndex === rowIndex;\n      const offsetLeft = computeOffsetLeft(columnPositions, currentRenderContext, pinnedColumns.left.length);\n      const showBottomBorder = isLastVisibleInSection && params.position === 'top';\n      const firstColumnIndex = currentRenderContext.firstColumnIndex;\n      const lastColumnIndex = currentRenderContext.lastColumnIndex;\n      rows.push(/*#__PURE__*/_jsx(rootProps.slots.row, _extends({\n        row: model,\n        rowId: id,\n        index: rowIndex,\n        selected: isSelected,\n        offsetLeft: offsetLeft,\n        columnsTotalWidth: columnsTotalWidth,\n        rowHeight: baseRowHeight,\n        pinnedColumns: pinnedColumns,\n        visibleColumns: visibleColumns,\n        firstColumnIndex: firstColumnIndex,\n        lastColumnIndex: lastColumnIndex,\n        focusedColumnIndex: isVirtualFocusColumn ? focusedVirtualCell.columnIndex : undefined,\n        isFirstVisible: isFirstVisible,\n        isLastVisible: isLastVisible,\n        isNotVisible: isVirtualFocusRow,\n        showBottomBorder: showBottomBorder,\n        scrollbarWidth: verticalScrollbarWidth,\n        gridHasFiller: gridHasFiller\n      }, rowProps), id));\n      if (isVirtualFocusRow) {\n        return;\n      }\n      const panel = panels.get(id);\n      if (panel) {\n        rows.push(panel);\n      }\n      if (params.position === undefined && isLastVisibleInSection) {\n        rows.push(apiRef.current.getInfiniteLoadingTriggerElement?.({\n          lastRowId: id\n        }));\n      }\n    });\n    return rows;\n  };\n  const scrollerStyle = React.useMemo(() => ({\n    overflowX: !needsHorizontalScrollbar || listView ? 'hidden' : undefined,\n    overflowY: rootProps.autoHeight ? 'hidden' : undefined\n  }), [needsHorizontalScrollbar, rootProps.autoHeight, listView]);\n  const contentSize = React.useMemo(() => {\n    const size = {\n      width: needsHorizontalScrollbar ? columnsTotalWidth : 'auto',\n      flexBasis: contentHeight,\n      flexShrink: 0\n    };\n    if (size.flexBasis === 0) {\n      size.flexBasis = minimalContentHeight; // Give room to show the overlay when there no rows.\n    }\n    return size;\n  }, [columnsTotalWidth, contentHeight, needsHorizontalScrollbar]);\n  const onContentSizeApplied = React.useCallback(node => {\n    if (!node) {\n      return;\n    }\n    apiRef.current.publishEvent('virtualScrollerContentSizeChange', {\n      columnsTotalWidth,\n      contentHeight\n    });\n  }, [apiRef, columnsTotalWidth, contentHeight]);\n  useEnhancedEffect(() => {\n    if (!isRenderContextReady.current) {\n      return;\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, enabledForColumns, enabledForRows]);\n  useEnhancedEffect(() => {\n    if (listView) {\n      scrollerRef.current.scrollLeft = 0;\n    }\n  }, [listView, scrollerRef]);\n  useRunOnce(renderContext !== EMPTY_RENDER_CONTEXT, () => {\n    apiRef.current.publishEvent('scrollPositionChange', {\n      top: scrollPosition.current.top,\n      left: scrollPosition.current.left,\n      renderContext\n    });\n    isRenderContextReady.current = true;\n    if (rootProps.initialState?.scroll && scrollerRef.current) {\n      const scroller = scrollerRef.current;\n      const {\n        top,\n        left\n      } = rootProps.initialState.scroll;\n\n      // On initial mount, if we have columns available, we can restore the horizontal scroll immediately, but we need to skip the resulting scroll event, otherwise we would recalculate the render context at position top=0, left=restoredValue, but the initial render context is already calculated based on the initial value of scrollPosition ref.\n      const isScrollRestored = {\n        top: !(top > 0),\n        left: !(left > 0)\n      };\n      if (!isScrollRestored.left && columnsTotalWidth) {\n        scroller.scrollLeft = left;\n        ignoreNextScrollEvent.current = true;\n        isScrollRestored.left = true;\n      }\n\n      // For the sake of completeness, but I'm not sure if contentHeight is ever available at this point. Maybe when virtualisation is disabled?\n      if (!isScrollRestored.top && contentHeight) {\n        scroller.scrollTop = top;\n        ignoreNextScrollEvent.current = true;\n        isScrollRestored.top = true;\n      }\n\n      // To restore the vertical scroll, we need to wait until the rows are available in the DOM (otherwise there's nowhere to scroll), but before paint to avoid reflows\n      if (!isScrollRestored.top || !isScrollRestored.left) {\n        const unsubscribeContentSizeChange = apiRef.current.subscribeEvent('virtualScrollerContentSizeChange', params => {\n          if (!isScrollRestored.left && params.columnsTotalWidth) {\n            scroller.scrollLeft = left;\n            ignoreNextScrollEvent.current = true;\n            isScrollRestored.left = true;\n          }\n          if (!isScrollRestored.top && params.contentHeight) {\n            scroller.scrollTop = top;\n            ignoreNextScrollEvent.current = true;\n            isScrollRestored.top = true;\n          }\n          if (isScrollRestored.left && isScrollRestored.top) {\n            unsubscribeContentSizeChange();\n          }\n        });\n        return unsubscribeContentSizeChange;\n      }\n    }\n    return undefined;\n  });\n  apiRef.current.register('private', {\n    updateRenderContext: forceUpdateRenderContext\n  });\n  useGridApiOptionHandler(apiRef, 'sortedRowsSet', forceUpdateRenderContext);\n  useGridApiOptionHandler(apiRef, 'paginationModelChange', forceUpdateRenderContext);\n  useGridApiOptionHandler(apiRef, 'columnsChange', forceUpdateRenderContext);\n  return {\n    renderContext,\n    setPanels,\n    getRows,\n    getContainerProps: () => ({\n      ref: mainRefCallback\n    }),\n    getScrollerProps: () => ({\n      ref: scrollerRef,\n      onScroll: handleScroll,\n      onWheel: handleWheel,\n      onTouchMove: handleTouchMove,\n      style: scrollerStyle,\n      role: 'presentation',\n      // `tabIndex` shouldn't be used along role=presentation, but it fixes a Firefox bug\n      // https://github.com/mui/mui-x/pull/13891#discussion_r1683416024\n      tabIndex: platform.isFirefox ? -1 : undefined\n    }),\n    getContentProps: () => ({\n      style: contentSize,\n      role: 'presentation',\n      ref: onContentSizeApplied\n    }),\n    getRenderZoneProps: () => ({\n      role: 'rowgroup'\n    }),\n    getScrollbarVerticalProps: () => ({\n      ref: scrollbarVerticalRef,\n      role: 'presentation',\n      scrollPosition\n    }),\n    getScrollbarHorizontalProps: () => ({\n      ref: scrollbarHorizontalRef,\n      role: 'presentation',\n      scrollPosition\n    }),\n    getScrollAreaProps: () => ({\n      scrollPosition\n    })\n  };\n};\n// dimension selectors\nfunction needsHorizontalScrollbarSelector(state) {\n  return state.dimensions.viewportOuterSize.width > 0 && state.dimensions.columnsTotalWidth > state.dimensions.viewportOuterSize.width;\n}\nfunction inputsSelector(apiRef, rootProps, enabledForRows, enabledForColumns) {\n  const dimensions = gridDimensionsSelector(apiRef.current.state);\n  const currentPage = getVisibleRows(apiRef, rootProps);\n  const visibleColumns = rootProps.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n  const hiddenCellsOriginMap = gridRowSpanningHiddenCellsOriginMapSelector(apiRef);\n  const lastRowId = apiRef.current.state.rows.dataRowIds.at(-1);\n  const lastColumn = visibleColumns.at(-1);\n  return {\n    enabledForRows,\n    enabledForColumns,\n    apiRef,\n    autoHeight: rootProps.autoHeight,\n    rowBufferPx: rootProps.rowBufferPx,\n    columnBufferPx: rootProps.columnBufferPx,\n    leftPinnedWidth: dimensions.leftPinnedWidth,\n    columnsTotalWidth: dimensions.columnsTotalWidth,\n    viewportInnerWidth: dimensions.viewportInnerSize.width,\n    viewportInnerHeight: dimensions.viewportInnerSize.height,\n    lastRowHeight: lastRowId !== undefined ? apiRef.current.unstable_getRowHeight(lastRowId) : 0,\n    lastColumnWidth: lastColumn?.computedWidth ?? 0,\n    rowsMeta: gridRowsMetaSelector(apiRef.current.state),\n    columnPositions: gridColumnPositionsSelector(apiRef),\n    rows: currentPage.rows,\n    range: currentPage.range,\n    pinnedColumns: gridVisiblePinnedColumnDefinitionsSelector(apiRef),\n    visibleColumns,\n    hiddenCellsOriginMap,\n    listView: rootProps.unstable_listView ?? false,\n    virtualizeColumnsWithAutoRowHeight: rootProps.virtualizeColumnsWithAutoRowHeight\n  };\n}\nfunction computeRenderContext(inputs, scrollPosition, scrollCache) {\n  const renderContext = {\n    firstRowIndex: 0,\n    lastRowIndex: inputs.rows.length,\n    firstColumnIndex: 0,\n    lastColumnIndex: inputs.visibleColumns.length\n  };\n  if (inputs.listView) {\n    return _extends({}, renderContext, {\n      lastColumnIndex: 1\n    });\n  }\n  const {\n    top,\n    left\n  } = scrollPosition;\n  const realLeft = Math.abs(left) + inputs.leftPinnedWidth;\n  if (inputs.enabledForRows) {\n    // Clamp the value because the search may return an index out of bounds.\n    // In the last index, this is not needed because Array.slice doesn't include it.\n    let firstRowIndex = Math.min(getNearestIndexToRender(inputs, top, {\n      atStart: true,\n      lastPosition: inputs.rowsMeta.positions[inputs.rowsMeta.positions.length - 1] + inputs.lastRowHeight\n    }), inputs.rowsMeta.positions.length - 1);\n\n    // If any of the cells in the `firstRowIndex` is hidden due to an extended row span,\n    // Make sure the row from where the rowSpan is originated is visible.\n    const rowSpanHiddenCellOrigin = inputs.hiddenCellsOriginMap[firstRowIndex];\n    if (rowSpanHiddenCellOrigin) {\n      const minSpannedRowIndex = Math.min(...Object.values(rowSpanHiddenCellOrigin));\n      firstRowIndex = Math.min(firstRowIndex, minSpannedRowIndex);\n    }\n    const lastRowIndex = inputs.autoHeight ? firstRowIndex + inputs.rows.length : getNearestIndexToRender(inputs, top + inputs.viewportInnerHeight);\n    renderContext.firstRowIndex = firstRowIndex;\n    renderContext.lastRowIndex = lastRowIndex;\n  }\n  if (inputs.enabledForColumns) {\n    let firstColumnIndex = 0;\n    let lastColumnIndex = inputs.columnPositions.length;\n    let hasRowWithAutoHeight = false;\n    const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n      firstIndex: renderContext.firstRowIndex,\n      lastIndex: renderContext.lastRowIndex,\n      minFirstIndex: 0,\n      maxLastIndex: inputs.rows.length,\n      bufferBefore: scrollCache.buffer.rowBefore,\n      bufferAfter: scrollCache.buffer.rowAfter,\n      positions: inputs.rowsMeta.positions,\n      lastSize: inputs.lastRowHeight\n    });\n    if (!inputs.virtualizeColumnsWithAutoRowHeight) {\n      for (let i = firstRowToRender; i < lastRowToRender && !hasRowWithAutoHeight; i += 1) {\n        const row = inputs.rows[i];\n        hasRowWithAutoHeight = inputs.apiRef.current.rowHasAutoHeight(row.id);\n      }\n    }\n    if (!hasRowWithAutoHeight || inputs.virtualizeColumnsWithAutoRowHeight) {\n      firstColumnIndex = binarySearch(realLeft, inputs.columnPositions, {\n        atStart: true,\n        lastPosition: inputs.columnsTotalWidth\n      });\n      lastColumnIndex = binarySearch(realLeft + inputs.viewportInnerWidth, inputs.columnPositions);\n    }\n    renderContext.firstColumnIndex = firstColumnIndex;\n    renderContext.lastColumnIndex = lastColumnIndex;\n  }\n  const actualRenderContext = deriveRenderContext(inputs, renderContext, scrollCache);\n  return actualRenderContext;\n}\nfunction getNearestIndexToRender(inputs, offset, options) {\n  const lastMeasuredIndexRelativeToAllRows = inputs.apiRef.current.getLastMeasuredRowIndex();\n  let allRowsMeasured = lastMeasuredIndexRelativeToAllRows === Infinity;\n  if (inputs.range?.lastRowIndex && !allRowsMeasured) {\n    // Check if all rows in this page are already measured\n    allRowsMeasured = lastMeasuredIndexRelativeToAllRows >= inputs.range.lastRowIndex;\n  }\n  const lastMeasuredIndexRelativeToCurrentPage = clamp(lastMeasuredIndexRelativeToAllRows - (inputs.range?.firstRowIndex || 0), 0, inputs.rowsMeta.positions.length);\n  if (allRowsMeasured || inputs.rowsMeta.positions[lastMeasuredIndexRelativeToCurrentPage] >= offset) {\n    // If all rows were measured (when no row has \"auto\" as height) or all rows before the offset\n    // were measured, then use a binary search because it's faster.\n    return binarySearch(offset, inputs.rowsMeta.positions, options);\n  }\n\n  // Otherwise, use an exponential search.\n  // If rows have \"auto\" as height, their positions will be based on estimated heights.\n  // In this case, we can skip several steps until we find a position higher than the offset.\n  // Inspired by https://github.com/bvaughn/react-virtualized/blob/master/source/Grid/utils/CellSizeAndPositionManager.js\n  return exponentialSearch(offset, inputs.rowsMeta.positions, lastMeasuredIndexRelativeToCurrentPage, options);\n}\n\n/**\n * Accepts as input a raw render context (the area visible in the viewport) and adds\n * computes the actual render context based on pinned elements, buffer dimensions and\n * spanning.\n */\nfunction deriveRenderContext(inputs, nextRenderContext, scrollCache) {\n  const [firstRowToRender, lastRowToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstRowIndex,\n    lastIndex: nextRenderContext.lastRowIndex,\n    minFirstIndex: 0,\n    maxLastIndex: inputs.rows.length,\n    bufferBefore: scrollCache.buffer.rowBefore,\n    bufferAfter: scrollCache.buffer.rowAfter,\n    positions: inputs.rowsMeta.positions,\n    lastSize: inputs.lastRowHeight\n  });\n  const [initialFirstColumnToRender, lastColumnToRender] = getIndexesToRender({\n    firstIndex: nextRenderContext.firstColumnIndex,\n    lastIndex: nextRenderContext.lastColumnIndex,\n    minFirstIndex: inputs.pinnedColumns.left.length,\n    maxLastIndex: inputs.visibleColumns.length - inputs.pinnedColumns.right.length,\n    bufferBefore: scrollCache.buffer.columnBefore,\n    bufferAfter: scrollCache.buffer.columnAfter,\n    positions: inputs.columnPositions,\n    lastSize: inputs.lastColumnWidth\n  });\n  const firstColumnToRender = getFirstNonSpannedColumnToRender({\n    firstColumnToRender: initialFirstColumnToRender,\n    apiRef: inputs.apiRef,\n    firstRowToRender,\n    lastRowToRender,\n    visibleRows: inputs.rows\n  });\n  return {\n    firstRowIndex: firstRowToRender,\n    lastRowIndex: lastRowToRender,\n    firstColumnIndex: firstColumnToRender,\n    lastColumnIndex: lastColumnToRender\n  };\n}\n/**\n * Use binary search to avoid looping through all possible positions.\n * The `options.atStart` provides the possibility to match for the first element that\n * intersects the screen, even if said element's start position is before `offset`. In\n * other words, we search for `offset + width`.\n */\nfunction binarySearch(offset, positions, options = undefined, sliceStart = 0, sliceEnd = positions.length) {\n  if (positions.length <= 0) {\n    return -1;\n  }\n  if (sliceStart >= sliceEnd) {\n    return sliceStart;\n  }\n  const pivot = sliceStart + Math.floor((sliceEnd - sliceStart) / 2);\n  const position = positions[pivot];\n  let isBefore;\n  if (options?.atStart) {\n    const width = (pivot === positions.length - 1 ? options.lastPosition : positions[pivot + 1]) - position;\n    isBefore = offset - width < position;\n  } else {\n    isBefore = offset <= position;\n  }\n  return isBefore ? binarySearch(offset, positions, options, sliceStart, pivot) : binarySearch(offset, positions, options, pivot + 1, sliceEnd);\n}\nfunction exponentialSearch(offset, positions, index, options = undefined) {\n  let interval = 1;\n  while (index < positions.length && Math.abs(positions[index]) < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return binarySearch(offset, positions, options, Math.floor(index / 2), Math.min(index, positions.length));\n}\nfunction getIndexesToRender({\n  firstIndex,\n  lastIndex,\n  bufferBefore,\n  bufferAfter,\n  minFirstIndex,\n  maxLastIndex,\n  positions,\n  lastSize\n}) {\n  const firstPosition = positions[firstIndex] - bufferBefore;\n  const lastPosition = positions[lastIndex] + bufferAfter;\n  const firstIndexPadded = binarySearch(firstPosition, positions, {\n    atStart: true,\n    lastPosition: positions[positions.length - 1] + lastSize\n  });\n  const lastIndexPadded = binarySearch(lastPosition, positions);\n  return [clamp(firstIndexPadded, minFirstIndex, maxLastIndex), clamp(lastIndexPadded, minFirstIndex, maxLastIndex)];\n}\nexport function areRenderContextsEqual(context1, context2) {\n  if (context1 === context2) {\n    return true;\n  }\n  return context1.firstRowIndex === context2.firstRowIndex && context1.lastRowIndex === context2.lastRowIndex && context1.firstColumnIndex === context2.firstColumnIndex && context1.lastColumnIndex === context2.lastColumnIndex;\n}\nexport function computeOffsetLeft(columnPositions, renderContext, pinnedLeftLength) {\n  const left = (columnPositions[renderContext.firstColumnIndex] ?? 0) - (columnPositions[pinnedLeftLength] ?? 0);\n  return Math.abs(left);\n}\nfunction directionForDelta(dx, dy) {\n  if (dx === 0 && dy === 0) {\n    return ScrollDirection.NONE;\n  }\n  /* eslint-disable */\n  if (Math.abs(dy) >= Math.abs(dx)) {\n    if (dy > 0) {\n      return ScrollDirection.DOWN;\n    } else {\n      return ScrollDirection.UP;\n    }\n  } else {\n    if (dx > 0) {\n      return ScrollDirection.RIGHT;\n    } else {\n      return ScrollDirection.LEFT;\n    }\n  }\n  /* eslint-enable */\n}\nfunction bufferForDirection(isRtl, direction, rowBufferPx, columnBufferPx, verticalBuffer, horizontalBuffer) {\n  if (isRtl) {\n    switch (direction) {\n      case ScrollDirection.LEFT:\n        direction = ScrollDirection.RIGHT;\n        break;\n      case ScrollDirection.RIGHT:\n        direction = ScrollDirection.LEFT;\n        break;\n      default:\n    }\n  }\n  switch (direction) {\n    case ScrollDirection.NONE:\n      return {\n        rowAfter: rowBufferPx,\n        rowBefore: rowBufferPx,\n        columnAfter: columnBufferPx,\n        columnBefore: columnBufferPx\n      };\n    case ScrollDirection.LEFT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: horizontalBuffer\n      };\n    case ScrollDirection.RIGHT:\n      return {\n        rowAfter: 0,\n        rowBefore: 0,\n        columnAfter: horizontalBuffer,\n        columnBefore: 0\n      };\n    case ScrollDirection.UP:\n      return {\n        rowAfter: 0,\n        rowBefore: verticalBuffer,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    case ScrollDirection.DOWN:\n      return {\n        rowAfter: verticalBuffer,\n        rowBefore: 0,\n        columnAfter: 0,\n        columnBefore: 0\n      };\n    default:\n      // eslint unable to figure out enum exhaustiveness\n      throw new Error('unreachable');\n  }\n}","import { useGridSelector } from \"../../utils/index.js\";\nimport { useGridApiContext } from \"../../utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/index.js\";\nimport { gridRowCountSelector, gridRowsLoadingSelector } from \"../rows/index.js\";\nimport { gridPinnedRowsCountSelector } from \"../rows/gridRowsSelector.js\";\n/**\n * Uses the grid state to determine which overlay to display.\n * Returns the active overlay type and the active loading overlay variant.\n */\nexport const useGridOverlays = () => {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalRowCount = useGridSelector(apiRef, gridRowCountSelector);\n  const visibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  const noRows = totalRowCount === 0 && pinnedRowsCount === 0;\n  const loading = useGridSelector(apiRef, gridRowsLoadingSelector);\n  const showNoRowsOverlay = !loading && noRows;\n  const showNoResultsOverlay = !loading && totalRowCount > 0 && visibleRowCount === 0;\n  let overlayType = null;\n  let loadingOverlayVariant = null;\n  if (showNoRowsOverlay) {\n    overlayType = 'noRowsOverlay';\n  }\n  if (showNoResultsOverlay) {\n    overlayType = 'noResultsOverlay';\n  }\n  if (loading) {\n    overlayType = 'loadingOverlay';\n    loadingOverlayVariant = rootProps.slotProps?.loadingOverlay?.[noRows ? 'noRowsVariant' : 'variant'] || null;\n  }\n  return {\n    overlayType,\n    loadingOverlayVariant\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport clsx from 'clsx';\nimport { minimalContentHeight } from \"../../hooks/features/rows/gridRowsUtils.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridOverlayWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapper',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapper\n})(({\n  overlayType,\n  loadingOverlayVariant\n}) =>\n// Skeleton overlay should flow with the scroll container and not be sticky\nloadingOverlayVariant !== 'skeleton' ? {\n  position: 'sticky',\n  // To stay in place while scrolling\n  top: 'var(--DataGrid-headersTotalHeight)',\n  // TODO: take pinned rows into account\n  left: 0,\n  width: 0,\n  // To stay above the content instead of shifting it down\n  height: 0,\n  // To stay above the content instead of shifting it down\n  zIndex: overlayType === 'loadingOverlay' ? 5 // Should be above pinned columns, pinned rows, and detail panel\n  : 4 // Should be above pinned columns and detail panel\n} : {});\nconst GridOverlayWrapperInner = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'OverlayWrapperInner',\n  shouldForwardProp: prop => prop !== 'overlayType' && prop !== 'loadingOverlayVariant',\n  overridesResolver: (props, styles) => styles.overlayWrapperInner\n})({});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlayWrapper'],\n    inner: ['overlayWrapperInner']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridOverlayWrapper(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  let height = Math.max(dimensions.viewportOuterSize.height - dimensions.topContainerHeight - dimensions.bottomContainerHeight - (dimensions.hasScrollX ? dimensions.scrollbarSize : 0), 0);\n  if (height === 0) {\n    height = minimalContentHeight;\n  }\n  const classes = useUtilityClasses(_extends({}, props, {\n    classes: rootProps.classes\n  }));\n  return /*#__PURE__*/_jsx(GridOverlayWrapperRoot, _extends({\n    className: clsx(classes.root)\n  }, props, {\n    children: /*#__PURE__*/_jsx(GridOverlayWrapperInner, _extends({\n      className: clsx(classes.inner),\n      style: {\n        height,\n        width: dimensions.viewportOuterSize.width\n      }\n    }, props))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridOverlayWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nprocess.env.NODE_ENV !== \"production\" ? GridOverlays.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  loadingOverlayVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  overlayType: PropTypes.oneOf(['loadingOverlay', 'noResultsOverlay', 'noRowsOverlay'])\n} : void 0;\nexport function GridOverlays(props) {\n  const {\n    overlayType\n  } = props;\n  const rootProps = useGridRootProps();\n  if (!overlayType) {\n    return null;\n  }\n  const Overlay = rootProps.slots?.[overlayType];\n  const overlayProps = rootProps.slotProps?.[overlayType];\n  return /*#__PURE__*/_jsx(GridOverlayWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(Overlay, _extends({}, overlayProps))\n  }));\n}","export const gridColumnMenuSelector = state => state.columnMenu;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterActiveItemsLookupSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { gridSortColumnLookupSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridTabIndexColumnHeaderSelector, gridTabIndexCellSelector, gridFocusColumnHeaderSelector, gridTabIndexColumnGroupHeaderSelector, gridFocusColumnGroupHeaderSelector } from \"../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector, gridColumnGroupsHeaderStructureSelector } from \"../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridColumnMenuSelector } from \"../hooks/features/columnMenu/columnMenuSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridHeaders() {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const filterColumnLookup = useGridSelector(apiRef, gridFilterActiveItemsLookupSelector);\n  const sortColumnLookup = useGridSelector(apiRef, gridSortColumnLookupSelector);\n  const columnHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const hasNoCellTabIndexState = useGridSelector(apiRef, () => gridTabIndexCellSelector(apiRef) === null);\n  const columnGroupHeaderTabIndexState = useGridSelector(apiRef, gridTabIndexColumnGroupHeaderSelector);\n  const columnHeaderFocus = useGridSelector(apiRef, gridFocusColumnHeaderSelector);\n  const columnGroupHeaderFocus = useGridSelector(apiRef, gridFocusColumnGroupHeaderSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const columnMenuState = useGridSelector(apiRef, gridColumnMenuSelector);\n  const columnVisibility = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const columnGroupsHeaderStructure = useGridSelector(apiRef, gridColumnGroupsHeaderStructureSelector);\n  const hasOtherElementInTabSequence = !(columnGroupHeaderTabIndexState === null && columnHeaderTabIndexState === null && hasNoCellTabIndexState);\n  const columnsContainerRef = apiRef.current.columnHeadersContainerRef;\n  return /*#__PURE__*/_jsx(rootProps.slots.columnHeaders, _extends({\n    ref: columnsContainerRef,\n    visibleColumns: visibleColumns,\n    filterColumnLookup: filterColumnLookup,\n    sortColumnLookup: sortColumnLookup,\n    columnHeaderTabIndexState: columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState: columnGroupHeaderTabIndexState,\n    columnHeaderFocus: columnHeaderFocus,\n    columnGroupHeaderFocus: columnGroupHeaderFocus,\n    headerGroupingMaxDepth: headerGroupingMaxDepth,\n    columnMenuState: columnMenuState,\n    columnVisibility: columnVisibility,\n    columnGroupsHeaderStructure: columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence: hasOtherElementInTabSequence\n  }, rootProps.slotProps?.columnHeaders));\n}\nconst MemoizedGridHeaders = fastMemo(GridHeaders);\nexport { MemoizedGridHeaders as GridHeaders };","import * as React from 'react';\nexport const GridConfigurationContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  GridConfigurationContext.displayName = 'GridConfigurationContext';\n}","import * as React from 'react';\nimport { GridConfigurationContext } from \"../../components/GridConfigurationContext.js\";\nexport const useGridConfiguration = () => {\n  const configuration = React.useContext(GridConfigurationContext);\n  if (configuration === undefined) {\n    throw new Error(['MUI X: Could not find the Data Grid configuration context.', 'It looks like you rendered your component outside of a DataGrid, DataGridPro or DataGridPremium parent component.', 'This can also happen if you are bundling multiple versions of the Data Grid.'].join('\\n'));\n  }\n  return configuration;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridConfiguration } from \"../../hooks/utils/useGridConfiguration.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridPanelAnchor = styled('div')({\n  position: 'absolute',\n  top: `var(--DataGrid-headersTotalHeight)`,\n  left: 0,\n  width: 'calc(100% - (var(--DataGrid-hasScrollY) * var(--DataGrid-scrollbarSize)))'\n});\nconst Element = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Main',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.main, ownerState.hasPinnedRight && styles['main--hasPinnedRight'], ownerState.loadingOverlayVariant === 'skeleton' && styles['main--hasSkeletonLoadingOverlay']];\n  }\n})({\n  flexGrow: 1,\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'flex',\n  flexDirection: 'column'\n});\nexport const GridMainContainer = forwardRef((props, ref) => {\n  const {\n    ownerState\n  } = props;\n  const rootProps = useGridRootProps();\n  const configuration = useGridConfiguration();\n  const ariaAttributes = configuration.hooks.useGridAriaAttributes();\n  return /*#__PURE__*/_jsxs(Element, _extends({\n    ownerState: ownerState,\n    className: props.className,\n    tabIndex: -1\n  }, ariaAttributes, rootProps.slotProps?.main, {\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(GridPanelAnchor, {\n      role: \"presentation\",\n      \"data-id\": \"gridPanelAnchor\"\n    }), props.children]\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['topContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  top: 0\n});\nexport function GridTopContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--top']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = () => {\n  const slots = {\n    root: ['bottomContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, {});\n};\nconst Element = styled('div')({\n  position: 'sticky',\n  zIndex: 4,\n  bottom: 'calc(var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize))'\n});\nexport function GridBottomContainer(props) {\n  const classes = useUtilityClasses();\n  return /*#__PURE__*/_jsx(Element, _extends({}, props, {\n    className: clsx(classes.root, gridClasses['container--bottom']),\n    role: \"presentation\"\n  }));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (props, overflowedContent) => {\n  const {\n    classes\n  } = props;\n  const slots = {\n    root: ['virtualScrollerContent', overflowedContent && 'virtualScrollerContent--overflowed']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerContent',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.virtualScrollerContent, ownerState.overflowedContent && styles['virtualScrollerContent--overflowed']];\n  }\n})({});\nconst GridVirtualScrollerContent = forwardRef(function GridVirtualScrollerContent(props, ref) {\n  const rootProps = useGridRootProps();\n  const overflowedContent = !rootProps.autoHeight && props.style?.minHeight === 'auto';\n  const classes = useUtilityClasses(rootProps, overflowedContent);\n  const ownerState = {\n    classes: rootProps.classes,\n    overflowedContent\n  };\n  return /*#__PURE__*/_jsx(VirtualScrollerContentRoot, _extends({}, props, {\n    ownerState: ownerState,\n    className: clsx(classes.root, props.className),\n    ref: ref\n  }));\n});\nexport { GridVirtualScrollerContent };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { gridDimensionsSelector } from \"../../hooks/features/dimensions/index.js\";\nimport { gridClasses } from \"../../constants/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Filler = styled('div')({\n  display: 'flex',\n  flexDirection: 'row',\n  width: 'var(--DataGrid-rowWidth)',\n  boxSizing: 'border-box'\n});\nconst Pinned = styled('div')({\n  position: 'sticky',\n  height: '100%',\n  boxSizing: 'border-box',\n  borderTop: '1px solid var(--rowBorderColor)',\n  backgroundColor: 'var(--DataGrid-pinnedBackground)'\n});\nconst PinnedLeft = styled(Pinned)({\n  left: 0,\n  borderRight: '1px solid var(--rowBorderColor)'\n});\nconst PinnedRight = styled(Pinned)({\n  right: 0,\n  borderLeft: '1px solid var(--rowBorderColor)'\n});\nconst Main = styled('div')({\n  flexGrow: 1,\n  borderTop: '1px solid var(--rowBorderColor)'\n});\nfunction GridVirtualScrollerFiller({\n  rowsLength\n}) {\n  const apiRef = useGridApiContext();\n  const {\n    viewportOuterSize,\n    minimumSize,\n    hasScrollX,\n    hasScrollY,\n    scrollbarSize,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = useGridSelector(apiRef, gridDimensionsSelector);\n  const height = hasScrollX ? scrollbarSize : 0;\n  const needsLastRowBorder = viewportOuterSize.height - minimumSize.height > 0;\n  if (height === 0 && !needsLastRowBorder) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(Filler, {\n    className: gridClasses.filler,\n    role: \"presentation\",\n    style: {\n      height,\n      '--rowBorderColor': rowsLength === 0 ? 'transparent' : 'var(--DataGrid-rowBorderColor)'\n    },\n    children: [leftPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedLeft, {\n      className: gridClasses['filler--pinnedLeft'],\n      style: {\n        width: leftPinnedWidth\n      }\n    }), /*#__PURE__*/_jsx(Main, {}), rightPinnedWidth > 0 && /*#__PURE__*/_jsx(PinnedRight, {\n      className: gridClasses['filler--pinnedRight'],\n      style: {\n        width: rightPinnedWidth + (hasScrollY ? scrollbarSize : 0)\n      }\n    })]\n  });\n}\nconst Memoized = fastMemo(GridVirtualScrollerFiller);\nexport { Memoized as GridVirtualScrollerFiller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridRowsMetaSelector } from \"../../hooks/features/rows/index.js\";\nimport { gridRenderContextSelector } from \"../../hooks/features/virtualization/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['virtualScrollerRenderZone']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst VirtualScrollerRenderZoneRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScrollerRenderZone',\n  overridesResolver: (props, styles) => styles.virtualScrollerRenderZone\n})({\n  position: 'absolute',\n  display: 'flex',\n  // Prevents margin collapsing when using `getRowSpacing`\n  flexDirection: 'column'\n});\nconst GridVirtualScrollerRenderZone = forwardRef(function GridVirtualScrollerRenderZone(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const offsetTop = useGridSelector(apiRef, () => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    return rowsMeta.positions[renderContext.firstRowIndex] ?? 0;\n  });\n  return /*#__PURE__*/_jsx(VirtualScrollerRenderZoneRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps,\n    style: {\n      transform: `translate3d(0, ${offsetTop}px, 0)`\n    }\n  }, other, {\n    ref: ref\n  }));\n});\nexport { GridVirtualScrollerRenderZone };","import * as React from 'react';\nimport { styled } from '@mui/system';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useOnMount } from \"../../hooks/utils/useOnMount.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridDimensionsSelector, useGridSelector } from \"../../hooks/index.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, position) => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['scrollbar', `scrollbar--${position}`],\n    content: ['scrollbarContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scrollbar = styled('div')({\n  position: 'absolute',\n  display: 'inline-block',\n  zIndex: 6,\n  '&:hover': {\n    zIndex: 7\n  },\n  // In macOS Safari and Gnome Web, scrollbars are overlaid and don't affect the layout. So we consider\n  // their size to be 0px throughout all the calculations, but the floating scrollbar container does need\n  // to appear and have a real size. We set it to 14px because it seems like an acceptable value and we\n  // don't have a method to find the required size for scrollbars on those platforms.\n  '--size': 'calc(max(var(--DataGrid-scrollbarSize), 14px))'\n});\nconst ScrollbarVertical = styled(Scrollbar)({\n  width: 'var(--size)',\n  height: 'calc(var(--DataGrid-hasScrollY) * (100% - var(--DataGrid-topContainerHeight) - var(--DataGrid-bottomContainerHeight) - var(--DataGrid-hasScrollX) * var(--DataGrid-scrollbarSize)))',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    width: 'var(--size)'\n  },\n  top: 'var(--DataGrid-topContainerHeight)',\n  right: '0px'\n});\nconst ScrollbarHorizontal = styled(Scrollbar)({\n  width: '100%',\n  height: 'var(--size)',\n  overflowY: 'hidden',\n  overflowX: 'auto',\n  // Disable focus-visible style, it's a scrollbar.\n  outline: 0,\n  '& > div': {\n    height: 'var(--size)'\n  },\n  bottom: '0px'\n});\nconst GridVirtualScrollbar = forwardRef(function GridVirtualScrollbar(props, ref) {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isLocked = React.useRef(false);\n  const lastPosition = React.useRef(0);\n  const scrollbarRef = React.useRef(null);\n  const contentRef = React.useRef(null);\n  const classes = useUtilityClasses(rootProps, props.position);\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const propertyDimension = props.position === 'vertical' ? 'height' : 'width';\n  const propertyScroll = props.position === 'vertical' ? 'scrollTop' : 'scrollLeft';\n  const propertyScrollPosition = props.position === 'vertical' ? 'top' : 'left';\n  const hasScroll = props.position === 'vertical' ? dimensions.hasScrollX : dimensions.hasScrollY;\n  const contentSize = dimensions.minimumSize[propertyDimension] + (hasScroll ? dimensions.scrollbarSize : 0);\n  const scrollbarSize = props.position === 'vertical' ? dimensions.viewportInnerSize.height : dimensions.viewportOuterSize.width;\n  const scrollbarInnerSize = scrollbarSize * (contentSize / dimensions.viewportOuterSize[propertyDimension]);\n  const onScrollerScroll = useEventCallback(() => {\n    const scrollbar = scrollbarRef.current;\n    const scrollPosition = props.scrollPosition.current;\n    if (!scrollbar) {\n      return;\n    }\n    if (scrollPosition[propertyScrollPosition] === lastPosition.current) {\n      return;\n    }\n    lastPosition.current = scrollPosition[propertyScrollPosition];\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollPosition[propertyScrollPosition] / contentSize;\n    scrollbar[propertyScroll] = value * scrollbarInnerSize;\n  });\n  const onScrollbarScroll = useEventCallback(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    if (!scrollbar) {\n      return;\n    }\n    if (isLocked.current) {\n      isLocked.current = false;\n      return;\n    }\n    isLocked.current = true;\n    const value = scrollbar[propertyScroll] / scrollbarInnerSize;\n    scroller[propertyScroll] = value * contentSize;\n  });\n  useOnMount(() => {\n    const scroller = apiRef.current.virtualScrollerRef.current;\n    const scrollbar = scrollbarRef.current;\n    const options = {\n      passive: true\n    };\n    scroller.addEventListener('scroll', onScrollerScroll, options);\n    scrollbar.addEventListener('scroll', onScrollbarScroll, options);\n    return () => {\n      scroller.removeEventListener('scroll', onScrollerScroll, options);\n      scrollbar.removeEventListener('scroll', onScrollbarScroll, options);\n    };\n  });\n  React.useEffect(() => {\n    const content = contentRef.current;\n    content.style.setProperty(propertyDimension, `${scrollbarInnerSize}px`);\n  }, [scrollbarInnerSize, propertyDimension]);\n  const Container = props.position === 'vertical' ? ScrollbarVertical : ScrollbarHorizontal;\n  return /*#__PURE__*/_jsx(Container, {\n    ref: useForkRef(ref, scrollbarRef),\n    className: classes.root,\n    style: props.position === 'vertical' && rootProps.unstable_listView ? {\n      height: '100%',\n      top: 0\n    } : undefined,\n    tabIndex: -1,\n    \"aria-hidden\": \"true\",\n    children: /*#__PURE__*/_jsx(\"div\", {\n      ref: contentRef,\n      className: classes.content\n    })\n  });\n});\nexport { GridVirtualScrollbar };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { gridHasBottomFillerSelector, gridHasScrollXSelector, gridHasScrollYSelector } from \"../../hooks/features/dimensions/gridDimensionsSelectors.js\";\nimport { GridScrollArea } from \"../GridScrollArea.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridVirtualScroller } from \"../../hooks/features/virtualization/useGridVirtualScroller.js\";\nimport { useGridOverlays } from \"../../hooks/features/overlays/useGridOverlays.js\";\nimport { GridOverlays as Overlays } from \"../base/GridOverlays.js\";\nimport { GridHeaders } from \"../GridHeaders.js\";\nimport { GridMainContainer as Container } from \"./GridMainContainer.js\";\nimport { GridTopContainer as TopContainer } from \"./GridTopContainer.js\";\nimport { GridBottomContainer as BottomContainer } from \"./GridBottomContainer.js\";\nimport { GridVirtualScrollerContent as Content } from \"./GridVirtualScrollerContent.js\";\nimport { GridVirtualScrollerFiller as SpaceFiller } from \"./GridVirtualScrollerFiller.js\";\nimport { GridVirtualScrollerRenderZone as RenderZone } from \"./GridVirtualScrollerRenderZone.js\";\nimport { GridVirtualScrollbar as Scrollbar } from \"./GridVirtualScrollbar.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    hasScrollX,\n    hasPinnedRight,\n    loadingOverlayVariant\n  } = ownerState;\n  const slots = {\n    root: ['main', hasPinnedRight && 'main--hasPinnedRight', loadingOverlayVariant === 'skeleton' && 'main--hasSkeletonLoadingOverlay'],\n    scroller: ['virtualScroller', hasScrollX && 'virtualScroller--hasScrollX']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst Scroller = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'VirtualScroller',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.virtualScroller, ownerState.hasScrollX && styles['virtualScroller--hasScrollX']];\n  }\n})({\n  position: 'relative',\n  height: '100%',\n  flexGrow: 1,\n  overflow: 'scroll',\n  scrollbarWidth: 'none' /* Firefox */,\n  display: 'flex',\n  flexDirection: 'column',\n  '&::-webkit-scrollbar': {\n    display: 'none' /* Safari and Chrome */\n  },\n  '@media print': {\n    overflow: 'hidden'\n  },\n  // See https://github.com/mui/mui-x/issues/10547\n  zIndex: 0\n});\nconst hasPinnedRightSelector = state => state.dimensions.rightPinnedWidth > 0;\nfunction GridVirtualScroller(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const hasScrollY = useGridSelector(apiRef, gridHasScrollYSelector);\n  const hasScrollX = useGridSelector(apiRef, gridHasScrollXSelector);\n  const hasPinnedRight = useGridSelector(apiRef, hasPinnedRightSelector);\n  const hasBottomFiller = useGridSelector(apiRef, gridHasBottomFillerSelector);\n  const overlaysProps = useGridOverlays();\n  const ownerState = {\n    classes: rootProps.classes,\n    hasScrollX,\n    hasPinnedRight,\n    loadingOverlayVariant: overlaysProps.loadingOverlayVariant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const virtualScroller = useGridVirtualScroller();\n  const {\n    getContainerProps,\n    getScrollerProps,\n    getContentProps,\n    getRenderZoneProps,\n    getScrollbarVerticalProps,\n    getScrollbarHorizontalProps,\n    getRows,\n    getScrollAreaProps\n  } = virtualScroller;\n  const rows = getRows();\n  return /*#__PURE__*/_jsxs(Container, _extends({\n    className: classes.root\n  }, getContainerProps(), {\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(GridScrollArea, _extends({\n      scrollDirection: \"left\"\n    }, getScrollAreaProps())), /*#__PURE__*/_jsx(GridScrollArea, _extends({\n      scrollDirection: \"right\"\n    }, getScrollAreaProps())), /*#__PURE__*/_jsxs(Scroller, _extends({\n      className: classes.scroller\n    }, getScrollerProps(), {\n      ownerState: ownerState,\n      children: [/*#__PURE__*/_jsxs(TopContainer, {\n        children: [!rootProps.unstable_listView && /*#__PURE__*/_jsx(GridHeaders, {}), /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"top\",\n          virtualScroller: virtualScroller\n        })]\n      }), /*#__PURE__*/_jsx(Overlays, _extends({}, overlaysProps)), /*#__PURE__*/_jsx(Content, _extends({}, getContentProps(), {\n        children: /*#__PURE__*/_jsxs(RenderZone, _extends({}, getRenderZoneProps(), {\n          children: [rows, /*#__PURE__*/_jsx(rootProps.slots.detailPanels, {\n            virtualScroller: virtualScroller\n          })]\n        }))\n      })), hasBottomFiller && /*#__PURE__*/_jsx(SpaceFiller, {\n        rowsLength: rows.length\n      }), /*#__PURE__*/_jsx(BottomContainer, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.pinnedRows, {\n          position: \"bottom\",\n          virtualScroller: virtualScroller\n        })\n      })]\n    })), hasScrollX && !rootProps.unstable_listView && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"horizontal\"\n    }, getScrollbarHorizontalProps())), hasScrollY && /*#__PURE__*/_jsx(Scrollbar, _extends({\n      position: \"vertical\"\n    }, getScrollbarVerticalProps())), props.children]\n  }));\n}\nexport { GridVirtualScroller };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridFooterPlaceholder() {\n  const rootProps = useGridRootProps();\n  if (rootProps.hideFooter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(rootProps.slots.footer, _extends({}, rootProps.slotProps?.footer /* FIXME: typing error */));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_capitalize as capitalize, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { GridRootStyles } from \"./GridRootStyles.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { gridDensitySelector } from \"../../hooks/features/density/densitySelector.js\";\nimport { useIsSSR } from \"../../hooks/utils/useIsSSR.js\";\nimport { GridHeader } from \"../GridHeader.js\";\nimport { GridBody, GridFooterPlaceholder } from \"../base/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = (ownerState, density) => {\n  const {\n    autoHeight,\n    classes,\n    showCellVerticalBorder\n  } = ownerState;\n  const slots = {\n    root: ['root', autoHeight && 'autoHeight', `root--density${capitalize(density)}`, ownerState.slots.toolbar === null && 'root--noToolbar', 'withBorderColor', showCellVerticalBorder && 'withVerticalBorder']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRoot = forwardRef(function GridRoot(props, ref) {\n  const rootProps = useGridRootProps();\n  const {\n      className,\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const rootElementRef = apiRef.current.rootElementRef;\n  const rootMountCallback = React.useCallback(node => {\n    if (node === null) {\n      return;\n    }\n    apiRef.current.publishEvent('rootMount', node);\n  }, [apiRef]);\n  const handleRef = useForkRef(rootElementRef, ref, rootMountCallback);\n  const ownerState = rootProps;\n  const classes = useUtilityClasses(ownerState, density);\n  const isSSR = useIsSSR();\n  if (isSSR) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(GridRootStyles, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    ref: handleRef,\n    children: [/*#__PURE__*/_jsx(GridHeader, {}), /*#__PURE__*/_jsx(GridBody, {\n      children: children\n    }), /*#__PURE__*/_jsx(GridFooterPlaceholder, {})]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRoot.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nconst MemoizedGridRoot = fastMemo(GridRoot);\nexport { MemoizedGridRoot as GridRoot };","import { GridSignature } from \"../../utils/useGridApiEventHandler.js\";\nimport { GRID_ROOT_GROUP_ID } from \"../rows/gridRowsUtils.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { createSelector } from \"../../../utils/createSelector.js\";\nexport const ROW_SELECTION_PROPAGATION_DEFAULT = {\n  parents: false,\n  descendants: false\n};\nfunction getGridRowGroupSelectableDescendants(apiRef, groupId) {\n  const rowTree = gridRowTreeSelector(apiRef);\n  const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n  const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n  const groupNode = rowTree[groupId];\n  if (!groupNode || groupNode.type !== 'group') {\n    return [];\n  }\n  const descendants = [];\n  const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n  for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n    const id = sortedRowIds[index];\n    if (filteredRowsLookup[id] !== false && apiRef.current.isRowSelectable(id)) {\n      descendants.push(id);\n    }\n  }\n  return descendants;\n}\n\n// TODO v8: Use `createSelectorV8`\nexport function getCheckboxPropsSelector(groupId, autoSelectParents) {\n  return createSelector(gridRowTreeSelector, gridSortedRowIdsSelector, gridFilteredRowsLookupSelector, selectedIdsLookupSelector, (rowTree, sortedRowIds, filteredRowsLookup, rowSelectionLookup) => {\n    const groupNode = rowTree[groupId];\n    if (!groupNode || groupNode.type !== 'group') {\n      return {\n        isIndeterminate: false,\n        isChecked: rowSelectionLookup[groupId] === groupId\n      };\n    }\n    if (rowSelectionLookup[groupId] === groupId) {\n      return {\n        isIndeterminate: false,\n        isChecked: true\n      };\n    }\n    let selectableDescendantsCount = 0;\n    let selectedDescendantsCount = 0;\n    const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n    for (let index = startIndex; index < sortedRowIds.length && rowTree[sortedRowIds[index]]?.depth > groupNode.depth; index += 1) {\n      const id = sortedRowIds[index];\n      if (filteredRowsLookup[id] !== false) {\n        selectableDescendantsCount += 1;\n        if (rowSelectionLookup[id] !== undefined) {\n          selectedDescendantsCount += 1;\n        }\n      }\n    }\n    return {\n      isIndeterminate: selectedDescendantsCount > 0 && (selectedDescendantsCount < selectableDescendantsCount || rowSelectionLookup[groupId] === undefined),\n      isChecked: autoSelectParents ? selectedDescendantsCount > 0 : rowSelectionLookup[groupId] === groupId\n    };\n  });\n}\nexport function isMultipleRowSelectionEnabled(props) {\n  if (props.signature === GridSignature.DataGrid) {\n    // DataGrid Community has multiple row selection enabled only if checkbox selection is enabled.\n    return props.checkboxSelection && props.disableMultipleRowSelection !== true;\n  }\n  return !props.disableMultipleRowSelection;\n}\nconst getRowNodeParents = (tree, id) => {\n  const parents = [];\n  let parent = id;\n  while (parent != null && parent !== GRID_ROOT_GROUP_ID) {\n    const node = tree[parent];\n    if (!node) {\n      return parents;\n    }\n    parents.push(parent);\n    parent = node.parent;\n  }\n  return parents;\n};\nconst getFilteredRowNodeSiblings = (tree, filteredRows, id) => {\n  const node = tree[id];\n  if (!node) {\n    return [];\n  }\n  const parent = node.parent;\n  if (parent == null) {\n    return [];\n  }\n  const parentNode = tree[parent];\n  return parentNode.children.filter(childId => childId !== id && filteredRows[childId] !== false);\n};\nexport const findRowsToSelect = (apiRef, tree, selectedRow, autoSelectDescendants, autoSelectParents, addRow) => {\n  const filteredRows = gridFilteredRowsLookupSelector(apiRef);\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  const selectedDescendants = new Set([]);\n  if (!autoSelectDescendants && !autoSelectParents) {\n    return;\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[selectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, selectedRow);\n      descendants.forEach(rowId => {\n        addRow(rowId);\n        selectedDescendants.add(rowId);\n      });\n    }\n  }\n  if (autoSelectParents) {\n    const checkAllDescendantsSelected = rowId => {\n      if (selectedIdsLookup[rowId] !== rowId && !selectedDescendants.has(rowId)) {\n        return false;\n      }\n      const node = tree[rowId];\n      if (node?.type !== 'group') {\n        return true;\n      }\n      return node.children.every(checkAllDescendantsSelected);\n    };\n    const traverseParents = rowId => {\n      const siblings = getFilteredRowNodeSiblings(tree, filteredRows, rowId);\n      if (siblings.length === 0 || siblings.every(checkAllDescendantsSelected)) {\n        const rowNode = tree[rowId];\n        const parent = rowNode.parent;\n        if (parent != null && parent !== GRID_ROOT_GROUP_ID && apiRef.current.isRowSelectable(parent)) {\n          addRow(parent);\n          selectedDescendants.add(parent);\n          traverseParents(parent);\n        }\n      }\n    };\n    traverseParents(selectedRow);\n  }\n};\nexport const findRowsToDeselect = (apiRef, tree, deselectedRow, autoSelectDescendants, autoSelectParents, removeRow) => {\n  const selectedIdsLookup = selectedIdsLookupSelector(apiRef);\n  if (!autoSelectParents && !autoSelectDescendants) {\n    return;\n  }\n  if (autoSelectParents) {\n    const allParents = getRowNodeParents(tree, deselectedRow);\n    allParents.forEach(parent => {\n      const isSelected = selectedIdsLookup[parent] === parent;\n      if (isSelected) {\n        removeRow(parent);\n      }\n    });\n  }\n  if (autoSelectDescendants) {\n    const rowNode = tree[deselectedRow];\n    if (rowNode?.type === 'group') {\n      const descendants = getGridRowGroupSelectableDescendants(apiRef, deselectedRow);\n      descendants.forEach(descendant => {\n        removeRow(descendant);\n      });\n    }\n  }\n};","import * as React from 'react';\nimport { GridApiContext } from \"../components/GridApiContext.js\";\nimport { GridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridRootPropsContext } from \"./GridRootPropsContext.js\";\nimport { GridConfigurationContext } from \"../components/GridConfigurationContext.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function GridContextProvider({\n  privateApiRef,\n  configuration,\n  props,\n  children\n}) {\n  const apiRef = React.useRef(privateApiRef.current.getPublicApi());\n  return /*#__PURE__*/_jsx(GridConfigurationContext.Provider, {\n    value: configuration,\n    children: /*#__PURE__*/_jsx(GridRootPropsContext.Provider, {\n      value: props,\n      children: /*#__PURE__*/_jsx(GridPrivateApiContext.Provider, {\n        value: privateApiRef,\n        children: /*#__PURE__*/_jsx(GridApiContext.Provider, {\n          value: apiRef,\n          children: children\n        })\n      })\n    })\n  });\n}","import * as React from 'react';\nexport const useGridRefs = apiRef => {\n  const rootElementRef = React.useRef(null);\n  const mainElementRef = React.useRef(null);\n  const virtualScrollerRef = React.useRef(null);\n  const virtualScrollbarVerticalRef = React.useRef(null);\n  const virtualScrollbarHorizontalRef = React.useRef(null);\n  const columnHeadersContainerRef = React.useRef(null);\n  apiRef.current.register('public', {\n    rootElementRef\n  });\n  apiRef.current.register('private', {\n    mainElementRef,\n    virtualScrollerRef,\n    virtualScrollbarVerticalRef,\n    virtualScrollbarHorizontalRef,\n    columnHeadersContainerRef\n  });\n};","import * as React from 'react';\nimport { localStorageAvailable } from \"../../utils/utils.js\";\nimport { useGridApiMethod } from \"../utils/index.js\";\nconst forceDebug = localStorageAvailable() && window.localStorage.getItem('DEBUG') != null;\nconst noop = () => {};\nconst noopLogger = {\n  debug: noop,\n  info: noop,\n  warn: noop,\n  error: noop\n};\nconst LOG_LEVELS = ['debug', 'info', 'warn', 'error'];\nfunction getAppender(name, logLevel, appender = console) {\n  const minLogLevelIdx = LOG_LEVELS.indexOf(logLevel);\n  if (minLogLevelIdx === -1) {\n    throw new Error(`MUI X: Log level ${logLevel} not recognized.`);\n  }\n  const logger = LOG_LEVELS.reduce((loggerObj, method, idx) => {\n    if (idx >= minLogLevelIdx) {\n      loggerObj[method] = (...args) => {\n        const [message, ...other] = args;\n        appender[method](`MUI X: ${name} - ${message}`, ...other);\n      };\n    } else {\n      loggerObj[method] = noop;\n    }\n    return loggerObj;\n  }, {});\n  return logger;\n}\nexport const useGridLoggerFactory = (apiRef, props) => {\n  const getLogger = React.useCallback(name => {\n    if (forceDebug) {\n      return getAppender(name, 'debug', props.logger);\n    }\n    if (!props.logLevel) {\n      return noopLogger;\n    }\n    return getAppender(name, props.logLevel.toString(), props.logger);\n  }, [props.logLevel, props.logger]);\n  useGridApiMethod(apiRef, {\n    getLogger\n  }, 'private');\n};","// Used https://gist.github.com/mudge/5830382 as a starting point.\n// See https://github.com/browserify/events/blob/master/events.js for\n// the Node.js (https://nodejs.org/api/events.html) polyfill used by webpack.\nexport class EventManager {\n  constructor() {\n    this.maxListeners = 20;\n    this.warnOnce = false;\n    this.events = {};\n  }\n  on(eventName, listener, options = {}) {\n    let collection = this.events[eventName];\n    if (!collection) {\n      collection = {\n        highPriority: new Map(),\n        regular: new Map()\n      };\n      this.events[eventName] = collection;\n    }\n    if (options.isFirst) {\n      collection.highPriority.set(listener, true);\n    } else {\n      collection.regular.set(listener, true);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      const collectionSize = collection.highPriority.size + collection.regular.size;\n      if (collectionSize > this.maxListeners && !this.warnOnce) {\n        this.warnOnce = true;\n        console.warn([`Possible EventEmitter memory leak detected. ${collectionSize} ${eventName} listeners added.`].join('\\n'));\n      }\n    }\n  }\n  removeListener(eventName, listener) {\n    if (this.events[eventName]) {\n      this.events[eventName].regular.delete(listener);\n      this.events[eventName].highPriority.delete(listener);\n    }\n  }\n  removeAllListeners() {\n    this.events = {};\n  }\n  emit(eventName, ...args) {\n    const collection = this.events[eventName];\n    if (!collection) {\n      return;\n    }\n    const highPriorityListeners = Array.from(collection.highPriority.keys());\n    const regularListeners = Array.from(collection.regular.keys());\n    for (let i = highPriorityListeners.length - 1; i >= 0; i -= 1) {\n      const listener = highPriorityListeners[i];\n      if (collection.highPriority.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n    for (let i = 0; i < regularListeners.length; i += 1) {\n      const listener = regularListeners[i];\n      if (collection.regular.has(listener)) {\n        listener.apply(this, args);\n      }\n    }\n  }\n  once(eventName, listener) {\n    // eslint-disable-next-line consistent-this\n    const that = this;\n    this.on(eventName, function oneTimeListener(...args) {\n      that.removeListener(eventName, oneTimeListener);\n      listener.apply(that, args);\n    });\n  }\n}","export class Store {\n  static create(value) {\n    return new Store(value);\n  }\n  constructor(_value) {\n    this.value = void 0;\n    this.listeners = void 0;\n    this.subscribe = fn => {\n      this.listeners.add(fn);\n      return () => {\n        this.listeners.delete(fn);\n      };\n    };\n    this.getSnapshot = () => {\n      return this.value;\n    };\n    this.update = value => {\n      this.value = value;\n      this.listeners.forEach(l => l(value));\n    };\n    this.value = _value;\n    this.listeners = new Set();\n  }\n}","import * as React from 'react';\nimport { EventManager } from '@mui/x-internals/EventManager';\nimport { Store } from \"../../utils/Store.js\";\nimport { useGridApiMethod } from \"../utils/useGridApiMethod.js\";\nimport { GridSignature } from \"../utils/useGridApiEventHandler.js\";\nconst SYMBOL_API_PRIVATE = Symbol('mui.api_private');\nconst isSyntheticEvent = event => {\n  return event.isPropagationStopped !== undefined;\n};\nexport function unwrapPrivateAPI(publicApi) {\n  return publicApi[SYMBOL_API_PRIVATE];\n}\nlet globalId = 0;\nfunction createPrivateAPI(publicApiRef) {\n  const existingPrivateApi = publicApiRef.current?.[SYMBOL_API_PRIVATE];\n  if (existingPrivateApi) {\n    return existingPrivateApi;\n  }\n  const state = {};\n  const privateApi = {\n    state,\n    store: Store.create(state),\n    instanceId: {\n      id: globalId\n    }\n  };\n  globalId += 1;\n  privateApi.getPublicApi = () => publicApiRef.current;\n  privateApi.register = (visibility, methods) => {\n    Object.keys(methods).forEach(methodName => {\n      const method = methods[methodName];\n      const currentPrivateMethod = privateApi[methodName];\n      if (currentPrivateMethod?.spying === true) {\n        currentPrivateMethod.target = method;\n      } else {\n        privateApi[methodName] = method;\n      }\n      if (visibility === 'public') {\n        const publicApi = publicApiRef.current;\n        const currentPublicMethod = publicApi[methodName];\n        if (currentPublicMethod?.spying === true) {\n          currentPublicMethod.target = method;\n        } else {\n          publicApi[methodName] = method;\n        }\n      }\n    });\n  };\n  privateApi.register('private', {\n    caches: {},\n    eventManager: new EventManager()\n  });\n  return privateApi;\n}\nfunction createPublicAPI(privateApiRef) {\n  const publicApi = {\n    get state() {\n      return privateApiRef.current.state;\n    },\n    get store() {\n      return privateApiRef.current.store;\n    },\n    get instanceId() {\n      return privateApiRef.current.instanceId;\n    },\n    [SYMBOL_API_PRIVATE]: privateApiRef.current\n  };\n  return publicApi;\n}\nexport function useGridApiInitialization(inputApiRef, props) {\n  const publicApiRef = React.useRef(null);\n  const privateApiRef = React.useRef(null);\n  if (!privateApiRef.current) {\n    privateApiRef.current = createPrivateAPI(publicApiRef);\n  }\n  if (!publicApiRef.current) {\n    publicApiRef.current = createPublicAPI(privateApiRef);\n  }\n  const publishEvent = React.useCallback((...args) => {\n    const [name, params, event = {}] = args;\n    event.defaultMuiPrevented = false;\n    if (isSyntheticEvent(event) && event.isPropagationStopped()) {\n      return;\n    }\n    const details = props.signature === GridSignature.DataGridPro || props.signature === GridSignature.DataGridPremium ? {\n      api: privateApiRef.current.getPublicApi()\n    } : {};\n    privateApiRef.current.eventManager.emit(name, params, event, details);\n  }, [privateApiRef, props.signature]);\n  const subscribeEvent = React.useCallback((event, handler, options) => {\n    privateApiRef.current.eventManager.on(event, handler, options);\n    const api = privateApiRef.current;\n    return () => {\n      api.eventManager.removeListener(event, handler);\n    };\n  }, [privateApiRef]);\n  useGridApiMethod(privateApiRef, {\n    subscribeEvent,\n    publishEvent\n  }, 'public');\n  if (inputApiRef && !inputApiRef.current?.state) {\n    inputApiRef.current = publicApiRef.current;\n  }\n  React.useImperativeHandle(inputApiRef, () => publicApiRef.current, [publicApiRef]);\n  React.useEffect(() => {\n    const api = privateApiRef.current;\n    return () => {\n      api.publishEvent('unmount');\n    };\n  }, [privateApiRef]);\n  return privateApiRef;\n}","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\n/**\n * Implement the Pipeline Pattern\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic to enrich data provided by other plugins or components.\n * For instance, the row grouping plugin needs to add / remove the grouping columns when the grid columns are updated.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterPipeProcessor` to register their processor.\n *\n * - `apiRef.current.requestPipeProcessorsApplication` to imperatively re-apply a group.\n *   This method should be used in last resort.\n *   Most of the time, the application should be triggered by an update on the deps of the processor.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to enrich its data must use:\n *\n * - `apiRef.current.unstable_applyPipeProcessors` to run in chain all the processors of a given group.\n *\n * - `useGridRegisterPipeApplier` to re-apply the whole pipe when requested.\n *   The applier will be called when:\n *   * a processor is registered.\n *   * `apiRef.current.requestPipeProcessorsApplication` is called for the given group.\n */\nexport const useGridPipeProcessing = apiRef => {\n  const cache = React.useRef({});\n  const isRunning = React.useRef(false);\n  const runAppliers = React.useCallback(groupCache => {\n    if (isRunning.current || !groupCache) {\n      return;\n    }\n    isRunning.current = true;\n    Object.values(groupCache.appliers).forEach(callback => {\n      callback();\n    });\n    isRunning.current = false;\n  }, []);\n  const registerPipeProcessor = React.useCallback((group, id, processor) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    const groupCache = cache.current[group];\n    const oldProcessor = groupCache.processors.get(id);\n    if (oldProcessor !== processor) {\n      groupCache.processors.set(id, processor);\n      groupCache.processorsAsArray = Array.from(cache.current[group].processors.values());\n      runAppliers(groupCache);\n    }\n    return () => {\n      cache.current[group].processors.delete(id);\n      cache.current[group].processorsAsArray = Array.from(cache.current[group].processors.values());\n    };\n  }, [runAppliers]);\n  const registerPipeApplier = React.useCallback((group, id, applier) => {\n    if (!cache.current[group]) {\n      cache.current[group] = {\n        processors: new Map(),\n        processorsAsArray: [],\n        appliers: {}\n      };\n    }\n    cache.current[group].appliers[id] = applier;\n    return () => {\n      const _appliers = cache.current[group].appliers,\n        otherAppliers = _objectWithoutPropertiesLoose(_appliers, [id].map(_toPropertyKey));\n      cache.current[group].appliers = otherAppliers;\n    };\n  }, []);\n  const requestPipeProcessorsApplication = React.useCallback(group => {\n    runAppliers(cache.current[group]);\n  }, [runAppliers]);\n  const applyPipeProcessors = React.useCallback((...args) => {\n    const [group, value, context] = args;\n    if (!cache.current[group]) {\n      return value;\n    }\n    const processors = cache.current[group].processorsAsArray;\n    let result = value;\n    for (let i = 0; i < processors.length; i += 1) {\n      result = processors[i](result, context);\n    }\n    return result;\n  }, []);\n  const preProcessingPrivateApi = {\n    registerPipeProcessor,\n    registerPipeApplier,\n    requestPipeProcessorsApplication\n  };\n  const preProcessingPublicApi = {\n    unstable_applyPipeProcessors: applyPipeProcessors\n  };\n  useGridApiMethod(apiRef, preProcessingPrivateApi, 'private');\n  useGridApiMethod(apiRef, preProcessingPublicApi, 'public');\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nexport const GRID_DEFAULT_STRATEGY = 'none';\nexport const GRID_STRATEGIES_PROCESSORS = {\n  rowTreeCreation: 'rowTree',\n  filtering: 'rowTree',\n  sorting: 'rowTree',\n  visibleRowsLookupCreation: 'rowTree'\n};\n/**\n * Implements a variant of the Strategy Pattern (see https://en.wikipedia.org/wiki/Strategy_pattern)\n *\n * More information and detailed example in (TODO add link to technical doc when ready)\n *\n * Some plugins contains custom logic that must only be applied if the right strategy is active.\n * For instance, the row grouping plugin has a custom filtering algorithm.\n * This algorithm must be applied by the filtering plugin if the row grouping is the current way of grouping rows,\n * but not if the tree data is the current way of grouping rows.\n *\n * =====================================================================================================================\n *\n * The plugin containing the custom logic must use:\n *\n * - `useGridRegisterStrategyProcessor` to register their processor.\n *   When the processor of the active strategy changes, it will fire `\"activeStrategyProcessorChange\"` to re-apply the processor.\n *\n * - `apiRef.current.setStrategyAvailability` to tell if their strategy can be used.\n *\n * =====================================================================================================================\n *\n * The plugin or component that needs to apply the custom logic of the current strategy must use:\n *\n * - `apiRef.current.applyStrategyProcessor` to run the processor of the active strategy for a given processor name.\n *\n * - the \"strategyAvailabilityChange\" event to update something when the active strategy changes.\n *    Warning: Be careful not to apply the processor several times.\n *    For instance \"rowsSet\" is fired by `useGridRows` whenever the active strategy changes.\n *    So listening to both would most likely run your logic twice.\n *\n * - The \"activeStrategyProcessorChange\" event to update something when the processor of the active strategy changes.\n *\n * =====================================================================================================================\n *\n * Each processor name is part of a strategy group which can only have one active strategy at the time.\n * For now, there is only one strategy group named `rowTree` which customize\n * - row tree creation algorithm.\n * - sorting algorithm.\n * - filtering algorithm.\n */\nexport const useGridStrategyProcessing = apiRef => {\n  const availableStrategies = React.useRef(new Map());\n  const strategiesCache = React.useRef({});\n  const registerStrategyProcessor = React.useCallback((strategyName, processorName, processor) => {\n    const cleanup = () => {\n      const _ref = strategiesCache.current[processorName],\n        otherProcessors = _objectWithoutPropertiesLoose(_ref, [strategyName].map(_toPropertyKey));\n      strategiesCache.current[processorName] = otherProcessors;\n    };\n    if (!strategiesCache.current[processorName]) {\n      strategiesCache.current[processorName] = {};\n    }\n    const groupPreProcessors = strategiesCache.current[processorName];\n    const previousProcessor = groupPreProcessors[strategyName];\n    groupPreProcessors[strategyName] = processor;\n    if (!previousProcessor || previousProcessor === processor) {\n      return cleanup;\n    }\n    if (strategyName === apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName])) {\n      apiRef.current.publishEvent('activeStrategyProcessorChange', processorName);\n    }\n    return cleanup;\n  }, [apiRef]);\n  const applyStrategyProcessor = React.useCallback((processorName, params) => {\n    const activeStrategy = apiRef.current.getActiveStrategy(GRID_STRATEGIES_PROCESSORS[processorName]);\n    if (activeStrategy == null) {\n      throw new Error(\"Can't apply a strategy processor before defining an active strategy\");\n    }\n    const groupCache = strategiesCache.current[processorName];\n    if (!groupCache || !groupCache[activeStrategy]) {\n      throw new Error(`No processor found for processor \"${processorName}\" on strategy \"${activeStrategy}\"`);\n    }\n    const processor = groupCache[activeStrategy];\n    return processor(params);\n  }, [apiRef]);\n  const getActiveStrategy = React.useCallback(strategyGroup => {\n    const strategyEntries = Array.from(availableStrategies.current.entries());\n    const availableStrategyEntry = strategyEntries.find(([, strategy]) => {\n      if (strategy.group !== strategyGroup) {\n        return false;\n      }\n      return strategy.isAvailable();\n    });\n    return availableStrategyEntry?.[0] ?? GRID_DEFAULT_STRATEGY;\n  }, []);\n  const setStrategyAvailability = React.useCallback((strategyGroup, strategyName, isAvailable) => {\n    availableStrategies.current.set(strategyName, {\n      group: strategyGroup,\n      isAvailable\n    });\n    apiRef.current.publishEvent('strategyAvailabilityChange');\n  }, [apiRef]);\n  const strategyProcessingApi = {\n    registerStrategyProcessor,\n    applyStrategyProcessor,\n    getActiveStrategy,\n    setStrategyAvailability\n  };\n  useGridApiMethod(apiRef, strategyProcessingApi, 'private');\n};","import { useGridRefs } from \"./useGridRefs.js\";\nimport { useGridIsRtl } from \"./useGridIsRtl.js\";\nimport { useGridLoggerFactory } from \"./useGridLoggerFactory.js\";\nimport { useGridApiInitialization } from \"./useGridApiInitialization.js\";\nimport { useGridLocaleText } from \"./useGridLocaleText.js\";\nimport { useGridPipeProcessing } from \"./pipeProcessing/index.js\";\nimport { useGridStrategyProcessing } from \"./strategyProcessing/index.js\";\nimport { useGridStateInitialization } from \"./useGridStateInitialization.js\";\n\n/**\n * Initialize the technical pieces of the DataGrid (logger, state, ...) that any DataGrid implementation needs\n */\nexport const useGridInitialization = (inputApiRef, props) => {\n  const privateApiRef = useGridApiInitialization(inputApiRef, props);\n  useGridRefs(privateApiRef);\n  useGridIsRtl(privateApiRef);\n  useGridLoggerFactory(privateApiRef, props);\n  useGridStateInitialization(privateApiRef);\n  useGridPipeProcessing(privateApiRef);\n  useGridStrategyProcessing(privateApiRef);\n  useGridLocaleText(privateApiRef, props);\n  privateApiRef.current.register('private', {\n    rootProps: props\n  });\n  return privateApiRef;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nexport const useGridIsRtl = apiRef => {\n  const isRtl = useRtl();\n  if (apiRef.current.state.isRtl === undefined) {\n    apiRef.current.state.isRtl = isRtl;\n  }\n  const isFirstEffect = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstEffect.current) {\n      isFirstEffect.current = false;\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        isRtl\n      }));\n    }\n  }, [apiRef, isRtl]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../utils/index.js\";\nimport { isFunction } from \"../../utils/utils.js\";\nexport const useGridStateInitialization = apiRef => {\n  const controlStateMapRef = React.useRef({});\n  const registerControlState = React.useCallback(controlStateItem => {\n    controlStateMapRef.current[controlStateItem.stateId] = controlStateItem;\n  }, []);\n  const setState = React.useCallback((state, reason) => {\n    let newState;\n    if (isFunction(state)) {\n      newState = state(apiRef.current.state);\n    } else {\n      newState = state;\n    }\n    if (apiRef.current.state === newState) {\n      return false;\n    }\n    let ignoreSetState = false;\n\n    // Apply the control state constraints\n    const updatedControlStateIds = [];\n    Object.keys(controlStateMapRef.current).forEach(stateId => {\n      const controlState = controlStateMapRef.current[stateId];\n      const oldSubState = controlState.stateSelector(apiRef.current.state, apiRef.current.instanceId);\n      const newSubState = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (newSubState === oldSubState) {\n        return;\n      }\n      updatedControlStateIds.push({\n        stateId: controlState.stateId,\n        hasPropChanged: newSubState !== controlState.propModel\n      });\n\n      // The state is controlled, the prop should always win\n      if (controlState.propModel !== undefined && newSubState !== controlState.propModel) {\n        ignoreSetState = true;\n      }\n    });\n    if (updatedControlStateIds.length > 1) {\n      // Each hook modify its own state, and it should not leak\n      // Events are here to forward to other hooks and apply changes.\n      // You are trying to update several states in a no isolated way.\n      throw new Error(`You're not allowed to update several sub-state in one transaction. You already updated ${updatedControlStateIds[0].stateId}, therefore, you're not allowed to update ${updatedControlStateIds.map(el => el.stateId).join(', ')} in the same transaction.`);\n    }\n    if (!ignoreSetState) {\n      // We always assign it as we mutate rows for perf reason.\n      apiRef.current.state = newState;\n      apiRef.current.publishEvent('stateChange', newState);\n      apiRef.current.store.update(newState);\n    }\n    if (updatedControlStateIds.length === 1) {\n      const {\n        stateId,\n        hasPropChanged\n      } = updatedControlStateIds[0];\n      const controlState = controlStateMapRef.current[stateId];\n      const model = controlState.stateSelector(newState, apiRef.current.instanceId);\n      if (controlState.propOnChange && hasPropChanged) {\n        controlState.propOnChange(model, {\n          reason,\n          api: apiRef.current\n        });\n      }\n      if (!ignoreSetState) {\n        apiRef.current.publishEvent(controlState.changeEvent, model, {\n          reason\n        });\n      }\n    }\n    return !ignoreSetState;\n  }, [apiRef]);\n  const updateControlState = React.useCallback((key, state, reason) => {\n    return apiRef.current.setState(previousState => {\n      return _extends({}, previousState, {\n        [key]: state(previousState[key])\n      });\n    }, reason);\n  }, [apiRef]);\n  const forceUpdate = React.useCallback(() => {\n    // @deprecated - do nothing\n  }, []);\n  const publicStateApi = {\n    setState,\n    forceUpdate\n  };\n  const privateStateApi = {\n    updateControlState,\n    registerControlState\n  };\n  useGridApiMethod(apiRef, publicStateApi, 'public');\n  useGridApiMethod(apiRef, privateStateApi, 'private');\n};","import * as React from 'react';\nexport const useGridLocaleText = (apiRef, props) => {\n  const getLocaleText = React.useCallback(key => {\n    if (props.localeText[key] == null) {\n      throw new Error(`Missing translation for key ${key}.`);\n    }\n    return props.localeText[key];\n  }, [props.localeText]);\n  apiRef.current.register('public', {\n    getLocaleText\n  });\n};","import * as React from 'react';\nexport const useGridInitializeState = (initializer, privateApiRef, props) => {\n  const isInitialized = React.useRef(false);\n  if (!isInitialized.current) {\n    privateApiRef.current.state = initializer(privateApiRef.current.state, props, privateApiRef);\n    isInitialized.current = true;\n  }\n};","import * as React from 'react';\nexport function useGridLogger(privateApiRef, name) {\n  const logger = React.useRef(null);\n  if (logger.current) {\n    return logger.current;\n  }\n  const newLogger = privateApiRef.current.getLogger(name);\n  logger.current = newLogger;\n  return newLogger;\n}","import { useGridLogger } from \"./useGridLogger.js\";\nimport { useGridApiOptionHandler } from \"./useGridApiEventHandler.js\";\nexport const useGridNativeEventListener = (apiRef, ref, eventName, handler, options) => {\n  const logger = useGridLogger(apiRef, 'useNativeEventListener');\n  useGridApiOptionHandler(apiRef, 'rootMount', () => {\n    const targetElement = typeof ref === 'function' ? ref() : ref.current;\n    if (!targetElement || !eventName || !handler) {\n      return undefined;\n    }\n    logger.debug(`Binding native ${eventName} event`);\n    targetElement.addEventListener(eventName, handler, options);\n    return () => {\n      logger.debug(`Clearing native ${eventName} event`);\n      targetElement.removeEventListener(eventName, handler, options);\n    };\n  });\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"id\", \"formattedValue\", \"row\", \"rowNode\", \"colDef\", \"isEditable\", \"cellMode\", \"hasFocus\", \"tabIndex\", \"api\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { objectShallowCompare, useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { getCheckboxPropsSelector } from \"../../hooks/features/rowSelection/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridCellCheckboxForwardRef = forwardRef(function GridCellCheckboxRenderer(props, ref) {\n  const {\n      field,\n      id,\n      rowNode,\n      hasFocus,\n      tabIndex\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const checkboxElement = React.useRef(null);\n  const rippleRef = React.useRef(null);\n  const handleRef = useForkRef(checkboxElement, ref);\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked,\n      id\n    };\n    apiRef.current.publishEvent('rowSelectionCheckboxChange', params, event);\n  };\n  React.useLayoutEffect(() => {\n    if (tabIndex === 0) {\n      const element = apiRef.current.getCellElement(id, field);\n      if (element) {\n        element.tabIndex = -1;\n      }\n    }\n  }, [apiRef, tabIndex, id, field]);\n  React.useEffect(() => {\n    if (hasFocus) {\n      const input = checkboxElement.current?.querySelector('input');\n      input?.focus({\n        preventScroll: true\n      });\n    } else if (rippleRef.current) {\n      // Only available in @mui/material v5.4.1 or later\n      rippleRef.current.stop({});\n    }\n  }, [hasFocus]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // We call event.stopPropagation to avoid selecting the row and also scrolling to bottom\n      // TODO: Remove and add a check inside useGridKeyboardNavigation\n      event.stopPropagation();\n    }\n  }, []);\n  const isSelectable = apiRef.current.isRowSelectable(id);\n  const checkboxPropsSelector = getCheckboxPropsSelector(id, rootProps.rowSelectionPropagation?.parents ?? false);\n  const {\n    isIndeterminate,\n    isChecked\n  } = useGridSelector(apiRef, checkboxPropsSelector, objectShallowCompare);\n  if (rowNode.type === 'footer' || rowNode.type === 'pinnedRow') {\n    return null;\n  }\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  const label = apiRef.current.getLocaleText(checked ? 'checkboxSelectionUnselectRow' : 'checkboxSelectionSelectRow');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    tabIndex: tabIndex,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label,\n      name: 'select_row'\n    },\n    onKeyDown: handleKeyDown,\n    indeterminate: isIndeterminate,\n    disabled: !isSelectable,\n    touchRippleRef: rippleRef /* FIXME: typing error */\n  }, rootProps.slotProps?.baseCheckbox, other, {\n    ref: handleRef\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCellCheckboxForwardRef.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * GridApi that let you manipulate the grid.\n   */\n  api: PropTypes.object.isRequired,\n  /**\n   * The mode of the cell.\n   */\n  cellMode: PropTypes.oneOf(['edit', 'view']).isRequired,\n  /**\n   * The column of the row that the current cell belongs to.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the cell that triggered the event.\n   */\n  field: PropTypes.string.isRequired,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the element that should receive focus.\n   * @ignore - do not document.\n   */\n  focusElementRef: PropTypes.oneOfType([PropTypes.func, PropTypes.shape({\n    current: PropTypes.shape({\n      focus: PropTypes.func.isRequired\n    })\n  })]),\n  /**\n   * The cell value formatted with the column valueFormatter.\n   */\n  formattedValue: PropTypes.any,\n  /**\n   * If true, the cell is the active element.\n   */\n  hasFocus: PropTypes.bool.isRequired,\n  /**\n   * The grid row id.\n   */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  /**\n   * If true, the cell is editable.\n   */\n  isEditable: PropTypes.bool,\n  /**\n   * The row model of the row that the current cell belongs to.\n   */\n  row: PropTypes.any.isRequired,\n  /**\n   * The node of the row that the current cell belongs to.\n   */\n  rowNode: PropTypes.object.isRequired,\n  /**\n   * the tabIndex value.\n   */\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired,\n  /**\n   * The cell value.\n   * If the column has `valueGetter`, use `params.row` to directly access the fields.\n   */\n  value: PropTypes.any\n} : void 0;\nexport { GridCellCheckboxForwardRef };\nexport const GridCellCheckboxRenderer = GridCellCheckboxForwardRef;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"colDef\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { isMultipleRowSelectionEnabled } from \"../../hooks/features/rowSelection/utils.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridTabIndexColumnHeaderSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { gridRowSelectionStateSelector } from \"../../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridExpandedSortedRowIdsSelector } from \"../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['checkboxInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridHeaderCheckbox = forwardRef(function GridHeaderCheckbox(props, ref) {\n  const other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [, forceUpdate] = React.useState(false);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const tabIndexState = useGridSelector(apiRef, gridTabIndexColumnHeaderSelector);\n  const selection = useGridSelector(apiRef, gridRowSelectionStateSelector);\n  const visibleRowIds = useGridSelector(apiRef, gridExpandedSortedRowIdsSelector);\n  const paginatedVisibleRowIds = useGridSelector(apiRef, gridPaginatedVisibleSortedGridRowIdsSelector);\n  const filteredSelection = React.useMemo(() => {\n    if (typeof rootProps.isRowSelectable !== 'function') {\n      return selection;\n    }\n    return selection.filter(id => {\n      if (rootProps.keepNonExistentRowsSelected) {\n        return true;\n      }\n      // The row might have been deleted\n      if (!apiRef.current.getRow(id)) {\n        return false;\n      }\n      return rootProps.isRowSelectable(apiRef.current.getRowParams(id));\n    });\n  }, [apiRef, rootProps.isRowSelectable, selection, rootProps.keepNonExistentRowsSelected]);\n\n  // All the rows that could be selected / unselected by toggling this checkbox\n  const selectionCandidates = React.useMemo(() => {\n    const rowIds = !rootProps.pagination || !rootProps.checkboxSelectionVisibleOnly ? visibleRowIds : paginatedVisibleRowIds;\n\n    // Convert to an object to make O(1) checking if a row exists or not\n    // TODO create selector that returns visibleRowIds/paginatedVisibleRowIds as an object\n    return rowIds.reduce((acc, id) => {\n      acc[id] = true;\n      return acc;\n    }, {});\n  }, [rootProps.pagination, rootProps.checkboxSelectionVisibleOnly, paginatedVisibleRowIds, visibleRowIds]);\n\n  // Amount of rows selected and that are visible in the current page\n  const currentSelectionSize = React.useMemo(() => filteredSelection.filter(id => selectionCandidates[id]).length, [filteredSelection, selectionCandidates]);\n  const isIndeterminate = currentSelectionSize > 0 && currentSelectionSize < Object.keys(selectionCandidates).length;\n  const isChecked = currentSelectionSize > 0;\n  const handleChange = event => {\n    const params = {\n      value: event.target.checked\n    };\n    apiRef.current.publishEvent('headerSelectionCheckboxChange', params);\n  };\n  const tabIndex = tabIndexState !== null && tabIndexState.field === props.field ? 0 : -1;\n  React.useLayoutEffect(() => {\n    const element = apiRef.current.getColumnHeaderElement(props.field);\n    if (tabIndex === 0 && element) {\n      element.tabIndex = -1;\n    }\n  }, [tabIndex, apiRef, props.field]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === ' ') {\n      // imperative toggle the checkbox because Space is disable by some preventDefault\n      apiRef.current.publishEvent('headerSelectionCheckboxChange', {\n        value: !isChecked\n      });\n    }\n  }, [apiRef, isChecked]);\n  const handleSelectionChange = React.useCallback(() => {\n    forceUpdate(p => !p);\n  }, []);\n  React.useEffect(() => {\n    return apiRef.current.subscribeEvent('rowSelectionChange', handleSelectionChange);\n  }, [apiRef, handleSelectionChange]);\n  const checked = rootProps.indeterminateCheckboxAction === 'select' ? isChecked && !isIndeterminate : isChecked;\n  const label = apiRef.current.getLocaleText(checked ? 'checkboxSelectionUnselectAllRows' : 'checkboxSelectionSelectAllRows');\n  return /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n    indeterminate: isIndeterminate,\n    checked: checked,\n    onChange: handleChange,\n    className: classes.root,\n    inputProps: {\n      'aria-label': label,\n      name: 'select_all_rows'\n    },\n    tabIndex: tabIndex,\n    onKeyDown: handleKeyDown,\n    disabled: !isMultipleRowSelectionEnabled(rootProps)\n  }, rootProps.slotProps?.baseCheckbox, other, {\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridHeaderCheckbox.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The column of the current header component.\n   */\n  colDef: PropTypes.object.isRequired,\n  /**\n   * The column field of the column that triggered the event\n   */\n  field: PropTypes.string.isRequired\n} : void 0;\nexport { GridHeaderCheckbox };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridCellCheckboxRenderer } from \"../components/columnSelection/GridCellCheckboxRenderer.js\";\nimport { GridHeaderCheckbox } from \"../components/columnSelection/GridHeaderCheckbox.js\";\nimport { selectedIdsLookupSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { GRID_BOOLEAN_COL_DEF } from \"./gridBooleanColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_CHECKBOX_SELECTION_FIELD = '__check__';\nexport const GRID_CHECKBOX_SELECTION_COL_DEF = _extends({}, GRID_BOOLEAN_COL_DEF, {\n  type: 'custom',\n  field: GRID_CHECKBOX_SELECTION_FIELD,\n  width: 50,\n  resizable: false,\n  sortable: false,\n  filterable: false,\n  // @ts-ignore\n  aggregable: false,\n  disableColumnMenu: true,\n  disableReorder: true,\n  disableExport: true,\n  getApplyQuickFilterFn: undefined,\n  display: 'flex',\n  valueGetter: (value, row, column, apiRef) => {\n    const selectionLookup = selectedIdsLookupSelector(apiRef);\n    const rowId = apiRef.current.getRowId(row);\n    return selectionLookup[rowId] !== undefined;\n  },\n  renderHeader: params => /*#__PURE__*/_jsx(GridHeaderCheckbox, _extends({}, params)),\n  renderCell: params => /*#__PURE__*/_jsx(GridCellCheckboxRenderer, _extends({}, params))\n});","import { warnOnce } from '@mui/x-internals/warning';\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../../colDef/index.js\";\nfunction sanitizeCellValue(value, csvOptions) {\n  if (value === null || value === undefined) {\n    return '';\n  }\n  const valueStr = typeof value === 'string' ? value : `${value}`;\n  if (csvOptions.shouldAppendQuotes || csvOptions.escapeFormulas) {\n    const escapedValue = valueStr.replace(/\"/g, '\"\"');\n    if (csvOptions.escapeFormulas) {\n      // See https://owasp.org/www-community/attacks/CSV_Injection\n      if (['=', '+', '-', '@', '\\t', '\\r'].includes(escapedValue[0])) {\n        return `\"'${escapedValue}\"`;\n      }\n    }\n    // Make sure value containing delimiter or line break won't be split into multiple cells\n    if ([csvOptions.delimiter, '\\n', '\\r', '\"'].some(delimiter => valueStr.includes(delimiter))) {\n      return `\"${escapedValue}\"`;\n    }\n    return escapedValue;\n  }\n  return valueStr;\n}\nexport const serializeCellValue = (cellParams, options) => {\n  const {\n    csvOptions,\n    ignoreValueFormatter\n  } = options;\n  let value;\n  if (ignoreValueFormatter) {\n    const columnType = cellParams.colDef.type;\n    if (columnType === 'number') {\n      value = String(cellParams.value);\n    } else if (columnType === 'date' || columnType === 'dateTime') {\n      value = cellParams.value?.toISOString();\n    } else if (typeof cellParams.value?.toString === 'function') {\n      value = cellParams.value.toString();\n    } else {\n      value = cellParams.value;\n    }\n  } else {\n    value = cellParams.formattedValue;\n  }\n  return sanitizeCellValue(value, csvOptions);\n};\nclass CSVRow {\n  constructor(options) {\n    this.options = void 0;\n    this.rowString = '';\n    this.isEmpty = true;\n    this.options = options;\n  }\n  addValue(value) {\n    if (!this.isEmpty) {\n      this.rowString += this.options.csvOptions.delimiter;\n    }\n    if (typeof this.options.sanitizeCellValue === 'function') {\n      this.rowString += this.options.sanitizeCellValue(value, this.options.csvOptions);\n    } else {\n      this.rowString += value;\n    }\n    this.isEmpty = false;\n  }\n  getRowString() {\n    return this.rowString;\n  }\n}\nconst serializeRow = ({\n  id,\n  columns,\n  getCellParams,\n  csvOptions,\n  ignoreValueFormatter\n}) => {\n  const row = new CSVRow({\n    csvOptions\n  });\n  columns.forEach(column => {\n    const cellParams = getCellParams(id, column.field);\n    if (process.env.NODE_ENV !== 'production') {\n      if (String(cellParams.formattedValue) === '[object Object]') {\n        warnOnce(['MUI X: When the value of a field is an object or a `renderCell` is provided, the CSV export might not display the value correctly.', 'You can provide a `valueFormatter` with a string representation to be used.']);\n      }\n    }\n    row.addValue(serializeCellValue(cellParams, {\n      ignoreValueFormatter,\n      csvOptions\n    }));\n  });\n  return row.getRowString();\n};\nexport function buildCSV(options) {\n  const {\n    columns,\n    rowIds,\n    csvOptions,\n    ignoreValueFormatter,\n    apiRef\n  } = options;\n  const CSVBody = rowIds.reduce((acc, id) => `${acc}${serializeRow({\n    id,\n    columns,\n    getCellParams: apiRef.current.getCellParams,\n    ignoreValueFormatter,\n    csvOptions\n  })}\\r\\n`, '').trim();\n  if (!csvOptions.includeHeaders) {\n    return CSVBody;\n  }\n  const filteredColumns = columns.filter(column => column.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field);\n  const headerRows = [];\n  if (csvOptions.includeColumnGroupsHeaders) {\n    const columnGroupLookup = apiRef.current.getAllGroupDetails();\n    let maxColumnGroupsDepth = 0;\n    const columnGroupPathsLookup = filteredColumns.reduce((acc, column) => {\n      const columnGroupPath = apiRef.current.getColumnGroupPath(column.field);\n      acc[column.field] = columnGroupPath;\n      maxColumnGroupsDepth = Math.max(maxColumnGroupsDepth, columnGroupPath.length);\n      return acc;\n    }, {});\n    for (let i = 0; i < maxColumnGroupsDepth; i += 1) {\n      const headerGroupRow = new CSVRow({\n        csvOptions,\n        sanitizeCellValue\n      });\n      headerRows.push(headerGroupRow);\n      filteredColumns.forEach(column => {\n        const columnGroupId = (columnGroupPathsLookup[column.field] || [])[i];\n        const columnGroup = columnGroupLookup[columnGroupId];\n        headerGroupRow.addValue(columnGroup ? columnGroup.headerName || columnGroup.groupId : '');\n      });\n    }\n  }\n  const mainHeaderRow = new CSVRow({\n    csvOptions,\n    sanitizeCellValue\n  });\n  filteredColumns.forEach(column => {\n    mainHeaderRow.addValue(column.headerName || column.field);\n  });\n  headerRows.push(mainHeaderRow);\n  const CSVHead = `${headerRows.map(row => row.getRowString()).join('\\r\\n')}\\r\\n`;\n  return `${CSVHead}${CSVBody}`.trim();\n}","// Non printable keys have a name, for example \"ArrowRight\", see the whole list:\n// https://developer.mozilla.org/en-US/docs/Web/API/UI_Events/Keyboard_event_key_values\n// So event.key.length === 1 is often enough.\n//\n// However, we also need to ignore shortcuts, for example: select all:\n// - Windows: Ctrl+A, event.ctrlKey is true\n// - macOS: ⌘ Command+A, event.metaKey is true\nexport function isPrintableKey(event) {\n  return event.key.length === 1 && !event.ctrlKey && !event.metaKey;\n}\nexport const GRID_MULTIPLE_SELECTION_KEYS = ['Meta', 'Control', 'Shift'];\nexport const GRID_CELL_EXIT_EDIT_MODE_KEYS = ['Enter', 'Escape', 'Tab'];\nexport const GRID_CELL_EDIT_COMMIT_KEYS = ['Enter', 'Tab'];\nexport const isMultipleKey = key => GRID_MULTIPLE_SELECTION_KEYS.indexOf(key) > -1;\nexport const isCellEnterEditModeKeys = event => isPrintableKey(event) || event.key === 'Enter' || event.key === 'Backspace' || event.key === 'Delete';\nexport const isCellExitEditModeKeys = key => GRID_CELL_EXIT_EDIT_MODE_KEYS.indexOf(key) > -1;\nexport const isCellEditCommitKeys = key => GRID_CELL_EDIT_COMMIT_KEYS.indexOf(key) > -1;\nexport const isNavigationKey = key => key.indexOf('Arrow') === 0 || key.indexOf('Page') === 0 || key === ' ' || key === 'Home' || key === 'End';\nexport const isKeyboardEvent = event => !!event.key;\nexport const isHideMenuKey = key => key === 'Tab' || key === 'Escape';\n\n// In theory, on macOS, ctrl + v doesn't trigger a paste, so the function should return false.\n// However, maybe it's overkill to fix, so let's be lazy.\nexport function isPasteShortcut(event) {\n  return (event.ctrlKey || event.metaKey) &&\n  // We can't use event.code === 'KeyV' as event.code assumes a QWERTY keyboard layout,\n  // for example, it would be another letter on a Dvorak physical keyboard.\n  // We can't use event.key === 'v' as event.key is not stable with key modifiers and keyboard layouts,\n  // for example, it would be ה on a Hebrew keyboard layout.\n  // https://github.com/w3c/uievents/issues/377 could be a long-term solution\n  String.fromCharCode(event.keyCode) === 'V' && !event.shiftKey && !event.altKey;\n}\n\n// Checks if the keyboard event corresponds to the copy shortcut (CTRL+C or CMD+C) across different localization keyboards.\nexport function isCopyShortcut(event) {\n  return (event.ctrlKey || event.metaKey) && String.fromCharCode(event.keyCode) === 'C' && !event.shiftKey && !event.altKey;\n}","import * as React from 'react';\nimport { useGridApiOptionHandler, useGridNativeEventListener } from \"../../utils/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { serializeCellValue } from \"../export/serializers/csvSerializer.js\";\nimport { isCopyShortcut } from \"../../../utils/keyboardUtils.js\";\nfunction writeToClipboardPolyfill(data) {\n  const span = document.createElement('span');\n  span.style.whiteSpace = 'pre';\n  span.style.userSelect = 'all';\n  span.style.opacity = '0px';\n  span.textContent = data;\n  document.body.appendChild(span);\n  const range = document.createRange();\n  range.selectNode(span);\n  const selection = window.getSelection();\n  selection.removeAllRanges();\n  selection.addRange(range);\n  try {\n    document.execCommand('copy');\n  } finally {\n    document.body.removeChild(span);\n  }\n}\nfunction copyToClipboard(data) {\n  if (navigator.clipboard) {\n    navigator.clipboard.writeText(data).catch(() => {\n      writeToClipboardPolyfill(data);\n    });\n  } else {\n    writeToClipboardPolyfill(data);\n  }\n}\nfunction hasNativeSelection(element) {\n  // When getSelection is called on an <iframe> that is not displayed Firefox will return null.\n  if (window.getSelection()?.toString()) {\n    return true;\n  }\n\n  // window.getSelection() returns an empty string in Firefox for selections inside a form element.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=85686.\n  // Instead, we can use element.selectionStart that is only defined on form elements.\n  if (element && (element.selectionEnd || 0) - (element.selectionStart || 0) > 0) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @requires useGridCsvExport (method)\n * @requires useGridSelection (method)\n */\nexport const useGridClipboard = (apiRef, props) => {\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.clipboardExport : ignoreValueFormatterProp) || false;\n  const clipboardCopyCellDelimiter = props.clipboardCopyCellDelimiter;\n  const handleCopy = React.useCallback(event => {\n    if (!isCopyShortcut(event)) {\n      return;\n    }\n\n    // Do nothing if there's a native selection\n    if (hasNativeSelection(event.target)) {\n      return;\n    }\n    let textToCopy = '';\n    const selectedRows = apiRef.current.getSelectedRows();\n    if (selectedRows.size > 0) {\n      textToCopy = apiRef.current.getDataAsCsv({\n        includeHeaders: false,\n        delimiter: clipboardCopyCellDelimiter,\n        shouldAppendQuotes: false,\n        escapeFormulas: false\n      });\n    } else {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell) {\n        const cellParams = apiRef.current.getCellParams(focusedCell.id, focusedCell.field);\n        textToCopy = serializeCellValue(cellParams, {\n          csvOptions: {\n            delimiter: clipboardCopyCellDelimiter,\n            shouldAppendQuotes: false,\n            escapeFormulas: false\n          },\n          ignoreValueFormatter\n        });\n      }\n    }\n    textToCopy = apiRef.current.unstable_applyPipeProcessors('clipboardCopy', textToCopy);\n    if (textToCopy) {\n      copyToClipboard(textToCopy);\n      apiRef.current.publishEvent('clipboardCopy', textToCopy);\n    }\n  }, [apiRef, ignoreValueFormatter, clipboardCopyCellDelimiter]);\n  useGridNativeEventListener(apiRef, () => apiRef.current.rootElementRef.current, 'keydown', handleCopy);\n  useGridApiOptionHandler(apiRef, 'clipboardCopy', props.onClipboardCopy);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { gridColumnMenuSelector } from \"./columnMenuSelector.js\";\nimport { gridColumnLookupSelector, gridColumnVisibilityModelSelector, gridColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nexport const columnMenuStateInitializer = state => _extends({}, state, {\n  columnMenu: {\n    open: false\n  }\n});\n\n/**\n * @requires useGridColumnResize (event)\n * @requires useGridInfiniteLoader (event)\n */\nexport const useGridColumnMenu = apiRef => {\n  const logger = useGridLogger(apiRef, 'useGridColumnMenu');\n\n  /**\n   * API METHODS\n   */\n  const showColumnMenu = React.useCallback(field => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    const newState = {\n      open: true,\n      field\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        if (state.columnMenu.open && state.columnMenu.field === field) {\n          return state;\n        }\n        logger.debug('Opening Column Menu');\n        return _extends({}, state, {\n          columnMenu: {\n            open: true,\n            field\n          }\n        });\n      });\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef, logger]);\n  const hideColumnMenu = React.useCallback(() => {\n    const columnMenuState = gridColumnMenuSelector(apiRef.current.state);\n    if (columnMenuState.field) {\n      const columnLookup = gridColumnLookupSelector(apiRef);\n      const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n      const orderedFields = gridColumnFieldsSelector(apiRef);\n      let fieldToFocus = columnMenuState.field;\n\n      // If the column was removed from the grid, we need to find the closest visible field\n      if (!columnLookup[fieldToFocus]) {\n        fieldToFocus = orderedFields[0];\n      }\n\n      // If the field to focus is hidden, we need to find the closest visible field\n      if (columnVisibilityModel[fieldToFocus] === false) {\n        // contains visible column fields + the field that was just hidden\n        const visibleOrderedFields = orderedFields.filter(field => {\n          if (field === fieldToFocus) {\n            return true;\n          }\n          return columnVisibilityModel[field] !== false;\n        });\n        const fieldIndex = visibleOrderedFields.indexOf(fieldToFocus);\n        fieldToFocus = visibleOrderedFields[fieldIndex + 1] || visibleOrderedFields[fieldIndex - 1];\n      }\n      apiRef.current.setColumnHeaderFocus(fieldToFocus);\n    }\n    const newState = {\n      open: false,\n      field: undefined\n    };\n    const shouldUpdate = newState.open !== columnMenuState.open || newState.field !== columnMenuState.field;\n    if (shouldUpdate) {\n      apiRef.current.setState(state => {\n        logger.debug('Hiding Column Menu');\n        return _extends({}, state, {\n          columnMenu: newState\n        });\n      });\n    }\n  }, [apiRef, logger]);\n  const toggleColumnMenu = React.useCallback(field => {\n    logger.debug('Toggle Column Menu');\n    const columnMenu = gridColumnMenuSelector(apiRef.current.state);\n    if (!columnMenu.open || columnMenu.field !== field) {\n      showColumnMenu(field);\n    } else {\n      hideColumnMenu();\n    }\n  }, [apiRef, logger, showColumnMenu, hideColumnMenu]);\n  const columnMenuApi = {\n    showColumnMenu,\n    hideColumnMenu,\n    toggleColumnMenu\n  };\n  useGridApiMethod(apiRef, columnMenuApi, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStart', hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerWheel', apiRef.current.hideColumnMenu);\n  useGridApiEventHandler(apiRef, 'virtualScrollerTouchMove', apiRef.current.hideColumnMenu);\n};","import * as React from 'react';\nexport const useFirstRender = callback => {\n  const isFirstRender = React.useRef(true);\n  if (isFirstRender.current) {\n    isFirstRender.current = false;\n    callback();\n  }\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeProcessor = (apiRef, group, callback, enabled = true) => {\n  const cleanup = React.useRef(null);\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeProcessor(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    if (enabled) {\n      registerPreProcessor();\n    }\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else if (enabled) {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor, enabled]);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterPipeApplier = (apiRef, group, callback) => {\n  const cleanup = React.useRef(null);\n  const id = React.useRef(`mui-${Math.round(Math.random() * 1e9)}`);\n  const registerPreProcessor = React.useCallback(() => {\n    cleanup.current = apiRef.current.registerPipeApplier(group, id.current, callback);\n  }, [apiRef, callback, group]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n    return () => {\n      if (cleanup.current) {\n        cleanup.current();\n        cleanup.current = null;\n      }\n    };\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnFieldsSelector, gridColumnDefinitionsSelector, gridColumnLookupSelector, gridColumnsStateSelector, gridColumnVisibilityModelSelector, gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector } from \"./gridColumnsSelector.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridRegisterPipeProcessor, useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { EMPTY_PINNED_COLUMN_FIELDS } from \"./gridColumnsInterfaces.js\";\nimport { hydrateColumnsWidth, createColumnsState, COLUMNS_DIMENSION_PROPERTIES } from \"./gridColumnsUtils.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const columnsStateInitializer = (state, props, apiRef) => {\n  const columnsState = createColumnsState({\n    apiRef,\n    columnsToUpsert: props.columns,\n    initialState: props.initialState?.columns,\n    columnVisibilityModel: props.columnVisibilityModel ?? props.initialState?.columns?.columnVisibilityModel ?? {},\n    keepOnlyColumnsToUpsert: true\n  });\n  return _extends({}, state, {\n    columns: columnsState,\n    // In pro/premium, this part of the state is defined. We give it an empty but defined value\n    // for the community version.\n    pinnedColumns: state.pinnedColumns ?? EMPTY_PINNED_COLUMN_FIELDS\n  });\n};\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridDimensions (method, event) - can be after\n * TODO: Impossible priority - useGridParamsApi also needs to be after useGridColumns\n */\nexport function useGridColumns(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useGridColumns');\n  const previousColumnsProp = React.useRef(props.columns);\n  apiRef.current.registerControlState({\n    stateId: 'visibleColumns',\n    propModel: props.columnVisibilityModel,\n    propOnChange: props.onColumnVisibilityModelChange,\n    stateSelector: gridColumnVisibilityModelSelector,\n    changeEvent: 'columnVisibilityModelChange'\n  });\n  const setGridColumnsState = React.useCallback(columnsState => {\n    logger.debug('Updating columns state.');\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    apiRef.current.updateRenderContext?.();\n    apiRef.current.forceUpdate();\n  }, [logger, apiRef]);\n\n  /**\n   * API METHODS\n   */\n  const getColumn = React.useCallback(field => gridColumnLookupSelector(apiRef)[field], [apiRef]);\n  const getAllColumns = React.useCallback(() => gridColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getVisibleColumns = React.useCallback(() => gridVisibleColumnDefinitionsSelector(apiRef), [apiRef]);\n  const getColumnIndex = React.useCallback((field, useVisibleColumns = true) => {\n    const columns = useVisibleColumns ? gridVisibleColumnDefinitionsSelector(apiRef) : gridColumnDefinitionsSelector(apiRef);\n    return columns.findIndex(col => col.field === field);\n  }, [apiRef]);\n  const getColumnPosition = React.useCallback(field => {\n    const index = getColumnIndex(field);\n    return gridColumnPositionsSelector(apiRef)[index];\n  }, [apiRef, getColumnIndex]);\n  const setColumnVisibilityModel = React.useCallback(model => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    if (currentModel !== model) {\n      apiRef.current.setState(state => _extends({}, state, {\n        columns: createColumnsState({\n          apiRef,\n          columnsToUpsert: [],\n          initialState: undefined,\n          columnVisibilityModel: model,\n          keepOnlyColumnsToUpsert: false\n        })\n      }));\n      apiRef.current.updateRenderContext?.();\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef]);\n  const updateColumns = React.useCallback(columns => {\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: columns,\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, setGridColumnsState]);\n  const setColumnVisibility = React.useCallback((field, isVisible) => {\n    const columnVisibilityModel = gridColumnVisibilityModelSelector(apiRef);\n    const isCurrentlyVisible = columnVisibilityModel[field] ?? true;\n    if (isVisible !== isCurrentlyVisible) {\n      const newModel = _extends({}, columnVisibilityModel, {\n        [field]: isVisible\n      });\n      apiRef.current.setColumnVisibilityModel(newModel);\n    }\n  }, [apiRef]);\n  const getColumnIndexRelativeToVisibleColumns = React.useCallback(field => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    return allColumns.findIndex(col => col === field);\n  }, [apiRef]);\n  const setColumnIndex = React.useCallback((field, targetIndexPosition) => {\n    const allColumns = gridColumnFieldsSelector(apiRef);\n    const oldIndexPosition = getColumnIndexRelativeToVisibleColumns(field);\n    if (oldIndexPosition === targetIndexPosition) {\n      return;\n    }\n    logger.debug(`Moving column ${field} to index ${targetIndexPosition}`);\n    const updatedColumns = [...allColumns];\n    const fieldRemoved = updatedColumns.splice(oldIndexPosition, 1)[0];\n    updatedColumns.splice(targetIndexPosition, 0, fieldRemoved);\n    setGridColumnsState(_extends({}, gridColumnsStateSelector(apiRef.current.state), {\n      orderedFields: updatedColumns\n    }));\n    const params = {\n      column: apiRef.current.getColumn(field),\n      targetIndex: apiRef.current.getColumnIndexRelativeToVisibleColumns(field),\n      oldIndex: oldIndexPosition\n    };\n    apiRef.current.publishEvent('columnIndexChange', params);\n  }, [apiRef, logger, setGridColumnsState, getColumnIndexRelativeToVisibleColumns]);\n  const setColumnWidth = React.useCallback((field, width) => {\n    logger.debug(`Updating column ${field} width to ${width}`);\n    const columnsState = gridColumnsStateSelector(apiRef.current.state);\n    const column = columnsState.lookup[field];\n    const newColumn = _extends({}, column, {\n      width,\n      hasBeenResized: true\n    });\n    setGridColumnsState(hydrateColumnsWidth(_extends({}, columnsState, {\n      lookup: _extends({}, columnsState.lookup, {\n        [field]: newColumn\n      })\n    }), apiRef.current.getRootDimensions()));\n    apiRef.current.publishEvent('columnWidthChange', {\n      element: apiRef.current.getColumnHeaderElement(field),\n      colDef: newColumn,\n      width\n    });\n  }, [apiRef, logger, setGridColumnsState]);\n  const columnApi = {\n    getColumn,\n    getAllColumns,\n    getColumnIndex,\n    getColumnPosition,\n    getVisibleColumns,\n    getColumnIndexRelativeToVisibleColumns,\n    updateColumns,\n    setColumnVisibilityModel,\n    setColumnVisibility,\n    setColumnWidth\n  };\n  const columnReorderApi = {\n    setColumnIndex\n  };\n  useGridApiMethod(apiRef, columnApi, 'public');\n  useGridApiMethod(apiRef, columnReorderApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const columnsStateToExport = {};\n    const columnVisibilityModelToExport = gridColumnVisibilityModelSelector(apiRef);\n    const shouldExportColumnVisibilityModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.columnVisibilityModel != null ||\n    // Always export if the model has been initialized\n    // TODO v6 Do a nullish check instead to export even if the initial model equals \"{}\"\n    Object.keys(props.initialState?.columns?.columnVisibilityModel ?? {}).length > 0 ||\n    // Always export if the model is not empty\n    Object.keys(columnVisibilityModelToExport).length > 0;\n    if (shouldExportColumnVisibilityModel) {\n      columnsStateToExport.columnVisibilityModel = columnVisibilityModelToExport;\n    }\n    columnsStateToExport.orderedFields = gridColumnFieldsSelector(apiRef);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const dimensions = {};\n    columns.forEach(colDef => {\n      if (colDef.hasBeenResized) {\n        const colDefDimensions = {};\n        COLUMNS_DIMENSION_PROPERTIES.forEach(propertyName => {\n          let propertyValue = colDef[propertyName];\n          if (propertyValue === Infinity) {\n            propertyValue = -1;\n          }\n          colDefDimensions[propertyName] = propertyValue;\n        });\n        dimensions[colDef.field] = colDefDimensions;\n      }\n    });\n    if (Object.keys(dimensions).length > 0) {\n      columnsStateToExport.dimensions = dimensions;\n    }\n    return _extends({}, prevState, {\n      columns: columnsStateToExport\n    });\n  }, [apiRef, props.columnVisibilityModel, props.initialState?.columns]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const columnVisibilityModelToImport = context.stateToRestore.columns?.columnVisibilityModel;\n    const initialState = context.stateToRestore.columns;\n    if (columnVisibilityModelToImport == null && initialState == null) {\n      return params;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState,\n      columnVisibilityModel: columnVisibilityModelToImport,\n      keepOnlyColumnsToUpsert: false\n    });\n    apiRef.current.setState(mergeColumnsState(columnsState));\n    if (initialState != null) {\n      apiRef.current.publishEvent('columnsChange', columnsState.orderedFields);\n    }\n    return params;\n  }, [apiRef]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.columns) {\n      const ColumnsPanel = props.slots.columnsPanel;\n      return /*#__PURE__*/_jsx(ColumnsPanel, _extends({}, props.slotProps?.columnsPanel));\n    }\n    return initialValue;\n  }, [props.slots.columnsPanel, props.slotProps?.columnsPanel]);\n  const addColumnMenuItems = React.useCallback(columnMenuItems => {\n    if (props.disableColumnSelector) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuColumnsItem'];\n  }, [props.disableColumnSelector]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItems);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n\n  /*\n   * EVENTS\n   */\n\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = size => {\n    if (prevInnerWidth.current !== size.width) {\n      prevInnerWidth.current = size.width;\n      const hasFlexColumns = gridVisibleColumnDefinitionsSelector(apiRef).some(col => col.flex && col.flex > 0);\n      if (!hasFlexColumns) {\n        return;\n      }\n      setGridColumnsState(hydrateColumnsWidth(gridColumnsStateSelector(apiRef.current.state), apiRef.current.getRootDimensions()));\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n\n  /**\n   * APPLIERS\n   */\n  const hydrateColumns = React.useCallback(() => {\n    logger.info(`Columns pipe processing have changed, regenerating the columns`);\n    const columnsState = createColumnsState({\n      apiRef,\n      columnsToUpsert: [],\n      initialState: undefined,\n      keepOnlyColumnsToUpsert: false\n    });\n    setGridColumnsState(columnsState);\n  }, [apiRef, logger, setGridColumnsState]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateColumns', hydrateColumns);\n\n  /*\n   * EFFECTS\n   */\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridColumns`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    logger.info(`GridColumns have changed, new length ${props.columns.length}`);\n    if (previousColumnsProp.current === props.columns) {\n      return;\n    }\n    const columnsState = createColumnsState({\n      apiRef,\n      initialState: undefined,\n      // If the user provides a model, we don't want to set it in the state here because it has it's dedicated `useEffect` which calls `setColumnVisibilityModel`\n      columnsToUpsert: props.columns,\n      keepOnlyColumnsToUpsert: true\n    });\n    previousColumnsProp.current = props.columns;\n    setGridColumnsState(columnsState);\n  }, [logger, apiRef, setGridColumnsState, props.columns]);\n  React.useEffect(() => {\n    if (props.columnVisibilityModel !== undefined) {\n      apiRef.current.setColumnVisibilityModel(props.columnVisibilityModel);\n    }\n  }, [apiRef, logger, props.columnVisibilityModel]);\n}\nfunction mergeColumnsState(columnsState) {\n  return state => _extends({}, state, {\n    columns: columnsState\n  });\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEventCallback from '@mui/utils/useEventCallback';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridDensitySelector } from \"./densitySelector.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nexport const densityStateInitializer = (state, props) => _extends({}, state, {\n  density: props.initialState?.density ?? props.density ?? 'standard'\n});\nexport const useGridDensity = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useDensity');\n  apiRef.current.registerControlState({\n    stateId: 'density',\n    propModel: props.density,\n    propOnChange: props.onDensityChange,\n    stateSelector: gridDensitySelector,\n    changeEvent: 'densityChange'\n  });\n  const setDensity = useEventCallback(newDensity => {\n    const currentDensity = gridDensitySelector(apiRef.current.state);\n    if (currentDensity === newDensity) {\n      return;\n    }\n    logger.debug(`Set grid density to ${newDensity}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: newDensity\n    }));\n  });\n  const densityApi = {\n    setDensity\n  };\n  useGridApiMethod(apiRef, densityApi, 'public');\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedDensity = gridDensitySelector(apiRef.current.state);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `density` is controlled\n    props.density != null ||\n    // Always export if the `density` has been initialized\n    props.initialState?.density != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      density: exportedDensity\n    });\n  }, [apiRef, props.density, props.initialState?.density]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredDensity = context.stateToRestore?.density ? context.stateToRestore.density : gridDensitySelector(apiRef.current.state);\n    apiRef.current.setState(state => _extends({}, state, {\n      density: restoredDensity\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  React.useEffect(() => {\n    if (props.density) {\n      apiRef.current.setDensity(props.density);\n    }\n  }, [apiRef, props.density]);\n};","import { gridColumnDefinitionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridFilteredSortedRowIdsSelector } from \"../filter/index.js\";\nimport { gridPinnedRowsSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nexport const getColumnsToExport = ({\n  apiRef,\n  options\n}) => {\n  const columns = gridColumnDefinitionsSelector(apiRef);\n  if (options.fields) {\n    return options.fields.reduce((currentColumns, field) => {\n      const column = columns.find(col => col.field === field);\n      if (column) {\n        currentColumns.push(column);\n      }\n      return currentColumns;\n    }, []);\n  }\n  const validColumns = options.allColumns ? columns : gridVisibleColumnDefinitionsSelector(apiRef);\n  return validColumns.filter(column => !column.disableExport);\n};\nexport const defaultGetRowsToExport = ({\n  apiRef\n}) => {\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  const rowTree = gridRowTreeSelector(apiRef);\n  const selectedRows = apiRef.current.getSelectedRows();\n  const bodyRows = filteredSortedRowIds.filter(id => rowTree[id].type !== 'footer');\n  const pinnedRows = gridPinnedRowsSelector(apiRef);\n  const topPinnedRowsIds = pinnedRows?.top?.map(row => row.id) || [];\n  const bottomPinnedRowsIds = pinnedRows?.bottom?.map(row => row.id) || [];\n  bodyRows.unshift(...topPinnedRowsIds);\n  bodyRows.push(...bottomPinnedRowsIds);\n  if (selectedRows.size > 0) {\n    return bodyRows.filter(id => selectedRows.has(id));\n  }\n  return bodyRows;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { isHideMenuKey } from \"../../utils/keyboardUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbarExportContainer = forwardRef(function GridToolbarExportContainer(props, ref) {\n  const {\n    children,\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const exportButtonId = useId();\n  const exportMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const handleMenuOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    buttonProps.onClick?.(event);\n  };\n  const handleMenuClose = () => setOpen(false);\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      handleMenuClose();\n    }\n  };\n  if (children == null) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('toolbarExportLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, tooltipProps, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        size: \"small\",\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.exportIcon, {}),\n        \"aria-expanded\": open,\n        \"aria-label\": apiRef.current.getLocaleText('toolbarExportLabel'),\n        \"aria-haspopup\": \"menu\",\n        \"aria-controls\": open ? exportMenuId : undefined,\n        id: exportButtonId\n      }, rootProps.slotProps?.baseButton, buttonProps, {\n        onClick: handleMenuOpen,\n        ref: handleRef,\n        children: apiRef.current.getLocaleText('toolbarExport')\n      }))\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleMenuClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: exportMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": exportButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: React.Children.map(children, child => {\n          if (! /*#__PURE__*/React.isValidElement(child)) {\n            return child;\n          }\n          return /*#__PURE__*/React.cloneElement(child, {\n            hideMenu: handleMenuClose\n          });\n        })\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExportContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExportContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"options\"],\n  _excluded2 = [\"hideMenu\", \"options\"],\n  _excluded3 = [\"csvOptions\", \"printOptions\", \"excelOptions\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { GridToolbarExportContainer } from \"./GridToolbarExportContainer.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridCsvExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsCsv(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportCSV')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridCsvExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    delimiter: PropTypes.string,\n    disableToolbarButton: PropTypes.bool,\n    escapeFormulas: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    includeColumnGroupsHeaders: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    shouldAppendQuotes: PropTypes.bool,\n    utf8WithBom: PropTypes.bool\n  })\n} : void 0;\nfunction GridPrintExportMenuItem(props) {\n  const apiRef = useGridApiContext();\n  const {\n      hideMenu,\n      options\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  return /*#__PURE__*/_jsx(MenuItem, _extends({\n    onClick: () => {\n      apiRef.current.exportDataAsPrint(options);\n      hideMenu?.();\n    }\n  }, other, {\n    children: apiRef.current.getLocaleText('toolbarExportPrint')\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPrintExportMenuItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  hideMenu: PropTypes.func,\n  options: PropTypes.shape({\n    allColumns: PropTypes.bool,\n    bodyClassName: PropTypes.string,\n    copyStyles: PropTypes.bool,\n    disableToolbarButton: PropTypes.bool,\n    fields: PropTypes.arrayOf(PropTypes.string),\n    fileName: PropTypes.string,\n    getRowsToExport: PropTypes.func,\n    hideFooter: PropTypes.bool,\n    hideToolbar: PropTypes.bool,\n    includeCheckboxes: PropTypes.bool,\n    pageStyle: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n  })\n} : void 0;\nconst GridToolbarExport = forwardRef(function GridToolbarExport(props, ref) {\n  const _ref = props,\n    {\n      csvOptions = {},\n      printOptions = {},\n      excelOptions\n    } = _ref,\n    other = _objectWithoutPropertiesLoose(_ref, _excluded3);\n  const apiRef = useGridApiContext();\n  const preProcessedButtons = apiRef.current.unstable_applyPipeProcessors('exportMenu', [], {\n    excelOptions,\n    csvOptions,\n    printOptions\n  }).sort((a, b) => a.componentName > b.componentName ? 1 : -1);\n  if (preProcessedButtons.length === 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarExportContainer, _extends({}, other, {\n    ref: ref,\n    children: preProcessedButtons.map((button, index) => /*#__PURE__*/React.cloneElement(button.component, {\n      key: index\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarExport.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarExport, GridCsvExportMenuItem, GridPrintExportMenuItem };","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { exportAs } from \"../../../utils/exportAs.js\";\nimport { buildCSV } from \"./serializers/csvSerializer.js\";\nimport { getColumnsToExport, defaultGetRowsToExport } from \"./utils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridCsvExportMenuItem } from \"../../../components/toolbar/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridSelection (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridCsvExport = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridCsvExport');\n  const ignoreValueFormatterProp = props.ignoreValueFormatterDuringExport;\n  const ignoreValueFormatter = (typeof ignoreValueFormatterProp === 'object' ? ignoreValueFormatterProp?.csvExport : ignoreValueFormatterProp) || false;\n  const getDataAsCsv = React.useCallback((options = {}) => {\n    logger.debug(`Get data as CSV`);\n    const exportedColumns = getColumnsToExport({\n      apiRef,\n      options\n    });\n    const getRowsToExport = options.getRowsToExport ?? defaultGetRowsToExport;\n    const exportedRowIds = getRowsToExport({\n      apiRef\n    });\n    return buildCSV({\n      columns: exportedColumns,\n      rowIds: exportedRowIds,\n      csvOptions: {\n        delimiter: options.delimiter || ',',\n        shouldAppendQuotes: options.shouldAppendQuotes ?? true,\n        includeHeaders: options.includeHeaders ?? true,\n        includeColumnGroupsHeaders: options.includeColumnGroupsHeaders ?? true,\n        escapeFormulas: options.escapeFormulas ?? true\n      },\n      ignoreValueFormatter,\n      apiRef\n    });\n  }, [logger, apiRef, ignoreValueFormatter]);\n  const exportDataAsCsv = React.useCallback(options => {\n    logger.debug(`Export data as CSV`);\n    const csv = getDataAsCsv(options);\n    const blob = new Blob([options?.utf8WithBom ? new Uint8Array([0xef, 0xbb, 0xbf]) : '', csv], {\n      type: 'text/csv'\n    });\n    exportAs(blob, 'csv', options?.fileName);\n  }, [logger, getDataAsCsv]);\n  const csvExportApi = {\n    getDataAsCsv,\n    exportDataAsCsv\n  };\n  useGridApiMethod(apiRef, csvExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.csvOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridCsvExportMenuItem, {\n        options: options.csvOptions\n      }),\n      componentName: 'csvExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","/**\n * I have hesitated to use https://github.com/eligrey/FileSaver.js.\n * If we get bug reports that this project solves, we should consider using it.\n *\n * Related resources.\n * https://blog.logrocket.com/programmatic-file-downloads-in-the-browser-9a5186298d5c/\n * https://github.com/mbrn/filefy/blob/ec4ed0b7415d93be7158c23029f2ea1fa0b8e2d9/src/core/BaseBuilder.ts\n * https://unpkg.com/browse/@progress/kendo-file-saver@1.0.7/dist/es/save-as.js\n * https://github.com/ag-grid/ag-grid/blob/9565c219b6210aa85fa833c929d0728f9d163a91/community-modules/csv-export/src/csvExport/downloader.ts\n */\n\nexport function exportAs(blob, extension = 'csv', filename = document.title || 'untitled') {\n  const fullName = `${filename}.${extension}`;\n\n  // Test download attribute first\n  // https://github.com/eligrey/FileSaver.js/issues/193\n  if ('download' in HTMLAnchorElement.prototype) {\n    // Create an object URL for the blob object\n    const url = URL.createObjectURL(blob);\n\n    // Create a new anchor element\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = fullName;\n\n    // Programmatically trigger a click on the anchor element\n    // Useful if you want the download to happen automatically\n    // Without attaching the anchor element to the DOM\n    a.click();\n\n    // https://github.com/eligrey/FileSaver.js/issues/205\n    setTimeout(() => {\n      URL.revokeObjectURL(url);\n    });\n    return;\n  }\n  throw new Error('MUI X: exportAs not supported.');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { gridFilterModelSelector, gridFilterActiveItemsSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { isDeepEqual, runIf } from \"../../../utils/utils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPageCountSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nimport { getPageCount, defaultPageSize, throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel, getValidPage } from \"./gridPaginationUtils.js\";\nexport const getDerivedPaginationModel = (paginationState, signature, paginationModelProp) => {\n  let paginationModel = paginationState.paginationModel;\n  const rowCount = paginationState.rowCount;\n  const pageSize = paginationModelProp?.pageSize ?? paginationModel.pageSize;\n  const page = paginationModelProp?.page ?? paginationModel.page;\n  const pageCount = getPageCount(rowCount, pageSize, page);\n  if (paginationModelProp && (paginationModelProp?.page !== paginationModel.page || paginationModelProp?.pageSize !== paginationModel.pageSize)) {\n    paginationModel = paginationModelProp;\n  }\n  const validPage = getValidPage(paginationModel.page, pageCount);\n  if (validPage !== paginationModel.page) {\n    paginationModel = _extends({}, paginationModel, {\n      page: validPage\n    });\n  }\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, signature);\n  return paginationModel;\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPaginationModel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationModel');\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const previousFilterModel = React.useRef(gridFilterModelSelector(apiRef));\n  const rowHeight = Math.floor(props.rowHeight * densityFactor);\n  apiRef.current.registerControlState({\n    stateId: 'paginationModel',\n    propModel: props.paginationModel,\n    propOnChange: props.onPaginationModelChange,\n    stateSelector: gridPaginationModelSelector,\n    changeEvent: 'paginationModelChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPage = React.useCallback(page => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (page === currentModel.page) {\n      return;\n    }\n    logger.debug(`Setting page to ${page}`);\n    apiRef.current.setPaginationModel({\n      page,\n      pageSize: currentModel.pageSize\n    });\n  }, [apiRef, logger]);\n  const setPageSize = React.useCallback(pageSize => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (pageSize === currentModel.pageSize) {\n      return;\n    }\n    logger.debug(`Setting page size to ${pageSize}`);\n    apiRef.current.setPaginationModel({\n      pageSize,\n      page: currentModel.page\n    });\n  }, [apiRef, logger]);\n  const setPaginationModel = React.useCallback(paginationModel => {\n    const currentModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel === currentModel) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationModel' to\", paginationModel);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }), 'setPaginationModel');\n  }, [apiRef, logger, props.signature]);\n  const paginationModelApi = {\n    setPage,\n    setPageSize,\n    setPaginationModel\n  };\n  useGridApiMethod(apiRef, paginationModelApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    const shouldExportPaginationModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationModel` is controlled\n    props.paginationModel != null ||\n    // Always export if the `paginationModel` has been initialized\n    props.initialState?.pagination?.paginationModel != null ||\n    // Export if `page` or `pageSize` is not equal to the default value\n    paginationModel.page !== 0 && paginationModel.pageSize !== defaultPageSize(props.autoPageSize);\n    if (!shouldExportPaginationModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        paginationModel\n      })\n    });\n  }, [apiRef, props.paginationModel, props.initialState?.pagination?.paginationModel, props.autoPageSize]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const paginationModel = context.stateToRestore.pagination?.paginationModel ? _extends({}, getDefaultGridPaginationModel(props.autoPageSize), context.stateToRestore.pagination?.paginationModel) : gridPaginationModelSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, paginationModel)\n      })\n    }), 'stateRestorePreProcessing');\n    return params;\n  }, [apiRef, props.autoPageSize, props.signature]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = () => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (apiRef.current.virtualScrollerRef?.current) {\n      apiRef.current.scrollToIndexes({\n        rowIndex: paginationModel.page * paginationModel.pageSize\n      });\n    }\n  };\n  const handleUpdateAutoPageSize = React.useCallback(() => {\n    if (!props.autoPageSize) {\n      return;\n    }\n    const dimensions = apiRef.current.getRootDimensions();\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    apiRef.current.setPageSize(maximumPageSizeWithoutScrollBar);\n  }, [apiRef, props.autoPageSize, rowHeight]);\n  const handleRowCountChange = React.useCallback(newRowCount => {\n    if (newRowCount == null) {\n      return;\n    }\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel.page === 0) {\n      return;\n    }\n    const pageCount = gridPageCountSelector(apiRef);\n    if (paginationModel.page > pageCount - 1) {\n      apiRef.current.setPage(Math.max(0, pageCount - 1));\n    }\n  }, [apiRef]);\n\n  /**\n   * Goes to the first row of the grid\n   */\n  const navigateToStart = React.useCallback(() => {\n    const paginationModel = gridPaginationModelSelector(apiRef);\n    if (paginationModel.page !== 0) {\n      apiRef.current.setPage(0);\n    }\n\n    // If the page was not changed it might be needed to scroll to the top\n    const scrollPosition = apiRef.current.getScrollPosition();\n    if (scrollPosition.top !== 0) {\n      apiRef.current.scroll({\n        top: 0\n      });\n    }\n  }, [apiRef]);\n\n  /**\n   * Resets the page only if the active items or quick filter has changed from the last time.\n   * This is to avoid resetting the page when the filter model is changed\n   * because of and update of the operator from an item that does not have the value\n   * or reseting when the filter panel is just opened\n   */\n  const handleFilterModelChange = React.useCallback(filterModel => {\n    const currentActiveFilters = _extends({}, filterModel, {\n      // replace items with the active items\n      items: gridFilterActiveItemsSelector(apiRef)\n    });\n    if (isDeepEqual(currentActiveFilters, previousFilterModel.current)) {\n      return;\n    }\n    previousFilterModel.current = currentActiveFilters;\n    navigateToStart();\n  }, [apiRef, navigateToStart]);\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleUpdateAutoPageSize);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n  useGridApiEventHandler(apiRef, 'rowCountChange', handleRowCountChange);\n  useGridApiEventHandler(apiRef, 'sortModelChange', runIf(props.resetPageOnSortFilter, navigateToStart));\n  useGridApiEventHandler(apiRef, 'filterModelChange', runIf(props.resetPageOnSortFilter, handleFilterModelChange));\n\n  /**\n   * EFFECTS\n   */\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    if (!props.pagination) {\n      return;\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        paginationModel: getDerivedPaginationModel(state.pagination, props.signature, props.paginationModel)\n      })\n    }));\n  }, [apiRef, props.paginationModel, props.signature, props.pagination]);\n  React.useEffect(() => {\n    apiRef.current.setState(state => {\n      const isEnabled = props.pagination === true;\n      if (state.pagination.paginationMode === props.paginationMode || state.pagination.enabled === isEnabled) {\n        return state;\n      }\n      return _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationMode: props.paginationMode,\n          enabled: props.pagination === true\n        })\n      });\n    });\n  }, [apiRef, props.paginationMode, props.pagination]);\n  React.useEffect(handleUpdateAutoPageSize, [handleUpdateAutoPageSize]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument } from '@mui/utils';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridExpandedRowCountSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { GRID_ID_AUTOGENERATED } from \"../rows/gridRowsUtils.js\";\nimport { defaultGetRowsToExport, getColumnsToExport } from \"./utils.js\";\nimport { getDerivedPaginationModel } from \"../pagination/useGridPaginationModel.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GridPrintExportMenuItem } from \"../../../components/toolbar/index.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction raf() {\n  return new Promise(resolve => {\n    requestAnimationFrame(() => {\n      resolve();\n    });\n  });\n}\nfunction buildPrintWindow(title) {\n  const iframeEl = document.createElement('iframe');\n  iframeEl.style.position = 'absolute';\n  iframeEl.style.width = '0px';\n  iframeEl.style.height = '0px';\n  iframeEl.title = title || document.title;\n  return iframeEl;\n}\n\n/**\n * @requires useGridColumns (state)\n * @requires useGridFilter (state)\n * @requires useGridSorting (state)\n * @requires useGridParamsApi (method)\n */\nexport const useGridPrintExport = (apiRef, props) => {\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const logger = useGridLogger(apiRef, 'useGridPrintExport');\n  const doc = React.useRef(null);\n  const previousGridState = React.useRef(null);\n  const previousColumnVisibility = React.useRef({});\n  const previousRows = React.useRef([]);\n  const previousVirtualizationState = React.useRef(null);\n  React.useEffect(() => {\n    doc.current = ownerDocument(apiRef.current.rootElementRef.current);\n  }, [apiRef, hasRootReference]);\n\n  // Returns a promise because updateColumns triggers state update and\n  // the new state needs to be in place before the grid can be sized correctly\n  const updateGridColumnsForPrint = React.useCallback((fields, allColumns, includeCheckboxes) => new Promise(resolve => {\n    const exportedColumnFields = getColumnsToExport({\n      apiRef,\n      options: {\n        fields,\n        allColumns\n      }\n    }).map(column => column.field);\n    const columns = gridColumnDefinitionsSelector(apiRef);\n    const newColumnVisibilityModel = {};\n    columns.forEach(column => {\n      newColumnVisibilityModel[column.field] = exportedColumnFields.includes(column.field);\n    });\n    if (includeCheckboxes) {\n      newColumnVisibilityModel[GRID_CHECKBOX_SELECTION_COL_DEF.field] = true;\n    }\n    apiRef.current.setColumnVisibilityModel(newColumnVisibilityModel);\n    resolve();\n  }), [apiRef]);\n  const updateGridRowsForPrint = React.useCallback(getRowsToExport => {\n    const rowsToExportIds = getRowsToExport({\n      apiRef\n    });\n    const newRows = rowsToExportIds.reduce((acc, id) => {\n      const row = apiRef.current.getRow(id);\n      if (!row[GRID_ID_AUTOGENERATED]) {\n        acc.push(row);\n      }\n      return acc;\n    }, []);\n    apiRef.current.setRows(newRows);\n  }, [apiRef]);\n  const handlePrintWindowLoad = React.useCallback((printWindow, options) => {\n    const normalizeOptions = _extends({\n      copyStyles: true,\n      hideToolbar: false,\n      hideFooter: false,\n      includeCheckboxes: false\n    }, options);\n    const printDoc = printWindow.contentDocument;\n    if (!printDoc) {\n      return;\n    }\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const gridRootElement = apiRef.current.rootElementRef.current;\n    const gridClone = gridRootElement.cloneNode(true);\n\n    // Allow to overflow to not hide the border of the last row\n    const gridMain = gridClone.querySelector(`.${gridClasses.main}`);\n    gridMain.style.overflow = 'visible';\n\n    // See https://support.google.com/chrome/thread/191619088?hl=en&msgid=193009642\n    gridClone.style.contain = 'size';\n    let gridToolbarElementHeight = gridRootElement.querySelector(`.${gridClasses.toolbarContainer}`)?.offsetHeight || 0;\n    let gridFooterElementHeight = gridRootElement.querySelector(`.${gridClasses.footerContainer}`)?.offsetHeight || 0;\n    if (normalizeOptions.hideToolbar) {\n      gridClone.querySelector(`.${gridClasses.toolbarContainer}`)?.remove();\n      gridToolbarElementHeight = 0;\n    }\n    if (normalizeOptions.hideFooter) {\n      gridClone.querySelector(`.${gridClasses.footerContainer}`)?.remove();\n      gridFooterElementHeight = 0;\n    }\n\n    // Expand container height to accommodate all rows\n    const computedTotalHeight = rowsMeta.currentPageTotalHeight + getTotalHeaderHeight(apiRef, props) + gridToolbarElementHeight + gridFooterElementHeight;\n    gridClone.style.height = `${computedTotalHeight}px`;\n    // The height above does not include grid border width, so we need to exclude it\n    gridClone.style.boxSizing = 'content-box';\n    if (!normalizeOptions.hideFooter) {\n      // the footer is always being placed at the bottom of the page as if all rows are exported\n      // so if getRowsToExport is being used to only export a subset of rows then we need to\n      // adjust the footer position to be correctly placed at the bottom of the grid\n      const gridFooterElement = gridClone.querySelector(`.${gridClasses.footerContainer}`);\n      gridFooterElement.style.position = 'absolute';\n      gridFooterElement.style.width = '100%';\n      gridFooterElement.style.top = `${computedTotalHeight - gridFooterElementHeight}px`;\n    }\n\n    // printDoc.body.appendChild(gridClone); should be enough but a clone isolation bug in Safari\n    // prevents us to do it\n    const container = document.createElement('div');\n    container.appendChild(gridClone);\n    // To avoid an empty page in start on Chromium based browsers\n    printDoc.body.style.marginTop = '0px';\n    printDoc.body.innerHTML = container.innerHTML;\n    const defaultPageStyle = typeof normalizeOptions.pageStyle === 'function' ? normalizeOptions.pageStyle() : normalizeOptions.pageStyle;\n    if (typeof defaultPageStyle === 'string') {\n      // TODO custom styles should always win\n      const styleElement = printDoc.createElement('style');\n      styleElement.appendChild(printDoc.createTextNode(defaultPageStyle));\n      printDoc.head.appendChild(styleElement);\n    }\n    if (normalizeOptions.bodyClassName) {\n      printDoc.body.classList.add(...normalizeOptions.bodyClassName.split(' '));\n    }\n    const stylesheetLoadPromises = [];\n    if (normalizeOptions.copyStyles) {\n      const rootCandidate = gridRootElement.getRootNode();\n      const root = rootCandidate.constructor.name === 'ShadowRoot' ? rootCandidate : doc.current;\n      const headStyleElements = root.querySelectorAll(\"style, link[rel='stylesheet']\");\n      for (let i = 0; i < headStyleElements.length; i += 1) {\n        const node = headStyleElements[i];\n        if (node.tagName === 'STYLE') {\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          const sheet = node.sheet;\n          if (sheet) {\n            let styleCSS = '';\n            // NOTE: for-of is not supported by IE\n            for (let j = 0; j < sheet.cssRules.length; j += 1) {\n              if (typeof sheet.cssRules[j].cssText === 'string') {\n                styleCSS += `${sheet.cssRules[j].cssText}\\r\\n`;\n              }\n            }\n            newHeadStyleElements.appendChild(printDoc.createTextNode(styleCSS));\n            printDoc.head.appendChild(newHeadStyleElements);\n          }\n        } else if (node.getAttribute('href')) {\n          // If `href` tag is empty, avoid loading these links\n\n          const newHeadStyleElements = printDoc.createElement(node.tagName);\n          for (let j = 0; j < node.attributes.length; j += 1) {\n            const attr = node.attributes[j];\n            if (attr) {\n              newHeadStyleElements.setAttribute(attr.nodeName, attr.nodeValue || '');\n            }\n          }\n          stylesheetLoadPromises.push(new Promise(resolve => {\n            newHeadStyleElements.addEventListener('load', () => resolve());\n          }));\n          printDoc.head.appendChild(newHeadStyleElements);\n        }\n      }\n    }\n\n    // Trigger print\n    if (process.env.NODE_ENV !== 'test') {\n      // wait for remote stylesheets to load\n      Promise.all(stylesheetLoadPromises).then(() => {\n        printWindow.contentWindow.print();\n      });\n    }\n  }, [apiRef, doc, props]);\n  const handlePrintWindowAfterPrint = React.useCallback(printWindow => {\n    // Remove the print iframe\n    doc.current.body.removeChild(printWindow);\n\n    // Revert grid to previous state\n    apiRef.current.restoreState(previousGridState.current || {});\n    if (!previousGridState.current?.columns?.columnVisibilityModel) {\n      // if the apiRef.current.exportState(); did not exported the column visibility, we update it\n      apiRef.current.setColumnVisibilityModel(previousColumnVisibility.current);\n    }\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: previousVirtualizationState.current\n    }));\n    apiRef.current.setRows(previousRows.current);\n\n    // Clear local state\n    previousGridState.current = null;\n    previousColumnVisibility.current = {};\n    previousRows.current = [];\n  }, [apiRef]);\n  const exportDataAsPrint = React.useCallback(async options => {\n    logger.debug(`Export data as Print`);\n    if (!apiRef.current.rootElementRef.current) {\n      throw new Error('MUI X: No grid root element available.');\n    }\n    previousGridState.current = apiRef.current.exportState();\n    // It appends that the visibility model is not exported, especially if columnVisibility is not controlled\n    previousColumnVisibility.current = gridColumnVisibilityModelSelector(apiRef);\n    previousRows.current = apiRef.current.getSortedRows().filter(row => !row[GRID_ID_AUTOGENERATED]);\n    if (props.pagination) {\n      const visibleRowCount = gridExpandedRowCountSelector(apiRef);\n      const paginationModel = {\n        page: 0,\n        pageSize: visibleRowCount\n      };\n      apiRef.current.setState(state => _extends({}, state, {\n        pagination: _extends({}, state.pagination, {\n          paginationModel: getDerivedPaginationModel(state.pagination,\n          // Using signature `DataGridPro` to allow more than 100 rows in the print export\n          'DataGridPro', paginationModel)\n        })\n      }));\n    }\n    previousVirtualizationState.current = apiRef.current.state.virtualization;\n    apiRef.current.setState(state => _extends({}, state, {\n      virtualization: _extends({}, state.virtualization, {\n        enabled: false,\n        enabledForColumns: false\n      })\n    }));\n    await updateGridColumnsForPrint(options?.fields, options?.allColumns, options?.includeCheckboxes);\n    updateGridRowsForPrint(options?.getRowsToExport ?? defaultGetRowsToExport);\n    await raf(); // wait for the state changes to take action\n    const printWindow = buildPrintWindow(options?.fileName);\n    if (process.env.NODE_ENV === 'test') {\n      doc.current.body.appendChild(printWindow);\n      // In test env, run the all pipeline without waiting for loading\n      handlePrintWindowLoad(printWindow, options);\n      handlePrintWindowAfterPrint(printWindow);\n    } else {\n      printWindow.onload = () => {\n        handlePrintWindowLoad(printWindow, options);\n        const mediaQueryList = printWindow.contentWindow.matchMedia('print');\n        mediaQueryList.addEventListener('change', mql => {\n          const isAfterPrint = mql.matches === false;\n          if (isAfterPrint) {\n            handlePrintWindowAfterPrint(printWindow);\n          }\n        });\n      };\n      doc.current.body.appendChild(printWindow);\n    }\n  }, [props, logger, apiRef, handlePrintWindowLoad, handlePrintWindowAfterPrint, updateGridColumnsForPrint, updateGridRowsForPrint]);\n  const printExportApi = {\n    exportDataAsPrint\n  };\n  useGridApiMethod(apiRef, printExportApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const addExportMenuButtons = React.useCallback((initialValue, options) => {\n    if (options.printOptions?.disableToolbarButton) {\n      return initialValue;\n    }\n    return [...initialValue, {\n      component: /*#__PURE__*/_jsx(GridPrintExportMenuItem, {\n        options: options.printOptions\n      }),\n      componentName: 'printExport'\n    }];\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'exportMenu', addExportMenuButtons);\n};","import * as React from 'react';\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nexport const useGridRegisterStrategyProcessor = (apiRef, strategyName, group, processor) => {\n  const registerPreProcessor = React.useCallback(() => {\n    apiRef.current.registerStrategyProcessor(strategyName, group, processor);\n  }, [apiRef, processor, group, strategyName]);\n  useFirstRender(() => {\n    registerPreProcessor();\n  });\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n    } else {\n      registerPreProcessor();\n    }\n  }, [registerPreProcessor]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { lruMemoize } from 'reselect';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useLazyRef } from \"../../utils/useLazyRef.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { GridPreferencePanelsValue } from \"../preferencesPanel/gridPreferencePanelsValue.js\";\nimport { defaultGridFilterLookup, getDefaultGridFilterModel } from \"./gridFilterState.js\";\nimport { gridFilterModelSelector } from \"./gridFilterSelector.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { gridRowsLookupSelector } from \"../rows/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedFilterApplier, sanitizeFilterModel, mergeStateWithFilterModel, cleanFilterItem, passFilterLogic, shouldQuickFilterExcludeHiddenColumns } from \"./gridFilterUtils.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const filterStateInitializer = (state, props, apiRef) => {\n  const filterModel = props.filterModel ?? props.initialState?.filter?.filterModel ?? getDefaultGridFilterModel();\n  return _extends({}, state, {\n    filter: _extends({\n      filterModel: sanitizeFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef)\n    }, defaultGridFilterLookup),\n    visibleRowsLookup: {}\n  });\n};\nconst getVisibleRowsLookup = params => {\n  // For flat tree, the `visibleRowsLookup` and the `filteredRowsLookup` are equals since no row is collapsed.\n  return params.filteredRowsLookup;\n};\nfunction getVisibleRowsLookupState(apiRef, state) {\n  return apiRef.current.applyStrategyProcessor('visibleRowsLookupCreation', {\n    tree: state.rows.tree,\n    filteredRowsLookup: state.filter.filteredRowsLookup\n  });\n}\nfunction createMemoizedValues() {\n  return lruMemoize(Object.values);\n}\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n * @requires useGridRows (event)\n */\nexport const useGridFilter = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFilter');\n  apiRef.current.registerControlState({\n    stateId: 'filter',\n    propModel: props.filterModel,\n    propOnChange: props.onFilterModelChange,\n    stateSelector: gridFilterModelSelector,\n    changeEvent: 'filterModelChange'\n  });\n  const updateFilteredRows = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const filterModel = gridFilterModelSelector(state, apiRef.current.instanceId);\n      const filterState = apiRef.current.getFilterState(filterModel);\n      const newState = _extends({}, state, {\n        filter: _extends({}, state.filter, filterState)\n      });\n      const visibleRowsLookupState = getVisibleRowsLookupState(apiRef, newState);\n      return _extends({}, newState, {\n        visibleRowsLookup: visibleRowsLookupState\n      });\n    });\n    apiRef.current.publishEvent('filteredRowsSet');\n  }, [apiRef]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.filterable === false || props.disableColumnFilter) {\n      return columnMenuItems;\n    }\n    return [...columnMenuItems, 'columnMenuFilterItem'];\n  }, [props.disableColumnFilter]);\n\n  /**\n   * API METHODS\n   */\n  const applyFilters = React.useCallback(() => {\n    updateFilteredRows();\n    apiRef.current.forceUpdate();\n  }, [apiRef, updateFilteredRows]);\n  const upsertFilterItem = React.useCallback(item => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = [...filterModel.items];\n    const itemIndex = items.findIndex(filterItem => filterItem.id === item.id);\n    if (itemIndex === -1) {\n      items.push(item);\n    } else {\n      items[itemIndex] = item;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'upsertFilterItem');\n  }, [apiRef]);\n  const upsertFilterItems = React.useCallback(items => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const existingItems = [...filterModel.items];\n    items.forEach(item => {\n      const itemIndex = existingItems.findIndex(filterItem => filterItem.id === item.id);\n      if (itemIndex === -1) {\n        existingItems.push(item);\n      } else {\n        existingItems[itemIndex] = item;\n      }\n    });\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: existingItems\n    }), 'upsertFilterItems');\n  }, [apiRef]);\n  const deleteFilterItem = React.useCallback(itemToDelete => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    const items = filterModel.items.filter(item => item.id !== itemToDelete.id);\n    if (items.length === filterModel.items.length) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items\n    }), 'deleteFilterItem');\n  }, [apiRef]);\n  const showFilterPanel = React.useCallback((targetColumnField, panelId, labelId) => {\n    logger.debug('Displaying filter panel');\n    if (targetColumnField) {\n      const filterModel = gridFilterModelSelector(apiRef);\n      const filterItemsWithValue = filterModel.items.filter(item => {\n        if (item.value !== undefined) {\n          // Some filters like `isAnyOf` support array as `item.value`.\n          // If array is empty, we want to remove it from the filter model.\n          if (Array.isArray(item.value) && item.value.length === 0) {\n            return false;\n          }\n          return true;\n        }\n        const column = apiRef.current.getColumn(item.field);\n        const filterOperator = column.filterOperators?.find(operator => operator.value === item.operator);\n        const requiresFilterValue = typeof filterOperator?.requiresFilterValue === 'undefined' ? true : filterOperator?.requiresFilterValue;\n\n        // Operators like `isEmpty` don't have and don't require `item.value`.\n        // So we don't want to remove them from the filter model if `item.value === undefined`.\n        // See https://github.com/mui/mui-x/issues/5402\n        if (requiresFilterValue) {\n          return false;\n        }\n        return true;\n      });\n      let newFilterItems;\n      const filterItemOnTarget = filterItemsWithValue.find(item => item.field === targetColumnField);\n      const targetColumn = apiRef.current.getColumn(targetColumnField);\n      if (filterItemOnTarget) {\n        newFilterItems = filterItemsWithValue;\n      } else if (props.disableMultipleColumnsFiltering) {\n        newFilterItems = [cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      } else {\n        newFilterItems = [...filterItemsWithValue, cleanFilterItem({\n          field: targetColumnField,\n          operator: targetColumn.filterOperators[0].value\n        }, apiRef)];\n      }\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n    apiRef.current.showPreferences(GridPreferencePanelsValue.filters, panelId, labelId);\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const hideFilterPanel = React.useCallback(() => {\n    logger.debug('Hiding filter panel');\n    apiRef.current.hidePreferences();\n  }, [apiRef, logger]);\n  const setFilterLogicOperator = React.useCallback(logicOperator => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.logicOperator === logicOperator) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      logicOperator\n    }), 'changeLogicOperator');\n  }, [apiRef]);\n  const setQuickFilterValues = React.useCallback(values => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (isDeepEqual(filterModel.quickFilterValues, values)) {\n      return;\n    }\n    apiRef.current.setFilterModel(_extends({}, filterModel, {\n      quickFilterValues: [...values]\n    }));\n  }, [apiRef]);\n  const setFilterModel = React.useCallback((model, reason) => {\n    const currentModel = gridFilterModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug('Setting filter model');\n      apiRef.current.updateControlState('filter', mergeStateWithFilterModel(model, props.disableMultipleColumnsFiltering, apiRef), reason);\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsFiltering]);\n  const getFilterState = React.useCallback(inputFilterModel => {\n    const filterModel = sanitizeFilterModel(inputFilterModel, props.disableMultipleColumnsFiltering, apiRef);\n    const isRowMatchingFilters = props.filterMode === 'client' ? buildAggregatedFilterApplier(filterModel, apiRef, props.disableEval) : null;\n    const filterResult = apiRef.current.applyStrategyProcessor('filtering', {\n      isRowMatchingFilters,\n      filterModel: filterModel ?? getDefaultGridFilterModel()\n    });\n    return _extends({}, filterResult, {\n      filterModel\n    });\n  }, [props.disableMultipleColumnsFiltering, props.filterMode, props.disableEval, apiRef]);\n  const filterApi = {\n    setFilterLogicOperator,\n    unstable_applyFilters: applyFilters,\n    deleteFilterItem,\n    upsertFilterItem,\n    upsertFilterItems,\n    setFilterModel,\n    showFilterPanel,\n    hideFilterPanel,\n    setQuickFilterValues,\n    ignoreDiacritics: props.ignoreDiacritics,\n    getFilterState\n  };\n  useGridApiMethod(apiRef, filterApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const filterModelToExport = gridFilterModelSelector(apiRef);\n    const shouldExportFilterModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.filterModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.filter?.filterModel != null ||\n    // Export if the model is not equal to the default value\n    !isDeepEqual(filterModelToExport, getDefaultGridFilterModel());\n    if (!shouldExportFilterModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      filter: {\n        filterModel: filterModelToExport\n      }\n    });\n  }, [apiRef, props.filterModel, props.initialState?.filter?.filterModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const filterModel = context.stateToRestore.filter?.filterModel;\n    if (filterModel == null) {\n      return params;\n    }\n    apiRef.current.updateControlState('filter', mergeStateWithFilterModel(filterModel, props.disableMultipleColumnsFiltering, apiRef), 'restoreState');\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.unstable_applyFilters]\n    });\n  }, [apiRef, props.disableMultipleColumnsFiltering]);\n  const preferencePanelPreProcessing = React.useCallback((initialValue, value) => {\n    if (value === GridPreferencePanelsValue.filters) {\n      const FilterPanel = props.slots.filterPanel;\n      return /*#__PURE__*/_jsx(FilterPanel, _extends({}, props.slotProps?.filterPanel));\n    }\n    return initialValue;\n  }, [props.slots.filterPanel, props.slotProps?.filterPanel]);\n  const {\n    getRowId\n  } = props;\n  const getRowsRef = useLazyRef(createMemoizedValues);\n  const flatFilteringMethod = React.useCallback(params => {\n    if (props.filterMode !== 'client' || !params.isRowMatchingFilters || !params.filterModel.items.length && !params.filterModel.quickFilterValues?.length) {\n      return defaultGridFilterLookup;\n    }\n    const dataRowIdToModelLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = {};\n    const {\n      isRowMatchingFilters\n    } = params;\n    const filterCache = {};\n    const result = {\n      passingFilterItems: null,\n      passingQuickFilterValues: null\n    };\n    const rows = getRowsRef.current(apiRef.current.state.rows.dataRowIdToModelLookup);\n    for (let i = 0; i < rows.length; i += 1) {\n      const row = rows[i];\n      const id = getRowId ? getRowId(row) : row.id;\n      isRowMatchingFilters(row, undefined, result);\n      const isRowPassing = passFilterLogic([result.passingFilterItems], [result.passingQuickFilterValues], params.filterModel, apiRef, filterCache);\n      filteredRowsLookup[id] = isRowPassing;\n    }\n    const footerId = 'auto-generated-group-footer-root';\n    const footer = dataRowIdToModelLookup[footerId];\n    if (footer) {\n      filteredRowsLookup[footerId] = true;\n    }\n    return {\n      filteredRowsLookup,\n      filteredChildrenCountLookup: {},\n      filteredDescendantCountLookup: {}\n    };\n  }, [apiRef, props.filterMode, getRowId, getRowsRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'preferencePanel', preferencePanelPreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'filtering', flatFilteringMethod);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'visibleRowsLookupCreation', getVisibleRowsLookup);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnsChange = React.useCallback(() => {\n    logger.debug('onColUpdated - GridColumns changed, applying filters');\n    const filterModel = gridFilterModelSelector(apiRef);\n    const columnsLookup = gridColumnLookupSelector(apiRef);\n    const newFilterItems = filterModel.items.filter(item => item.field && columnsLookup[item.field]);\n    if (newFilterItems.length < filterModel.items.length) {\n      apiRef.current.setFilterModel(_extends({}, filterModel, {\n        items: newFilterItems\n      }));\n    }\n  }, [apiRef, logger]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'filtering') {\n      apiRef.current.unstable_applyFilters();\n    }\n  }, [apiRef]);\n  const updateVisibleRowsLookupState = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        visibleRowsLookup: getVisibleRowsLookupState(apiRef, state)\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n\n  // Do not call `apiRef.current.forceUpdate` to avoid re-render before updating the sorted rows.\n  // Otherwise, the state is not consistent during the render\n  useGridApiEventHandler(apiRef, 'rowsSet', updateFilteredRows);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'rowExpansionChange', updateVisibleRowsLookupState);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    const filterModel = gridFilterModelSelector(apiRef);\n    if (filterModel.quickFilterValues && shouldQuickFilterExcludeHiddenColumns(filterModel)) {\n      // re-apply filters because the quick filter results may have changed\n      apiRef.current.unstable_applyFilters();\n    }\n  });\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.unstable_applyFilters();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.filterModel !== undefined) {\n      apiRef.current.setFilterModel(props.filterModel);\n    }\n  }, [apiRef, logger, props.filterModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventcallback } from '@mui/utils';\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusCellSelector, gridFocusColumnGroupHeaderSelector } from \"./gridFocusStateSelector.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nexport const focusStateInitializer = state => _extends({}, state, {\n  focus: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  },\n  tabIndex: {\n    cell: null,\n    columnHeader: null,\n    columnHeaderFilter: null,\n    columnGroupHeader: null\n  }\n});\n\n/**\n * @requires useGridParamsApi (method)\n * @requires useGridRows (method)\n * @requires useGridEditing (event)\n */\nexport const useGridFocus = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridFocus');\n  const lastClickedCell = React.useRef(null);\n  const hasRootReference = apiRef.current.rootElementRef.current !== null;\n  const publishCellFocusOut = React.useCallback((cell, event) => {\n    if (cell) {\n      // The row might have been deleted\n      if (apiRef.current.getRow(cell.id)) {\n        apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n      }\n    }\n  }, [apiRef]);\n  const setCellFocus = React.useCallback((id, field) => {\n    const focusedCell = gridFocusCellSelector(apiRef);\n    if (focusedCell?.id === id && focusedCell?.field === field) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on cell with id=${id} and field=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          cell: {\n            id,\n            field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(id)) {\n      return;\n    }\n    if (focusedCell) {\n      // There's a focused cell but another cell was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, {});\n    }\n    apiRef.current.publishEvent('cellFocusIn', apiRef.current.getCellParams(id, field));\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: {\n            field\n          },\n          columnHeaderFilter: null,\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnHeaderFilterFocus = React.useCallback((field, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    publishCellFocusOut(cell, event);\n    apiRef.current.setState(state => {\n      logger.debug(`Focusing on column header filter with colIndex=${field}`);\n      return _extends({}, state, {\n        tabIndex: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        },\n        focus: {\n          columnHeader: null,\n          columnHeaderFilter: {\n            field\n          },\n          cell: null,\n          columnGroupHeader: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, publishCellFocusOut]);\n  const setColumnGroupHeaderFocus = React.useCallback((field, depth, event = {}) => {\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell) {\n      apiRef.current.publishEvent('cellFocusOut', apiRef.current.getCellParams(cell.id, cell.field), event);\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        },\n        focus: {\n          columnGroupHeader: {\n            field,\n            depth\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          cell: null\n        }\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const getColumnGroupHeaderFocus = React.useCallback(() => gridFocusColumnGroupHeaderSelector(apiRef), [apiRef]);\n  const moveFocusToRelativeCell = React.useCallback((id, field, direction) => {\n    let columnIndexToFocus = apiRef.current.getColumnIndex(field);\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const pinnedRows = gridPinnedRowsSelector(apiRef);\n\n    // Include pinned rows as well\n    const currentPageRows = [].concat(pinnedRows.top || [], currentPage.rows, pinnedRows.bottom || []);\n    let rowIndexToFocus = currentPageRows.findIndex(row => row.id === id);\n    if (direction === 'right') {\n      columnIndexToFocus += 1;\n    } else if (direction === 'left') {\n      columnIndexToFocus -= 1;\n    } else {\n      rowIndexToFocus += 1;\n    }\n    if (columnIndexToFocus >= visibleColumns.length) {\n      // Go to next row if we are after the last column\n      rowIndexToFocus += 1;\n      if (rowIndexToFocus < currentPageRows.length) {\n        // Go to first column of the next row if there's one more row\n        columnIndexToFocus = 0;\n      }\n    } else if (columnIndexToFocus < 0) {\n      // Go to previous row if we are before the first column\n      rowIndexToFocus -= 1;\n      if (rowIndexToFocus >= 0) {\n        // Go to last column of the previous if there's one more row\n        columnIndexToFocus = visibleColumns.length - 1;\n      }\n    }\n    rowIndexToFocus = clamp(rowIndexToFocus, 0, currentPageRows.length - 1);\n    const rowToFocus = currentPageRows[rowIndexToFocus];\n    if (!rowToFocus) {\n      return;\n    }\n    const colSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowToFocus.id, columnIndexToFocus);\n    if (colSpanInfo && colSpanInfo.spannedByColSpan) {\n      if (direction === 'left' || direction === 'below') {\n        columnIndexToFocus = colSpanInfo.leftVisibleCellIndex;\n      } else if (direction === 'right') {\n        columnIndexToFocus = colSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    columnIndexToFocus = clamp(columnIndexToFocus, 0, visibleColumns.length - 1);\n    const columnToFocus = visibleColumns[columnIndexToFocus];\n    apiRef.current.setCellFocus(rowToFocus.id, columnToFocus.field);\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handleCellDoubleClick = React.useCallback(({\n    id,\n    field\n  }) => {\n    apiRef.current.setCellFocus(id, field);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // GRID_CELL_NAVIGATION_KEY_DOWN handles the focus on Enter, Tab and navigation keys\n    if (event.key === 'Enter' || event.key === 'Tab' || event.key === 'Shift' || isNavigationKey(event.key)) {\n      return;\n    }\n    apiRef.current.setCellFocus(params.id, params.field);\n  }, [apiRef]);\n  const handleColumnHeaderFocus = React.useCallback(({\n    field\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef]);\n  const handleColumnGroupHeaderFocus = React.useCallback(({\n    fields,\n    depth\n  }, event) => {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup !== null && focusedColumnGroup.depth === depth && fields.includes(focusedColumnGroup.field)) {\n      // This group cell has already been focused\n      return;\n    }\n    apiRef.current.setColumnGroupHeaderFocus(fields[0], depth, event);\n  }, [apiRef]);\n  const handleBlur = React.useCallback((_, event) => {\n    if (event.relatedTarget?.getAttribute('class')?.includes(gridClasses.columnHeader)) {\n      return;\n    }\n    logger.debug(`Clearing focus`);\n    apiRef.current.setState(state => _extends({}, state, {\n      focus: {\n        cell: null,\n        columnHeader: null,\n        columnHeaderFilter: null,\n        columnGroupHeader: null\n      }\n    }));\n  }, [logger, apiRef]);\n  const handleCellMouseDown = React.useCallback(params => {\n    lastClickedCell.current = params;\n  }, []);\n  const handleDocumentClick = React.useCallback(event => {\n    const cellParams = lastClickedCell.current;\n    lastClickedCell.current = null;\n    const focusedCell = gridFocusCellSelector(apiRef);\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    if (!focusedCell) {\n      if (cellParams) {\n        apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n      }\n      return;\n    }\n    if (cellParams?.id === focusedCell.id && cellParams?.field === focusedCell.field) {\n      return;\n    }\n    const cellElement = apiRef.current.getCellElement(focusedCell.id, focusedCell.field);\n    if (cellElement?.contains(event.target)) {\n      return;\n    }\n    if (cellParams) {\n      apiRef.current.setCellFocus(cellParams.id, cellParams.field);\n    } else {\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: null,\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n      apiRef.current.forceUpdate();\n\n      // There's a focused cell but another element (not a cell) was clicked\n      // Publishes an event to notify that the focus was lost\n      publishCellFocusOut(focusedCell, event);\n    }\n  }, [apiRef, publishCellFocusOut]);\n  const handleCellModeChange = React.useCallback(params => {\n    if (params.cellMode === 'view') {\n      return;\n    }\n    const cell = gridFocusCellSelector(apiRef);\n    if (cell?.id !== params.id || cell?.field !== params.field) {\n      apiRef.current.setCellFocus(params.id, params.field);\n    }\n  }, [apiRef]);\n  const handleRowSet = React.useCallback(() => {\n    const cell = gridFocusCellSelector(apiRef);\n\n    // If the focused cell is in a row which does not exist anymore,\n    // focus previous row or remove the focus\n    if (cell && !apiRef.current.getRow(cell.id)) {\n      const lastFocusedRowId = cell.id;\n      let nextRowId = null;\n      if (typeof lastFocusedRowId !== 'undefined') {\n        const rowEl = apiRef.current.getRowElement(lastFocusedRowId);\n        const lastFocusedRowIndex = rowEl?.dataset.rowindex ? Number(rowEl?.dataset.rowindex) : 0;\n        const currentPage = getVisibleRows(apiRef, {\n          pagination: props.pagination,\n          paginationMode: props.paginationMode\n        });\n        const nextRow = currentPage.rows[clamp(lastFocusedRowIndex, 0, currentPage.rows.length - 1)];\n        nextRowId = nextRow?.id ?? null;\n      }\n      apiRef.current.setState(state => _extends({}, state, {\n        focus: {\n          cell: nextRowId === null ? null : {\n            id: nextRowId,\n            field: cell.field\n          },\n          columnHeader: null,\n          columnHeaderFilter: null,\n          columnGroupHeader: null\n        }\n      }));\n    }\n  }, [apiRef, props.pagination, props.paginationMode]);\n  const handlePaginationModelChange = useEventcallback(() => {\n    const currentFocusedCell = gridFocusCellSelector(apiRef);\n    if (!currentFocusedCell) {\n      return;\n    }\n    const currentPage = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    const rowIsInCurrentPage = currentPage.rows.find(row => row.id === currentFocusedCell.id);\n    if (rowIsInCurrentPage) {\n      return;\n    }\n    const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        tabIndex: {\n          cell: {\n            id: currentPage.rows[0].id,\n            field: visibleColumns[0].field\n          },\n          columnGroupHeader: null,\n          columnHeader: null,\n          columnHeaderFilter: null\n        }\n      });\n    });\n  });\n  const focusApi = {\n    setCellFocus,\n    setColumnHeaderFocus,\n    setColumnHeaderFilterFocus\n  };\n  const focusPrivateApi = {\n    moveFocusToRelativeCell,\n    setColumnGroupHeaderFocus,\n    getColumnGroupHeaderFocus\n  };\n  useGridApiMethod(apiRef, focusApi, 'public');\n  useGridApiMethod(apiRef, focusPrivateApi, 'private');\n  React.useEffect(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.addEventListener('mouseup', handleDocumentClick);\n    return () => {\n      doc.removeEventListener('mouseup', handleDocumentClick);\n    };\n  }, [apiRef, hasRootReference, handleDocumentClick]);\n  useGridApiEventHandler(apiRef, 'columnHeaderBlur', handleBlur);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', handleCellDoubleClick);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', handleCellMouseDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n  useGridApiEventHandler(apiRef, 'cellModeChange', handleCellModeChange);\n  useGridApiEventHandler(apiRef, 'columnHeaderFocus', handleColumnHeaderFocus);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderFocus', handleColumnGroupHeaderFocus);\n  useGridApiEventHandler(apiRef, 'rowsSet', handleRowSet);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n};","import { gridClasses } from \"../constants/gridClasses.js\";\nexport function isOverflown(element) {\n  return element.scrollHeight > element.clientHeight || element.scrollWidth > element.clientWidth;\n}\nexport function findParentElementFromClassName(elem, className) {\n  return elem.closest(`.${className}`);\n}\n\n// TODO, eventually replaces this function with CSS.escape, once available in jsdom, either added manually or built in\n// https://github.com/jsdom/jsdom/issues/1550#issuecomment-236734471\nexport function escapeOperandAttributeSelector(operand) {\n  return operand.replace(/[\"\\\\]/g, '\\\\$&');\n}\nexport function getGridColumnHeaderElement(root, field) {\n  return root.querySelector(`[role=\"columnheader\"][data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nfunction getGridRowElementSelector(id) {\n  return `.${gridClasses.row}[data-id=\"${escapeOperandAttributeSelector(String(id))}\"]`;\n}\nexport function getGridRowElement(root, id) {\n  return root.querySelector(getGridRowElementSelector(id));\n}\nexport function getGridCellElement(root, {\n  id,\n  field\n}) {\n  const rowSelector = getGridRowElementSelector(id);\n  const cellSelector = `.${gridClasses.cell}[data-field=\"${escapeOperandAttributeSelector(field)}\"]`;\n  const selector = `${rowSelector} ${cellSelector}`;\n  return root.querySelector(selector);\n}\n\n// https://www.abeautifulsite.net/posts/finding-the-active-element-in-a-shadow-root/\nexport const getActiveElement = (root = document) => {\n  const activeEl = root.activeElement;\n  if (!activeEl) {\n    return null;\n  }\n  if (activeEl.shadowRoot) {\n    return getActiveElement(activeEl.shadowRoot);\n  }\n  return activeEl;\n};\nexport function isEventTargetInPortal(event) {\n  if (\n  // The target is not an element when triggered by a Select inside the cell\n  // See https://github.com/mui/material-ui/issues/10534\n  event.target.nodeType === 1 && !event.currentTarget.contains(event.target)) {\n    return true;\n  }\n  return false;\n}\nexport function getFieldFromHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-field');\n}\nexport function findHeaderElementFromField(elem, field) {\n  return elem.querySelector(`[data-field=\"${escapeOperandAttributeSelector(field)}\"]`);\n}\nexport function getFieldsFromGroupHeaderElem(colCellEl) {\n  return colCellEl.getAttribute('data-fields').slice(2, -2).split('-|-');\n}\nexport function findGroupHeaderElementsFromField(elem, field) {\n  return Array.from(elem.querySelectorAll(`[data-fields*=\"|-${escapeOperandAttributeSelector(field)}-|\"]`) ?? []);\n}\nexport function findGridCellElementsFromCol(col, api) {\n  const root = findParentElementFromClassName(col, gridClasses.root);\n  if (!root) {\n    throw new Error('MUI X: The root element is not found.');\n  }\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return [];\n  }\n  const colIndex = Number(ariaColIndex) - 1;\n  const cells = [];\n  if (!api.virtualScrollerRef?.current) {\n    return [];\n  }\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    let columnIndex = colIndex;\n    const cellColSpanInfo = api.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (cellColSpanInfo && cellColSpanInfo.spannedByColSpan) {\n      columnIndex = cellColSpanInfo.leftVisibleCellIndex;\n    }\n    const cell = rowElement.querySelector(`[data-colindex=\"${columnIndex}\"]`);\n    if (cell) {\n      cells.push(cell);\n    }\n  });\n  return cells;\n}\nexport function findGridElement(api, klass) {\n  return api.rootElementRef.current.querySelector(`.${gridClasses[klass]}`);\n}\nconst findPinnedCells = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (colIndex === null) {\n    return [];\n  }\n  const cells = [];\n  queryRows(api).forEach(rowElement => {\n    const rowId = rowElement.getAttribute('data-id');\n    if (!rowId) {\n      return;\n    }\n    rowElement.querySelectorAll(`.${gridClasses[position === 'left' ? 'cell--pinnedLeft' : 'cell--pinnedRight']}`).forEach(cell => {\n      const currentColIndex = parseCellColIndex(cell);\n      if (currentColIndex !== null && filterFn(currentColIndex)) {\n        cells.push(cell);\n      }\n    });\n  });\n  return cells;\n};\nexport function findLeftPinnedCellsAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'right' : 'left',\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedCellsBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedCells({\n    api,\n    colIndex,\n    position: isRtl ? 'left' : 'right',\n    filterFn: index => isRtl ? index > colIndex : index < colIndex\n  });\n}\nconst findPinnedHeaders = ({\n  api,\n  colIndex,\n  position,\n  filterFn\n}) => {\n  if (!api.columnHeadersContainerRef?.current) {\n    return [];\n  }\n  if (colIndex === null) {\n    return [];\n  }\n  const elements = [];\n  api.columnHeadersContainerRef.current.querySelectorAll(`.${gridClasses[position === 'left' ? 'columnHeader--pinnedLeft' : 'columnHeader--pinnedRight']}`).forEach(element => {\n    const currentColIndex = parseCellColIndex(element);\n    if (currentColIndex !== null && filterFn(currentColIndex, element)) {\n      elements.push(element);\n    }\n  });\n  return elements;\n};\nexport function findLeftPinnedHeadersAfterCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'right' : 'left',\n    colIndex,\n    filterFn: index => isRtl ? index < colIndex : index > colIndex\n  });\n}\nexport function findRightPinnedHeadersBeforeCol(api, col, isRtl) {\n  const colIndex = parseCellColIndex(col);\n  return findPinnedHeaders({\n    api,\n    position: isRtl ? 'left' : 'right',\n    colIndex,\n    filterFn: (index, element) => {\n      if (element.classList.contains(gridClasses['columnHeader--last'])) {\n        return false;\n      }\n      return isRtl ? index > colIndex : index < colIndex;\n    }\n  });\n}\nexport function findGridHeader(api, field) {\n  const headers = api.columnHeadersContainerRef.current;\n  return headers.querySelector(`:scope > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"columnheader\"]`);\n}\nexport function findGridCells(api, field) {\n  const container = api.virtualScrollerRef.current;\n  return Array.from(container.querySelectorAll(`:scope > div > div > div > [data-field=\"${escapeOperandAttributeSelector(field)}\"][role=\"gridcell\"]`));\n}\nfunction queryRows(api) {\n  return api.virtualScrollerRef.current.querySelectorAll(\n  // Use > to ignore rows from nested Data Grids (for example in detail panel)\n  `:scope > div > div > .${gridClasses.row}`);\n}\nfunction parseCellColIndex(col) {\n  const ariaColIndex = col.getAttribute('aria-colindex');\n  if (!ariaColIndex) {\n    return null;\n  }\n  return Number(ariaColIndex) - 1;\n}","import { gridFilteredSortedRowIdsSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridRowSpanningHiddenCellsSelector } from \"../rows/gridRowSpanningSelectors.js\";\nexport const getLeftColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  }\n  return null;\n};\nexport const getRightColumnIndex = ({\n  currentColIndex,\n  firstColIndex,\n  lastColIndex,\n  isRtl\n}) => {\n  if (isRtl) {\n    if (currentColIndex > firstColIndex) {\n      return currentColIndex - 1;\n    }\n  } else if (!isRtl) {\n    if (currentColIndex < lastColIndex) {\n      return currentColIndex + 1;\n    }\n  }\n  return null;\n};\nexport function findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection) {\n  const rowSpanHiddenCells = gridRowSpanningHiddenCellsSelector(apiRef);\n  if (!rowSpanHiddenCells[rowId]?.[field]) {\n    return rowId;\n  }\n  const filteredSortedRowIds = gridFilteredSortedRowIdsSelector(apiRef);\n  // find closest non row spanned cell in the given `rowSpanScanDirection`\n  let nextRowIndex = filteredSortedRowIds.indexOf(rowId) + (rowSpanScanDirection === 'down' ? 1 : -1);\n  while (nextRowIndex >= 0 && nextRowIndex < filteredSortedRowIds.length) {\n    const nextRowId = filteredSortedRowIds[nextRowIndex];\n    if (!rowSpanHiddenCells[nextRowId]?.[field]) {\n      return nextRowId;\n    }\n    nextRowIndex += rowSpanScanDirection === 'down' ? 1 : -1;\n  }\n  return rowId;\n}","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { GRID_TREE_DATA_GROUPING_FIELD, GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../internals/constants.js\";\nimport { isGroupingColumn } from \"../../../internals/utils/gridRowGroupingUtils.js\";\nimport { gridVisibleColumnDefinitionsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridFocusColumnGroupHeaderSelector } from \"../focus/index.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridHeaderFilteringEditFieldSelector, gridHeaderFilteringMenuSelector } from \"../headerFiltering/gridHeaderFilteringSelectors.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { getLeftColumnIndex, getRightColumnIndex, findNonRowSpannedCell } from \"./utils.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nimport { createSelectorMemoized } from \"../../../utils/createSelector.js\";\nimport { gridVisibleRowsSelector } from \"../pagination/index.js\";\nimport { gridPinnedRowsSelector } from \"../rows/gridRowsSelector.js\";\nconst gridVisibleRowsWithPinnedRowsSelector = createSelectorMemoized(gridVisibleRowsSelector, gridPinnedRowsSelector, (visibleRows, pinnedRows) => {\n  return (pinnedRows.top || []).concat(visibleRows.rows, pinnedRows.bottom || []);\n});\n\n/**\n * @requires useGridSorting (method) - can be after\n * @requires useGridFilter (state) - can be after\n * @requires useGridColumns (state, method) - can be after\n * @requires useGridDimensions (method) - can be after\n * @requires useGridFocus (method) - can be after\n * @requires useGridScroll (method) - can be after\n * @requires useGridColumnSpanning (method) - can be after\n */\nexport const useGridKeyboardNavigation = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridKeyboardNavigation');\n  const isRtl = useRtl();\n  const listView = props.unstable_listView;\n  const getCurrentPageRows = React.useCallback(() => {\n    return gridVisibleRowsWithPinnedRowsSelector(apiRef);\n  }, [apiRef]);\n  const headerFilteringEnabled = props.signature !== 'DataGrid' && props.headerFilters;\n\n  /**\n   * @param {number} colIndex Index of the column to focus\n   * @param {GridRowId} rowId index of the row to focus\n   * @param {string} closestColumnToUse Which closest column cell to use when the cell is spanned by `colSpan`.\n   * @param {string} rowSpanScanDirection Which direction to search to find the next cell not hidden by `rowSpan`.\n   * TODO replace with apiRef.current.moveFocusToRelativeCell()\n   */\n  const goToCell = React.useCallback((colIndex, rowId, closestColumnToUse = 'left', rowSpanScanDirection = 'up') => {\n    const visibleSortedRows = gridExpandedSortedRowEntriesSelector(apiRef);\n    const nextCellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, colIndex);\n    if (nextCellColSpanInfo && nextCellColSpanInfo.spannedByColSpan) {\n      if (closestColumnToUse === 'left') {\n        colIndex = nextCellColSpanInfo.leftVisibleCellIndex;\n      } else if (closestColumnToUse === 'right') {\n        colIndex = nextCellColSpanInfo.rightVisibleCellIndex;\n      }\n    }\n    const field = listView ? gridListColumnSelector(apiRef.current.state).field : gridVisibleColumnFieldsSelector(apiRef)[colIndex];\n    const nonRowSpannedRowId = findNonRowSpannedCell(apiRef, rowId, field, rowSpanScanDirection);\n    // `scrollToIndexes` requires a rowIndex relative to all visible rows.\n    // Those rows do not include pinned rows, but pinned rows do not need scroll anyway.\n    const rowIndexRelativeToAllRows = visibleSortedRows.findIndex(row => row.id === nonRowSpannedRowId);\n    logger.debug(`Navigating to cell row ${rowIndexRelativeToAllRows}, col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex,\n      rowIndex: rowIndexRelativeToAllRows\n    });\n    apiRef.current.setCellFocus(nonRowSpannedRowId, field);\n  }, [apiRef, logger, listView]);\n  const goToHeader = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFocus(field, event);\n  }, [apiRef, logger]);\n  const goToHeaderFilter = React.useCallback((colIndex, event) => {\n    logger.debug(`Navigating to header filter col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const field = apiRef.current.getVisibleColumns()[colIndex].field;\n    apiRef.current.setColumnHeaderFilterFocus(field, event);\n  }, [apiRef, logger]);\n  const goToGroupHeader = React.useCallback((colIndex, depth, event) => {\n    logger.debug(`Navigating to header col ${colIndex}`);\n    apiRef.current.scrollToIndexes({\n      colIndex\n    });\n    const {\n      field\n    } = apiRef.current.getVisibleColumns()[colIndex];\n    apiRef.current.setColumnGroupHeaderFocus(field, depth, event);\n  }, [apiRef, logger]);\n  const getRowIdFromIndex = React.useCallback(rowIndex => {\n    return getCurrentPageRows()[rowIndex]?.id;\n  }, [getCurrentPageRows]);\n  const handleColumnHeaderKeyDown = React.useCallback((params, event) => {\n    const headerTitleNode = event.currentTarget.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n    const isFromInsideContent = !!headerTitleNode && headerTitleNode.contains(event.target);\n    if (isFromInsideContent && params.field !== GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // When focus is on a nested input, keyboard events have no effect to avoid conflicts with native events.\n      // There is one exception for the checkBoxHeader\n      return;\n    }\n    const currentPageRows = getCurrentPageRows();\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = currentPageRows.length > 0 ? 0 : null;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    const columnGroupMaxDepth = gridColumnGroupsHeaderMaxDepthSelector(apiRef);\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else if (firstRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(firstRowIndexInPage));\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeader(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeader(leftColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (columnGroupMaxDepth > 0) {\n            goToGroupHeader(colIndexBefore, columnGroupMaxDepth - 1, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeader(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeader(lastColIndex, event);\n          break;\n        }\n      case 'Enter':\n        {\n          if (event.ctrlKey || event.metaKey) {\n            apiRef.current.toggleColumnMenu(params.field);\n          }\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, getCurrentPageRows, headerFilteringEnabled, goToHeaderFilter, goToCell, getRowIdFromIndex, isRtl, goToHeader, goToGroupHeader]);\n  const handleHeaderFilterKeyDown = React.useCallback((params, event) => {\n    const isEditing = gridHeaderFilteringEditFieldSelector(apiRef) === params.field;\n    const isHeaderMenuOpen = gridHeaderFilteringMenuSelector(apiRef) === params.field;\n    if (isEditing || isHeaderMenuOpen || !isNavigationKey(event.key)) {\n      return;\n    }\n    const currentPageRows = getCurrentPageRows();\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const colIndexBefore = params.field ? apiRef.current.getColumnIndex(params.field) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          const rowId = getRowIdFromIndex(firstRowIndexInPage);\n          if (firstRowIndexInPage !== null && rowId != null) {\n            goToCell(colIndexBefore, rowId);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToHeaderFilter(rightColIndex, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToHeaderFilter(leftColIndex, event);\n          } else {\n            apiRef.current.setColumnHeaderFilterFocus(params.field, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          goToHeader(colIndexBefore, event);\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToHeaderFilter(firstColIndex, event);\n          break;\n        }\n      case 'End':\n        {\n          goToHeaderFilter(lastColIndex, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, getCurrentPageRows, goToHeaderFilter, isRtl, goToHeader, goToCell, getRowIdFromIndex]);\n  const handleColumnGroupHeaderKeyDown = React.useCallback((params, event) => {\n    const focusedColumnGroup = gridFocusColumnGroupHeaderSelector(apiRef);\n    if (focusedColumnGroup === null) {\n      return;\n    }\n    const {\n      field: currentField,\n      depth: currentDepth\n    } = focusedColumnGroup;\n    const {\n      fields,\n      depth,\n      maxDepth\n    } = params;\n    const currentPageRows = getCurrentPageRows();\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const currentColIndex = apiRef.current.getColumnIndex(currentField);\n    const colIndexBefore = currentField ? apiRef.current.getColumnIndex(currentField) : 0;\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const lastColIndex = gridVisibleColumnDefinitionsSelector(apiRef).length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          if (depth === maxDepth - 1) {\n            goToHeader(currentColIndex, event);\n          } else {\n            goToGroupHeader(currentColIndex, currentDepth + 1, event);\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (depth > 0) {\n            goToGroupHeader(currentColIndex, currentDepth - 1, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const remainingRightColumns = fields.length - fields.indexOf(currentField) - 1;\n          if (currentColIndex + remainingRightColumns + 1 <= lastColIndex) {\n            goToGroupHeader(currentColIndex + remainingRightColumns + 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const remainingLeftColumns = fields.indexOf(currentField);\n          if (currentColIndex - remainingLeftColumns - 1 >= firstColIndex) {\n            goToGroupHeader(currentColIndex - remainingLeftColumns - 1, currentDepth, event);\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (firstRowIndexInPage !== null && lastRowIndexInPage !== null) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(firstRowIndexInPage + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'Home':\n        {\n          goToGroupHeader(firstColIndex, currentDepth, event);\n          break;\n        }\n      case 'End':\n        {\n          goToGroupHeader(lastColIndex, currentDepth, event);\n          break;\n        }\n      case ' ':\n        {\n          // prevent Space event from scrolling\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, getCurrentPageRows, goToHeader, goToGroupHeader, goToCell, getRowIdFromIndex]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // Get the most recent params because the cell mode may have changed by another listener\n    const cellParams = apiRef.current.getCellParams(params.id, params.field);\n    if (cellParams.cellMode === GridCellModes.Edit || !isNavigationKey(event.key)) {\n      return;\n    }\n    const canUpdateFocus = apiRef.current.unstable_applyPipeProcessors('canUpdateFocus', true, {\n      event,\n      cell: cellParams\n    });\n    if (!canUpdateFocus) {\n      return;\n    }\n    const currentPageRows = getCurrentPageRows();\n    if (currentPageRows.length === 0) {\n      return;\n    }\n    const viewportPageSize = apiRef.current.getViewportPageSize();\n    const getColumnIndexFn = listView ? () => 0 : apiRef.current.getColumnIndex;\n    const colIndexBefore = params.field ? getColumnIndexFn(params.field) : 0;\n    const rowIndexBefore = currentPageRows.findIndex(row => row.id === params.id);\n    const firstRowIndexInPage = 0;\n    const lastRowIndexInPage = currentPageRows.length - 1;\n    const firstColIndex = 0;\n    const visibleColumns = listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const lastColIndex = visibleColumns.length - 1;\n    let shouldPreventDefault = true;\n    switch (event.key) {\n      case 'ArrowDown':\n        {\n          // \"Enter\" is only triggered by the row / cell editing feature\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore + 1), isRtl ? 'right' : 'left', 'down');\n          }\n          break;\n        }\n      case 'ArrowUp':\n        {\n          if (rowIndexBefore > firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(rowIndexBefore - 1));\n          } else if (headerFilteringEnabled) {\n            goToHeaderFilter(colIndexBefore, event);\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'ArrowRight':\n        {\n          const rightColIndex = getRightColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (rightColIndex !== null) {\n            goToCell(rightColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'left' : 'right');\n          }\n          break;\n        }\n      case 'ArrowLeft':\n        {\n          const leftColIndex = getLeftColumnIndex({\n            currentColIndex: colIndexBefore,\n            firstColIndex,\n            lastColIndex,\n            isRtl\n          });\n          if (leftColIndex !== null) {\n            goToCell(leftColIndex, getRowIdFromIndex(rowIndexBefore), isRtl ? 'right' : 'left');\n          }\n          break;\n        }\n      case 'Tab':\n        {\n          // \"Tab\" is only triggered by the row / cell editing feature\n          if (event.shiftKey && colIndexBefore > firstColIndex) {\n            goToCell(colIndexBefore - 1, getRowIdFromIndex(rowIndexBefore), 'left');\n          } else if (!event.shiftKey && colIndexBefore < lastColIndex) {\n            goToCell(colIndexBefore + 1, getRowIdFromIndex(rowIndexBefore), 'right');\n          }\n          break;\n        }\n      case ' ':\n        {\n          const field = params.field;\n          if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n            break;\n          }\n          const colDef = params.colDef;\n          if (colDef && (colDef.field === GRID_TREE_DATA_GROUPING_FIELD || isGroupingColumn(colDef.field))) {\n            break;\n          }\n          if (!event.shiftKey && rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageDown':\n        {\n          if (rowIndexBefore < lastRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(Math.min(rowIndexBefore + viewportPageSize, lastRowIndexInPage)));\n          }\n          break;\n        }\n      case 'PageUp':\n        {\n          // Go to the first row before going to header\n          const nextRowIndex = Math.max(rowIndexBefore - viewportPageSize, firstRowIndexInPage);\n          if (nextRowIndex !== rowIndexBefore && nextRowIndex >= firstRowIndexInPage) {\n            goToCell(colIndexBefore, getRowIdFromIndex(nextRowIndex));\n          } else {\n            goToHeader(colIndexBefore, event);\n          }\n          break;\n        }\n      case 'Home':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(firstColIndex, getRowIdFromIndex(firstRowIndexInPage));\n          } else {\n            goToCell(firstColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      case 'End':\n        {\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            goToCell(lastColIndex, getRowIdFromIndex(lastRowIndexInPage));\n          } else {\n            goToCell(lastColIndex, getRowIdFromIndex(rowIndexBefore));\n          }\n          break;\n        }\n      default:\n        {\n          shouldPreventDefault = false;\n        }\n    }\n    if (shouldPreventDefault) {\n      event.preventDefault();\n    }\n  }, [apiRef, getCurrentPageRows, isRtl, goToCell, getRowIdFromIndex, headerFilteringEnabled, goToHeaderFilter, goToHeader, listView]);\n  const checkIfCanStartEditing = React.useCallback((initialValue, {\n    event\n  }) => {\n    if (event.key === ' ') {\n      // Space scrolls to the last row\n      return false;\n    }\n    return initialValue;\n  }, []);\n  useGridRegisterPipeProcessor(apiRef, 'canStartEditing', checkIfCanStartEditing);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'headerFilterKeyDown', handleHeaderFilterKeyDown);\n  useGridApiEventHandler(apiRef, 'columnGroupHeaderKeyDown', handleColumnGroupHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'cellKeyDown', handleCellKeyDown);\n};","import { GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD } from \"../constants.js\";\nexport const getRowGroupingCriteriaFromGroupingField = groupingColDefField => {\n  const match = groupingColDefField.match(/^__row_group_by_columns_group_(.*)__$/);\n  if (!match) {\n    return null;\n  }\n  return match[1];\n};\nexport const isGroupingColumn = field => field === GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD || getRowGroupingCriteriaFromGroupingField(field) !== null;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { throwIfPageSizeExceedsTheLimit, getDefaultGridPaginationModel } from \"./gridPaginationUtils.js\";\nimport { useGridPaginationModel } from \"./useGridPaginationModel.js\";\nimport { useGridRowCount } from \"./useGridRowCount.js\";\nimport { useGridPaginationMeta } from \"./useGridPaginationMeta.js\";\nexport const paginationStateInitializer = (state, props) => {\n  const paginationModel = _extends({}, getDefaultGridPaginationModel(props.autoPageSize), props.paginationModel ?? props.initialState?.pagination?.paginationModel);\n  throwIfPageSizeExceedsTheLimit(paginationModel.pageSize, props.signature);\n  const rowCount = props.rowCount ?? props.initialState?.pagination?.rowCount ?? (props.paginationMode === 'client' ? state.rows?.totalRowCount : undefined);\n  const meta = props.paginationMeta ?? props.initialState?.pagination?.meta ?? {};\n  return _extends({}, state, {\n    pagination: _extends({}, state.pagination, {\n      paginationModel,\n      rowCount,\n      meta,\n      enabled: props.pagination === true,\n      paginationMode: props.paginationMode\n    })\n  });\n};\n\n/**\n * @requires useGridFilter (state)\n * @requires useGridDimensions (event) - can be after\n */\nexport const useGridPagination = (apiRef, props) => {\n  useGridPaginationMeta(apiRef, props);\n  useGridPaginationModel(apiRef, props);\n  useGridRowCount(apiRef, props);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridLogger, useGridSelector, useGridApiMethod } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationMetaSelector } from \"./gridPaginationSelector.js\";\nexport const useGridPaginationMeta = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPaginationMeta');\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  apiRef.current.registerControlState({\n    stateId: 'paginationMeta',\n    propModel: props.paginationMeta,\n    propOnChange: props.onPaginationMetaChange,\n    stateSelector: gridPaginationMetaSelector,\n    changeEvent: 'paginationMetaChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setPaginationMeta = React.useCallback(newPaginationMeta => {\n    if (paginationMeta === newPaginationMeta) {\n      return;\n    }\n    logger.debug(\"Setting 'paginationMeta' to\", newPaginationMeta);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: newPaginationMeta\n      })\n    }));\n  }, [apiRef, logger, paginationMeta]);\n  const paginationMetaApi = {\n    setPaginationMeta\n  };\n  useGridApiMethod(apiRef, paginationMetaApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedPaginationMeta = gridPaginationMetaSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `paginationMeta` is controlled\n    props.paginationMeta != null ||\n    // Always export if the `paginationMeta` has been initialized\n    props.initialState?.pagination?.meta != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        meta: exportedPaginationMeta\n      })\n    });\n  }, [apiRef, props.paginationMeta, props.initialState?.pagination?.meta]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredPaginationMeta = context.stateToRestore.pagination?.meta ? context.stateToRestore.pagination.meta : gridPaginationMetaSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        meta: restoredPaginationMeta\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMeta) {\n      apiRef.current.setPaginationMeta(props.paginationMeta);\n    }\n  }, [apiRef, props.paginationMeta]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { gridFilteredTopLevelRowCountSelector } from \"../filter/index.js\";\nimport { useGridLogger, useGridSelector, useGridApiMethod, useGridApiEventHandler } from \"../../utils/index.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPaginationRowCountSelector, gridPaginationMetaSelector, gridPaginationModelSelector } from \"./gridPaginationSelector.js\";\nexport const useGridRowCount = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridRowCount');\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const rowCountState = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const paginationMeta = useGridSelector(apiRef, gridPaginationMetaSelector);\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const previousPageSize = useLazyRef(() => gridPaginationModelSelector(apiRef).pageSize);\n  apiRef.current.registerControlState({\n    stateId: 'paginationRowCount',\n    propModel: props.rowCount,\n    propOnChange: props.onRowCountChange,\n    stateSelector: gridPaginationRowCountSelector,\n    changeEvent: 'rowCountChange'\n  });\n\n  /**\n   * API METHODS\n   */\n  const setRowCount = React.useCallback(newRowCount => {\n    if (rowCountState === newRowCount) {\n      return;\n    }\n    logger.debug(\"Setting 'rowCount' to\", newRowCount);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: newRowCount\n      })\n    }));\n  }, [apiRef, logger, rowCountState]);\n  const paginationRowCountApi = {\n    setRowCount\n  };\n  useGridApiMethod(apiRef, paginationRowCountApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const exportedRowCount = gridPaginationRowCountSelector(apiRef);\n    const shouldExportRowCount =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the `rowCount` is controlled\n    props.rowCount != null ||\n    // Always export if the `rowCount` has been initialized\n    props.initialState?.pagination?.rowCount != null;\n    if (!shouldExportRowCount) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      pagination: _extends({}, prevState.pagination, {\n        rowCount: exportedRowCount\n      })\n    });\n  }, [apiRef, props.rowCount, props.initialState?.pagination?.rowCount]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const restoredRowCount = context.stateToRestore.pagination?.rowCount ? context.stateToRestore.pagination.rowCount : gridPaginationRowCountSelector(apiRef);\n    apiRef.current.setState(state => _extends({}, state, {\n      pagination: _extends({}, state.pagination, {\n        rowCount: restoredRowCount\n      })\n    }));\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n\n  /**\n   * EVENTS\n   */\n  const handlePaginationModelChange = React.useCallback(model => {\n    if (props.paginationMode === 'client' || !previousPageSize.current) {\n      return;\n    }\n    if (model.pageSize !== previousPageSize.current) {\n      previousPageSize.current = model.pageSize;\n      if (rowCountState === -1) {\n        // Row count unknown and page size changed, reset the page\n        apiRef.current.setPage(0);\n      }\n    }\n  }, [props.paginationMode, previousPageSize, rowCountState, apiRef]);\n  useGridApiEventHandler(apiRef, 'paginationModelChange', handlePaginationModelChange);\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (props.paginationMode === 'client') {\n      apiRef.current.setRowCount(visibleTopLevelRowCount);\n    } else if (props.rowCount != null) {\n      apiRef.current.setRowCount(props.rowCount);\n    }\n  }, [apiRef, props.paginationMode, visibleTopLevelRowCount, props.rowCount]);\n  const isLastPage = paginationMeta.hasNextPage === false;\n  React.useEffect(() => {\n    if (isLastPage && rowCountState === -1) {\n      apiRef.current.setRowCount(paginationModel.pageSize * paginationModel.page + visibleTopLevelRowCount);\n    }\n  }, [apiRef, visibleTopLevelRowCount, isLastPage, rowCountState, paginationModel]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { gridPreferencePanelStateSelector } from \"./gridPreferencePanelSelector.js\";\nexport const preferencePanelStateInitializer = (state, props) => _extends({}, state, {\n  preferencePanel: props.initialState?.preferencePanel ?? {\n    open: false\n  }\n});\n\n/**\n * TODO: Add a single `setPreferencePanel` method to avoid multiple `setState`\n */\nexport const useGridPreferencesPanel = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridPreferencesPanel');\n\n  /**\n   * API METHODS\n   */\n  const hidePreferences = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (!state.preferencePanel.open) {\n        return state;\n      }\n      logger.debug('Hiding Preferences Panel');\n      const preferencePanelState = gridPreferencePanelStateSelector(state);\n      apiRef.current.publishEvent('preferencePanelClose', {\n        openedPanelValue: preferencePanelState.openedPanelValue\n      });\n      return _extends({}, state, {\n        preferencePanel: {\n          open: false\n        }\n      });\n    });\n  }, [apiRef, logger]);\n  const showPreferences = React.useCallback((newValue, panelId, labelId) => {\n    logger.debug('Opening Preferences Panel');\n    apiRef.current.setState(state => _extends({}, state, {\n      preferencePanel: _extends({}, state.preferencePanel, {\n        open: true,\n        openedPanelValue: newValue,\n        panelId,\n        labelId\n      })\n    }));\n    apiRef.current.publishEvent('preferencePanelOpen', {\n      openedPanelValue: newValue\n    });\n  }, [logger, apiRef]);\n  useGridApiMethod(apiRef, {\n    showPreferences,\n    hidePreferences\n  }, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const preferencePanelToExport = gridPreferencePanelStateSelector(apiRef.current.state);\n    const shouldExportPreferencePanel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the panel was initialized\n    props.initialState?.preferencePanel != null ||\n    // Always export if the panel is opened\n    preferencePanelToExport.open;\n    if (!shouldExportPreferencePanel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      preferencePanel: preferencePanelToExport\n    });\n  }, [apiRef, props.initialState?.preferencePanel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const preferencePanel = context.stateToRestore.preferencePanel;\n    if (preferencePanel != null) {\n      apiRef.current.setState(state => _extends({}, state, {\n        preferencePanel\n      }));\n    }\n    return params;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n};","import { createSelectorV8 } from \"../../../utils/createSelector.js\";\nimport { GridEditModes } from \"../../../models/gridEditRowModel.js\";\n\n/**\n * Select the row editing state.\n */\nexport const gridEditRowsStateSelector = state => state.editRows;\nexport const gridRowIsEditingSelector = createSelectorV8(gridEditRowsStateSelector, (editRows, {\n  rowId,\n  editMode\n}) => editMode === GridEditModes.Row && Boolean(editRows[rowId]));\nexport const gridEditCellStateSelector = createSelectorV8(gridEditRowsStateSelector, (editRows, {\n  rowId,\n  field\n}) => editRows[rowId]?.[field] ?? null);","export const getDefaultCellValue = colDef => {\n  switch (colDef.type) {\n    case 'boolean':\n      return false;\n    case 'date':\n    case 'dateTime':\n    case 'number':\n      return undefined;\n    case 'singleSelect':\n      return null;\n    case 'string':\n    default:\n      return '';\n  }\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\", \"field\"],\n  _excluded2 = [\"id\", \"field\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridCellEditStartReasons, GridCellEditStopReasons } from \"../../../models/params/gridEditCellParams.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridCellEditing = (apiRef, props) => {\n  const [cellModesModel, setCellModesModel] = React.useState({});\n  const cellModesModelRef = React.useRef(cellModesModel);\n  const prevCellModesModel = React.useRef({});\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    cellModesModel: cellModesModelProp,\n    onCellModesModelChange\n  } = props;\n  const runIfEditModeIsCell = callback => (...args) => {\n    if (props.editMode === GridEditModes.Cell) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, field, mode) => {\n    if (apiRef.current.getCellMode(id, field) !== mode) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (params.cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('cellEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.View) {\n      return;\n    }\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.View) {\n      return;\n    }\n    const newParams = _extends({}, params, {\n      reason: GridCellEditStopReasons.cellFocusOut\n    });\n    apiRef.current.publishEvent('cellEditStop', newParams, event);\n  }, [apiRef]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridCellModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridCellEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        reason = event.shiftKey ? GridCellEditStopReasons.shiftTabKeyDown : GridCellEditStopReasons.tabKeyDown;\n        event.preventDefault(); // Prevent going to the next element in the tab sequence\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason\n        });\n        apiRef.current.publishEvent('cellEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'cell'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridCellEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridCellEditStartReasons.pasteKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridCellEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridCellEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const newParams = _extends({}, params, {\n          reason,\n          key: event.key\n        });\n        apiRef.current.publishEvent('cellEditStart', newParams, event);\n      }\n    }\n  }, [apiRef]);\n  const handleCellEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startCellEditModeParams = {\n      id,\n      field\n    };\n    if (reason === GridCellEditStartReasons.printableKeyDown || reason === GridCellEditStartReasons.deleteKeyDown || reason === GridCellEditStartReasons.pasteKeyDown) {\n      startCellEditModeParams.deleteValue = true;\n    }\n    apiRef.current.startCellEditMode(startCellEditModeParams);\n  }, [apiRef]);\n  const handleCellEditStop = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    let cellToFocusAfter;\n    if (reason === GridCellEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridCellEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridCellEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopCellEditMode({\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  const runIfNoFieldErrors = callback => async (...args) => {\n    if (callback) {\n      const {\n        id,\n        field\n      } = args[0];\n      const editRowsState = apiRef.current.state.editRows;\n      const hasFieldErrors = editRowsState[id][field]?.error;\n      if (!hasFieldErrors) {\n        callback(...args);\n      }\n    }\n  };\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsCell(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsCell(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsCell(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'cellEditStart', runIfEditModeIsCell(handleCellEditStart));\n  useGridApiEventHandler(apiRef, 'cellEditStop', runIfEditModeIsCell(handleCellEditStop));\n  useGridApiOptionHandler(apiRef, 'cellEditStart', props.onCellEditStart);\n  useGridApiOptionHandler(apiRef, 'cellEditStop', runIfNoFieldErrors(props.onCellEditStop));\n  const getCellMode = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const isEditing = editingState[id] && editingState[id][field];\n    return isEditing ? GridCellModes.Edit : GridCellModes.View;\n  }, [apiRef]);\n  const updateCellModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.cellModesModel;\n    if (onCellModesModelChange && isNewModelDifferentFromProp) {\n      onCellModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.cellModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setCellModesModel(newModel);\n    cellModesModelRef.current = newModel;\n    apiRef.current.publishEvent('cellModesModelChange', newModel);\n  });\n  const updateFieldInCellModesModel = React.useCallback((id, field, newProps) => {\n    // We use the ref because it always contain the up-to-date value, different from the state\n    // that needs a rerender to reflect the new value\n    const newModel = _extends({}, cellModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newModel[id], {\n        [field]: _extends({}, newProps)\n      });\n    } else {\n      const _newModel$id = newModel[id],\n        otherFields = _objectWithoutPropertiesLoose(_newModel$id, [field].map(_toPropertyKey)); // Ensure that we have a new object, not a reference\n      newModel[id] = otherFields;\n      if (Object.keys(newModel[id]).length === 0) {\n        delete newModel[id];\n      }\n    }\n    updateCellModesModel(newModel);\n  }, [updateCellModesModel]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.View);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.Edit\n    }, other));\n  }, [throwIfNotEditable, throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStartCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      deleteValue,\n      initialValue\n    } = params;\n    const value = apiRef.current.getCellValue(id, field);\n    let newValue = value;\n    if (deleteValue) {\n      newValue = getDefaultCellValue(apiRef.current.getColumn(field));\n    } else if (initialValue) {\n      newValue = initialValue;\n    }\n    const column = apiRef.current.getColumn(field);\n    const shouldProcessEditCellProps = !!column.preProcessEditCellProps && deleteValue;\n    let newProps = {\n      value: newValue,\n      error: false,\n      isProcessingProps: shouldProcessEditCellProps\n    };\n    updateOrDeleteFieldState(id, field, newProps);\n    apiRef.current.setCellFocus(id, field);\n    if (shouldProcessEditCellProps) {\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row: apiRef.current.getRow(id),\n        props: newProps,\n        hasChanged: newValue !== value\n      }));\n      // Check if still in edit mode before updating\n      if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n        const editingState = gridEditRowsStateSelector(apiRef.current.state);\n        updateOrDeleteFieldState(id, field, _extends({}, newProps, {\n          value: editingState[id][field].value,\n          isProcessingProps: false\n        }));\n      }\n    }\n  });\n  const stopCellEditMode = React.useCallback(params => {\n    const {\n        id,\n        field\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    updateFieldInCellModesModel(id, field, _extends({\n      mode: GridCellModes.View\n    }, other));\n  }, [throwIfNotInMode, updateFieldInCellModesModel]);\n  const updateStateToStopCellEditMode = useEventCallback(async params => {\n    const {\n      id,\n      field,\n      ignoreModifications,\n      cellToFocusAfter = 'none'\n    } = params;\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    apiRef.current.runPendingEditCellValueMutation(id, field);\n    const finishCellEditMode = () => {\n      updateOrDeleteFieldState(id, field, null);\n      updateFieldInCellModesModel(id, field, null);\n      if (cellToFocusAfter !== 'none') {\n        apiRef.current.moveFocusToRelativeCell(id, field, cellToFocusAfter);\n      }\n    };\n    if (ignoreModifications) {\n      finishCellEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const {\n      error,\n      isProcessingProps\n    } = editingState[id][field];\n    if (error || isProcessingProps) {\n      // Attempt to change cell mode to \"view\" was not successful\n      // Update previous mode to allow another attempt\n      prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n      // Revert the mode in the cellModesModel prop back to \"edit\"\n      updateFieldInCellModesModel(id, field, {\n        mode: GridCellModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevCellModesModel.current[id][field].mode = GridCellModes.Edit;\n        // Revert the mode in the cellModesModel prop back to \"edit\"\n        updateFieldInCellModesModel(id, field, {\n          mode: GridCellModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        const row = apiRef.current.getRow(id);\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishCellEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishCellEditMode();\n    }\n  });\n  const setCellEditingEditCellValue = React.useCallback(async params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    throwIfNotInMode(id, field, GridCellModes.Edit);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (column.preProcessEditCellProps) {\n      const hasChanged = value !== editingState[id][field].value;\n      newProps = _extends({}, newProps, {\n        isProcessingProps: true\n      });\n      updateOrDeleteFieldState(id, field, newProps);\n      newProps = await Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row,\n        props: newProps,\n        hasChanged\n      }));\n    }\n\n    // Check again if the cell is in edit mode because the user may have\n    // discarded the changes while the props were being processed.\n    if (apiRef.current.getCellMode(id, field) === GridCellModes.View) {\n      return false;\n    }\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    newProps = _extends({}, newProps, {\n      isProcessingProps: false\n    });\n    // We don't update the value with the one coming from the props pre-processing\n    // because when the promise resolves it may be already outdated. The only\n    // exception to this rule is when there's no pre-processing.\n    newProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n    updateOrDeleteFieldState(id, field, newProps);\n    editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return !editingState[id]?.[field]?.error;\n  }, [apiRef, throwIfNotEditable, throwIfNotInMode, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromCellEditing = React.useCallback((id, field) => {\n    const column = apiRef.current.getColumn(field);\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id] || !editingState[id][field]) {\n      return apiRef.current.getRow(id);\n    }\n    const {\n      value\n    } = editingState[id][field];\n    return column.valueSetter ? column.valueSetter(value, row, column, apiRef) : _extends({}, row, {\n      [field]: value\n    });\n  }, [apiRef]);\n  const editingApi = {\n    getCellMode,\n    startCellEditMode,\n    stopCellEditMode\n  };\n  const editingPrivateApi = {\n    setCellEditingEditCellValue,\n    getRowWithUpdatedValuesFromCellEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (cellModesModelProp) {\n      updateCellModesModel(cellModesModelProp);\n    }\n  }, [cellModesModelProp, updateCellModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopCellEditMode may change it later\n    const copyOfPrevCellModes = prevCellModesModel.current;\n    prevCellModesModel.current = deepClone(cellModesModel); // Do a deep-clone because the attributes might be changed later\n\n    Object.entries(cellModesModel).forEach(([id, fields]) => {\n      Object.entries(fields).forEach(([field, params]) => {\n        const prevMode = copyOfPrevCellModes[id]?.[field]?.mode || GridCellModes.View;\n        const originalId = rowsLookup[id] ? apiRef.current.getRowId(rowsLookup[id]) : id;\n        if (params.mode === GridCellModes.Edit && prevMode === GridCellModes.View) {\n          updateStateToStartCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        } else if (params.mode === GridCellModes.View && prevMode === GridCellModes.Edit) {\n          updateStateToStopCellEditMode(_extends({\n            id: originalId,\n            field\n          }, params));\n        }\n      });\n    });\n  }, [apiRef, cellModesModel, updateStateToStartCellEditMode, updateStateToStopCellEditMode]);\n};","/**\n * Object passed as parameter in the row callbacks.\n * @demos\n *   - [Master detail](/x/react-data-grid/master-detail/)\n */\n/**\n * Object passed as parameter in the row `getRowClassName` callback prop.\n * @demos\n *   - [Styling rows](/x/react-data-grid/style/#styling-rows)\n */\n/**\n * Object passed as parameter in the row `getRowHeight` callback prop.\n */\n/**\n * The getRowHeight return value.\n */\nvar GridRowEditStartReasons = /*#__PURE__*/function (GridRowEditStartReasons) {\n  GridRowEditStartReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStartReasons[\"cellDoubleClick\"] = \"cellDoubleClick\";\n  GridRowEditStartReasons[\"printableKeyDown\"] = \"printableKeyDown\";\n  GridRowEditStartReasons[\"deleteKeyDown\"] = \"deleteKeyDown\";\n  return GridRowEditStartReasons;\n}(GridRowEditStartReasons || {});\n/**\n * Params passed to the `rowEditStart` event.\n */\nvar GridRowEditStopReasons = /*#__PURE__*/function (GridRowEditStopReasons) {\n  GridRowEditStopReasons[\"rowFocusOut\"] = \"rowFocusOut\";\n  GridRowEditStopReasons[\"escapeKeyDown\"] = \"escapeKeyDown\";\n  GridRowEditStopReasons[\"enterKeyDown\"] = \"enterKeyDown\";\n  GridRowEditStopReasons[\"tabKeyDown\"] = \"tabKeyDown\";\n  GridRowEditStopReasons[\"shiftTabKeyDown\"] = \"shiftTabKeyDown\";\n  return GridRowEditStopReasons;\n}(GridRowEditStopReasons || {});\n/**\n * Object passed as parameter in the row `getRowSpacing` callback prop.\n * @demos\n *   - [Row spacing](/x/react-data-grid/row-height/#row-spacing)\n */\n/**\n * The getRowSpacing return value.\n */\n// https://github.com/mui/mui-x/pull/3738#discussion_r798504277\nexport { GridRowEditStartReasons, GridRowEditStopReasons };","import _toPropertyKey from \"@babel/runtime/helpers/esm/toPropertyKey\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"id\"],\n  _excluded2 = [\"id\"];\nimport * as React from 'react';\nimport { unstable_useEventCallback as useEventCallback, unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { useGridApiEventHandler, useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridEditModes, GridRowModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridEditRowsStateSelector, gridRowIsEditingSelector } from \"./gridEditingSelectors.js\";\nimport { isPrintableKey, isPasteShortcut } from \"../../../utils/keyboardUtils.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridRowsLookupSelector } from \"../rows/gridRowsSelector.js\";\nimport { deepClone } from \"../../../utils/utils.js\";\nimport { GridRowEditStopReasons, GridRowEditStartReasons } from \"../../../models/params/gridRowParams.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { getDefaultCellValue } from \"./utils.js\";\nexport const useGridRowEditing = (apiRef, props) => {\n  const [rowModesModel, setRowModesModel] = React.useState({});\n  const rowModesModelRef = React.useRef(rowModesModel);\n  const prevRowModesModel = React.useRef({});\n  const focusTimeout = React.useRef(undefined);\n  const nextFocusedCell = React.useRef(null);\n  const {\n    processRowUpdate,\n    onProcessRowUpdateError,\n    rowModesModel: rowModesModelProp,\n    onRowModesModelChange\n  } = props;\n  const runIfEditModeIsRow = callback => (...args) => {\n    if (props.editMode === GridEditModes.Row) {\n      callback(...args);\n    }\n  };\n  const throwIfNotEditable = React.useCallback((id, field) => {\n    const params = apiRef.current.getCellParams(id, field);\n    if (!apiRef.current.isCellEditable(params)) {\n      throw new Error(`MUI X: The cell with id=${id} and field=${field} is not editable.`);\n    }\n  }, [apiRef]);\n  const throwIfNotInMode = React.useCallback((id, mode) => {\n    if (apiRef.current.getRowMode(id) !== mode) {\n      throw new Error(`MUI X: The row with id=${id} is not in ${mode} mode.`);\n    }\n  }, [apiRef]);\n  const hasFieldsWithErrors = React.useCallback(rowId => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return Object.values(editingState[rowId]).some(fieldProps => fieldProps.error);\n  }, [apiRef]);\n  const handleCellDoubleClick = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.Edit) {\n      return;\n    }\n    const rowParams = apiRef.current.getRowParams(params.id);\n    const newParams = _extends({}, rowParams, {\n      field: params.field,\n      reason: GridRowEditStartReasons.cellDoubleClick\n    });\n    apiRef.current.publishEvent('rowEditStart', newParams, event);\n  }, [apiRef]);\n  const handleCellFocusIn = React.useCallback(params => {\n    nextFocusedCell.current = params;\n  }, []);\n  const handleCellFocusOut = React.useCallback((params, event) => {\n    if (!params.isEditable) {\n      return;\n    }\n    if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n      return;\n    }\n    // The mechanism to detect if we can stop editing a row is different from\n    // the cell editing. Instead of triggering it when clicking outside a cell,\n    // we must check if another cell in the same row was not clicked. To achieve\n    // that, first we keep track of all cells that gained focus. When a cell loses\n    // focus we check if the next cell that received focus is from a different row.\n    nextFocusedCell.current = null;\n    focusTimeout.current = setTimeout(() => {\n      if (nextFocusedCell.current?.id !== params.id) {\n        // The row might have been deleted during the click\n        if (!apiRef.current.getRow(params.id)) {\n          return;\n        }\n\n        // The row may already changed its mode\n        if (apiRef.current.getRowMode(params.id) === GridRowModes.View) {\n          return;\n        }\n        if (hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason: GridRowEditStopReasons.rowFocusOut\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    });\n  }, [apiRef, hasFieldsWithErrors]);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(focusTimeout.current);\n    };\n  }, []);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    if (params.cellMode === GridRowModes.Edit) {\n      // Wait until IME is settled for Asian languages like Japanese and Chinese\n      // TODO: to replace at one point. See https://github.com/mui/material-ui/pull/39713#discussion_r1381678957.\n      if (event.which === 229) {\n        return;\n      }\n      let reason;\n      if (event.key === 'Escape') {\n        reason = GridRowEditStopReasons.escapeKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStopReasons.enterKeyDown;\n      } else if (event.key === 'Tab') {\n        const columnFields = gridVisibleColumnFieldsSelector(apiRef).filter(field => {\n          const column = apiRef.current.getColumn(field);\n          if (column.type === GRID_ACTIONS_COLUMN_TYPE) {\n            return true;\n          }\n          return apiRef.current.isCellEditable(apiRef.current.getCellParams(params.id, field));\n        });\n        if (event.shiftKey) {\n          if (params.field === columnFields[0]) {\n            // Exit if user pressed Shift+Tab on the first field\n            reason = GridRowEditStopReasons.shiftTabKeyDown;\n          }\n        } else if (params.field === columnFields[columnFields.length - 1]) {\n          // Exit if user pressed Tab on the last field\n          reason = GridRowEditStopReasons.tabKeyDown;\n        }\n\n        // Always prevent going to the next element in the tab sequence because the focus is\n        // handled manually to support edit components rendered inside Portals\n        event.preventDefault();\n        if (!reason) {\n          const index = columnFields.findIndex(field => field === params.field);\n          const nextFieldToFocus = columnFields[event.shiftKey ? index - 1 : index + 1];\n          apiRef.current.setCellFocus(params.id, nextFieldToFocus);\n        }\n      }\n      if (reason) {\n        if (reason !== GridRowEditStopReasons.escapeKeyDown && hasFieldsWithErrors(params.id)) {\n          return;\n        }\n        const newParams = _extends({}, apiRef.current.getRowParams(params.id), {\n          reason,\n          field: params.field\n        });\n        apiRef.current.publishEvent('rowEditStop', newParams, event);\n      }\n    } else if (params.isEditable) {\n      let reason;\n      const canStartEditing = apiRef.current.unstable_applyPipeProcessors('canStartEditing', true, {\n        event,\n        cellParams: params,\n        editMode: 'row'\n      });\n      if (!canStartEditing) {\n        return;\n      }\n      if (isPrintableKey(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (isPasteShortcut(event)) {\n        reason = GridRowEditStartReasons.printableKeyDown;\n      } else if (event.key === 'Enter') {\n        reason = GridRowEditStartReasons.enterKeyDown;\n      } else if (event.key === 'Backspace' || event.key === 'Delete') {\n        reason = GridRowEditStartReasons.deleteKeyDown;\n      }\n      if (reason) {\n        const rowParams = apiRef.current.getRowParams(params.id);\n        const newParams = _extends({}, rowParams, {\n          field: params.field,\n          reason\n        });\n        apiRef.current.publishEvent('rowEditStart', newParams, event);\n      }\n    }\n  }, [apiRef, hasFieldsWithErrors]);\n  const handleRowEditStart = React.useCallback(params => {\n    const {\n      id,\n      field,\n      reason\n    } = params;\n    const startRowEditModeParams = {\n      id,\n      fieldToFocus: field\n    };\n    if (reason === GridRowEditStartReasons.printableKeyDown || reason === GridRowEditStartReasons.deleteKeyDown) {\n      startRowEditModeParams.deleteValue = !!field;\n    }\n    apiRef.current.startRowEditMode(startRowEditModeParams);\n  }, [apiRef]);\n  const handleRowEditStop = React.useCallback(params => {\n    const {\n      id,\n      reason,\n      field\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    let cellToFocusAfter;\n    if (reason === GridRowEditStopReasons.enterKeyDown) {\n      cellToFocusAfter = 'below';\n    } else if (reason === GridRowEditStopReasons.tabKeyDown) {\n      cellToFocusAfter = 'right';\n    } else if (reason === GridRowEditStopReasons.shiftTabKeyDown) {\n      cellToFocusAfter = 'left';\n    }\n    const ignoreModifications = reason === 'escapeKeyDown';\n    apiRef.current.stopRowEditMode({\n      id,\n      ignoreModifications,\n      field,\n      cellToFocusAfter\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'cellDoubleClick', runIfEditModeIsRow(handleCellDoubleClick));\n  useGridApiEventHandler(apiRef, 'cellFocusIn', runIfEditModeIsRow(handleCellFocusIn));\n  useGridApiEventHandler(apiRef, 'cellFocusOut', runIfEditModeIsRow(handleCellFocusOut));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfEditModeIsRow(handleCellKeyDown));\n  useGridApiEventHandler(apiRef, 'rowEditStart', runIfEditModeIsRow(handleRowEditStart));\n  useGridApiEventHandler(apiRef, 'rowEditStop', runIfEditModeIsRow(handleRowEditStop));\n  useGridApiOptionHandler(apiRef, 'rowEditStart', props.onRowEditStart);\n  useGridApiOptionHandler(apiRef, 'rowEditStop', props.onRowEditStop);\n  const getRowMode = React.useCallback(id => {\n    const isEditing = gridRowIsEditingSelector(apiRef, {\n      rowId: id,\n      editMode: props.editMode\n    });\n    return isEditing ? GridRowModes.Edit : GridRowModes.View;\n  }, [apiRef, props.editMode]);\n  const updateRowModesModel = useEventCallback(newModel => {\n    const isNewModelDifferentFromProp = newModel !== props.rowModesModel;\n    if (onRowModesModelChange && isNewModelDifferentFromProp) {\n      onRowModesModelChange(newModel, {\n        api: apiRef.current\n      });\n    }\n    if (props.rowModesModel && isNewModelDifferentFromProp) {\n      return; // The prop always win\n    }\n    setRowModesModel(newModel);\n    rowModesModelRef.current = newModel;\n    apiRef.current.publishEvent('rowModesModelChange', newModel);\n  });\n  const updateRowInRowModesModel = React.useCallback((id, newProps) => {\n    const newModel = _extends({}, rowModesModelRef.current);\n    if (newProps !== null) {\n      newModel[id] = _extends({}, newProps);\n    } else {\n      delete newModel[id];\n    }\n    updateRowModesModel(newModel);\n  }, [updateRowModesModel]);\n  const updateOrDeleteRowState = React.useCallback((id, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = newProps;\n      } else {\n        delete newEditingState[id];\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const updateOrDeleteFieldState = React.useCallback((id, field, newProps) => {\n    apiRef.current.setState(state => {\n      const newEditingState = _extends({}, state.editRows);\n      if (newProps !== null) {\n        newEditingState[id] = _extends({}, newEditingState[id], {\n          [field]: _extends({}, newProps)\n        });\n      } else {\n        delete newEditingState[id][field];\n        if (Object.keys(newEditingState[id]).length === 0) {\n          delete newEditingState[id];\n        }\n      }\n      return _extends({}, state, {\n        editRows: newEditingState\n      });\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const startRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded);\n    throwIfNotInMode(id, GridRowModes.View);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.Edit\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStartRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      fieldToFocus,\n      deleteValue,\n      initialValue\n    } = params;\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const newProps = columnFields.reduce((acc, field) => {\n      const cellParams = apiRef.current.getCellParams(id, field);\n      if (!cellParams.isEditable) {\n        return acc;\n      }\n      const column = apiRef.current.getColumn(field);\n      let newValue = apiRef.current.getCellValue(id, field);\n      if (fieldToFocus === field && (deleteValue || initialValue)) {\n        if (deleteValue) {\n          newValue = getDefaultCellValue(column);\n        } else if (initialValue) {\n          newValue = initialValue;\n        }\n      }\n      acc[field] = {\n        value: newValue,\n        error: false,\n        isProcessingProps: !!column.preProcessEditCellProps && deleteValue\n      };\n      return acc;\n    }, {});\n    updateOrDeleteRowState(id, newProps);\n    if (fieldToFocus) {\n      apiRef.current.setCellFocus(id, fieldToFocus);\n    }\n    columnFields.filter(field => !!apiRef.current.getColumn(field).preProcessEditCellProps && deleteValue).forEach(field => {\n      const column = apiRef.current.getColumn(field);\n      const value = apiRef.current.getCellValue(id, field);\n      const newValue = deleteValue ? getDefaultCellValue(column) : initialValue ?? value;\n      Promise.resolve(column.preProcessEditCellProps({\n        id,\n        row: apiRef.current.getRow(id),\n        props: newProps[field],\n        hasChanged: newValue !== value\n      })).then(processedProps => {\n        // Check if still in edit mode before updating\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          const editingState = gridEditRowsStateSelector(apiRef.current.state);\n          updateOrDeleteFieldState(id, field, _extends({}, processedProps, {\n            value: editingState[id][field].value,\n            isProcessingProps: false\n          }));\n        }\n      });\n    });\n  });\n  const stopRowEditMode = React.useCallback(params => {\n    const {\n        id\n      } = params,\n      other = _objectWithoutPropertiesLoose(params, _excluded2);\n    throwIfNotInMode(id, GridRowModes.Edit);\n    updateRowInRowModesModel(id, _extends({\n      mode: GridRowModes.View\n    }, other));\n  }, [throwIfNotInMode, updateRowInRowModesModel]);\n  const updateStateToStopRowEditMode = useEventCallback(params => {\n    const {\n      id,\n      ignoreModifications,\n      field: focusedField,\n      cellToFocusAfter = 'none'\n    } = params;\n    apiRef.current.runPendingEditCellValueMutation(id);\n    const finishRowEditMode = () => {\n      if (cellToFocusAfter !== 'none' && focusedField) {\n        apiRef.current.moveFocusToRelativeCell(id, focusedField, cellToFocusAfter);\n      }\n      updateOrDeleteRowState(id, null);\n      updateRowInRowModesModel(id, null);\n    };\n    if (ignoreModifications) {\n      finishRowEditMode();\n      return;\n    }\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    const isSomeFieldProcessingProps = Object.values(editingState[id]).some(fieldProps => fieldProps.isProcessingProps);\n    if (isSomeFieldProcessingProps) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      return;\n    }\n    if (hasFieldsWithErrors(id)) {\n      prevRowModesModel.current[id].mode = GridRowModes.Edit;\n      // Revert the mode in the rowModesModel prop back to \"edit\"\n      updateRowInRowModesModel(id, {\n        mode: GridRowModes.Edit\n      });\n      return;\n    }\n    const rowUpdate = apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n    if (processRowUpdate) {\n      const handleError = errorThrown => {\n        prevRowModesModel.current[id].mode = GridRowModes.Edit;\n        // Revert the mode in the rowModesModel prop back to \"edit\"\n        updateRowInRowModesModel(id, {\n          mode: GridRowModes.Edit\n        });\n        if (onProcessRowUpdateError) {\n          onProcessRowUpdateError(errorThrown);\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(['MUI X: A call to `processRowUpdate` threw an error which was not handled because `onProcessRowUpdateError` is missing.', 'To handle the error pass a callback to the `onProcessRowUpdateError` prop, for example `<DataGrid onProcessRowUpdateError={(error) => ...} />`.', 'For more detail, see https://mui.com/x/react-data-grid/editing/#server-side-persistence.'], 'error');\n        }\n      };\n      try {\n        Promise.resolve(processRowUpdate(rowUpdate, row, {\n          rowId: id\n        })).then(finalRowUpdate => {\n          apiRef.current.updateRows([finalRowUpdate]);\n          finishRowEditMode();\n        }).catch(handleError);\n      } catch (errorThrown) {\n        handleError(errorThrown);\n      }\n    } else {\n      apiRef.current.updateRows([rowUpdate]);\n      finishRowEditMode();\n    }\n  });\n  const setRowEditingEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      value,\n      debounceMs,\n      unstable_skipValueParser: skipValueParser\n    } = params;\n    throwIfNotEditable(id, field);\n    const column = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    let parsedValue = value;\n    if (column.valueParser && !skipValueParser) {\n      parsedValue = column.valueParser(value, row, column, apiRef);\n    }\n    let editingState = gridEditRowsStateSelector(apiRef.current.state);\n    let newProps = _extends({}, editingState[id][field], {\n      value: parsedValue,\n      changeReason: debounceMs ? 'debouncedSetEditCellValue' : 'setEditCellValue'\n    });\n    if (!column.preProcessEditCellProps) {\n      updateOrDeleteFieldState(id, field, newProps);\n    }\n    return new Promise(resolve => {\n      const promises = [];\n      if (column.preProcessEditCellProps) {\n        const hasChanged = newProps.value !== editingState[id][field].value;\n        newProps = _extends({}, newProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, field, newProps);\n        const _editingState$id = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id, [field].map(_toPropertyKey));\n        const promise = Promise.resolve(column.preProcessEditCellProps({\n          id,\n          row,\n          props: newProps,\n          hasChanged,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          // We don't reuse the value from the props pre-processing because when the\n          // promise resolves it may be already outdated. The only exception to this rule\n          // is when there's no pre-processing.\n          processedProps.value = column.preProcessEditCellProps ? editingState[id][field].value : parsedValue;\n          updateOrDeleteFieldState(id, field, processedProps);\n        });\n        promises.push(promise);\n      }\n      Object.entries(editingState[id]).forEach(([thisField, fieldProps]) => {\n        if (thisField === field) {\n          return;\n        }\n        const fieldColumn = apiRef.current.getColumn(thisField);\n        if (!fieldColumn.preProcessEditCellProps) {\n          return;\n        }\n        fieldProps = _extends({}, fieldProps, {\n          isProcessingProps: true\n        });\n        updateOrDeleteFieldState(id, thisField, fieldProps);\n        editingState = gridEditRowsStateSelector(apiRef.current.state);\n        const _editingState$id2 = editingState[id],\n          otherFieldsProps = _objectWithoutPropertiesLoose(_editingState$id2, [thisField].map(_toPropertyKey));\n        const promise = Promise.resolve(fieldColumn.preProcessEditCellProps({\n          id,\n          row,\n          props: fieldProps,\n          hasChanged: false,\n          otherFieldsProps\n        })).then(processedProps => {\n          // Check again if the row is in edit mode because the user may have\n          // discarded the changes while the props were being processed.\n          if (apiRef.current.getRowMode(id) === GridRowModes.View) {\n            resolve(false);\n            return;\n          }\n          processedProps = _extends({}, processedProps, {\n            isProcessingProps: false\n          });\n          updateOrDeleteFieldState(id, thisField, processedProps);\n        });\n        promises.push(promise);\n      });\n      Promise.all(promises).then(() => {\n        if (apiRef.current.getRowMode(id) === GridRowModes.Edit) {\n          editingState = gridEditRowsStateSelector(apiRef.current.state);\n          resolve(!editingState[id][field].error);\n        } else {\n          resolve(false);\n        }\n      });\n    });\n  }, [apiRef, throwIfNotEditable, updateOrDeleteFieldState]);\n  const getRowWithUpdatedValuesFromRowEditing = React.useCallback(id => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    const row = apiRef.current.getRow(id);\n    if (!editingState[id]) {\n      return apiRef.current.getRow(id);\n    }\n    let rowUpdate = _extends({}, row);\n    Object.entries(editingState[id]).forEach(([field, fieldProps]) => {\n      const column = apiRef.current.getColumn(field);\n      if (column.valueSetter) {\n        rowUpdate = column.valueSetter(fieldProps.value, rowUpdate, column, apiRef);\n      } else {\n        rowUpdate[field] = fieldProps.value;\n      }\n    });\n    return rowUpdate;\n  }, [apiRef]);\n  const editingApi = {\n    getRowMode,\n    startRowEditMode,\n    stopRowEditMode\n  };\n  const editingPrivateApi = {\n    setRowEditingEditCellValue,\n    getRowWithUpdatedValuesFromRowEditing\n  };\n  useGridApiMethod(apiRef, editingApi, 'public');\n  useGridApiMethod(apiRef, editingPrivateApi, 'private');\n  React.useEffect(() => {\n    if (rowModesModelProp) {\n      updateRowModesModel(rowModesModelProp);\n    }\n  }, [rowModesModelProp, updateRowModesModel]);\n\n  // Run this effect synchronously so that the keyboard event can impact the yet-to-be-rendered input.\n  useEnhancedEffect(() => {\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n\n    // Update the ref here because updateStateToStopRowEditMode may change it later\n    const copyOfPrevRowModesModel = prevRowModesModel.current;\n    prevRowModesModel.current = deepClone(rowModesModel); // Do a deep-clone because the attributes might be changed later\n\n    const ids = new Set([...Object.keys(rowModesModel), ...Object.keys(copyOfPrevRowModesModel)]);\n    Array.from(ids).forEach(id => {\n      const params = rowModesModel[id] ?? {\n        mode: GridRowModes.View\n      };\n      const prevMode = copyOfPrevRowModesModel[id]?.mode || GridRowModes.View;\n      const originalId = rowsLookup[id] ? apiRef.current.getRowId(rowsLookup[id]) : id;\n      if (params.mode === GridRowModes.Edit && prevMode === GridRowModes.View) {\n        updateStateToStartRowEditMode(_extends({\n          id: originalId\n        }, params));\n      } else if (params.mode === GridRowModes.View && prevMode === GridRowModes.Edit) {\n        updateStateToStopRowEditMode(_extends({\n          id: originalId\n        }, params));\n      }\n    });\n  }, [apiRef, rowModesModel, updateStateToStartRowEditMode, updateStateToStopRowEditMode]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridCellEditing } from \"./useGridCellEditing.js\";\nimport { GridCellModes, GridEditModes } from \"../../../models/gridEditRowModel.js\";\nimport { useGridRowEditing } from \"./useGridRowEditing.js\";\nimport { gridEditRowsStateSelector } from \"./gridEditingSelectors.js\";\nimport { isAutogeneratedRowNode } from \"../rows/gridRowsUtils.js\";\nexport const editingStateInitializer = state => _extends({}, state, {\n  editRows: {}\n});\nexport const useGridEditing = (apiRef, props) => {\n  useGridCellEditing(apiRef, props);\n  useGridRowEditing(apiRef, props);\n  const debounceMap = React.useRef({});\n  const {\n    isCellEditable: isCellEditableProp\n  } = props;\n  const isCellEditable = React.useCallback(params => {\n    if (isAutogeneratedRowNode(params.rowNode)) {\n      return false;\n    }\n    if (!params.colDef.editable) {\n      return false;\n    }\n    if (!params.colDef.renderEditCell) {\n      return false;\n    }\n    if (isCellEditableProp) {\n      return isCellEditableProp(params);\n    }\n    return true;\n  }, [isCellEditableProp]);\n  const maybeDebounce = (id, field, debounceMs, callback) => {\n    if (!debounceMs) {\n      callback();\n      return;\n    }\n    if (!debounceMap.current[id]) {\n      debounceMap.current[id] = {};\n    }\n    if (debounceMap.current[id][field]) {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n    }\n\n    // To run the callback immediately without waiting the timeout\n    const runImmediately = () => {\n      const [timeout] = debounceMap.current[id][field];\n      clearTimeout(timeout);\n      callback();\n      delete debounceMap.current[id][field];\n    };\n    const timeout = setTimeout(() => {\n      callback();\n      delete debounceMap.current[id][field];\n    }, debounceMs);\n    debounceMap.current[id][field] = [timeout, runImmediately];\n  };\n  React.useEffect(() => {\n    const debounces = debounceMap.current;\n    return () => {\n      Object.entries(debounces).forEach(([id, fields]) => {\n        Object.keys(fields).forEach(field => {\n          const [timeout] = debounces[id][field];\n          clearTimeout(timeout);\n          delete debounces[id][field];\n        });\n      });\n    };\n  }, []);\n  const runPendingEditCellValueMutation = React.useCallback((id, field) => {\n    if (!debounceMap.current[id]) {\n      return;\n    }\n    if (!field) {\n      Object.keys(debounceMap.current[id]).forEach(debouncedField => {\n        const [, runCallback] = debounceMap.current[id][debouncedField];\n        runCallback();\n      });\n    } else if (debounceMap.current[id][field]) {\n      const [, runCallback] = debounceMap.current[id][field];\n      runCallback();\n    }\n  }, []);\n  const setEditCellValue = React.useCallback(params => {\n    const {\n      id,\n      field,\n      debounceMs\n    } = params;\n    return new Promise(resolve => {\n      maybeDebounce(id, field, debounceMs, async () => {\n        const setEditCellValueToCall = props.editMode === GridEditModes.Row ? apiRef.current.setRowEditingEditCellValue : apiRef.current.setCellEditingEditCellValue;\n\n        // Check if the cell is in edit mode\n        // By the time this callback runs the user may have cancelled the editing\n        if (apiRef.current.getCellMode(id, field) === GridCellModes.Edit) {\n          const result = await setEditCellValueToCall(params);\n          resolve(result);\n        }\n      });\n    });\n  }, [apiRef, props.editMode]);\n  const getRowWithUpdatedValues = React.useCallback((id, field) => {\n    return props.editMode === GridEditModes.Cell ? apiRef.current.getRowWithUpdatedValuesFromCellEditing(id, field) : apiRef.current.getRowWithUpdatedValuesFromRowEditing(id);\n  }, [apiRef, props.editMode]);\n  const getEditCellMeta = React.useCallback((id, field) => {\n    const editingState = gridEditRowsStateSelector(apiRef.current.state);\n    return editingState[id]?.[field] ?? null;\n  }, [apiRef]);\n  const editingSharedApi = {\n    isCellEditable,\n    setEditCellValue,\n    getRowWithUpdatedValues,\n    unstable_getEditCellMeta: getEditCellMeta\n  };\n  const editingSharedPrivateApi = {\n    runPendingEditCellValueMutation\n  };\n  useGridApiMethod(apiRef, editingSharedApi, 'public');\n  useGridApiMethod(apiRef, editingSharedPrivateApi, 'private');\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridRowCountSelector, gridRowsLookupSelector, gridRowTreeSelector, gridRowGroupingNameSelector, gridRowTreeDepthsSelector, gridDataRowIdsSelector, gridRowsDataRowIdToIdLookupSelector, gridRowMaximumTreeDepthSelector, gridRowGroupsToFetchSelector } from \"./gridRowsSelector.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridSortedRowIdsSelector } from \"../sorting/gridSortingSelector.js\";\nimport { gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { getTreeNodeDescendants, createRowsInternalCache, getRowsStateFromCache, isAutogeneratedRowNode, GRID_ROOT_GROUP_ID, GRID_ID_AUTOGENERATED, updateCacheWithNewRows, getTopLevelRowCount, getRowIdFromRowModel, computeRowsUpdates } from \"./gridRowsUtils.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nexport const rowsStateInitializer = (state, props, apiRef) => {\n  const isDataSourceAvailable = !!props.unstable_dataSource;\n  apiRef.current.caches.rows = createRowsInternalCache({\n    rows: isDataSourceAvailable ? [] : props.rows,\n    getRowId: props.getRowId,\n    loading: props.loading,\n    rowCount: props.rowCount\n  });\n  return _extends({}, state, {\n    rows: getRowsStateFromCache({\n      apiRef,\n      rowCountProp: props.rowCount,\n      loadingProp: isDataSourceAvailable ? true : props.loading,\n      previousTree: null,\n      previousTreeDepths: null\n    })\n  });\n};\nexport const useGridRows = (apiRef, props) => {\n  if (process.env.NODE_ENV !== 'production') {\n    try {\n      // Freeze the `rows` prop so developers have a fast failure if they try to use Array.prototype.push().\n      Object.freeze(props.rows);\n    } catch (error) {\n      // Sometimes, it's impossible to freeze, so we give up on it.\n    }\n  }\n  const logger = useGridLogger(apiRef, 'useGridRows');\n  const lastUpdateMs = React.useRef(Date.now());\n  const lastRowCount = React.useRef(props.rowCount);\n  const timeout = useTimeout();\n  const getRow = React.useCallback(id => {\n    const model = gridRowsLookupSelector(apiRef)[id];\n    if (model) {\n      return model;\n    }\n    const node = apiRef.current.getRowNode(id);\n    if (node && isAutogeneratedRowNode(node)) {\n      return {\n        [GRID_ID_AUTOGENERATED]: id\n      };\n    }\n    return null;\n  }, [apiRef]);\n  const getRowIdProp = props.getRowId;\n  const getRowId = React.useCallback(row => {\n    if (GRID_ID_AUTOGENERATED in row) {\n      return row[GRID_ID_AUTOGENERATED];\n    }\n    if (getRowIdProp) {\n      return getRowIdProp(row);\n    }\n    return row.id;\n  }, [getRowIdProp]);\n  const throttledRowsChange = React.useCallback(({\n    cache,\n    throttle\n  }) => {\n    const run = () => {\n      lastUpdateMs.current = Date.now();\n      apiRef.current.setState(state => _extends({}, state, {\n        rows: getRowsStateFromCache({\n          apiRef,\n          rowCountProp: props.rowCount,\n          loadingProp: props.loading,\n          previousTree: gridRowTreeSelector(apiRef),\n          previousTreeDepths: gridRowTreeDepthsSelector(apiRef),\n          previousGroupsToFetch: gridRowGroupsToFetchSelector(apiRef)\n        })\n      }));\n      apiRef.current.publishEvent('rowsSet');\n      apiRef.current.forceUpdate();\n    };\n    timeout.clear();\n    apiRef.current.caches.rows = cache;\n    if (!throttle) {\n      run();\n      return;\n    }\n    const throttleRemainingTimeMs = props.throttleRowsMs - (Date.now() - lastUpdateMs.current);\n    if (throttleRemainingTimeMs > 0) {\n      timeout.start(throttleRemainingTimeMs, run);\n      return;\n    }\n    run();\n  }, [props.throttleRowsMs, props.rowCount, props.loading, apiRef, timeout]);\n\n  /**\n   * API METHODS\n   */\n  const setRows = React.useCallback(rows => {\n    logger.debug(`Updating all rows, new length ${rows.length}`);\n    const cache = createRowsInternalCache({\n      rows,\n      getRowId: props.getRowId,\n      loading: props.loading,\n      rowCount: props.rowCount\n    });\n    const prevCache = apiRef.current.caches.rows;\n    cache.rowsBeforePartialUpdates = prevCache.rowsBeforePartialUpdates;\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [logger, props.getRowId, props.loading, props.rowCount, throttledRowsChange, apiRef]);\n  const updateRows = React.useCallback(updates => {\n    if (props.signature === GridSignature.DataGrid && updates.length > 1) {\n      throw new Error(['MUI X: You cannot update several rows at once in `apiRef.current.updateRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows\n    });\n    throttledRowsChange({\n      cache,\n      throttle: true\n    });\n  }, [props.signature, props.getRowId, throttledRowsChange, apiRef]);\n  const updateServerRows = React.useCallback((updates, groupKeys) => {\n    const nonPinnedRowsUpdates = computeRowsUpdates(apiRef, updates, props.getRowId);\n    const cache = updateCacheWithNewRows({\n      updates: nonPinnedRowsUpdates,\n      getRowId: props.getRowId,\n      previousCache: apiRef.current.caches.rows,\n      groupKeys: groupKeys ?? []\n    });\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [props.getRowId, throttledRowsChange, apiRef]);\n  const setLoading = React.useCallback(loading => {\n    if (loading === props.loading) {\n      return;\n    }\n    logger.debug(`Setting loading to ${loading}`);\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        loading\n      })\n    }));\n    apiRef.current.caches.rows.loadingPropBeforePartialUpdates = loading;\n  }, [props.loading, apiRef, logger]);\n  const getRowModels = React.useCallback(() => {\n    const dataRows = gridDataRowIdsSelector(apiRef);\n    const idRowsLookup = gridRowsLookupSelector(apiRef);\n    return new Map(dataRows.map(id => [id, idRowsLookup[id] ?? {}]));\n  }, [apiRef]);\n  const getRowsCount = React.useCallback(() => gridRowCountSelector(apiRef), [apiRef]);\n  const getAllRowIds = React.useCallback(() => gridDataRowIdsSelector(apiRef), [apiRef]);\n  const getRowIndexRelativeToVisibleRows = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    const {\n      rowToIndexMap\n    } = getVisibleRows(apiRef);\n    return rowToIndexMap.get(row);\n  }, [apiRef]);\n  const setRowChildrenExpansion = React.useCallback((id, isExpanded) => {\n    const currentNode = apiRef.current.getRowNode(id);\n    if (!currentNode) {\n      throw new Error(`MUI X: No row with id #${id} found.`);\n    }\n    if (currentNode.type !== 'group') {\n      throw new Error('MUI X: Only group nodes can be expanded or collapsed.');\n    }\n    const newNode = _extends({}, currentNode, {\n      childrenExpanded: isExpanded\n    });\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [id]: newNode\n          })\n        })\n      });\n    });\n    apiRef.current.forceUpdate();\n    apiRef.current.publishEvent('rowExpansionChange', newNode);\n  }, [apiRef]);\n  const getRowNode = React.useCallback(id => gridRowTreeSelector(apiRef)[id] ?? null, [apiRef]);\n  const getRowGroupChildren = React.useCallback(({\n    skipAutoGeneratedRows = true,\n    groupId,\n    applySorting,\n    applyFiltering\n  }) => {\n    const tree = gridRowTreeSelector(apiRef);\n    let children;\n    if (applySorting) {\n      const groupNode = tree[groupId];\n      if (!groupNode) {\n        return [];\n      }\n      const sortedRowIds = gridSortedRowIdsSelector(apiRef);\n      children = [];\n      const startIndex = sortedRowIds.findIndex(id => id === groupId) + 1;\n      for (let index = startIndex; index < sortedRowIds.length && tree[sortedRowIds[index]].depth > groupNode.depth; index += 1) {\n        const id = sortedRowIds[index];\n        if (!skipAutoGeneratedRows || !isAutogeneratedRowNode(tree[id])) {\n          children.push(id);\n        }\n      }\n    } else {\n      children = getTreeNodeDescendants(tree, groupId, skipAutoGeneratedRows);\n    }\n    if (applyFiltering) {\n      const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n      children = children.filter(childId => filteredRowsLookup[childId] !== false);\n    }\n    return children;\n  }, [apiRef]);\n  const setRowIndex = React.useCallback((rowId, targetIndex) => {\n    const node = apiRef.current.getRowNode(rowId);\n    if (!node) {\n      throw new Error(`MUI X: No row with id #${rowId} found.`);\n    }\n    if (node.parent !== GRID_ROOT_GROUP_ID) {\n      throw new Error(`MUI X: The row reordering do not support reordering of grouped rows yet.`);\n    }\n    if (node.type !== 'leaf') {\n      throw new Error(`MUI X: The row reordering do not support reordering of footer or grouping rows.`);\n    }\n    apiRef.current.setState(state => {\n      const group = gridRowTreeSelector(state, apiRef.current.instanceId)[GRID_ROOT_GROUP_ID];\n      const allRows = group.children;\n      const oldIndex = allRows.findIndex(row => row === rowId);\n      if (oldIndex === -1 || oldIndex === targetIndex) {\n        return state;\n      }\n      logger.debug(`Moving row ${rowId} to index ${targetIndex}`);\n      const updatedRows = [...allRows];\n      updatedRows.splice(targetIndex, 0, updatedRows.splice(oldIndex, 1)[0]);\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, {\n          tree: _extends({}, state.rows.tree, {\n            [GRID_ROOT_GROUP_ID]: _extends({}, group, {\n              children: updatedRows\n            })\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, logger]);\n  const replaceRows = React.useCallback((firstRowToRender, newRows) => {\n    if (props.signature === GridSignature.DataGrid && newRows.length > 1) {\n      throw new Error(['MUI X: You cannot replace rows using `apiRef.current.unstable_replaceRows` on the DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock this feature.'].join('\\n'));\n    }\n    if (newRows.length === 0) {\n      return;\n    }\n    const treeDepth = gridRowMaximumTreeDepthSelector(apiRef);\n    if (treeDepth > 1) {\n      throw new Error('`apiRef.current.unstable_replaceRows` is not compatible with tree data and row grouping');\n    }\n    const tree = _extends({}, gridRowTreeSelector(apiRef));\n    const dataRowIdToModelLookup = _extends({}, gridRowsLookupSelector(apiRef));\n    const dataRowIdToIdLookup = _extends({}, gridRowsDataRowIdToIdLookupSelector(apiRef));\n    const rootGroup = tree[GRID_ROOT_GROUP_ID];\n    const rootGroupChildren = [...rootGroup.children];\n    const seenIds = new Set();\n    for (let i = 0; i < newRows.length; i += 1) {\n      const rowModel = newRows[i];\n      const rowId = getRowIdFromRowModel(rowModel, props.getRowId, 'A row was provided without id when calling replaceRows().');\n      const [removedRowId] = rootGroupChildren.splice(firstRowToRender + i, 1, rowId);\n      if (!seenIds.has(removedRowId)) {\n        delete dataRowIdToModelLookup[removedRowId];\n        delete dataRowIdToIdLookup[removedRowId];\n        delete tree[removedRowId];\n      }\n      const rowTreeNodeConfig = {\n        id: rowId,\n        depth: 0,\n        parent: GRID_ROOT_GROUP_ID,\n        type: 'leaf',\n        groupingKey: null\n      };\n      dataRowIdToModelLookup[rowId] = rowModel;\n      dataRowIdToIdLookup[rowId] = rowId;\n      tree[rowId] = rowTreeNodeConfig;\n      seenIds.add(rowId);\n    }\n    tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n      children: rootGroupChildren\n    });\n\n    // Removes potential remaining skeleton rows from the dataRowIds.\n    const dataRowIds = rootGroupChildren.filter(childId => tree[childId]?.type === 'leaf');\n    apiRef.current.caches.rows.dataRowIdToModelLookup = dataRowIdToModelLookup;\n    apiRef.current.caches.rows.dataRowIdToIdLookup = dataRowIdToIdLookup;\n    apiRef.current.setState(state => _extends({}, state, {\n      rows: _extends({}, state.rows, {\n        dataRowIdToModelLookup,\n        dataRowIdToIdLookup,\n        dataRowIds,\n        tree\n      })\n    }));\n    apiRef.current.publishEvent('rowsSet');\n  }, [apiRef, props.signature, props.getRowId]);\n  const rowApi = {\n    getRow,\n    setLoading,\n    getRowId,\n    getRowModels,\n    getRowsCount,\n    getAllRowIds,\n    setRows,\n    updateRows,\n    getRowNode,\n    getRowIndexRelativeToVisibleRows,\n    unstable_replaceRows: replaceRows\n  };\n  const rowProApi = {\n    setRowIndex,\n    setRowChildrenExpansion,\n    getRowGroupChildren\n  };\n  const rowProPrivateApi = {\n    updateServerRows\n  };\n\n  /**\n   * EVENTS\n   */\n  const groupRows = React.useCallback(() => {\n    logger.info(`Row grouping pre-processing have changed, regenerating the row tree`);\n    let cache;\n    if (apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows) {\n      // The `props.rows` did not change since the last row grouping\n      // We can use the current rows cache which contains the partial updates done recently.\n      cache = _extends({}, apiRef.current.caches.rows, {\n        updates: {\n          type: 'full',\n          rows: gridDataRowIdsSelector(apiRef)\n        }\n      });\n    } else {\n      // The `props.rows` has changed since the last row grouping\n      // We must use the new `props.rows` on the new grouping\n      // This occurs because this event is triggered before the `useEffect` on the rows when both the grouping pre-processing and the rows changes on the same render\n      cache = createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      });\n    }\n    throttledRowsChange({\n      cache,\n      throttle: false\n    });\n  }, [logger, apiRef, props.rows, props.getRowId, props.loading, props.rowCount, throttledRowsChange]);\n  const previousDataSource = useLazyRef(() => props.unstable_dataSource);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (props.unstable_dataSource && props.unstable_dataSource !== previousDataSource.current) {\n      previousDataSource.current = props.unstable_dataSource;\n      return;\n    }\n    if (methodName === 'rowTreeCreation') {\n      groupRows();\n    }\n  }, [groupRows, previousDataSource, props.unstable_dataSource]);\n  const handleStrategyActivityChange = React.useCallback(() => {\n    // `rowTreeCreation` is the only processor ran when `strategyAvailabilityChange` is fired.\n    // All the other processors listen to `rowsSet` which will be published by the `groupRows` method below.\n    if (apiRef.current.getActiveStrategy('rowTree') !== gridRowGroupingNameSelector(apiRef)) {\n      groupRows();\n    }\n  }, [apiRef, groupRows]);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n  useGridApiEventHandler(apiRef, 'strategyAvailabilityChange', handleStrategyActivityChange);\n\n  /**\n   * APPLIERS\n   */\n  const applyHydrateRowsProcessor = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      const response = apiRef.current.unstable_applyPipeProcessors('hydrateRows', {\n        tree: gridRowTreeSelector(state, apiRef.current.instanceId),\n        treeDepths: gridRowTreeDepthsSelector(state, apiRef.current.instanceId),\n        dataRowIds: gridDataRowIdsSelector(state, apiRef.current.instanceId),\n        dataRowIdToModelLookup: gridRowsLookupSelector(state, apiRef.current.instanceId),\n        dataRowIdToIdLookup: gridRowsDataRowIdToIdLookupSelector(state, apiRef.current.instanceId)\n      });\n      return _extends({}, state, {\n        rows: _extends({}, state.rows, response, {\n          totalTopLevelRowCount: getTopLevelRowCount({\n            tree: response.tree,\n            rowCountProp: props.rowCount\n          })\n        })\n      });\n    });\n    apiRef.current.publishEvent('rowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, props.rowCount]);\n  useGridRegisterPipeApplier(apiRef, 'hydrateRows', applyHydrateRowsProcessor);\n  useGridApiMethod(apiRef, rowApi, 'public');\n  useGridApiMethod(apiRef, rowProApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n  useGridApiMethod(apiRef, rowProPrivateApi, 'private');\n\n  // The effect do not track any value defined synchronously during the 1st render by hooks called after `useGridRows`\n  // As a consequence, the state generated by the 1st run of this useEffect will always be equal to the initialization one\n  const isFirstRender = React.useRef(true);\n  React.useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    let isRowCountPropUpdated = false;\n    if (props.rowCount !== lastRowCount.current) {\n      isRowCountPropUpdated = true;\n      lastRowCount.current = props.rowCount;\n    }\n    const areNewRowsAlreadyInState = apiRef.current.caches.rows.rowsBeforePartialUpdates === props.rows;\n    const isNewLoadingAlreadyInState = apiRef.current.caches.rows.loadingPropBeforePartialUpdates === props.loading;\n    const isNewRowCountAlreadyInState = apiRef.current.caches.rows.rowCountPropBeforePartialUpdates === props.rowCount;\n\n    // The new rows have already been applied (most likely in the `'rowGroupsPreProcessingChange'` listener)\n    if (areNewRowsAlreadyInState) {\n      // If the loading prop has changed, we need to update its value in the state because it won't be done by `throttledRowsChange`\n      if (!isNewLoadingAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            loading: props.loading\n          })\n        }));\n        apiRef.current.caches.rows.loadingPropBeforePartialUpdates = props.loading;\n        apiRef.current.forceUpdate();\n      }\n      if (!isNewRowCountAlreadyInState) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rows: _extends({}, state.rows, {\n            totalRowCount: Math.max(props.rowCount || 0, state.rows.totalRowCount),\n            totalTopLevelRowCount: Math.max(props.rowCount || 0, state.rows.totalTopLevelRowCount)\n          })\n        }));\n        apiRef.current.caches.rows.rowCountPropBeforePartialUpdates = props.rowCount;\n        apiRef.current.forceUpdate();\n      }\n      if (!isRowCountPropUpdated) {\n        return;\n      }\n    }\n    logger.debug(`Updating all rows, new length ${props.rows?.length}`);\n    throttledRowsChange({\n      cache: createRowsInternalCache({\n        rows: props.rows,\n        getRowId: props.getRowId,\n        loading: props.loading,\n        rowCount: props.rowCount\n      }),\n      throttle: false\n    });\n  }, [props.rows, props.rowCount, props.getRowId, props.loading, logger, throttledRowsChange, apiRef]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GRID_DEFAULT_STRATEGY, useGridRegisterStrategyProcessor } from \"../../core/strategyProcessing/index.js\";\nimport { buildRootGroup, GRID_ROOT_GROUP_ID } from \"./gridRowsUtils.js\";\nconst createFlatRowTree = rows => {\n  const tree = {\n    [GRID_ROOT_GROUP_ID]: _extends({}, buildRootGroup(), {\n      children: rows\n    })\n  };\n  for (let i = 0; i < rows.length; i += 1) {\n    const rowId = rows[i];\n    tree[rowId] = {\n      id: rowId,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rows.length\n    },\n    dataRowIds: rows\n  };\n};\nconst updateFlatRowTree = ({\n  previousTree,\n  actions\n}) => {\n  const tree = _extends({}, previousTree);\n  const idsToRemoveFromRootGroup = {};\n  for (let i = 0; i < actions.remove.length; i += 1) {\n    const idToDelete = actions.remove[i];\n    idsToRemoveFromRootGroup[idToDelete] = true;\n    delete tree[idToDelete];\n  }\n  for (let i = 0; i < actions.insert.length; i += 1) {\n    const idToInsert = actions.insert[i];\n    tree[idToInsert] = {\n      id: idToInsert,\n      depth: 0,\n      parent: GRID_ROOT_GROUP_ID,\n      type: 'leaf',\n      groupingKey: null\n    };\n  }\n\n  // TODO rows v6: Support row unpinning\n\n  const rootGroup = tree[GRID_ROOT_GROUP_ID];\n  let rootGroupChildren = [...rootGroup.children, ...actions.insert];\n  if (Object.values(idsToRemoveFromRootGroup).length) {\n    rootGroupChildren = rootGroupChildren.filter(id => !idsToRemoveFromRootGroup[id]);\n  }\n  tree[GRID_ROOT_GROUP_ID] = _extends({}, rootGroup, {\n    children: rootGroupChildren\n  });\n  return {\n    groupingName: GRID_DEFAULT_STRATEGY,\n    tree,\n    treeDepths: {\n      0: rootGroupChildren.length\n    },\n    dataRowIds: rootGroupChildren\n  };\n};\nconst flatRowTreeCreationMethod = params => {\n  if (params.updates.type === 'full') {\n    return createFlatRowTree(params.updates.rows);\n  }\n  return updateFlatRowTree({\n    previousTree: params.previousTree,\n    actions: params.updates.actions\n  });\n};\nexport const useGridRowsPreProcessors = apiRef => {\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'rowTreeCreation', flatRowTreeCreationMethod);\n};","import * as React from 'react';\nimport { getGridCellElement, getGridColumnHeaderElement, getGridRowElement } from \"../../../utils/domUtils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\nexport class MissingRowIdError extends Error {}\n\n/**\n * @requires useGridColumns (method)\n * @requires useGridRows (method)\n * @requires useGridFocus (state)\n * @requires useGridEditing (method)\n * TODO: Impossible priority - useGridEditing also needs to be after useGridParamsApi\n * TODO: Impossible priority - useGridFocus also needs to be after useGridParamsApi\n */\nexport function useGridParamsApi(apiRef, props) {\n  const getColumnHeaderParams = React.useCallback(field => ({\n    field,\n    colDef: apiRef.current.getColumn(field)\n  }), [apiRef]);\n  const getRowParams = React.useCallback(id => {\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const params = {\n      id,\n      columns: apiRef.current.getAllColumns(),\n      row\n    };\n    return params;\n  }, [apiRef]);\n  const getCellParamsForRow = React.useCallback((id, field, row, {\n    cellMode,\n    colDef,\n    hasFocus,\n    rowNode,\n    tabIndex\n  }) => {\n    const rawValue = row[field];\n    const value = colDef?.valueGetter ? colDef.valueGetter(rawValue, row, colDef, apiRef) : rawValue;\n    const params = {\n      id,\n      field,\n      row,\n      rowNode,\n      colDef,\n      cellMode,\n      hasFocus,\n      tabIndex,\n      value,\n      formattedValue: value,\n      isEditable: false,\n      api: null\n    };\n    if (colDef && colDef.valueFormatter) {\n      params.formattedValue = colDef.valueFormatter(value, row, colDef, apiRef);\n    }\n    params.isEditable = colDef && apiRef.current.isCellEditable(params);\n    return params;\n  }, [apiRef]);\n  const getCellParams = React.useCallback((id, field) => {\n    const row = apiRef.current.getRow(id);\n    const rowNode = apiRef.current.getRowNode(id);\n    if (!row || !rowNode) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    const cellFocus = gridFocusCellSelector(apiRef);\n    const cellTabIndex = gridTabIndexCellSelector(apiRef);\n    const cellMode = apiRef.current.getCellMode(id, field);\n    return apiRef.current.getCellParamsForRow(id, field, row, {\n      colDef: props.unstable_listView && props.unstable_listColumn?.field === field ? gridListColumnSelector(apiRef.current.state) : apiRef.current.getColumn(field),\n      rowNode,\n      hasFocus: cellFocus !== null && cellFocus.field === field && cellFocus.id === id,\n      tabIndex: cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === id ? 0 : -1,\n      cellMode\n    });\n  }, [apiRef, props.unstable_listView, props.unstable_listColumn?.field]);\n  const getCellValue = React.useCallback((id, field) => {\n    const colDef = apiRef.current.getColumn(field);\n    const row = apiRef.current.getRow(id);\n    if (!row) {\n      throw new MissingRowIdError(`No row with id #${id} found`);\n    }\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    return colDef.valueGetter(row[colDef.field], row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowValue = React.useCallback((row, colDef) => {\n    const field = colDef.field;\n    if (!colDef || !colDef.valueGetter) {\n      return row[field];\n    }\n    const value = row[colDef.field];\n    return colDef.valueGetter(value, row, colDef, apiRef);\n  }, [apiRef]);\n  const getRowFormattedValue = React.useCallback((row, colDef) => {\n    const value = getRowValue(row, colDef);\n    if (!colDef || !colDef.valueFormatter) {\n      return value;\n    }\n    return colDef.valueFormatter(value, row, colDef, apiRef);\n  }, [apiRef, getRowValue]);\n  const getColumnHeaderElement = React.useCallback(field => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridColumnHeaderElement(apiRef.current.rootElementRef.current, field);\n  }, [apiRef]);\n  const getRowElement = React.useCallback(id => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridRowElement(apiRef.current.rootElementRef.current, id);\n  }, [apiRef]);\n  const getCellElement = React.useCallback((id, field) => {\n    if (!apiRef.current.rootElementRef.current) {\n      return null;\n    }\n    return getGridCellElement(apiRef.current.rootElementRef.current, {\n      id,\n      field\n    });\n  }, [apiRef]);\n  const paramsApi = {\n    getCellValue,\n    getCellParams,\n    getCellElement,\n    getRowValue,\n    getRowFormattedValue,\n    getRowParams,\n    getRowElement,\n    getColumnHeaderParams,\n    getColumnHeaderElement\n  };\n  const paramsPrivateApi = {\n    getCellParamsForRow\n  };\n  useGridApiMethod(apiRef, paramsApi, 'public');\n  useGridApiMethod(apiRef, paramsPrivateApi, 'private');\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { GridSignature, useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridRowsLookupSelector, gridRowMaximumTreeDepthSelector, gridRowTreeSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowSelectionStateSelector, selectedGridRowsSelector, selectedIdsLookupSelector } from \"./gridRowSelectionSelector.js\";\nimport { gridPaginatedVisibleSortedGridRowIdsSelector } from \"../pagination/index.js\";\nimport { gridFocusCellSelector } from \"../focus/gridFocusStateSelector.js\";\nimport { gridExpandedSortedRowIdsSelector, gridFilteredRowsLookupSelector } from \"../filter/gridFilterSelector.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_ACTIONS_COLUMN_TYPE } from \"../../../colDef/index.js\";\nimport { GridCellModes } from \"../../../models/gridEditRowModel.js\";\nimport { isKeyboardEvent, isNavigationKey } from \"../../../utils/keyboardUtils.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../internals/constants.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { isEventTargetInPortal } from \"../../../utils/domUtils.js\";\nimport { isMultipleRowSelectionEnabled, findRowsToSelect, findRowsToDeselect } from \"./utils.js\";\nconst getSelectionModelPropValue = (selectionModelProp, prevSelectionModel) => {\n  if (selectionModelProp == null) {\n    return selectionModelProp;\n  }\n  if (Array.isArray(selectionModelProp)) {\n    return selectionModelProp;\n  }\n  if (prevSelectionModel && prevSelectionModel[0] === selectionModelProp) {\n    return prevSelectionModel;\n  }\n  return [selectionModelProp];\n};\nexport const rowSelectionStateInitializer = (state, props) => _extends({}, state, {\n  rowSelection: props.rowSelection ? getSelectionModelPropValue(props.rowSelectionModel) ?? [] : []\n});\n\n/**\n * @requires useGridRows (state, method) - can be after\n * @requires useGridParamsApi (method) - can be after\n * @requires useGridFocus (state) - can be after\n * @requires useGridKeyboardNavigation (`cellKeyDown` event must first be consumed by it)\n */\nexport const useGridRowSelection = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSelection');\n  const runIfRowSelectionIsEnabled = React.useCallback(callback => (...args) => {\n    if (props.rowSelection) {\n      callback(...args);\n    }\n  }, [props.rowSelection]);\n  const applyAutoSelection = props.signature !== GridSignature.DataGrid && (props.rowSelectionPropagation?.parents || props.rowSelectionPropagation?.descendants);\n  const propRowSelectionModel = React.useMemo(() => {\n    return getSelectionModelPropValue(props.rowSelectionModel, gridRowSelectionStateSelector(apiRef.current.state));\n  }, [apiRef, props.rowSelectionModel]);\n  const lastRowToggled = React.useRef(null);\n  apiRef.current.registerControlState({\n    stateId: 'rowSelection',\n    propModel: propRowSelectionModel,\n    propOnChange: props.onRowSelectionModelChange,\n    stateSelector: gridRowSelectionStateSelector,\n    changeEvent: 'rowSelectionChange'\n  });\n  const {\n    checkboxSelection,\n    disableRowSelectionOnClick,\n    isRowSelectable: propIsRowSelectable\n  } = props;\n  const canHaveMultipleSelection = isMultipleRowSelectionEnabled(props);\n  const tree = useGridSelector(apiRef, gridRowTreeSelector);\n  const isNestedData = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector) > 1;\n  const expandMouseRowRangeSelection = React.useCallback(id => {\n    let endId = id;\n    const startId = lastRowToggled.current ?? id;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (isSelected) {\n      const visibleRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n      const startIndex = visibleRowIds.findIndex(rowId => rowId === startId);\n      const endIndex = visibleRowIds.findIndex(rowId => rowId === endId);\n      if (startIndex === endIndex) {\n        return;\n      }\n      if (startIndex > endIndex) {\n        endId = visibleRowIds[endIndex + 1];\n      } else {\n        endId = visibleRowIds[endIndex - 1];\n      }\n    }\n    lastRowToggled.current = id;\n    apiRef.current.selectRowRange({\n      startId,\n      endId\n    }, !isSelected);\n  }, [apiRef]);\n\n  /*\n   * API METHODS\n   */\n  const setRowSelectionModel = React.useCallback(model => {\n    if (props.signature === GridSignature.DataGrid && !canHaveMultipleSelection && Array.isArray(model) && model.length > 1) {\n      throw new Error(['MUI X: `rowSelectionModel` can only contain 1 item in DataGrid.', 'You need to upgrade to DataGridPro or DataGridPremium component to unlock multiple selection.'].join('\\n'));\n    }\n    const currentModel = gridRowSelectionStateSelector(apiRef.current.state);\n    if (currentModel !== model) {\n      logger.debug(`Setting selection model`);\n      apiRef.current.setState(state => _extends({}, state, {\n        rowSelection: props.rowSelection ? model : []\n      }));\n      apiRef.current.forceUpdate();\n    }\n  }, [apiRef, logger, props.rowSelection, props.signature, canHaveMultipleSelection]);\n  const isRowSelected = React.useCallback(id => gridRowSelectionStateSelector(apiRef.current.state).includes(id), [apiRef]);\n  const isRowSelectable = React.useCallback(id => {\n    if (props.rowSelection === false) {\n      return false;\n    }\n    if (propIsRowSelectable && !propIsRowSelectable(apiRef.current.getRowParams(id))) {\n      return false;\n    }\n    const rowNode = apiRef.current.getRowNode(id);\n    if (rowNode?.type === 'footer' || rowNode?.type === 'pinnedRow') {\n      return false;\n    }\n    return true;\n  }, [apiRef, props.rowSelection, propIsRowSelectable]);\n  const getSelectedRows = React.useCallback(() => selectedGridRowsSelector(apiRef), [apiRef]);\n  const selectRow = React.useCallback((id, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.isRowSelectable(id)) {\n      return;\n    }\n    lastRowToggled.current = id;\n    if (resetSelection) {\n      logger.debug(`Setting selection for row ${id}`);\n      const newSelection = [];\n      const addRow = rowId => {\n        newSelection.push(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      }\n      apiRef.current.setRowSelectionModel(newSelection);\n    } else {\n      logger.debug(`Toggling selection for row ${id}`);\n      const selection = gridRowSelectionStateSelector(apiRef.current.state);\n      const newSelection = new Set(selection);\n      newSelection.delete(id);\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      if (isSelected) {\n        addRow(id);\n        if (applyAutoSelection) {\n          findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n        }\n      } else if (applyAutoSelection) {\n        findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n      }\n      const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n      if (isSelectionValid) {\n        apiRef.current.setRowSelectionModel(Array.from(newSelection));\n      }\n    }\n  }, [apiRef, logger, applyAutoSelection, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents, canHaveMultipleSelection]);\n  const selectRows = React.useCallback((ids, isSelected = true, resetSelection = false) => {\n    logger.debug(`Setting selection for several rows`);\n    const selectableIds = ids.filter(id => apiRef.current.isRowSelectable(id));\n    let newSelection;\n    if (resetSelection) {\n      if (isSelected) {\n        newSelection = new Set(selectableIds);\n        if (applyAutoSelection) {\n          const addRow = rowId => {\n            newSelection.add(rowId);\n          };\n          selectableIds.forEach(id => {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          });\n        }\n      } else {\n        newSelection = new Set();\n      }\n      const currentLookup = selectedIdsLookupSelector(apiRef);\n      if (newSelection.size === Object.keys(currentLookup).length && Array.from(newSelection).every(id => currentLookup[id] === id)) {\n        return;\n      }\n    } else {\n      newSelection = new Set(Object.values(selectedIdsLookupSelector(apiRef)));\n      const addRow = rowId => {\n        newSelection.add(rowId);\n      };\n      const removeRow = rowId => {\n        newSelection.delete(rowId);\n      };\n      selectableIds.forEach(id => {\n        if (isSelected) {\n          newSelection.add(id);\n          if (applyAutoSelection) {\n            findRowsToSelect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, addRow);\n          }\n        } else {\n          removeRow(id);\n          if (applyAutoSelection) {\n            findRowsToDeselect(apiRef, tree, id, props.rowSelectionPropagation?.descendants ?? false, props.rowSelectionPropagation?.parents ?? false, removeRow);\n          }\n        }\n      });\n    }\n    const isSelectionValid = newSelection.size < 2 || canHaveMultipleSelection;\n    if (isSelectionValid) {\n      apiRef.current.setRowSelectionModel(Array.from(newSelection));\n    }\n  }, [logger, applyAutoSelection, canHaveMultipleSelection, apiRef, tree, props.rowSelectionPropagation?.descendants, props.rowSelectionPropagation?.parents]);\n  const selectRowRange = React.useCallback(({\n    startId,\n    endId\n  }, isSelected = true, resetSelection = false) => {\n    if (!apiRef.current.getRow(startId) || !apiRef.current.getRow(endId)) {\n      return;\n    }\n    logger.debug(`Expanding selection from row ${startId} to row ${endId}`);\n\n    // Using rows from all pages allow to select a range across several pages\n    const allPagesRowIds = gridExpandedSortedRowIdsSelector(apiRef);\n    const startIndex = allPagesRowIds.indexOf(startId);\n    const endIndex = allPagesRowIds.indexOf(endId);\n    const [start, end] = startIndex > endIndex ? [endIndex, startIndex] : [startIndex, endIndex];\n    const rowsBetweenStartAndEnd = allPagesRowIds.slice(start, end + 1);\n    apiRef.current.selectRows(rowsBetweenStartAndEnd, isSelected, resetSelection);\n  }, [apiRef, logger]);\n  const selectionPublicApi = {\n    selectRow,\n    setRowSelectionModel,\n    getSelectedRows,\n    isRowSelected,\n    isRowSelectable\n  };\n  const selectionPrivateApi = {\n    selectRows,\n    selectRowRange\n  };\n  useGridApiMethod(apiRef, selectionPublicApi, 'public');\n  useGridApiMethod(apiRef, selectionPrivateApi, props.signature === GridSignature.DataGrid ? 'private' : 'public');\n\n  /*\n   * EVENTS\n   */\n  const removeOutdatedSelection = React.useCallback((sortModelUpdated = false) => {\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    const rowsLookup = gridRowsLookupSelector(apiRef);\n    const filteredRowsLookup = gridFilteredRowsLookupSelector(apiRef);\n\n    // We clone the existing object to avoid mutating the same object returned by the selector to others part of the project\n    const selectionLookup = _extends({}, selectedIdsLookupSelector(apiRef));\n    const isNonExistent = id => {\n      if (props.filterMode === 'server') {\n        return !rowsLookup[id];\n      }\n      return !rowsLookup[id] || filteredRowsLookup[id] === false;\n    };\n    let hasChanged = false;\n    currentSelection.forEach(id => {\n      if (isNonExistent(id)) {\n        if (props.keepNonExistentRowsSelected) {\n          return;\n        }\n        delete selectionLookup[id];\n        hasChanged = true;\n        return;\n      }\n      if (!props.rowSelectionPropagation?.parents) {\n        return;\n      }\n      const node = tree[id];\n      if (node.type === 'group') {\n        const isAutoGenerated = node.isAutoGenerated;\n        if (isAutoGenerated) {\n          delete selectionLookup[id];\n          hasChanged = true;\n          return;\n        }\n        // Keep previously selected tree data parents selected if all their children are filtered out\n        if (!node.children.every(childId => filteredRowsLookup[childId] === false)) {\n          delete selectionLookup[id];\n          hasChanged = true;\n        }\n      }\n    });\n\n    // For nested data, on row tree updation (filtering, adding rows, etc.) when the selection is\n    // not empty, we need to re-run scanning of the tree to propagate the selection changes\n    // Example: A parent whose de-selected children are filtered out should now be selected\n    const shouldReapplyPropagation = isNestedData && props.rowSelectionPropagation?.parents && Object.keys(selectionLookup).length > 0;\n    if (hasChanged || shouldReapplyPropagation && !sortModelUpdated) {\n      const newSelection = Object.values(selectionLookup);\n      if (shouldReapplyPropagation) {\n        apiRef.current.selectRows(newSelection, true, true);\n      } else {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isNestedData, props.rowSelectionPropagation?.parents, props.keepNonExistentRowsSelected, props.filterMode, tree]);\n  const handleSingleRowSelection = React.useCallback((id, event) => {\n    const hasCtrlKey = event.metaKey || event.ctrlKey;\n\n    // multiple selection is only allowed if:\n    // - it is a checkboxSelection\n    // - it is a keyboard selection\n    // - Ctrl is pressed\n\n    const isMultipleSelectionDisabled = !checkboxSelection && !hasCtrlKey && !isKeyboardEvent(event);\n    const resetSelection = !canHaveMultipleSelection || isMultipleSelectionDisabled;\n    const isSelected = apiRef.current.isRowSelected(id);\n    if (resetSelection) {\n      apiRef.current.selectRow(id, !isMultipleSelectionDisabled ? !isSelected : true, true);\n    } else {\n      apiRef.current.selectRow(id, !isSelected, false);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection]);\n  const handleRowClick = React.useCallback((params, event) => {\n    if (disableRowSelectionOnClick) {\n      return;\n    }\n    const field = event.target.closest(`.${gridClasses.cell}`)?.getAttribute('data-field');\n    if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n      // click on checkbox should not trigger row selection\n      return;\n    }\n    if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n      // click to open the detail panel should not select the row\n      return;\n    }\n    if (field) {\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    const rowNode = apiRef.current.getRowNode(params.id);\n    if (rowNode.type === 'pinnedRow') {\n      return;\n    }\n    if (event.shiftKey && canHaveMultipleSelection) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      handleSingleRowSelection(params.id, event);\n    }\n  }, [disableRowSelectionOnClick, canHaveMultipleSelection, apiRef, expandMouseRowRangeSelection, handleSingleRowSelection]);\n  const preventSelectionOnShift = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.shiftKey) {\n      window.getSelection()?.removeAllRanges();\n    }\n  }, [canHaveMultipleSelection]);\n  const handleRowSelectionCheckboxChange = React.useCallback((params, event) => {\n    if (canHaveMultipleSelection && event.nativeEvent.shiftKey) {\n      expandMouseRowRangeSelection(params.id);\n    } else {\n      apiRef.current.selectRow(params.id, params.value, !canHaveMultipleSelection);\n    }\n  }, [apiRef, expandMouseRowRangeSelection, canHaveMultipleSelection]);\n  const handleHeaderSelectionCheckboxChange = React.useCallback(params => {\n    const rowsToBeSelected = props.pagination && props.checkboxSelectionVisibleOnly && props.paginationMode === 'client' ? gridPaginatedVisibleSortedGridRowIdsSelector(apiRef) : gridExpandedSortedRowIdsSelector(apiRef);\n    apiRef.current.selectRows(rowsToBeSelected, params.value);\n  }, [apiRef, props.checkboxSelectionVisibleOnly, props.pagination, props.paginationMode]);\n  const handleCellKeyDown = React.useCallback((params, event) => {\n    // Get the most recent cell mode because it may have been changed by another listener\n    if (apiRef.current.getCellMode(params.id, params.field) === GridCellModes.Edit) {\n      return;\n    }\n\n    // Ignore portal\n    // Do not apply shortcuts if the focus is not on the cell root component\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    if (isNavigationKey(event.key) && event.shiftKey) {\n      // The cell that has focus after the keyboard navigation\n      const focusCell = gridFocusCellSelector(apiRef);\n      if (focusCell && focusCell.id !== params.id) {\n        event.preventDefault();\n        const isNextRowSelected = apiRef.current.isRowSelected(focusCell.id);\n        if (!canHaveMultipleSelection) {\n          apiRef.current.selectRow(focusCell.id, !isNextRowSelected, true);\n          return;\n        }\n        const newRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(focusCell.id);\n        const previousRowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(params.id);\n        let start;\n        let end;\n        if (newRowIndex > previousRowIndex) {\n          if (isNextRowSelected) {\n            // We are navigating to the bottom of the page and adding selected rows\n            start = previousRowIndex;\n            end = newRowIndex - 1;\n          } else {\n            // We are navigating to the bottom of the page and removing selected rows\n            start = previousRowIndex;\n            end = newRowIndex;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (isNextRowSelected) {\n            // We are navigating to the top of the page and removing selected rows\n            start = newRowIndex + 1;\n            end = previousRowIndex;\n          } else {\n            // We are navigating to the top of the page and adding selected rows\n            start = newRowIndex;\n            end = previousRowIndex;\n          }\n        }\n        const visibleRows = getVisibleRows(apiRef);\n        const rowsBetweenStartAndEnd = visibleRows.rows.slice(start, end + 1).map(row => row.id);\n        apiRef.current.selectRows(rowsBetweenStartAndEnd, !isNextRowSelected);\n        return;\n      }\n    }\n    if (event.key === ' ' && event.shiftKey) {\n      event.preventDefault();\n      handleSingleRowSelection(params.id, event);\n      return;\n    }\n    if (String.fromCharCode(event.keyCode) === 'A' && (event.ctrlKey || event.metaKey)) {\n      event.preventDefault();\n      selectRows(apiRef.current.getAllRowIds(), true);\n    }\n  }, [apiRef, handleSingleRowSelection, selectRows, canHaveMultipleSelection]);\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIfRowSelectionIsEnabled(() => removeOutdatedSelection(true)));\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', runIfRowSelectionIsEnabled(removeOutdatedSelection));\n  useGridApiEventHandler(apiRef, 'rowClick', runIfRowSelectionIsEnabled(handleRowClick));\n  useGridApiEventHandler(apiRef, 'rowSelectionCheckboxChange', runIfRowSelectionIsEnabled(handleRowSelectionCheckboxChange));\n  useGridApiEventHandler(apiRef, 'headerSelectionCheckboxChange', handleHeaderSelectionCheckboxChange);\n  useGridApiEventHandler(apiRef, 'cellMouseDown', runIfRowSelectionIsEnabled(preventSelectionOnShift));\n  useGridApiEventHandler(apiRef, 'cellKeyDown', runIfRowSelectionIsEnabled(handleCellKeyDown));\n\n  /*\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    if (propRowSelectionModel !== undefined) {\n      apiRef.current.setRowSelectionModel(propRowSelectionModel);\n    }\n  }, [apiRef, propRowSelectionModel, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection) {\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, props.rowSelection]);\n  const isStateControlled = propRowSelectionModel != null;\n  React.useEffect(() => {\n    if (isStateControlled || !props.rowSelection) {\n      return;\n    }\n\n    // props.isRowSelectable changed\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (isRowSelectable) {\n      const newSelection = currentSelection.filter(id => isRowSelectable(id));\n      if (newSelection.length < currentSelection.length) {\n        apiRef.current.setRowSelectionModel(newSelection);\n      }\n    }\n  }, [apiRef, isRowSelectable, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    if (!props.rowSelection || isStateControlled) {\n      return;\n    }\n    const currentSelection = gridRowSelectionStateSelector(apiRef.current.state);\n    if (!canHaveMultipleSelection && currentSelection.length > 1) {\n      // See https://github.com/mui/mui-x/issues/8455\n      apiRef.current.setRowSelectionModel([]);\n    }\n  }, [apiRef, canHaveMultipleSelection, checkboxSelection, isStateControlled, props.rowSelection]);\n  React.useEffect(() => {\n    runIfRowSelectionIsEnabled(removeOutdatedSelection);\n  }, [removeOutdatedSelection, runIfRowSelectionIsEnabled]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/index.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF, GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/index.js\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  return React.useMemo(() => {\n    const slots = {\n      cellCheckbox: ['cellCheckbox'],\n      columnHeaderCheckbox: ['columnHeaderCheckbox']\n    };\n    return composeClasses(slots, getDataGridUtilityClass, classes);\n  }, [classes]);\n};\nexport const useGridRowSelectionPreProcessors = (apiRef, props) => {\n  const ownerState = {\n    classes: props.classes\n  };\n  const classes = useUtilityClasses(ownerState);\n  const updateSelectionColumn = React.useCallback(columnsState => {\n    const selectionColumn = _extends({}, GRID_CHECKBOX_SELECTION_COL_DEF, {\n      cellClassName: classes.cellCheckbox,\n      headerClassName: classes.columnHeaderCheckbox,\n      headerName: apiRef.current.getLocaleText('checkboxSelectionHeaderName')\n    });\n    const shouldHaveSelectionColumn = props.checkboxSelection;\n    const haveSelectionColumn = columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] != null;\n    if (shouldHaveSelectionColumn && !haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = selectionColumn;\n      columnsState.orderedFields = [GRID_CHECKBOX_SELECTION_FIELD, ...columnsState.orderedFields];\n    } else if (!shouldHaveSelectionColumn && haveSelectionColumn) {\n      delete columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD];\n      columnsState.orderedFields = columnsState.orderedFields.filter(field => field !== GRID_CHECKBOX_SELECTION_FIELD);\n    } else if (shouldHaveSelectionColumn && haveSelectionColumn) {\n      columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD] = _extends({}, selectionColumn, columnsState.lookup[GRID_CHECKBOX_SELECTION_FIELD]);\n    }\n    return columnsState;\n  }, [apiRef, classes, props.checkboxSelection]);\n  useGridRegisterPipeProcessor(apiRef, 'hydrateColumns', updateSelectionColumn);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnLookupSelector } from \"../columns/gridColumnsSelector.js\";\nimport { gridSortedRowEntriesSelector, gridSortedRowIdsSelector, gridSortModelSelector } from \"./gridSortingSelector.js\";\nimport { GRID_ROOT_GROUP_ID, gridRowTreeSelector } from \"../rows/index.js\";\nimport { useFirstRender } from \"../../utils/useFirstRender.js\";\nimport { useGridRegisterStrategyProcessor, GRID_DEFAULT_STRATEGY } from \"../../core/strategyProcessing/index.js\";\nimport { buildAggregatedSortingApplier, mergeStateWithSortModel, getNextGridSortDirection, sanitizeSortModel } from \"./gridSortingUtils.js\";\nimport { useGridRegisterPipeProcessor } from \"../../core/pipeProcessing/index.js\";\nimport { getTreeNodeDescendants } from \"../rows/gridRowsUtils.js\";\nexport const sortingStateInitializer = (state, props) => {\n  const sortModel = props.sortModel ?? props.initialState?.sorting?.sortModel ?? [];\n  return _extends({}, state, {\n    sorting: {\n      sortModel: sanitizeSortModel(sortModel, props.disableMultipleColumnsSorting),\n      sortedRows: []\n    }\n  });\n};\n\n/**\n * @requires useGridRows (event)\n * @requires useGridColumns (event)\n */\nexport const useGridSorting = (apiRef, props) => {\n  const logger = useGridLogger(apiRef, 'useGridSorting');\n  apiRef.current.registerControlState({\n    stateId: 'sortModel',\n    propModel: props.sortModel,\n    propOnChange: props.onSortModelChange,\n    stateSelector: gridSortModelSelector,\n    changeEvent: 'sortModelChange'\n  });\n  const upsertSortModel = React.useCallback((field, sortItem) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existingIdx = sortModel.findIndex(c => c.field === field);\n    let newSortModel = [...sortModel];\n    if (existingIdx > -1) {\n      if (sortItem?.sort == null) {\n        newSortModel.splice(existingIdx, 1);\n      } else {\n        newSortModel.splice(existingIdx, 1, sortItem);\n      }\n    } else {\n      newSortModel = [...sortModel, sortItem];\n    }\n    return newSortModel;\n  }, [apiRef]);\n  const createSortItem = React.useCallback((col, directionOverride) => {\n    const sortModel = gridSortModelSelector(apiRef);\n    const existing = sortModel.find(c => c.field === col.field);\n    if (existing) {\n      const nextSort = directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder, existing.sort) : directionOverride;\n      return nextSort === undefined ? undefined : _extends({}, existing, {\n        sort: nextSort\n      });\n    }\n    return {\n      field: col.field,\n      sort: directionOverride === undefined ? getNextGridSortDirection(col.sortingOrder ?? props.sortingOrder) : directionOverride\n    };\n  }, [apiRef, props.sortingOrder]);\n  const addColumnMenuItem = React.useCallback((columnMenuItems, colDef) => {\n    if (colDef == null || colDef.sortable === false || props.disableColumnSorting) {\n      return columnMenuItems;\n    }\n    const sortingOrder = colDef.sortingOrder || props.sortingOrder;\n    if (sortingOrder.some(item => !!item)) {\n      return [...columnMenuItems, 'columnMenuSortItem'];\n    }\n    return columnMenuItems;\n  }, [props.sortingOrder, props.disableColumnSorting]);\n\n  /**\n   * API METHODS\n   */\n  const applySorting = React.useCallback(() => {\n    apiRef.current.setState(state => {\n      if (props.sortingMode === 'server') {\n        logger.debug('Skipping sorting rows as sortingMode = server');\n        return _extends({}, state, {\n          sorting: _extends({}, state.sorting, {\n            sortedRows: getTreeNodeDescendants(gridRowTreeSelector(apiRef), GRID_ROOT_GROUP_ID, false)\n          })\n        });\n      }\n      const sortModel = gridSortModelSelector(state, apiRef.current.instanceId);\n      const sortRowList = buildAggregatedSortingApplier(sortModel, apiRef);\n      const sortedRows = apiRef.current.applyStrategyProcessor('sorting', {\n        sortRowList\n      });\n      return _extends({}, state, {\n        sorting: _extends({}, state.sorting, {\n          sortedRows\n        })\n      });\n    });\n    apiRef.current.publishEvent('sortedRowsSet');\n    apiRef.current.forceUpdate();\n  }, [apiRef, logger, props.sortingMode]);\n  const setSortModel = React.useCallback(model => {\n    const currentModel = gridSortModelSelector(apiRef);\n    if (currentModel !== model) {\n      logger.debug(`Setting sort model`);\n      apiRef.current.setState(mergeStateWithSortModel(model, props.disableMultipleColumnsSorting));\n      apiRef.current.forceUpdate();\n      apiRef.current.applySorting();\n    }\n  }, [apiRef, logger, props.disableMultipleColumnsSorting]);\n  const sortColumn = React.useCallback((field, direction, allowMultipleSorting) => {\n    const column = apiRef.current.getColumn(field);\n    const sortItem = createSortItem(column, direction);\n    let sortModel;\n    if (!allowMultipleSorting || props.disableMultipleColumnsSorting) {\n      sortModel = sortItem?.sort == null ? [] : [sortItem];\n    } else {\n      sortModel = upsertSortModel(column.field, sortItem);\n    }\n    apiRef.current.setSortModel(sortModel);\n  }, [apiRef, upsertSortModel, createSortItem, props.disableMultipleColumnsSorting]);\n  const getSortModel = React.useCallback(() => gridSortModelSelector(apiRef), [apiRef]);\n  const getSortedRows = React.useCallback(() => {\n    const sortedRows = gridSortedRowEntriesSelector(apiRef);\n    return sortedRows.map(row => row.model);\n  }, [apiRef]);\n  const getSortedRowIds = React.useCallback(() => gridSortedRowIdsSelector(apiRef), [apiRef]);\n  const getRowIdFromRowIndex = React.useCallback(index => apiRef.current.getSortedRowIds()[index], [apiRef]);\n  const sortApi = {\n    getSortModel,\n    getSortedRows,\n    getSortedRowIds,\n    getRowIdFromRowIndex,\n    setSortModel,\n    sortColumn,\n    applySorting\n  };\n  useGridApiMethod(apiRef, sortApi, 'public');\n\n  /**\n   * PRE-PROCESSING\n   */\n  const stateExportPreProcessing = React.useCallback((prevState, context) => {\n    const sortModelToExport = gridSortModelSelector(apiRef);\n    const shouldExportSortModel =\n    // Always export if the `exportOnlyDirtyModels` property is not activated\n    !context.exportOnlyDirtyModels ||\n    // Always export if the model is controlled\n    props.sortModel != null ||\n    // Always export if the model has been initialized\n    props.initialState?.sorting?.sortModel != null ||\n    // Export if the model is not empty\n    sortModelToExport.length > 0;\n    if (!shouldExportSortModel) {\n      return prevState;\n    }\n    return _extends({}, prevState, {\n      sorting: {\n        sortModel: sortModelToExport\n      }\n    });\n  }, [apiRef, props.sortModel, props.initialState?.sorting?.sortModel]);\n  const stateRestorePreProcessing = React.useCallback((params, context) => {\n    const sortModel = context.stateToRestore.sorting?.sortModel;\n    if (sortModel == null) {\n      return params;\n    }\n    apiRef.current.setState(mergeStateWithSortModel(sortModel, props.disableMultipleColumnsSorting));\n    return _extends({}, params, {\n      callbacks: [...params.callbacks, apiRef.current.applySorting]\n    });\n  }, [apiRef, props.disableMultipleColumnsSorting]);\n  const flatSortingMethod = React.useCallback(params => {\n    const rowTree = gridRowTreeSelector(apiRef);\n    const rootGroupNode = rowTree[GRID_ROOT_GROUP_ID];\n    const sortedChildren = params.sortRowList ? params.sortRowList(rootGroupNode.children.map(childId => rowTree[childId])) : [...rootGroupNode.children];\n    if (rootGroupNode.footerId != null) {\n      sortedChildren.push(rootGroupNode.footerId);\n    }\n    return sortedChildren;\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'exportState', stateExportPreProcessing);\n  useGridRegisterPipeProcessor(apiRef, 'restoreState', stateRestorePreProcessing);\n  useGridRegisterStrategyProcessor(apiRef, GRID_DEFAULT_STRATEGY, 'sorting', flatSortingMethod);\n\n  /**\n   * EVENTS\n   */\n  const handleColumnHeaderClick = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    const allowMultipleSorting = event.shiftKey || event.metaKey || event.ctrlKey;\n    sortColumn(field, undefined, allowMultipleSorting);\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnHeaderKeyDown = React.useCallback(({\n    field,\n    colDef\n  }, event) => {\n    if (!colDef.sortable || props.disableColumnSorting) {\n      return;\n    }\n    // Ctrl + Enter opens the column menu\n    if (event.key === 'Enter' && !event.ctrlKey && !event.metaKey) {\n      sortColumn(field, undefined, event.shiftKey);\n    }\n  }, [sortColumn, props.disableColumnSorting]);\n  const handleColumnsChange = React.useCallback(() => {\n    // When the columns change we check that the sorted columns are still part of the dataset\n    const sortModel = gridSortModelSelector(apiRef);\n    const latestColumns = gridColumnLookupSelector(apiRef);\n    if (sortModel.length > 0) {\n      const newModel = sortModel.filter(sortItem => latestColumns[sortItem.field]);\n      if (newModel.length < sortModel.length) {\n        apiRef.current.setSortModel(newModel);\n      }\n    }\n  }, [apiRef]);\n  const handleStrategyProcessorChange = React.useCallback(methodName => {\n    if (methodName === 'sorting') {\n      apiRef.current.applySorting();\n    }\n  }, [apiRef]);\n  useGridRegisterPipeProcessor(apiRef, 'columnMenu', addColumnMenuItem);\n  useGridApiEventHandler(apiRef, 'columnHeaderClick', handleColumnHeaderClick);\n  useGridApiEventHandler(apiRef, 'columnHeaderKeyDown', handleColumnHeaderKeyDown);\n  useGridApiEventHandler(apiRef, 'rowsSet', apiRef.current.applySorting);\n  useGridApiEventHandler(apiRef, 'columnsChange', handleColumnsChange);\n  useGridApiEventHandler(apiRef, 'activeStrategyProcessorChange', handleStrategyProcessorChange);\n\n  /**\n   * 1ST RENDER\n   */\n  useFirstRender(() => {\n    apiRef.current.applySorting();\n  });\n\n  /**\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    if (props.sortModel !== undefined) {\n      apiRef.current.setSortModel(props.sortModel);\n    }\n  }, [apiRef, props.sortModel]);\n};","import * as React from 'react';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridPageSelector, gridPageSizeSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { gridRowCountSelector } from \"../rows/gridRowsSelector.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { gridExpandedSortedRowEntriesSelector } from \"../filter/gridFilterSelector.js\";\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { gridListColumnSelector } from \"../listView/gridListViewSelectors.js\";\n\n// Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n// Similar to https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView\nfunction scrollIntoView(dimensions) {\n  const {\n    containerSize,\n    scrollPosition,\n    elementSize,\n    elementOffset\n  } = dimensions;\n  const elementEnd = elementOffset + elementSize;\n  // Always scroll to top when cell is higher than viewport to avoid scroll jump\n  // See https://github.com/mui/mui-x/issues/4513 and https://github.com/mui/mui-x/issues/4514\n  if (elementSize > containerSize) {\n    return elementOffset;\n  }\n  if (elementEnd - containerSize > scrollPosition) {\n    return elementEnd - containerSize;\n  }\n  if (elementOffset < scrollPosition) {\n    return elementOffset;\n  }\n  return undefined;\n}\n\n/**\n * @requires useGridPagination (state) - can be after, async only\n * @requires useGridColumns (state) - can be after, async only\n * @requires useGridRows (state) - can be after, async only\n * @requires useGridRowsMeta (state) - can be after, async only\n * @requires useGridFilter (state)\n * @requires useGridColumnSpanning (method)\n */\nexport const useGridScroll = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridScroll');\n  const colRef = apiRef.current.columnHeadersContainerRef;\n  const virtualScrollerRef = apiRef.current.virtualScrollerRef;\n  const visibleSortedRows = useGridSelector(apiRef, gridExpandedSortedRowEntriesSelector);\n  const scrollToIndexes = React.useCallback(params => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    const totalRowCount = gridRowCountSelector(apiRef);\n    const visibleColumns = props.unstable_listView ? [gridListColumnSelector(apiRef.current.state)] : gridVisibleColumnDefinitionsSelector(apiRef);\n    const scrollToHeader = params.rowIndex == null;\n    if (!scrollToHeader && totalRowCount === 0 || visibleColumns.length === 0) {\n      return false;\n    }\n    logger.debug(`Scrolling to cell at row ${params.rowIndex}, col: ${params.colIndex} `);\n    let scrollCoordinates = {};\n    if (params.colIndex !== undefined) {\n      const columnPositions = gridColumnPositionsSelector(apiRef);\n      let cellWidth;\n      if (typeof params.rowIndex !== 'undefined') {\n        const rowId = visibleSortedRows[params.rowIndex]?.id;\n        const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, params.colIndex);\n        if (cellColSpanInfo && !cellColSpanInfo.spannedByColSpan) {\n          cellWidth = cellColSpanInfo.cellProps.width;\n        }\n      }\n      if (typeof cellWidth === 'undefined') {\n        cellWidth = visibleColumns[params.colIndex].computedWidth;\n      }\n      // When using RTL, `scrollLeft` becomes negative, so we must ensure that we only compare values.\n      scrollCoordinates.left = scrollIntoView({\n        containerSize: dimensions.viewportOuterSize.width,\n        scrollPosition: Math.abs(virtualScrollerRef.current.scrollLeft),\n        elementSize: cellWidth,\n        elementOffset: columnPositions[params.colIndex]\n      });\n    }\n    if (params.rowIndex !== undefined) {\n      const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n      const page = gridPageSelector(apiRef);\n      const pageSize = gridPageSizeSelector(apiRef);\n      const elementIndex = !props.pagination ? params.rowIndex : params.rowIndex - page * pageSize;\n      const targetOffsetHeight = rowsMeta.positions[elementIndex + 1] ? rowsMeta.positions[elementIndex + 1] - rowsMeta.positions[elementIndex] : rowsMeta.currentPageTotalHeight - rowsMeta.positions[elementIndex];\n      scrollCoordinates.top = scrollIntoView({\n        containerSize: dimensions.viewportInnerSize.height,\n        scrollPosition: virtualScrollerRef.current.scrollTop,\n        elementSize: targetOffsetHeight,\n        elementOffset: rowsMeta.positions[elementIndex]\n      });\n    }\n    scrollCoordinates = apiRef.current.unstable_applyPipeProcessors('scrollToIndexes', scrollCoordinates, params);\n    if (typeof scrollCoordinates.left !== undefined || typeof scrollCoordinates.top !== undefined) {\n      apiRef.current.scroll(scrollCoordinates);\n      return true;\n    }\n    return false;\n  }, [logger, apiRef, virtualScrollerRef, props.pagination, visibleSortedRows, props.unstable_listView]);\n  const scroll = React.useCallback(params => {\n    if (virtualScrollerRef.current && params.left !== undefined && colRef.current) {\n      const direction = isRtl ? -1 : 1;\n      colRef.current.scrollLeft = params.left;\n      virtualScrollerRef.current.scrollLeft = direction * params.left;\n      logger.debug(`Scrolling left: ${params.left}`);\n    }\n    if (virtualScrollerRef.current && params.top !== undefined) {\n      virtualScrollerRef.current.scrollTop = params.top;\n      logger.debug(`Scrolling top: ${params.top}`);\n    }\n    logger.debug(`Scrolling, updating container, and viewport`);\n  }, [virtualScrollerRef, isRtl, colRef, logger]);\n  const getScrollPosition = React.useCallback(() => {\n    if (!virtualScrollerRef?.current) {\n      return {\n        top: 0,\n        left: 0\n      };\n    }\n    return {\n      top: virtualScrollerRef.current.scrollTop,\n      left: virtualScrollerRef.current.scrollLeft\n    };\n  }, [virtualScrollerRef]);\n  const scrollApi = {\n    scroll,\n    scrollToIndexes,\n    getScrollPosition\n  };\n  useGridApiMethod(apiRef, scrollApi, 'public');\n};","import { GridEditModes } from \"../models/gridEditRowModel.js\";\n/**\n * The default values of `DataGridPropsWithDefaultValues` to inject in the props of DataGrid.\n */\nexport const DATA_GRID_PROPS_DEFAULT_VALUES = {\n  autoHeight: false,\n  autoPageSize: false,\n  autosizeOnMount: false,\n  checkboxSelection: false,\n  checkboxSelectionVisibleOnly: false,\n  clipboardCopyCellDelimiter: '\\t',\n  columnBufferPx: 150,\n  columnHeaderHeight: 56,\n  disableAutosize: false,\n  disableColumnFilter: false,\n  disableColumnMenu: false,\n  disableColumnReorder: false,\n  disableColumnResize: false,\n  disableColumnSelector: false,\n  disableColumnSorting: false,\n  disableDensitySelector: false,\n  disableEval: false,\n  disableMultipleColumnsFiltering: false,\n  disableMultipleColumnsSorting: false,\n  disableMultipleRowSelection: false,\n  disableRowSelectionOnClick: false,\n  disableVirtualization: false,\n  editMode: GridEditModes.Cell,\n  filterDebounceMs: 150,\n  filterMode: 'client',\n  hideFooter: false,\n  hideFooterPagination: false,\n  hideFooterRowCount: false,\n  hideFooterSelectedRowCount: false,\n  ignoreDiacritics: false,\n  ignoreValueFormatterDuringExport: false,\n  // TODO v8: Update to 'select'\n  indeterminateCheckboxAction: 'deselect',\n  keepColumnPositionIfDraggedOutside: false,\n  keepNonExistentRowsSelected: false,\n  loading: false,\n  logger: console,\n  logLevel: process.env.NODE_ENV === 'production' ? 'error' : 'warn',\n  pageSizeOptions: [25, 50, 100],\n  pagination: false,\n  paginationMode: 'client',\n  resetPageOnSortFilter: false,\n  resizeThrottleMs: 60,\n  rowBufferPx: 150,\n  rowHeight: 52,\n  rowPositionsDebounceMs: 166,\n  rows: [],\n  rowSelection: true,\n  rowSpacingType: 'margin',\n  showCellVerticalBorder: false,\n  showColumnVerticalBorder: false,\n  sortingMode: 'client',\n  sortingOrder: ['asc', 'desc', null],\n  throttleRowsMs: 0,\n  unstable_rowSpanning: false,\n  virtualizeColumnsWithAutoRowHeight: false\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEnhancedEffect as useEnhancedEffect, unstable_useEventCallback as useEventCallback, unstable_ownerWindow as ownerWindow } from '@mui/utils';\nimport { throttle } from '@mui/x-internals/throttle';\nimport { useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { createSelector } from \"../../../utils/createSelector.js\";\nimport { useGridLogger } from \"../../utils/useGridLogger.js\";\nimport { gridColumnPositionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector } from \"../columns/index.js\";\nimport { gridDimensionsSelector } from \"./gridDimensionsSelectors.js\";\nimport { gridDensityFactorSelector } from \"../density/index.js\";\nimport { gridRenderContextSelector } from \"../virtualization/index.js\";\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRowsMetaSelector } from \"../rows/gridRowsMetaSelector.js\";\nimport { getValidRowHeight, rowHeightWarning } from \"../rows/gridRowsUtils.js\";\nimport { getTotalHeaderHeight } from \"../columns/gridColumnsUtils.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../../../constants/dataGridPropsDefaultValues.js\";\nimport { roundToDecimalPlaces } from \"../../../utils/roundToDecimalPlaces.js\";\nimport { isJSDOM } from \"../../../utils/isJSDOM.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\nconst EMPTY_SIZE = {\n  width: 0,\n  height: 0\n};\nconst EMPTY_DIMENSIONS = {\n  isReady: false,\n  root: EMPTY_SIZE,\n  viewportOuterSize: EMPTY_SIZE,\n  viewportInnerSize: EMPTY_SIZE,\n  contentSize: EMPTY_SIZE,\n  minimumSize: EMPTY_SIZE,\n  hasScrollX: false,\n  hasScrollY: false,\n  scrollbarSize: 0,\n  headerHeight: 0,\n  groupHeaderHeight: 0,\n  headerFilterHeight: 0,\n  rowWidth: 0,\n  rowHeight: 0,\n  columnsTotalWidth: 0,\n  leftPinnedWidth: 0,\n  rightPinnedWidth: 0,\n  headersTotalHeight: 0,\n  topContainerHeight: 0,\n  bottomContainerHeight: 0\n};\nexport const dimensionsStateInitializer = (state, props, apiRef) => {\n  const dimensions = EMPTY_DIMENSIONS;\n  const density = gridDensityFactorSelector(apiRef);\n  return _extends({}, state, {\n    dimensions: _extends({}, dimensions, getStaticDimensions(props, apiRef, density, gridVisiblePinnedColumnDefinitionsSelector(apiRef)))\n  });\n};\nconst columnsTotalWidthSelector = createSelector(gridVisibleColumnDefinitionsSelector, gridColumnPositionsSelector, (visibleColumns, positions) => {\n  const colCount = visibleColumns.length;\n  if (colCount === 0) {\n    return 0;\n  }\n  return roundToDecimalPlaces(positions[colCount - 1] + visibleColumns[colCount - 1].computedWidth, 1);\n});\nexport function useGridDimensions(apiRef, props) {\n  const logger = useGridLogger(apiRef, 'useResizeContainer');\n  const errorShown = React.useRef(false);\n  const rootDimensionsRef = React.useRef(EMPTY_SIZE);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const columnsTotalWidth = useGridSelector(apiRef, columnsTotalWidthSelector);\n  const isFirstSizing = React.useRef(true);\n  const {\n    rowHeight,\n    headerHeight,\n    groupHeaderHeight,\n    headerFilterHeight,\n    headersTotalHeight,\n    leftPinnedWidth,\n    rightPinnedWidth\n  } = getStaticDimensions(props, apiRef, densityFactor, pinnedColumns);\n  const previousSize = React.useRef(undefined);\n  const getRootDimensions = React.useCallback(() => gridDimensionsSelector(apiRef.current.state), [apiRef]);\n  const setDimensions = React.useCallback(dimensions => {\n    apiRef.current.setState(state => _extends({}, state, {\n      dimensions\n    }));\n    if (apiRef.current.rootElementRef.current) {\n      setCSSVariables(apiRef.current.rootElementRef.current, gridDimensionsSelector(apiRef.current.state));\n    }\n  }, [apiRef]);\n  const resize = React.useCallback(() => {\n    const element = apiRef.current.mainElementRef.current;\n    if (!element) {\n      return;\n    }\n    const computedStyle = ownerWindow(element).getComputedStyle(element);\n    const newSize = {\n      width: parseFloat(computedStyle.width) || 0,\n      height: parseFloat(computedStyle.height) || 0\n    };\n    if (!previousSize.current || !areElementSizesEqual(previousSize.current, newSize)) {\n      apiRef.current.publishEvent('resize', newSize);\n      previousSize.current = newSize;\n    }\n  }, [apiRef]);\n  const getViewportPageSize = React.useCallback(() => {\n    const dimensions = gridDimensionsSelector(apiRef.current.state);\n    if (!dimensions.isReady) {\n      return 0;\n    }\n    const currentPage = getVisibleRows(apiRef);\n\n    // TODO: Use a combination of scrollTop, dimensions.viewportInnerSize.height and rowsMeta.possitions\n    // to find out the maximum number of rows that can fit in the visible part of the grid\n    if (props.getRowHeight) {\n      const renderContext = gridRenderContextSelector(apiRef);\n      const viewportPageSize = renderContext.lastRowIndex - renderContext.firstRowIndex;\n      return Math.min(viewportPageSize - 1, currentPage.rows.length);\n    }\n    const maximumPageSizeWithoutScrollBar = Math.floor(dimensions.viewportInnerSize.height / rowHeight);\n    return Math.min(maximumPageSizeWithoutScrollBar, currentPage.rows.length);\n  }, [apiRef, props.getRowHeight, rowHeight]);\n  const updateDimensions = React.useCallback(() => {\n    if (isFirstSizing.current) {\n      return;\n    }\n    // All the floating point dimensions should be rounded to .1 decimal places to avoid subpixel rendering issues\n    // https://github.com/mui/mui-x/issues/9550#issuecomment-1619020477\n    // https://github.com/mui/mui-x/issues/15721\n    const rootElement = apiRef.current.rootElementRef.current;\n    const scrollbarSize = measureScrollbarSize(rootElement, props.scrollbarSize);\n    const rowsMeta = gridRowsMetaSelector(apiRef.current.state);\n    const topContainerHeight = headersTotalHeight + rowsMeta.pinnedTopRowsTotalHeight;\n    const bottomContainerHeight = rowsMeta.pinnedBottomRowsTotalHeight;\n    const nonPinnedColumnsTotalWidth = columnsTotalWidth - leftPinnedWidth - rightPinnedWidth;\n    const contentSize = {\n      width: nonPinnedColumnsTotalWidth,\n      height: roundToDecimalPlaces(rowsMeta.currentPageTotalHeight, 1)\n    };\n    let viewportOuterSize;\n    let viewportInnerSize;\n    let hasScrollX = false;\n    let hasScrollY = false;\n    if (props.autoHeight) {\n      hasScrollY = false;\n      hasScrollX = Math.round(columnsTotalWidth) > Math.round(rootDimensionsRef.current.width);\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: topContainerHeight + bottomContainerHeight + contentSize.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - (hasScrollY ? scrollbarSize : 0)),\n        height: Math.max(0, viewportOuterSize.height - (hasScrollX ? scrollbarSize : 0))\n      };\n    } else {\n      viewportOuterSize = {\n        width: rootDimensionsRef.current.width,\n        height: rootDimensionsRef.current.height\n      };\n      viewportInnerSize = {\n        width: Math.max(0, viewportOuterSize.width - leftPinnedWidth - rightPinnedWidth),\n        height: Math.max(0, viewportOuterSize.height - topContainerHeight - bottomContainerHeight)\n      };\n      const content = contentSize;\n      const container = viewportInnerSize;\n      const hasScrollXIfNoYScrollBar = content.width > container.width;\n      const hasScrollYIfNoXScrollBar = content.height > container.height;\n      if (hasScrollXIfNoYScrollBar || hasScrollYIfNoXScrollBar) {\n        hasScrollY = hasScrollYIfNoXScrollBar;\n        hasScrollX = content.width + (hasScrollY ? scrollbarSize : 0) > container.width;\n\n        // We recalculate the scroll y to consider the size of the x scrollbar.\n        if (hasScrollX) {\n          hasScrollY = content.height + scrollbarSize > container.height;\n        }\n      }\n      if (hasScrollY) {\n        viewportInnerSize.width -= scrollbarSize;\n      }\n      if (hasScrollX) {\n        viewportInnerSize.height -= scrollbarSize;\n      }\n    }\n    const rowWidth = Math.max(viewportOuterSize.width, columnsTotalWidth + (hasScrollY ? scrollbarSize : 0));\n    const minimumSize = {\n      width: columnsTotalWidth,\n      height: topContainerHeight + contentSize.height + bottomContainerHeight\n    };\n    const newDimensions = {\n      isReady: true,\n      root: rootDimensionsRef.current,\n      viewportOuterSize,\n      viewportInnerSize,\n      contentSize,\n      minimumSize,\n      hasScrollX,\n      hasScrollY,\n      scrollbarSize,\n      headerHeight,\n      groupHeaderHeight,\n      headerFilterHeight,\n      rowWidth,\n      rowHeight,\n      columnsTotalWidth,\n      leftPinnedWidth,\n      rightPinnedWidth,\n      headersTotalHeight,\n      topContainerHeight,\n      bottomContainerHeight\n    };\n    const prevDimensions = apiRef.current.state.dimensions;\n    if (isDeepEqual(prevDimensions, newDimensions)) {\n      return;\n    }\n    setDimensions(newDimensions);\n    if (!areElementSizesEqual(newDimensions.viewportInnerSize, prevDimensions.viewportInnerSize)) {\n      apiRef.current.publishEvent('viewportInnerSizeChange', newDimensions.viewportInnerSize);\n    }\n    apiRef.current.updateRenderContext?.();\n  }, [apiRef, setDimensions, props.scrollbarSize, props.autoHeight, rowHeight, headerHeight, groupHeaderHeight, headerFilterHeight, columnsTotalWidth, headersTotalHeight, leftPinnedWidth, rightPinnedWidth]);\n  const updateDimensionCallback = useEventCallback(updateDimensions);\n  const debouncedUpdateDimensions = React.useMemo(() => props.resizeThrottleMs > 0 ? throttle(() => {\n    updateDimensionCallback();\n    apiRef.current.publishEvent('debouncedResize', rootDimensionsRef.current);\n  }, props.resizeThrottleMs) : undefined, [apiRef, props.resizeThrottleMs, updateDimensionCallback]);\n  React.useEffect(() => debouncedUpdateDimensions?.clear, [debouncedUpdateDimensions]);\n  const apiPublic = {\n    resize,\n    getRootDimensions\n  };\n  const apiPrivate = {\n    updateDimensions,\n    getViewportPageSize\n  };\n  useEnhancedEffect(updateDimensions, [updateDimensions]);\n  useGridApiMethod(apiRef, apiPublic, 'public');\n  useGridApiMethod(apiRef, apiPrivate, 'private');\n  const handleRootMount = React.useCallback(root => {\n    setCSSVariables(root, gridDimensionsSelector(apiRef.current.state));\n  }, [apiRef]);\n  const handleResize = React.useCallback(size => {\n    rootDimensionsRef.current = size;\n    if (size.height === 0 && !errorShown.current && !props.autoHeight && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty height.', 'Please make sure that this element has an intrinsic height.', 'The grid displays with a height of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (size.width === 0 && !errorShown.current && !isJSDOM) {\n      logger.error(['The parent DOM element of the Data Grid has an empty width.', 'Please make sure that this element has an intrinsic width.', 'The grid displays with a width of 0px.', '', 'More details: https://mui.com/r/x-data-grid-no-dimensions.'].join('\\n'));\n      errorShown.current = true;\n    }\n    if (isFirstSizing.current || !debouncedUpdateDimensions) {\n      // We want to initialize the grid dimensions as soon as possible to avoid flickering\n      isFirstSizing.current = false;\n      updateDimensions();\n      return;\n    }\n    debouncedUpdateDimensions();\n  }, [updateDimensions, props.autoHeight, debouncedUpdateDimensions, logger]);\n  useGridApiOptionHandler(apiRef, 'rootMount', handleRootMount);\n  useGridApiOptionHandler(apiRef, 'resize', handleResize);\n  useGridApiOptionHandler(apiRef, 'debouncedResize', props.onResize);\n}\nfunction setCSSVariables(root, dimensions) {\n  const set = (k, v) => root.style.setProperty(k, v);\n  set('--DataGrid-hasScrollX', `${Number(dimensions.hasScrollX)}`);\n  set('--DataGrid-hasScrollY', `${Number(dimensions.hasScrollY)}`);\n  set('--DataGrid-scrollbarSize', `${dimensions.scrollbarSize}px`);\n  set('--DataGrid-rowWidth', `${dimensions.rowWidth}px`);\n  set('--DataGrid-columnsTotalWidth', `${dimensions.columnsTotalWidth}px`);\n  set('--DataGrid-leftPinnedWidth', `${dimensions.leftPinnedWidth}px`);\n  set('--DataGrid-rightPinnedWidth', `${dimensions.rightPinnedWidth}px`);\n  set('--DataGrid-headerHeight', `${dimensions.headerHeight}px`);\n  set('--DataGrid-headersTotalHeight', `${dimensions.headersTotalHeight}px`);\n  set('--DataGrid-topContainerHeight', `${dimensions.topContainerHeight}px`);\n  set('--DataGrid-bottomContainerHeight', `${dimensions.bottomContainerHeight}px`);\n  set('--height', `${dimensions.rowHeight}px`);\n}\nfunction getStaticDimensions(props, apiRef, density, pinnedColumnns) {\n  const validRowHeight = getValidRowHeight(props.rowHeight, DATA_GRID_PROPS_DEFAULT_VALUES.rowHeight, rowHeightWarning);\n  return {\n    rowHeight: Math.floor(validRowHeight * density),\n    headerHeight: Math.floor(props.columnHeaderHeight * density),\n    groupHeaderHeight: Math.floor((props.columnGroupHeaderHeight ?? props.columnHeaderHeight) * density),\n    headerFilterHeight: Math.floor((props.headerFilterHeight ?? props.columnHeaderHeight) * density),\n    columnsTotalWidth: columnsTotalWidthSelector(apiRef),\n    headersTotalHeight: getTotalHeaderHeight(apiRef, props),\n    leftPinnedWidth: pinnedColumnns.left.reduce((w, col) => w + col.computedWidth, 0),\n    rightPinnedWidth: pinnedColumnns.right.reduce((w, col) => w + col.computedWidth, 0)\n  };\n}\nconst scrollbarSizeCache = new WeakMap();\nfunction measureScrollbarSize(rootElement, scrollbarSize) {\n  if (scrollbarSize !== undefined) {\n    return scrollbarSize;\n  }\n  if (rootElement === null) {\n    return 0;\n  }\n  const cachedSize = scrollbarSizeCache.get(rootElement);\n  if (cachedSize !== undefined) {\n    return cachedSize;\n  }\n  const doc = ownerDocument(rootElement);\n  const scrollDiv = doc.createElement('div');\n  scrollDiv.style.width = '99px';\n  scrollDiv.style.height = '99px';\n  scrollDiv.style.position = 'absolute';\n  scrollDiv.style.overflow = 'scroll';\n  scrollDiv.className = 'scrollDiv';\n  rootElement.appendChild(scrollDiv);\n  const size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n  rootElement.removeChild(scrollDiv);\n  scrollbarSizeCache.set(rootElement, size);\n  return size;\n}\nfunction areElementSizesEqual(a, b) {\n  return a.width === b.width && a.height === b.height;\n}","export function throttle(func, wait = 166) {\n  let timeout;\n  let lastArgs;\n  const later = () => {\n    timeout = undefined;\n    func(...lastArgs);\n  };\n  function throttled(...args) {\n    lastArgs = args;\n    if (timeout === undefined) {\n      timeout = setTimeout(later, wait);\n    }\n  }\n  throttled.clear = () => {\n    clearTimeout(timeout);\n    timeout = undefined;\n  };\n  return throttled;\n}","/* eslint-disable */\n\n/**\n * HACK: Minimal shim to get jsdom to work.\n */\nexport const ResizeObserver = typeof globalThis.ResizeObserver !== 'undefined' ? globalThis.ResizeObserver : class ResizeObserver {\n  observe() {}\n  unobserve() {}\n  disconnect() {}\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { unstable_useEnhancedEffect as useEnhancedEffect } from '@mui/utils';\nimport { ResizeObserver } from \"../../../utils/ResizeObserver.js\";\nimport { useGridVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { eslintUseValue } from \"../../../utils/utils.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridDensityFactorSelector } from \"../density/densitySelector.js\";\nimport { gridPaginationSelector } from \"../pagination/gridPaginationSelector.js\";\nimport { useGridRegisterPipeApplier } from \"../../core/pipeProcessing/index.js\";\nimport { gridPinnedRowsSelector, gridRowCountSelector } from \"./gridRowsSelector.js\";\nimport { gridDimensionsSelector, gridRowHeightSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { getValidRowHeight, getRowHeightWarning } from \"./gridRowsUtils.js\";\n/* eslint-disable no-underscore-dangle */\n\nexport const rowsMetaStateInitializer = (state, props, apiRef) => {\n  apiRef.current.caches.rowsMeta = {\n    heights: new Map()\n  };\n  const baseRowHeight = gridRowHeightSelector(apiRef.current.state);\n  const dataRowCount = gridRowCountSelector(apiRef);\n  const pagination = gridPaginationSelector(apiRef.current.state);\n  const rowCount = Math.min(pagination.enabled ? pagination.paginationModel.pageSize : dataRowCount, dataRowCount);\n  return _extends({}, state, {\n    rowsMeta: {\n      currentPageTotalHeight: rowCount * baseRowHeight,\n      positions: Array.from({\n        length: rowCount\n      }, (_, i) => i * baseRowHeight),\n      pinnedTopRowsTotalHeight: 0,\n      pinnedBottomRowsTotalHeight: 0\n    }\n  });\n};\n\n/**\n * @requires useGridPageSize (method)\n * @requires useGridPage (method)\n */\nexport const useGridRowsMeta = (apiRef, props) => {\n  const {\n    getRowHeight: getRowHeightProp,\n    getRowSpacing,\n    getEstimatedRowHeight\n  } = props;\n  const heightCache = apiRef.current.caches.rowsMeta.heights;\n  const lastMeasuredRowIndex = React.useRef(-1);\n  const hasRowWithAutoHeight = React.useRef(false);\n  const isHeightMetaValid = React.useRef(false);\n  const densityFactor = useGridSelector(apiRef, gridDensityFactorSelector);\n  const currentPage = useGridVisibleRows(apiRef, props);\n  const pinnedRows = useGridSelector(apiRef, gridPinnedRowsSelector);\n  const rowHeight = useGridSelector(apiRef, gridRowHeightSelector);\n  const getRowHeightEntry = rowId => {\n    let entry = heightCache.get(rowId);\n    if (entry === undefined) {\n      entry = {\n        content: rowHeight,\n        spacingTop: 0,\n        spacingBottom: 0,\n        detail: 0,\n        autoHeight: false,\n        needsFirstMeasurement: true\n      };\n      heightCache.set(rowId, entry);\n    }\n    return entry;\n  };\n  const processHeightEntry = React.useCallback(row => {\n    // HACK: rowHeight trails behind the most up-to-date value just enough to\n    // mess the initial rowsMeta hydration :/\n    const baseRowHeight = gridDimensionsSelector(apiRef.current.state).rowHeight;\n    eslintUseValue(rowHeight);\n    const entry = apiRef.current.getRowHeightEntry(row.id);\n    if (!getRowHeightProp) {\n      entry.content = baseRowHeight;\n      entry.needsFirstMeasurement = false;\n    } else {\n      const rowHeightFromUser = getRowHeightProp(_extends({}, row, {\n        densityFactor\n      }));\n      if (rowHeightFromUser === 'auto') {\n        if (entry.needsFirstMeasurement) {\n          const estimatedRowHeight = getEstimatedRowHeight ? getEstimatedRowHeight(_extends({}, row, {\n            densityFactor\n          })) : baseRowHeight;\n\n          // If the row was not measured yet use the estimated row height\n          entry.content = estimatedRowHeight ?? baseRowHeight;\n        }\n        hasRowWithAutoHeight.current = true;\n        entry.autoHeight = true;\n      } else {\n        // Default back to base rowHeight if getRowHeight returns invalid value.\n        entry.content = getValidRowHeight(rowHeightFromUser, baseRowHeight, getRowHeightWarning);\n        entry.needsFirstMeasurement = false;\n        entry.autoHeight = false;\n      }\n    }\n    if (getRowSpacing) {\n      const indexRelativeToCurrentPage = apiRef.current.getRowIndexRelativeToVisibleRows(row.id);\n      const spacing = getRowSpacing(_extends({}, row, {\n        isFirstVisible: indexRelativeToCurrentPage === 0,\n        isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n        indexRelativeToCurrentPage\n      }));\n      entry.spacingTop = spacing.top ?? 0;\n      entry.spacingBottom = spacing.bottom ?? 0;\n    } else {\n      entry.spacingTop = 0;\n      entry.spacingBottom = 0;\n    }\n    apiRef.current.unstable_applyPipeProcessors('rowHeight', entry, row);\n    return entry;\n  }, [apiRef, currentPage.rows, getRowHeightProp, getEstimatedRowHeight, rowHeight, getRowSpacing, densityFactor]);\n  const hydrateRowsMeta = React.useCallback(() => {\n    hasRowWithAutoHeight.current = false;\n    const pinnedTopRowsTotalHeight = pinnedRows.top.reduce((acc, row) => {\n      const entry = processHeightEntry(row);\n      return acc + entry.content + entry.spacingTop + entry.spacingBottom + entry.detail;\n    }, 0);\n    const pinnedBottomRowsTotalHeight = pinnedRows.bottom.reduce((acc, row) => {\n      const entry = processHeightEntry(row);\n      return acc + entry.content + entry.spacingTop + entry.spacingBottom + entry.detail;\n    }, 0);\n    const positions = [];\n    const currentPageTotalHeight = currentPage.rows.reduce((acc, row) => {\n      positions.push(acc);\n      const entry = processHeightEntry(row);\n      const total = entry.content + entry.spacingTop + entry.spacingBottom + entry.detail;\n      return acc + total;\n    }, 0);\n    if (!hasRowWithAutoHeight.current) {\n      // No row has height=auto, so all rows are already measured\n      lastMeasuredRowIndex.current = Infinity;\n    }\n    const didHeightsChange = pinnedTopRowsTotalHeight !== apiRef.current.state.rowsMeta.pinnedTopRowsTotalHeight || pinnedBottomRowsTotalHeight !== apiRef.current.state.rowsMeta.pinnedBottomRowsTotalHeight || currentPageTotalHeight !== apiRef.current.state.rowsMeta.currentPageTotalHeight;\n    const rowsMeta = {\n      currentPageTotalHeight,\n      positions,\n      pinnedTopRowsTotalHeight,\n      pinnedBottomRowsTotalHeight\n    };\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowsMeta\n      });\n    });\n    if (didHeightsChange) {\n      apiRef.current.updateDimensions();\n    }\n    isHeightMetaValid.current = true;\n  }, [apiRef, pinnedRows, currentPage.rows, processHeightEntry]);\n  const getRowHeight = rowId => {\n    return heightCache.get(rowId)?.content ?? rowHeight;\n  };\n  const storeRowHeightMeasurement = (id, height) => {\n    const entry = apiRef.current.getRowHeightEntry(id);\n    const didChange = entry.content !== height;\n    entry.needsFirstMeasurement = false;\n    entry.content = height;\n    isHeightMetaValid.current &&= !didChange;\n  };\n  const rowHasAutoHeight = id => {\n    return heightCache.get(id)?.autoHeight ?? false;\n  };\n  const getLastMeasuredRowIndex = () => {\n    return lastMeasuredRowIndex.current;\n  };\n  const setLastMeasuredRowIndex = index => {\n    if (hasRowWithAutoHeight.current && index > lastMeasuredRowIndex.current) {\n      lastMeasuredRowIndex.current = index;\n    }\n  };\n  const resetRowHeights = () => {\n    heightCache.clear();\n    hydrateRowsMeta();\n  };\n  const resizeObserver = useLazyRef(() => new ResizeObserver(entries => {\n    for (let i = 0; i < entries.length; i += 1) {\n      const entry = entries[i];\n      const height = entry.borderBoxSize && entry.borderBoxSize.length > 0 ? entry.borderBoxSize[0].blockSize : entry.contentRect.height;\n      const rowId = entry.target.__mui_id;\n      apiRef.current.unstable_storeRowHeightMeasurement(rowId, height);\n    }\n    if (!isHeightMetaValid.current) {\n      apiRef.current.requestPipeProcessorsApplication('rowHeight');\n    }\n  })).current;\n  const observeRowHeight = (element, rowId) => {\n    element.__mui_id = rowId;\n    resizeObserver.observe(element);\n    return () => resizeObserver.unobserve(element);\n  };\n  useGridRegisterPipeApplier(apiRef, 'rowHeight', hydrateRowsMeta);\n\n  // The effect is used to build the rows meta data - currentPageTotalHeight and positions.\n  // Because of variable row height this is needed for the virtualization\n  useEnhancedEffect(() => {\n    hydrateRowsMeta();\n  }, [hydrateRowsMeta]);\n  const rowsMetaApi = {\n    unstable_getRowHeight: getRowHeight,\n    unstable_setLastMeasuredRowIndex: setLastMeasuredRowIndex,\n    unstable_storeRowHeightMeasurement: storeRowHeightMeasurement,\n    resetRowHeights\n  };\n  const rowsMetaPrivateApi = {\n    hydrateRowsMeta,\n    observeRowHeight,\n    rowHasAutoHeight,\n    getRowHeightEntry,\n    getLastMeasuredRowIndex\n  };\n  useGridApiMethod(apiRef, rowsMetaApi, 'public');\n  useGridApiMethod(apiRef, rowsMetaPrivateApi, 'private');\n};","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnSpanning = apiRef => {\n  const lookup = React.useRef({});\n  const getCellColSpanInfo = (rowId, columnIndex) => {\n    return lookup.current[rowId]?.[columnIndex];\n  };\n  const resetColSpan = () => {\n    lookup.current = {};\n  };\n\n  // Calculate `colSpan` for each cell in the row\n  const calculateColSpan = React.useCallback(({\n    rowId,\n    minFirstColumn,\n    maxLastColumn,\n    columns\n  }) => {\n    for (let i = minFirstColumn; i < maxLastColumn; i += 1) {\n      const cellProps = calculateCellColSpan({\n        apiRef,\n        lookup: lookup.current,\n        columnIndex: i,\n        rowId,\n        minFirstColumnIndex: minFirstColumn,\n        maxLastColumnIndex: maxLastColumn,\n        columns\n      });\n      if (cellProps.colSpan > 1) {\n        i += cellProps.colSpan - 1;\n      }\n    }\n  }, [apiRef]);\n  const columnSpanningPublicApi = {\n    unstable_getCellColSpanInfo: getCellColSpanInfo\n  };\n  const columnSpanningPrivateApi = {\n    resetColSpan,\n    calculateColSpan\n  };\n  useGridApiMethod(apiRef, columnSpanningPublicApi, 'public');\n  useGridApiMethod(apiRef, columnSpanningPrivateApi, 'private');\n  useGridApiEventHandler(apiRef, 'columnOrderChange', resetColSpan);\n};\nfunction calculateCellColSpan(params) {\n  const {\n    apiRef,\n    lookup,\n    columnIndex,\n    rowId,\n    minFirstColumnIndex,\n    maxLastColumnIndex,\n    columns\n  } = params;\n  const columnsLength = columns.length;\n  const column = columns[columnIndex];\n  const row = apiRef.current.getRow(rowId);\n  const value = apiRef.current.getRowValue(row, column);\n  const colSpan = typeof column.colSpan === 'function' ? column.colSpan(value, row, column, apiRef) : column.colSpan;\n  if (!colSpan || colSpan === 1) {\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan: 1,\n        width: column.computedWidth\n      }\n    });\n    return {\n      colSpan: 1\n    };\n  }\n  let width = column.computedWidth;\n  for (let j = 1; j < colSpan; j += 1) {\n    const nextColumnIndex = columnIndex + j;\n    // Cells should be spanned only within their column section (left-pinned, right-pinned and unpinned).\n    if (nextColumnIndex >= minFirstColumnIndex && nextColumnIndex < maxLastColumnIndex) {\n      const nextColumn = columns[nextColumnIndex];\n      width += nextColumn.computedWidth;\n      setCellColSpanInfo(lookup, rowId, columnIndex + j, {\n        spannedByColSpan: true,\n        rightVisibleCellIndex: Math.min(columnIndex + colSpan, columnsLength - 1),\n        leftVisibleCellIndex: columnIndex\n      });\n    }\n    setCellColSpanInfo(lookup, rowId, columnIndex, {\n      spannedByColSpan: false,\n      cellProps: {\n        colSpan,\n        width\n      }\n    });\n  }\n  return {\n    colSpan\n  };\n}\nfunction setCellColSpanInfo(lookup, rowId, columnIndex, cellColSpanInfo) {\n  if (!lookup[rowId]) {\n    lookup[rowId] = {};\n  }\n  lookup[rowId][columnIndex] = cellColSpanInfo;\n}","export function isLeaf(node) {\n  return node.field !== undefined;\n}\n\n/**\n * A function used to process headerClassName params.\n */\n\n/**\n * The union type representing the [[GridColDef]] column header class type.\n */","import { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { isDeepEqual } from \"../../../utils/utils.js\";\n// This is the recurrence function that help writing `unwrapGroupingColumnModel()`\nconst recurrentUnwrapGroupingColumnModel = (columnGroupNode, parents, unwrappedGroupingModelToComplete) => {\n  if (isLeaf(columnGroupNode)) {\n    if (unwrappedGroupingModelToComplete[columnGroupNode.field] !== undefined) {\n      throw new Error([`MUI X: columnGroupingModel contains duplicated field`, `column field ${columnGroupNode.field} occurs two times in the grouping model:`, `- ${unwrappedGroupingModelToComplete[columnGroupNode.field].join(' > ')}`, `- ${parents.join(' > ')}`].join('\\n'));\n    }\n    unwrappedGroupingModelToComplete[columnGroupNode.field] = parents;\n    return;\n  }\n  const {\n    groupId,\n    children\n  } = columnGroupNode;\n  children.forEach(child => {\n    recurrentUnwrapGroupingColumnModel(child, [...parents, groupId], unwrappedGroupingModelToComplete);\n  });\n};\n\n/**\n * This is a function that provide for each column the array of its parents.\n * Parents are ordered from the root to the leaf.\n * @param columnGroupingModel The model such as provided in DataGrid props\n * @returns An object `{[field]: groupIds}` where `groupIds` is the parents of the column `field`\n */\nexport const unwrapGroupingColumnModel = columnGroupingModel => {\n  if (!columnGroupingModel) {\n    return {};\n  }\n  const unwrappedSubTree = {};\n  columnGroupingModel.forEach(columnGroupNode => {\n    recurrentUnwrapGroupingColumnModel(columnGroupNode, [], unwrappedSubTree);\n  });\n  return unwrappedSubTree;\n};\nexport const getColumnGroupsHeaderStructure = (orderedColumns, unwrappedGroupingModel, pinnedFields) => {\n  const getParents = field => unwrappedGroupingModel[field] ?? [];\n  const groupingHeaderStructure = [];\n  const maxDepth = Math.max(...orderedColumns.map(field => getParents(field).length));\n  const haveSameParents = (field1, field2, depth) => isDeepEqual(getParents(field1).slice(0, depth + 1), getParents(field2).slice(0, depth + 1));\n  const haveDifferentContainers = (field1, field2) => {\n    if (pinnedFields?.left && pinnedFields.left.includes(field1) && !pinnedFields.left.includes(field2)) {\n      return true;\n    }\n    if (pinnedFields?.right && !pinnedFields.right.includes(field1) && pinnedFields.right.includes(field2)) {\n      return true;\n    }\n    return false;\n  };\n  for (let depth = 0; depth < maxDepth; depth += 1) {\n    const depthStructure = orderedColumns.reduce((structure, newField) => {\n      const groupId = getParents(newField)[depth] ?? null;\n      if (structure.length === 0) {\n        return [{\n          columnFields: [newField],\n          groupId\n        }];\n      }\n      const lastGroup = structure[structure.length - 1];\n      const prevField = lastGroup.columnFields[lastGroup.columnFields.length - 1];\n      const prevGroupId = lastGroup.groupId;\n      if (prevGroupId !== groupId || !haveSameParents(prevField, newField, depth) ||\n      // Fix for https://github.com/mui/mui-x/issues/7041\n      haveDifferentContainers(prevField, newField)) {\n        // It's a new group\n        return [...structure, {\n          columnFields: [newField],\n          groupId\n        }];\n      }\n\n      // It extends the previous group\n      return [...structure.slice(0, structure.length - 1), {\n        columnFields: [...lastGroup.columnFields, newField],\n        groupId\n      }];\n    }, []);\n    groupingHeaderStructure.push(depthStructure);\n  }\n  return groupingHeaderStructure;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"groupId\", \"children\"];\nimport * as React from 'react';\nimport { isLeaf } from \"../../../models/gridColumnGrouping.js\";\nimport { gridColumnGroupsLookupSelector, gridColumnGroupsUnwrappedModelSelector } from \"./gridColumnGroupsSelector.js\";\nimport { useGridApiMethod } from \"../../utils/useGridApiMethod.js\";\nimport { getColumnGroupsHeaderStructure, unwrapGroupingColumnModel } from \"./gridColumnGroupsUtils.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { gridColumnFieldsSelector, gridVisibleColumnFieldsSelector } from \"../columns/index.js\";\nconst createGroupLookup = columnGroupingModel => {\n  let groupLookup = {};\n  columnGroupingModel.forEach(node => {\n    if (isLeaf(node)) {\n      return;\n    }\n    const {\n        groupId,\n        children\n      } = node,\n      other = _objectWithoutPropertiesLoose(node, _excluded);\n    if (!groupId) {\n      throw new Error('MUI X: An element of the columnGroupingModel does not have either `field` or `groupId`.');\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (!children) {\n        console.warn(`MUI X: group groupId=${groupId} has no children.`);\n      }\n    }\n    const groupParam = _extends({}, other, {\n      groupId\n    });\n    const subTreeLookup = createGroupLookup(children);\n    if (subTreeLookup[groupId] !== undefined || groupLookup[groupId] !== undefined) {\n      throw new Error(`MUI X: The groupId ${groupId} is used multiple times in the columnGroupingModel.`);\n    }\n    groupLookup = _extends({}, groupLookup, subTreeLookup, {\n      [groupId]: groupParam\n    });\n  });\n  return _extends({}, groupLookup);\n};\nexport const columnGroupsStateInitializer = (state, props, apiRef) => {\n  if (!props.columnGroupingModel) {\n    return state;\n  }\n  const columnFields = gridColumnFieldsSelector(apiRef);\n  const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n  const groupLookup = createGroupLookup(props.columnGroupingModel ?? []);\n  const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n  const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, apiRef.current.state.pinnedColumns ?? {});\n  const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n  return _extends({}, state, {\n    columnGrouping: {\n      lookup: groupLookup,\n      unwrappedGroupingModel,\n      headerStructure: columnGroupsHeaderStructure,\n      maxDepth\n    }\n  });\n};\n\n/**\n * @requires useGridColumns (method, event)\n * @requires useGridParamsApi (method)\n */\nexport const useGridColumnGrouping = (apiRef, props) => {\n  /**\n   * API METHODS\n   */\n  const getColumnGroupPath = React.useCallback(field => {\n    const unwrappedGroupingModel = gridColumnGroupsUnwrappedModelSelector(apiRef);\n    return unwrappedGroupingModel[field] ?? [];\n  }, [apiRef]);\n  const getAllGroupDetails = React.useCallback(() => {\n    const columnGroupLookup = gridColumnGroupsLookupSelector(apiRef);\n    return columnGroupLookup;\n  }, [apiRef]);\n  const columnGroupingApi = {\n    getColumnGroupPath,\n    getAllGroupDetails\n  };\n  useGridApiMethod(apiRef, columnGroupingApi, 'public');\n  const handleColumnIndexChange = React.useCallback(() => {\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(props.columnGroupingModel ?? []);\n    apiRef.current.setState(state => {\n      const orderedFields = state.columns?.orderedFields ?? [];\n      const pinnedColumns = state.pinnedColumns ?? {};\n      const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(orderedFields, unwrappedGroupingModel, pinnedColumns);\n      return _extends({}, state, {\n        columnGrouping: _extends({}, state.columnGrouping, {\n          headerStructure: columnGroupsHeaderStructure\n        })\n      });\n    });\n  }, [apiRef, props.columnGroupingModel]);\n  const updateColumnGroupingState = React.useCallback(columnGroupingModel => {\n    // @ts-expect-error Move this logic to `Pro` package\n    const pinnedColumns = apiRef.current.getPinnedColumns?.() ?? {};\n    const columnFields = gridColumnFieldsSelector(apiRef);\n    const visibleColumnFields = gridVisibleColumnFieldsSelector(apiRef);\n    const groupLookup = createGroupLookup(columnGroupingModel ?? []);\n    const unwrappedGroupingModel = unwrapGroupingColumnModel(columnGroupingModel ?? []);\n    const columnGroupsHeaderStructure = getColumnGroupsHeaderStructure(columnFields, unwrappedGroupingModel, pinnedColumns);\n    const maxDepth = visibleColumnFields.length === 0 ? 0 : Math.max(...visibleColumnFields.map(field => unwrappedGroupingModel[field]?.length ?? 0));\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        columnGrouping: {\n          lookup: groupLookup,\n          unwrappedGroupingModel,\n          headerStructure: columnGroupsHeaderStructure,\n          maxDepth\n        }\n      });\n    });\n  }, [apiRef]);\n  useGridApiEventHandler(apiRef, 'columnIndexChange', handleColumnIndexChange);\n  useGridApiEventHandler(apiRef, 'columnsChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', () => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  });\n\n  /**\n   * EFFECTS\n   */\n  React.useEffect(() => {\n    updateColumnGroupingState(props.columnGroupingModel);\n  }, [updateColumnGroupingState, props.columnGroupingModel]);\n};","export const DEFAULT_GRID_AUTOSIZE_OPTIONS = {\n  includeHeaders: true,\n  includeOutliers: false,\n  outliersFactor: 1.5,\n  expand: false,\n  disableColumnVirtualization: true\n};\n\n/**\n * The Resize API interface that is available in the grid `apiRef`.\n */","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_ownerDocument as ownerDocument, unstable_useEventCallback as useEventCallback } from '@mui/utils';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { findGridCellElementsFromCol, findGridElement, findLeftPinnedCellsAfterCol, findRightPinnedCellsBeforeCol, getFieldFromHeaderElem, findHeaderElementFromField, getFieldsFromGroupHeaderElem, findGroupHeaderElementsFromField, findGridHeader, findGridCells, findParentElementFromClassName, findLeftPinnedHeadersAfterCol, findRightPinnedHeadersBeforeCol, escapeOperandAttributeSelector } from \"../../../utils/domUtils.js\";\nimport { DEFAULT_GRID_AUTOSIZE_OPTIONS } from \"./gridColumnResizeApi.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { useGridApiEventHandler, useGridApiMethod, useGridApiOptionHandler, useGridLogger, useGridNativeEventListener, useGridSelector, useOnMount } from \"../../utils/index.js\";\nimport { gridVirtualizationColumnEnabledSelector } from \"../virtualization/index.js\";\nimport { createControllablePromise } from \"../../../utils/createControllablePromise.js\";\nimport { clamp } from \"../../../utils/utils.js\";\nimport { useTimeout } from \"../../utils/useTimeout.js\";\nimport { GridPinnedColumnPosition } from \"../columns/gridColumnsInterfaces.js\";\nimport { gridColumnsStateSelector } from \"../columns/index.js\";\nfunction trackFinger(event, currentTouchId) {\n  if (currentTouchId !== undefined && event.changedTouches) {\n    for (let i = 0; i < event.changedTouches.length; i += 1) {\n      const touch = event.changedTouches[i];\n      if (touch.identifier === currentTouchId) {\n        return {\n          x: touch.clientX,\n          y: touch.clientY\n        };\n      }\n    }\n    return false;\n  }\n  return {\n    x: event.clientX,\n    y: event.clientY\n  };\n}\nfunction computeNewWidth(initialOffsetToSeparator, clickX, columnBounds, resizeDirection) {\n  let newWidth = initialOffsetToSeparator;\n  if (resizeDirection === 'Right') {\n    newWidth += clickX - columnBounds.left;\n  } else {\n    newWidth += columnBounds.right - clickX;\n  }\n  return newWidth;\n}\nfunction computeOffsetToSeparator(clickX, columnBounds, resizeDirection) {\n  if (resizeDirection === 'Left') {\n    return clickX - columnBounds.left;\n  }\n  return columnBounds.right - clickX;\n}\nfunction flipResizeDirection(side) {\n  if (side === 'Right') {\n    return 'Left';\n  }\n  return 'Right';\n}\nfunction getResizeDirection(separator, isRtl) {\n  const side = separator.classList.contains(gridClasses['columnSeparator--sideRight']) ? 'Right' : 'Left';\n  if (isRtl) {\n    // Resizing logic should be mirrored in the RTL case\n    return flipResizeDirection(side);\n  }\n  return side;\n}\nfunction preventClick(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n\n/**\n * Checker that returns a promise that resolves when the column virtualization\n * is disabled.\n */\nfunction useColumnVirtualizationDisabled(apiRef) {\n  const promise = React.useRef(undefined);\n  const selector = () => gridVirtualizationColumnEnabledSelector(apiRef);\n  const value = useGridSelector(apiRef, selector);\n  React.useEffect(() => {\n    if (promise.current && value === false) {\n      promise.current.resolve();\n      promise.current = undefined;\n    }\n  });\n  const asyncCheck = () => {\n    if (!promise.current) {\n      if (selector() === false) {\n        return Promise.resolve();\n      }\n      promise.current = createControllablePromise();\n    }\n    return promise.current;\n  };\n  return asyncCheck;\n}\n\n/**\n * Basic statistical outlier detection, checks if the value is `F * IQR` away from\n * the Q1 and Q3 boundaries. IQR: interquartile range.\n */\nfunction excludeOutliers(inputValues, factor) {\n  if (inputValues.length < 4) {\n    return inputValues;\n  }\n  const values = inputValues.slice();\n  values.sort((a, b) => a - b);\n  const q1 = values[Math.floor(values.length * 0.25)];\n  const q3 = values[Math.floor(values.length * 0.75) - 1];\n  const iqr = q3 - q1;\n\n  // We make a small adjustment if `iqr < 5` for the cases where the IQR is\n  // very small (for example zero) due to very close by values in the input data.\n  // Otherwise, with an IQR of `0`, anything outside that would be considered\n  // an outlier, but it makes more sense visually to allow for this 5px variance\n  // rather than showing a cropped cell.\n  const deviation = iqr < 5 ? 5 : iqr * factor;\n  return values.filter(v => v > q1 - deviation && v < q3 + deviation);\n}\nfunction extractColumnWidths(apiRef, options, columns) {\n  const widthByField = {};\n  const root = apiRef.current.rootElementRef.current;\n  root.classList.add(gridClasses.autosizing);\n  columns.forEach(column => {\n    const cells = findGridCells(apiRef.current, column.field);\n    const widths = cells.map(cell => {\n      return cell.getBoundingClientRect().width ?? 0;\n    });\n    const filteredWidths = options.includeOutliers ? widths : excludeOutliers(widths, options.outliersFactor);\n    if (options.includeHeaders) {\n      const header = findGridHeader(apiRef.current, column.field);\n      if (header) {\n        const title = header.querySelector(`.${gridClasses.columnHeaderTitle}`);\n        const content = header.querySelector(`.${gridClasses.columnHeaderTitleContainerContent}`);\n        const iconContainer = header.querySelector(`.${gridClasses.iconButtonContainer}`);\n        const menuContainer = header.querySelector(`.${gridClasses.menuIcon}`);\n        const element = title ?? content;\n        const style = window.getComputedStyle(header, null);\n        const paddingWidth = parseInt(style.paddingLeft, 10) + parseInt(style.paddingRight, 10);\n        const contentWidth = element.scrollWidth + 1;\n        const width = contentWidth + paddingWidth + (iconContainer?.clientWidth ?? 0) + (menuContainer?.clientWidth ?? 0);\n        filteredWidths.push(width);\n      }\n    }\n    const hasColumnMin = column.minWidth !== -Infinity && column.minWidth !== undefined;\n    const hasColumnMax = column.maxWidth !== Infinity && column.maxWidth !== undefined;\n    const min = hasColumnMin ? column.minWidth : 0;\n    const max = hasColumnMax ? column.maxWidth : Infinity;\n    const maxContent = filteredWidths.length === 0 ? 0 : Math.max(...filteredWidths);\n    widthByField[column.field] = clamp(maxContent, min, max);\n  });\n  root.classList.remove(gridClasses.autosizing);\n  return widthByField;\n}\nexport const columnResizeStateInitializer = state => _extends({}, state, {\n  columnResize: {\n    resizingColumnField: ''\n  }\n});\nfunction createResizeRefs() {\n  return {\n    colDef: undefined,\n    initialColWidth: 0,\n    initialTotalWidth: 0,\n    previousMouseClickEvent: undefined,\n    columnHeaderElement: undefined,\n    headerFilterElement: undefined,\n    groupHeaderElements: [],\n    cellElements: [],\n    leftPinnedCellsAfter: [],\n    rightPinnedCellsBefore: [],\n    fillerLeft: undefined,\n    fillerRight: undefined,\n    leftPinnedHeadersAfter: [],\n    rightPinnedHeadersBefore: []\n  };\n}\n\n/**\n * @requires useGridColumns (method, event)\n * TODO: improve experience for last column\n */\nexport const useGridColumnResize = (apiRef, props) => {\n  const isRtl = useRtl();\n  const logger = useGridLogger(apiRef, 'useGridColumnResize');\n  const refs = useLazyRef(createResizeRefs).current;\n\n  // To improve accessibility, the separator has padding on both sides.\n  // Clicking inside the padding area should be treated as a click in the separator.\n  // This ref stores the offset between the click and the separator.\n  const initialOffsetToSeparator = React.useRef(null);\n  const resizeDirection = React.useRef(null);\n  const stopResizeEventTimeout = useTimeout();\n  const touchId = React.useRef(undefined);\n  const updateWidth = newWidth => {\n    logger.debug(`Updating width to ${newWidth} for col ${refs.colDef.field}`);\n    const prevWidth = refs.columnHeaderElement.offsetWidth;\n    const widthDiff = newWidth - prevWidth;\n    const columnWidthDiff = newWidth - refs.initialColWidth;\n    if (columnWidthDiff > 0) {\n      const newTotalWidth = refs.initialTotalWidth + columnWidthDiff;\n      apiRef.current.rootElementRef?.current?.style.setProperty('--DataGrid-rowWidth', `${newTotalWidth}px`);\n    }\n    refs.colDef.computedWidth = newWidth;\n    refs.colDef.width = newWidth;\n    refs.colDef.flex = 0;\n    refs.columnHeaderElement.style.width = `${newWidth}px`;\n    const headerFilterElement = refs.headerFilterElement;\n    if (headerFilterElement) {\n      headerFilterElement.style.width = `${newWidth}px`;\n    }\n    refs.groupHeaderElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.width = finalWidth;\n    });\n    refs.cellElements.forEach(element => {\n      const div = element;\n      let finalWidth;\n      if (div.getAttribute('aria-colspan') === '1') {\n        finalWidth = `${newWidth}px`;\n      } else {\n        // Cell with colspan > 1 cannot be just updated width new width.\n        // Instead, we add width diff to the current width.\n        finalWidth = `${div.offsetWidth + widthDiff}px`;\n      }\n      div.style.setProperty('--width', finalWidth);\n    });\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    if (pinnedPosition === GridPinnedColumnPosition.LEFT) {\n      updateProperty(refs.fillerLeft, 'width', widthDiff);\n      refs.leftPinnedCellsAfter.forEach(cell => {\n        updateProperty(cell, 'left', widthDiff);\n      });\n      refs.leftPinnedHeadersAfter.forEach(header => {\n        updateProperty(header, 'left', widthDiff);\n      });\n    }\n    if (pinnedPosition === GridPinnedColumnPosition.RIGHT) {\n      updateProperty(refs.fillerRight, 'width', widthDiff);\n      refs.rightPinnedCellsBefore.forEach(cell => {\n        updateProperty(cell, 'right', widthDiff);\n      });\n      refs.rightPinnedHeadersBefore.forEach(header => {\n        updateProperty(header, 'right', widthDiff);\n      });\n    }\n  };\n  const finishResize = nativeEvent => {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    stopListening();\n\n    // Prevent double-clicks from being interpreted as two separate clicks\n    if (refs.previousMouseClickEvent) {\n      const prevEvent = refs.previousMouseClickEvent;\n      const prevTimeStamp = prevEvent.timeStamp;\n      const prevClientX = prevEvent.clientX;\n      const prevClientY = prevEvent.clientY;\n\n      // Check if the current event is part of a double-click\n      if (nativeEvent.timeStamp - prevTimeStamp < 300 && nativeEvent.clientX === prevClientX && nativeEvent.clientY === prevClientY) {\n        refs.previousMouseClickEvent = undefined;\n        apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n        return;\n      }\n    }\n    if (refs.colDef) {\n      apiRef.current.setColumnWidth(refs.colDef.field, refs.colDef.width);\n      logger.debug(`Updating col ${refs.colDef.field} with new width: ${refs.colDef.width}`);\n\n      // Since during resizing we update the columns width outside of React, React is unable to\n      // reapply the right style properties. We need to sync the state manually.\n      // So we reapply the same logic as in https://github.com/mui/mui-x/blob/0511bf65543ca05d2602a5a3e0a6156f2fc8e759/packages/x-data-grid/src/hooks/features/columnHeaders/useGridColumnHeaders.tsx#L405\n      const columnsState = gridColumnsStateSelector(apiRef.current.state);\n      refs.groupHeaderElements.forEach(element => {\n        const fields = getFieldsFromGroupHeaderElem(element);\n        const div = element;\n        const newWidth = fields.reduce((acc, field) => {\n          if (columnsState.columnVisibilityModel[field] !== false) {\n            return acc + columnsState.lookup[field].computedWidth;\n          }\n          return acc;\n        }, 0);\n        const finalWidth = `${newWidth}px`;\n        div.style.width = finalWidth;\n      });\n    }\n    stopResizeEventTimeout.start(0, () => {\n      apiRef.current.publishEvent('columnResizeStop', null, nativeEvent);\n    });\n  };\n  const storeReferences = (colDef, separator, xStart) => {\n    const root = apiRef.current.rootElementRef.current;\n    refs.initialColWidth = colDef.computedWidth;\n    refs.initialTotalWidth = apiRef.current.getRootDimensions().rowWidth;\n    refs.colDef = colDef;\n    refs.columnHeaderElement = findHeaderElementFromField(apiRef.current.columnHeadersContainerRef.current, colDef.field);\n    const headerFilterElement = root.querySelector(`.${gridClasses.headerFilterRow} [data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (headerFilterElement) {\n      refs.headerFilterElement = headerFilterElement;\n    }\n    refs.groupHeaderElements = findGroupHeaderElementsFromField(apiRef.current.columnHeadersContainerRef?.current, colDef.field);\n    refs.cellElements = findGridCellElementsFromCol(refs.columnHeaderElement, apiRef.current);\n    refs.fillerLeft = findGridElement(apiRef.current, isRtl ? 'filler--pinnedRight' : 'filler--pinnedLeft');\n    refs.fillerRight = findGridElement(apiRef.current, isRtl ? 'filler--pinnedLeft' : 'filler--pinnedRight');\n    const pinnedPosition = apiRef.current.unstable_applyPipeProcessors('isColumnPinned', false, refs.colDef.field);\n    refs.leftPinnedCellsAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedCellsAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedCellsBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedCellsBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.leftPinnedHeadersAfter = pinnedPosition !== GridPinnedColumnPosition.LEFT ? [] : findLeftPinnedHeadersAfterCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    refs.rightPinnedHeadersBefore = pinnedPosition !== GridPinnedColumnPosition.RIGHT ? [] : findRightPinnedHeadersBeforeCol(apiRef.current, refs.columnHeaderElement, isRtl);\n    resizeDirection.current = getResizeDirection(separator, isRtl);\n    initialOffsetToSeparator.current = computeOffsetToSeparator(xStart, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n  };\n  const handleResizeMouseUp = useEventCallback(finishResize);\n  const handleResizeMouseMove = useEventCallback(nativeEvent => {\n    // Cancel move in case some other element consumed a mouseup event and it was not fired.\n    if (nativeEvent.buttons === 0) {\n      handleResizeMouseUp(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, nativeEvent.clientX, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchEnd = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n    finishResize(nativeEvent);\n  });\n  const handleTouchMove = useEventCallback(nativeEvent => {\n    const finger = trackFinger(nativeEvent, touchId.current);\n    if (!finger) {\n      return;\n    }\n\n    // Cancel move in case some other element consumed a touchmove event and it was not fired.\n    if (nativeEvent.type === 'mousemove' && nativeEvent.buttons === 0) {\n      handleTouchEnd(nativeEvent);\n      return;\n    }\n    let newWidth = computeNewWidth(initialOffsetToSeparator.current, finger.x, refs.columnHeaderElement.getBoundingClientRect(), resizeDirection.current);\n    newWidth = clamp(newWidth, refs.colDef.minWidth, refs.colDef.maxWidth);\n    updateWidth(newWidth);\n    const params = {\n      element: refs.columnHeaderElement,\n      colDef: refs.colDef,\n      width: newWidth\n    };\n    apiRef.current.publishEvent('columnResize', params, nativeEvent);\n  });\n  const handleTouchStart = useEventCallback(event => {\n    const cellSeparator = findParentElementFromClassName(event.target, gridClasses['columnSeparator--resizable']);\n    // Let the event bubble if the target is not a col separator\n    if (!cellSeparator) {\n      return;\n    }\n    const touch = event.changedTouches[0];\n    if (touch != null) {\n      // A number that uniquely identifies the current finger in the touch session.\n      touchId.current = touch.identifier;\n    }\n    const columnHeaderElement = findParentElementFromClassName(event.target, gridClasses.columnHeader);\n    const field = getFieldFromHeaderElem(columnHeaderElement);\n    const colDef = apiRef.current.getColumn(field);\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field\n    }, event);\n    storeReferences(colDef, cellSeparator, touch.clientX);\n    const doc = ownerDocument(event.currentTarget);\n    doc.addEventListener('touchmove', handleTouchMove);\n    doc.addEventListener('touchend', handleTouchEnd);\n  });\n  const stopListening = React.useCallback(() => {\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.removeProperty('cursor');\n    doc.removeEventListener('mousemove', handleResizeMouseMove);\n    doc.removeEventListener('mouseup', handleResizeMouseUp);\n    doc.removeEventListener('touchmove', handleTouchMove);\n    doc.removeEventListener('touchend', handleTouchEnd);\n    // The click event runs right after the mouseup event, we want to wait until it\n    // has been canceled before removing our handler.\n    setTimeout(() => {\n      doc.removeEventListener('click', preventClick, true);\n    }, 100);\n    if (refs.columnHeaderElement) {\n      refs.columnHeaderElement.style.pointerEvents = 'unset';\n    }\n  }, [apiRef, refs, handleResizeMouseMove, handleResizeMouseUp, handleTouchMove, handleTouchEnd]);\n  const handleResizeStart = React.useCallback(({\n    field\n  }) => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: field\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleResizeStop = React.useCallback(() => {\n    apiRef.current.setState(state => _extends({}, state, {\n      columnResize: _extends({}, state.columnResize, {\n        resizingColumnField: ''\n      })\n    }));\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const handleColumnResizeMouseDown = useEventCallback(({\n    colDef\n  }, event) => {\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Skip if the column isn't resizable\n    if (!event.currentTarget.classList.contains(gridClasses['columnSeparator--resizable'])) {\n      return;\n    }\n\n    // Avoid text selection\n    event.preventDefault();\n    logger.debug(`Start Resize on col ${colDef.field}`);\n    apiRef.current.publishEvent('columnResizeStart', {\n      field: colDef.field\n    }, event);\n    storeReferences(colDef, event.currentTarget, event.clientX);\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    doc.body.style.cursor = 'col-resize';\n    refs.previousMouseClickEvent = event.nativeEvent;\n    doc.addEventListener('mousemove', handleResizeMouseMove);\n    doc.addEventListener('mouseup', handleResizeMouseUp);\n\n    // Prevent the click event if we have resized the column.\n    // Fixes https://github.com/mui/mui-x/issues/4777\n    doc.addEventListener('click', preventClick, true);\n  });\n  const handleColumnSeparatorDoubleClick = useEventCallback((params, event) => {\n    if (props.disableAutosize) {\n      return;\n    }\n\n    // Only handle left clicks\n    if (event.button !== 0) {\n      return;\n    }\n    const column = apiRef.current.state.columns.lookup[params.field];\n    if (column.resizable === false) {\n      return;\n    }\n    apiRef.current.autosizeColumns(_extends({}, props.autosizeOptions, {\n      disableColumnVirtualization: false,\n      columns: [column.field]\n    }));\n  });\n\n  /**\n   * API METHODS\n   */\n\n  const columnVirtualizationDisabled = useColumnVirtualizationDisabled(apiRef);\n  const isAutosizingRef = React.useRef(false);\n  const autosizeColumns = React.useCallback(async userOptions => {\n    const root = apiRef.current.rootElementRef?.current;\n    if (!root) {\n      return;\n    }\n    if (isAutosizingRef.current) {\n      return;\n    }\n    isAutosizingRef.current = true;\n    const state = gridColumnsStateSelector(apiRef.current.state);\n    const options = _extends({}, DEFAULT_GRID_AUTOSIZE_OPTIONS, userOptions, {\n      columns: userOptions?.columns ?? state.orderedFields\n    });\n    options.columns = options.columns.filter(c => state.columnVisibilityModel[c] !== false);\n    const columns = options.columns.map(c => apiRef.current.state.columns.lookup[c]);\n    try {\n      if (!props.disableVirtualization && options.disableColumnVirtualization) {\n        apiRef.current.unstable_setColumnVirtualization(false);\n        await columnVirtualizationDisabled();\n      }\n      const widthByField = extractColumnWidths(apiRef, options, columns);\n      const newColumns = columns.map(column => _extends({}, column, {\n        width: widthByField[column.field],\n        computedWidth: widthByField[column.field],\n        flex: 0\n      }));\n      if (options.expand) {\n        const visibleColumns = state.orderedFields.map(field => state.lookup[field]).filter(c => state.columnVisibilityModel[c.field] !== false);\n        const totalWidth = visibleColumns.reduce((total, column) => total + (widthByField[column.field] ?? column.computedWidth ?? column.width), 0);\n        const dimensions = apiRef.current.getRootDimensions();\n        const availableWidth = dimensions.viewportInnerSize.width;\n        const remainingWidth = availableWidth - totalWidth;\n        if (remainingWidth > 0) {\n          const widthPerColumn = remainingWidth / (newColumns.length || 1);\n          newColumns.forEach(column => {\n            column.width += widthPerColumn;\n            column.computedWidth += widthPerColumn;\n          });\n        }\n      }\n      apiRef.current.updateColumns(newColumns);\n      newColumns.forEach((newColumn, index) => {\n        if (newColumn.width !== columns[index].width) {\n          const width = newColumn.width;\n          apiRef.current.publishEvent('columnWidthChange', {\n            element: apiRef.current.getColumnHeaderElement(newColumn.field),\n            colDef: newColumn,\n            width\n          });\n        }\n      });\n    } finally {\n      if (!props.disableVirtualization) {\n        apiRef.current.unstable_setColumnVirtualization(true);\n      }\n      isAutosizingRef.current = false;\n    }\n  }, [apiRef, columnVirtualizationDisabled, props.disableVirtualization]);\n\n  /**\n   * EFFECTS\n   */\n\n  React.useEffect(() => stopListening, [stopListening]);\n  useOnMount(() => {\n    if (props.autosizeOnMount) {\n      Promise.resolve().then(() => {\n        apiRef.current.autosizeColumns(props.autosizeOptions);\n      });\n    }\n  });\n  useGridNativeEventListener(apiRef, () => apiRef.current.columnHeadersContainerRef?.current, 'touchstart', handleTouchStart, {\n    passive: true\n  });\n  useGridApiMethod(apiRef, {\n    autosizeColumns\n  }, 'public');\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleResizeStop);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleResizeStart);\n  useGridApiEventHandler(apiRef, 'columnSeparatorMouseDown', handleColumnResizeMouseDown);\n  useGridApiEventHandler(apiRef, 'columnSeparatorDoubleClick', handleColumnSeparatorDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnResize', props.onColumnResize);\n  useGridApiOptionHandler(apiRef, 'columnWidthChange', props.onColumnWidthChange);\n};\nfunction updateProperty(element, property, delta) {\n  if (!element) {\n    return;\n  }\n  element.style[property] = `${parseInt(element.style[property], 10) + delta}px`;\n}","export function createControllablePromise() {\n  let resolve;\n  let reject;\n  const promise = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  promise.resolve = resolve;\n  promise.reject = reject;\n  return promise;\n}","export function getUnprocessedRange(testRange, processedRange) {\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return null;\n  }\n  // Overflowing at the end\n  // Example: testRange={ firstRowIndex: 10, lastRowIndex: 20 }, processedRange={ firstRowIndex: 0, lastRowIndex: 15 }\n  // Unprocessed Range={ firstRowIndex: 16, lastRowIndex: 20 }\n  if (testRange.firstRowIndex >= processedRange.firstRowIndex && testRange.lastRowIndex > processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: processedRange.lastRowIndex,\n      lastRowIndex: testRange.lastRowIndex\n    };\n  }\n  // Overflowing at the beginning\n  // Example: testRange={ firstRowIndex: 0, lastRowIndex: 20 }, processedRange={ firstRowIndex: 16, lastRowIndex: 30 }\n  // Unprocessed Range={ firstRowIndex: 0, lastRowIndex: 15 }\n  if (testRange.firstRowIndex < processedRange.firstRowIndex && testRange.lastRowIndex <= processedRange.lastRowIndex) {\n    return {\n      firstRowIndex: testRange.firstRowIndex,\n      lastRowIndex: processedRange.firstRowIndex - 1\n    };\n  }\n  // TODO: Should return two ranges handle overflowing at both ends ?\n  return testRange;\n}\nexport function isRowContextInitialized(renderContext) {\n  return renderContext.firstRowIndex !== 0 || renderContext.lastRowIndex !== 0;\n}\nexport function isRowRangeUpdated(range1, range2) {\n  return range1.firstRowIndex !== range2.firstRowIndex || range1.lastRowIndex !== range2.lastRowIndex;\n}\nexport const getCellValue = (row, colDef, apiRef) => {\n  if (!row) {\n    return null;\n  }\n  let cellValue = row[colDef.field];\n  const valueGetter = colDef.rowSpanValueGetter ?? colDef.valueGetter;\n  if (valueGetter) {\n    cellValue = valueGetter(cellValue, row, colDef, apiRef);\n  }\n  return cellValue;\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useLazyRef from '@mui/utils/useLazyRef';\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD } from \"../../../internals/constants.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../columns/gridColumnsSelector.js\";\nimport { getVisibleRows } from \"../../utils/useGridVisibleRows.js\";\nimport { gridRenderContextSelector } from \"../virtualization/gridVirtualizationSelectors.js\";\nimport { getUnprocessedRange, isRowContextInitialized, getCellValue } from \"./gridRowSpanningUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_FIELD } from \"../../../colDef/gridCheckboxSelectionColDef.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { runIf } from \"../../../utils/utils.js\";\nimport { gridPageSizeSelector } from \"../pagination/index.js\";\nimport { gridDataRowIdsSelector } from \"./gridRowsSelector.js\";\nconst EMPTY_STATE = {\n  spannedCells: {},\n  hiddenCells: {},\n  hiddenCellOriginMap: {}\n};\nconst EMPTY_RANGE = {\n  firstRowIndex: 0,\n  lastRowIndex: 0\n};\nconst skippedFields = new Set([GRID_CHECKBOX_SELECTION_FIELD, '__reorder__', GRID_DETAIL_PANEL_TOGGLE_FIELD]);\n/**\n * Default number of rows to process during state initialization to avoid flickering.\n * Number `20` is arbitrarily chosen to be large enough to cover most of the cases without\n * compromising performance.\n */\nconst DEFAULT_ROWS_TO_PROCESS = 20;\nconst computeRowSpanningState = (apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange) => {\n  const spannedCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.spannedCells);\n  const hiddenCells = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCells);\n  const hiddenCellOriginMap = resetState ? {} : _extends({}, apiRef.current.state.rowSpanning.hiddenCellOriginMap);\n  if (resetState) {\n    processedRange = EMPTY_RANGE;\n  }\n  colDefs.forEach(colDef => {\n    if (skippedFields.has(colDef.field)) {\n      return;\n    }\n    for (let index = rangeToProcess.firstRowIndex; index < rangeToProcess.lastRowIndex; index += 1) {\n      const row = visibleRows[index];\n      if (hiddenCells[row.id]?.[colDef.field]) {\n        continue;\n      }\n      const cellValue = getCellValue(row.model, colDef, apiRef);\n      if (cellValue == null) {\n        continue;\n      }\n      let spannedRowId = row.id;\n      let spannedRowIndex = index;\n      let rowSpan = 0;\n\n      // For first index, also scan in the previous rows to handle the reset state case e.g by sorting\n      const backwardsHiddenCells = [];\n      if (index === rangeToProcess.firstRowIndex) {\n        let prevIndex = index - 1;\n        let prevRowEntry = visibleRows[prevIndex];\n        while (prevIndex >= range.firstRowIndex && prevRowEntry && getCellValue(prevRowEntry.model, colDef, apiRef) === cellValue) {\n          const currentRow = visibleRows[prevIndex + 1];\n          if (hiddenCells[currentRow.id]) {\n            hiddenCells[currentRow.id][colDef.field] = true;\n          } else {\n            hiddenCells[currentRow.id] = {\n              [colDef.field]: true\n            };\n          }\n          backwardsHiddenCells.push(index);\n          rowSpan += 1;\n          spannedRowId = prevRowEntry.id;\n          spannedRowIndex = prevIndex;\n          prevIndex -= 1;\n          prevRowEntry = visibleRows[prevIndex];\n        }\n      }\n      backwardsHiddenCells.forEach(hiddenCellIndex => {\n        if (hiddenCellOriginMap[hiddenCellIndex]) {\n          hiddenCellOriginMap[hiddenCellIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[hiddenCellIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n      });\n\n      // Scan the next rows\n      let relativeIndex = index + 1;\n      while (relativeIndex <= range.lastRowIndex && visibleRows[relativeIndex] && getCellValue(visibleRows[relativeIndex].model, colDef, apiRef) === cellValue) {\n        const currentRow = visibleRows[relativeIndex];\n        if (hiddenCells[currentRow.id]) {\n          hiddenCells[currentRow.id][colDef.field] = true;\n        } else {\n          hiddenCells[currentRow.id] = {\n            [colDef.field]: true\n          };\n        }\n        if (hiddenCellOriginMap[relativeIndex]) {\n          hiddenCellOriginMap[relativeIndex][colDef.field] = spannedRowIndex;\n        } else {\n          hiddenCellOriginMap[relativeIndex] = {\n            [colDef.field]: spannedRowIndex\n          };\n        }\n        relativeIndex += 1;\n        rowSpan += 1;\n      }\n      if (rowSpan > 0) {\n        if (spannedCells[spannedRowId]) {\n          spannedCells[spannedRowId][colDef.field] = rowSpan + 1;\n        } else {\n          spannedCells[spannedRowId] = {\n            [colDef.field]: rowSpan + 1\n          };\n        }\n      }\n    }\n    processedRange = {\n      firstRowIndex: Math.min(processedRange.firstRowIndex, rangeToProcess.firstRowIndex),\n      lastRowIndex: Math.max(processedRange.lastRowIndex, rangeToProcess.lastRowIndex)\n    };\n  });\n  return {\n    spannedCells,\n    hiddenCells,\n    hiddenCellOriginMap,\n    processedRange\n  };\n};\nconst getInitialRangeToProcess = (props, apiRef) => {\n  const rowCount = gridDataRowIdsSelector(apiRef).length;\n  if (props.pagination) {\n    const pageSize = gridPageSizeSelector(apiRef);\n    let paginationLastRowIndex = DEFAULT_ROWS_TO_PROCESS;\n    if (pageSize > 0) {\n      paginationLastRowIndex = pageSize - 1;\n    }\n    return {\n      firstRowIndex: 0,\n      lastRowIndex: Math.min(paginationLastRowIndex, rowCount)\n    };\n  }\n  return {\n    firstRowIndex: 0,\n    lastRowIndex: Math.min(DEFAULT_ROWS_TO_PROCESS, rowCount)\n  };\n};\n\n/**\n * @requires columnsStateInitializer (method) - should be initialized before\n * @requires rowsStateInitializer (method) - should be initialized before\n * @requires filterStateInitializer (method) - should be initialized before\n */\nexport const rowSpanningStateInitializer = (state, props, apiRef) => {\n  if (!props.unstable_rowSpanning) {\n    return _extends({}, state, {\n      rowSpanning: EMPTY_STATE\n    });\n  }\n  const rowIds = state.rows.dataRowIds || [];\n  const orderedFields = state.columns.orderedFields || [];\n  const dataRowIdToModelLookup = state.rows.dataRowIdToModelLookup;\n  const columnsLookup = state.columns.lookup;\n  const isFilteringPending = Boolean(state.filter.filterModel.items.length) || Boolean(state.filter.filterModel.quickFilterValues?.length);\n  if (!rowIds.length || !orderedFields.length || !dataRowIdToModelLookup || !columnsLookup || isFilteringPending) {\n    return _extends({}, state, {\n      rowSpanning: EMPTY_STATE\n    });\n  }\n  const rangeToProcess = getInitialRangeToProcess(props, apiRef);\n  const rows = rowIds.map(id => ({\n    id,\n    model: dataRowIdToModelLookup[id]\n  }));\n  const colDefs = orderedFields.map(field => columnsLookup[field]);\n  const {\n    spannedCells,\n    hiddenCells,\n    hiddenCellOriginMap\n  } = computeRowSpanningState(apiRef, colDefs, rows, rangeToProcess, rangeToProcess, true, EMPTY_RANGE);\n  return _extends({}, state, {\n    rowSpanning: {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap\n    }\n  });\n};\nexport const useGridRowSpanning = (apiRef, props) => {\n  const processedRange = useLazyRef(() => {\n    return apiRef.current.state.rowSpanning !== EMPTY_STATE ? getInitialRangeToProcess(props, apiRef) : EMPTY_RANGE;\n  });\n  const updateRowSpanningState = React.useCallback((renderContext, resetState = false) => {\n    const {\n      range,\n      rows: visibleRows\n    } = getVisibleRows(apiRef, {\n      pagination: props.pagination,\n      paginationMode: props.paginationMode\n    });\n    if (range === null || !isRowContextInitialized(renderContext)) {\n      return;\n    }\n    if (resetState) {\n      processedRange.current = EMPTY_RANGE;\n    }\n    const rangeToProcess = getUnprocessedRange({\n      firstRowIndex: renderContext.firstRowIndex,\n      lastRowIndex: Math.min(renderContext.lastRowIndex, range.lastRowIndex + 1)\n    }, processedRange.current);\n    if (rangeToProcess === null) {\n      return;\n    }\n    const colDefs = gridVisibleColumnDefinitionsSelector(apiRef);\n    const {\n      spannedCells,\n      hiddenCells,\n      hiddenCellOriginMap,\n      processedRange: newProcessedRange\n    } = computeRowSpanningState(apiRef, colDefs, visibleRows, range, rangeToProcess, resetState, processedRange.current);\n    processedRange.current = newProcessedRange;\n    const newSpannedCellsCount = Object.keys(spannedCells).length;\n    const newHiddenCellsCount = Object.keys(hiddenCells).length;\n    const currentSpannedCellsCount = Object.keys(apiRef.current.state.rowSpanning.spannedCells).length;\n    const currentHiddenCellsCount = Object.keys(apiRef.current.state.rowSpanning.hiddenCells).length;\n    const shouldUpdateState = resetState || newSpannedCellsCount !== currentSpannedCellsCount || newHiddenCellsCount !== currentHiddenCellsCount;\n    const hasNoSpannedCells = newSpannedCellsCount === 0 && currentSpannedCellsCount === 0;\n    if (!shouldUpdateState || hasNoSpannedCells) {\n      return;\n    }\n    apiRef.current.setState(state => {\n      return _extends({}, state, {\n        rowSpanning: {\n          spannedCells,\n          hiddenCells,\n          hiddenCellOriginMap\n        }\n      });\n    });\n  }, [apiRef, processedRange, props.pagination, props.paginationMode]);\n\n  // Reset events trigger a full re-computation of the row spanning state:\n  // - The `unstable_rowSpanning` prop is updated (feature flag)\n  // - The filtering is applied\n  // - The sorting is applied\n  // - The `paginationModel` is updated\n  // - The rows are updated\n  const resetRowSpanningState = React.useCallback(() => {\n    const renderContext = gridRenderContextSelector(apiRef);\n    if (!isRowContextInitialized(renderContext)) {\n      return;\n    }\n    updateRowSpanningState(renderContext, true);\n  }, [apiRef, updateRowSpanningState]);\n  useGridApiEventHandler(apiRef, 'renderedRowsIntervalChange', runIf(props.unstable_rowSpanning, updateRowSpanningState));\n  useGridApiEventHandler(apiRef, 'sortedRowsSet', runIf(props.unstable_rowSpanning, resetRowSpanningState));\n  useGridApiEventHandler(apiRef, 'paginationModelChange', runIf(props.unstable_rowSpanning, resetRowSpanningState));\n  useGridApiEventHandler(apiRef, 'filteredRowsSet', runIf(props.unstable_rowSpanning, resetRowSpanningState));\n  useGridApiEventHandler(apiRef, 'columnsChange', runIf(props.unstable_rowSpanning, resetRowSpanningState));\n  React.useEffect(() => {\n    if (!props.unstable_rowSpanning) {\n      if (apiRef.current.state.rowSpanning !== EMPTY_STATE) {\n        apiRef.current.setState(state => _extends({}, state, {\n          rowSpanning: EMPTY_STATE\n        }));\n      }\n    } else if (apiRef.current.state.rowSpanning === EMPTY_STATE) {\n      resetRowSpanningState();\n    }\n  }, [apiRef, resetRowSpanningState, props.unstable_rowSpanning]);\n};","const warnedOnceCache = new Set();\n\n// TODO move to @base_ui/internals. Base UI, etc. need this helper.\nexport function warnOnce(message, gravity = 'warning') {\n  if (process.env.NODE_ENV === 'production') {\n    return;\n  }\n  const cleanMessage = Array.isArray(message) ? message.join('\\n') : message;\n  if (!warnedOnceCache.has(cleanMessage)) {\n    warnedOnceCache.add(cleanMessage);\n    if (gravity === 'error') {\n      console.error(cleanMessage);\n    } else {\n      console.warn(cleanMessage);\n    }\n  }\n}\nexport function clearWarningsCache() {\n  warnedOnceCache.clear();\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport { warnOnce } from '@mui/x-internals/warning';\nimport { gridDimensionsSelector } from \"../dimensions/index.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nexport const listViewStateInitializer = (state, props, apiRef) => _extends({}, state, {\n  listViewColumn: props.unstable_listColumn ? _extends({}, props.unstable_listColumn, {\n    computedWidth: getListColumnWidth(apiRef)\n  }) : undefined\n});\nexport function useGridListView(apiRef, props) {\n  /*\n   * EVENTS\n   */\n  const updateListColumnWidth = () => {\n    apiRef.current.setState(state => {\n      if (!state.listViewColumn) {\n        return state;\n      }\n      return _extends({}, state, {\n        listViewColumn: _extends({}, state.listViewColumn, {\n          computedWidth: getListColumnWidth(apiRef)\n        })\n      });\n    });\n  };\n  const prevInnerWidth = React.useRef(null);\n  const handleGridSizeChange = viewportInnerSize => {\n    if (prevInnerWidth.current !== viewportInnerSize.width) {\n      prevInnerWidth.current = viewportInnerSize.width;\n      updateListColumnWidth();\n    }\n  };\n  useGridApiEventHandler(apiRef, 'viewportInnerSizeChange', handleGridSizeChange);\n  useGridApiEventHandler(apiRef, 'columnVisibilityModelChange', updateListColumnWidth);\n\n  /*\n   * EFFECTS\n   */\n  useEnhancedEffect(() => {\n    const listColumn = props.unstable_listColumn;\n    if (listColumn) {\n      apiRef.current.setState(state => {\n        return _extends({}, state, {\n          listViewColumn: _extends({}, listColumn, {\n            computedWidth: getListColumnWidth(apiRef)\n          })\n        });\n      });\n    }\n  }, [apiRef, props.unstable_listColumn]);\n  React.useEffect(() => {\n    if (props.unstable_listView && !props.unstable_listColumn) {\n      warnOnce(['MUI X: The `unstable_listColumn` prop must be set if `unstable_listView` is enabled.', 'To fix, pass a column definition to the `unstable_listColumn` prop, e.g. `{ field: \"example\", renderCell: (params) => <div>{params.row.id}</div> }`.', 'For more details, see https://mui.com/x/react-data-grid/list-view/']);\n    }\n  }, [props.unstable_listView, props.unstable_listColumn]);\n}\nfunction getListColumnWidth(apiRef) {\n  return gridDimensionsSelector(apiRef.current.state).viewportInnerSize.width;\n}","import { useGridInitialization } from \"../hooks/core/useGridInitialization.js\";\nimport { useGridInitializeState } from \"../hooks/utils/useGridInitializeState.js\";\nimport { useGridClipboard } from \"../hooks/features/clipboard/useGridClipboard.js\";\nimport { columnMenuStateInitializer, useGridColumnMenu } from \"../hooks/features/columnMenu/useGridColumnMenu.js\";\nimport { useGridColumns, columnsStateInitializer } from \"../hooks/features/columns/useGridColumns.js\";\nimport { densityStateInitializer, useGridDensity } from \"../hooks/features/density/useGridDensity.js\";\nimport { useGridCsvExport } from \"../hooks/features/export/useGridCsvExport.js\";\nimport { useGridPrintExport } from \"../hooks/features/export/useGridPrintExport.js\";\nimport { useGridFilter, filterStateInitializer } from \"../hooks/features/filter/useGridFilter.js\";\nimport { focusStateInitializer, useGridFocus } from \"../hooks/features/focus/useGridFocus.js\";\nimport { useGridKeyboardNavigation } from \"../hooks/features/keyboardNavigation/useGridKeyboardNavigation.js\";\nimport { useGridPagination, paginationStateInitializer } from \"../hooks/features/pagination/useGridPagination.js\";\nimport { useGridPreferencesPanel, preferencePanelStateInitializer } from \"../hooks/features/preferencesPanel/useGridPreferencesPanel.js\";\nimport { useGridEditing, editingStateInitializer } from \"../hooks/features/editing/useGridEditing.js\";\nimport { useGridRows, rowsStateInitializer } from \"../hooks/features/rows/useGridRows.js\";\nimport { useGridRowsPreProcessors } from \"../hooks/features/rows/useGridRowsPreProcessors.js\";\nimport { useGridParamsApi } from \"../hooks/features/rows/useGridParamsApi.js\";\nimport { rowSelectionStateInitializer, useGridRowSelection } from \"../hooks/features/rowSelection/useGridRowSelection.js\";\nimport { useGridRowSelectionPreProcessors } from \"../hooks/features/rowSelection/useGridRowSelectionPreProcessors.js\";\nimport { useGridSorting, sortingStateInitializer } from \"../hooks/features/sorting/useGridSorting.js\";\nimport { useGridScroll } from \"../hooks/features/scroll/useGridScroll.js\";\nimport { useGridEvents } from \"../hooks/features/events/useGridEvents.js\";\nimport { dimensionsStateInitializer, useGridDimensions } from \"../hooks/features/dimensions/useGridDimensions.js\";\nimport { rowsMetaStateInitializer, useGridRowsMeta } from \"../hooks/features/rows/useGridRowsMeta.js\";\nimport { useGridStatePersistence } from \"../hooks/features/statePersistence/useGridStatePersistence.js\";\nimport { useGridColumnSpanning } from \"../hooks/features/columns/useGridColumnSpanning.js\";\nimport { useGridColumnGrouping, columnGroupsStateInitializer } from \"../hooks/features/columnGrouping/useGridColumnGrouping.js\";\nimport { useGridVirtualization, virtualizationStateInitializer } from \"../hooks/features/virtualization/index.js\";\nimport { columnResizeStateInitializer, useGridColumnResize } from \"../hooks/features/columnResize/useGridColumnResize.js\";\nimport { rowSpanningStateInitializer, useGridRowSpanning } from \"../hooks/features/rows/useGridRowSpanning.js\";\nimport { listViewStateInitializer, useGridListView } from \"../hooks/features/listView/useGridListView.js\";\nexport const useDataGridComponent = (inputApiRef, props) => {\n  const apiRef = useGridInitialization(inputApiRef, props);\n\n  /**\n   * Register all pre-processors called during state initialization here.\n   */\n  useGridRowSelectionPreProcessors(apiRef, props);\n  useGridRowsPreProcessors(apiRef);\n\n  /**\n   * Register all state initializers here.\n   */\n  useGridInitializeState(rowSelectionStateInitializer, apiRef, props);\n  useGridInitializeState(columnsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsStateInitializer, apiRef, props);\n  useGridInitializeState(paginationStateInitializer, apiRef, props);\n  useGridInitializeState(editingStateInitializer, apiRef, props);\n  useGridInitializeState(focusStateInitializer, apiRef, props);\n  useGridInitializeState(sortingStateInitializer, apiRef, props);\n  useGridInitializeState(preferencePanelStateInitializer, apiRef, props);\n  useGridInitializeState(filterStateInitializer, apiRef, props);\n  useGridInitializeState(rowSpanningStateInitializer, apiRef, props);\n  useGridInitializeState(densityStateInitializer, apiRef, props);\n  useGridInitializeState(columnResizeStateInitializer, apiRef, props);\n  useGridInitializeState(columnMenuStateInitializer, apiRef, props);\n  useGridInitializeState(columnGroupsStateInitializer, apiRef, props);\n  useGridInitializeState(virtualizationStateInitializer, apiRef, props);\n  useGridInitializeState(dimensionsStateInitializer, apiRef, props);\n  useGridInitializeState(rowsMetaStateInitializer, apiRef, props);\n  useGridInitializeState(listViewStateInitializer, apiRef, props);\n  useGridKeyboardNavigation(apiRef, props);\n  useGridRowSelection(apiRef, props);\n  useGridColumns(apiRef, props);\n  useGridRows(apiRef, props);\n  useGridRowSpanning(apiRef, props);\n  useGridParamsApi(apiRef, props);\n  useGridColumnSpanning(apiRef);\n  useGridColumnGrouping(apiRef, props);\n  useGridEditing(apiRef, props);\n  useGridFocus(apiRef, props);\n  useGridPreferencesPanel(apiRef, props);\n  useGridFilter(apiRef, props);\n  useGridSorting(apiRef, props);\n  useGridDensity(apiRef, props);\n  useGridColumnResize(apiRef, props);\n  useGridPagination(apiRef, props);\n  useGridRowsMeta(apiRef, props);\n  useGridScroll(apiRef, props);\n  useGridColumnMenu(apiRef);\n  useGridCsvExport(apiRef, props);\n  useGridPrintExport(apiRef, props);\n  useGridClipboard(apiRef, props);\n  useGridDimensions(apiRef, props);\n  useGridEvents(apiRef, props);\n  useGridStatePersistence(apiRef);\n  useGridVirtualization(apiRef, props);\n  useGridListView(apiRef, props);\n  return apiRef;\n};","import { useGridApiOptionHandler } from \"../../utils/useGridApiEventHandler.js\";\n/**\n * @requires useGridFocus (event) - can be after, async only\n * @requires useGridColumns (event) - can be after, async only\n */\nexport function useGridEvents(apiRef, props) {\n  useGridApiOptionHandler(apiRef, 'columnHeaderClick', props.onColumnHeaderClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderContextMenu', props.onColumnHeaderContextMenu);\n  useGridApiOptionHandler(apiRef, 'columnHeaderDoubleClick', props.onColumnHeaderDoubleClick);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOver', props.onColumnHeaderOver);\n  useGridApiOptionHandler(apiRef, 'columnHeaderOut', props.onColumnHeaderOut);\n  useGridApiOptionHandler(apiRef, 'columnHeaderEnter', props.onColumnHeaderEnter);\n  useGridApiOptionHandler(apiRef, 'columnHeaderLeave', props.onColumnHeaderLeave);\n  useGridApiOptionHandler(apiRef, 'cellClick', props.onCellClick);\n  useGridApiOptionHandler(apiRef, 'cellDoubleClick', props.onCellDoubleClick);\n  useGridApiOptionHandler(apiRef, 'cellKeyDown', props.onCellKeyDown);\n  useGridApiOptionHandler(apiRef, 'preferencePanelClose', props.onPreferencePanelClose);\n  useGridApiOptionHandler(apiRef, 'preferencePanelOpen', props.onPreferencePanelOpen);\n  useGridApiOptionHandler(apiRef, 'menuOpen', props.onMenuOpen);\n  useGridApiOptionHandler(apiRef, 'menuClose', props.onMenuClose);\n  useGridApiOptionHandler(apiRef, 'rowDoubleClick', props.onRowDoubleClick);\n  useGridApiOptionHandler(apiRef, 'rowClick', props.onRowClick);\n  useGridApiOptionHandler(apiRef, 'stateChange', props.onStateChange);\n}","import * as React from 'react';\nimport { useGridApiMethod } from \"../../utils/index.js\";\nexport const useGridStatePersistence = apiRef => {\n  const exportState = React.useCallback((params = {}) => {\n    const stateToExport = apiRef.current.unstable_applyPipeProcessors('exportState', {}, params);\n    return stateToExport;\n  }, [apiRef]);\n  const restoreState = React.useCallback(stateToRestore => {\n    const response = apiRef.current.unstable_applyPipeProcessors('restoreState', {\n      callbacks: []\n    }, {\n      stateToRestore\n    });\n    response.callbacks.forEach(callback => {\n      callback();\n    });\n    apiRef.current.forceUpdate();\n  }, [apiRef]);\n  const statePersistenceApi = {\n    exportState,\n    restoreState\n  };\n  useGridApiMethod(apiRef, statePersistenceApi, 'public');\n};","export const GRID_DEFAULT_LOCALE_TEXT = {\n  // Root\n  noRowsLabel: 'No rows',\n  noResultsOverlayLabel: 'No results found.',\n  // Density selector toolbar button text\n  toolbarDensity: 'Density',\n  toolbarDensityLabel: 'Density',\n  toolbarDensityCompact: 'Compact',\n  toolbarDensityStandard: 'Standard',\n  toolbarDensityComfortable: 'Comfortable',\n  // Columns selector toolbar button text\n  toolbarColumns: 'Columns',\n  toolbarColumnsLabel: 'Select columns',\n  // Filters toolbar button text\n  toolbarFilters: 'Filters',\n  toolbarFiltersLabel: 'Show filters',\n  toolbarFiltersTooltipHide: 'Hide filters',\n  toolbarFiltersTooltipShow: 'Show filters',\n  toolbarFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  // Quick filter toolbar field\n  toolbarQuickFilterPlaceholder: 'Search…',\n  toolbarQuickFilterLabel: 'Search',\n  toolbarQuickFilterDeleteIconLabel: 'Clear',\n  // Export selector toolbar button text\n  toolbarExport: 'Export',\n  toolbarExportLabel: 'Export',\n  toolbarExportCSV: 'Download as CSV',\n  toolbarExportPrint: 'Print',\n  toolbarExportExcel: 'Download as Excel',\n  // Columns management text\n  columnsManagementSearchTitle: 'Search',\n  columnsManagementNoColumns: 'No columns',\n  columnsManagementShowHideAllText: 'Show/Hide All',\n  columnsManagementReset: 'Reset',\n  columnsManagementDeleteIconLabel: 'Clear',\n  // Filter panel text\n  filterPanelAddFilter: 'Add filter',\n  filterPanelRemoveAll: 'Remove all',\n  filterPanelDeleteIconLabel: 'Delete',\n  filterPanelLogicOperator: 'Logic operator',\n  filterPanelOperator: 'Operator',\n  filterPanelOperatorAnd: 'And',\n  filterPanelOperatorOr: 'Or',\n  filterPanelColumns: 'Columns',\n  filterPanelInputLabel: 'Value',\n  filterPanelInputPlaceholder: 'Filter value',\n  // Filter operators text\n  filterOperatorContains: 'contains',\n  filterOperatorDoesNotContain: 'does not contain',\n  filterOperatorEquals: 'equals',\n  filterOperatorDoesNotEqual: 'does not equal',\n  filterOperatorStartsWith: 'starts with',\n  filterOperatorEndsWith: 'ends with',\n  filterOperatorIs: 'is',\n  filterOperatorNot: 'is not',\n  filterOperatorAfter: 'is after',\n  filterOperatorOnOrAfter: 'is on or after',\n  filterOperatorBefore: 'is before',\n  filterOperatorOnOrBefore: 'is on or before',\n  filterOperatorIsEmpty: 'is empty',\n  filterOperatorIsNotEmpty: 'is not empty',\n  filterOperatorIsAnyOf: 'is any of',\n  'filterOperator=': '=',\n  'filterOperator!=': '!=',\n  'filterOperator>': '>',\n  'filterOperator>=': '>=',\n  'filterOperator<': '<',\n  'filterOperator<=': '<=',\n  // Header filter operators text\n  headerFilterOperatorContains: 'Contains',\n  headerFilterOperatorDoesNotContain: 'Does not contain',\n  headerFilterOperatorEquals: 'Equals',\n  headerFilterOperatorDoesNotEqual: 'Does not equal',\n  headerFilterOperatorStartsWith: 'Starts with',\n  headerFilterOperatorEndsWith: 'Ends with',\n  headerFilterOperatorIs: 'Is',\n  headerFilterOperatorNot: 'Is not',\n  headerFilterOperatorAfter: 'Is after',\n  headerFilterOperatorOnOrAfter: 'Is on or after',\n  headerFilterOperatorBefore: 'Is before',\n  headerFilterOperatorOnOrBefore: 'Is on or before',\n  headerFilterOperatorIsEmpty: 'Is empty',\n  headerFilterOperatorIsNotEmpty: 'Is not empty',\n  headerFilterOperatorIsAnyOf: 'Is any of',\n  'headerFilterOperator=': 'Equals',\n  'headerFilterOperator!=': 'Not equals',\n  'headerFilterOperator>': 'Greater than',\n  'headerFilterOperator>=': 'Greater than or equal to',\n  'headerFilterOperator<': 'Less than',\n  'headerFilterOperator<=': 'Less than or equal to',\n  // Filter values text\n  filterValueAny: 'any',\n  filterValueTrue: 'true',\n  filterValueFalse: 'false',\n  // Column menu text\n  columnMenuLabel: 'Menu',\n  columnMenuShowColumns: 'Show columns',\n  columnMenuManageColumns: 'Manage columns',\n  columnMenuFilter: 'Filter',\n  columnMenuHideColumn: 'Hide column',\n  columnMenuUnsort: 'Unsort',\n  columnMenuSortAsc: 'Sort by ASC',\n  columnMenuSortDesc: 'Sort by DESC',\n  // Column header text\n  columnHeaderFiltersTooltipActive: count => count !== 1 ? `${count} active filters` : `${count} active filter`,\n  columnHeaderFiltersLabel: 'Show filters',\n  columnHeaderSortIconLabel: 'Sort',\n  // Rows selected footer text\n  footerRowSelected: count => count !== 1 ? `${count.toLocaleString()} rows selected` : `${count.toLocaleString()} row selected`,\n  // Total row amount footer text\n  footerTotalRows: 'Total Rows:',\n  // Total visible row amount footer text\n  footerTotalVisibleRows: (visibleCount, totalCount) => `${visibleCount.toLocaleString()} of ${totalCount.toLocaleString()}`,\n  // Checkbox selection text\n  checkboxSelectionHeaderName: 'Checkbox selection',\n  checkboxSelectionSelectAllRows: 'Select all rows',\n  checkboxSelectionUnselectAllRows: 'Unselect all rows',\n  checkboxSelectionSelectRow: 'Select row',\n  checkboxSelectionUnselectRow: 'Unselect row',\n  // Boolean cell text\n  booleanCellTrueLabel: 'yes',\n  booleanCellFalseLabel: 'no',\n  // Actions cell more text\n  actionsCellMore: 'more',\n  // Column pinning text\n  pinToLeft: 'Pin to left',\n  pinToRight: 'Pin to right',\n  unpin: 'Unpin',\n  // Tree Data\n  treeDataGroupingHeaderName: 'Group',\n  treeDataExpand: 'see children',\n  treeDataCollapse: 'hide children',\n  // Grouping columns\n  groupingColumnHeaderName: 'Group',\n  groupColumn: name => `Group by ${name}`,\n  unGroupColumn: name => `Stop grouping by ${name}`,\n  // Master/detail\n  detailPanelToggle: 'Detail panel toggle',\n  expandDetailPanel: 'Expand',\n  collapseDetailPanel: 'Collapse',\n  // Used core components translation keys\n  MuiTablePagination: {},\n  // Row reordering text\n  rowReorderingHeaderName: 'Row reordering',\n  // Aggregation\n  aggregationMenuItemHeader: 'Aggregation',\n  aggregationFunctionLabelSum: 'sum',\n  aggregationFunctionLabelAvg: 'avg',\n  aggregationFunctionLabelMin: 'min',\n  aggregationFunctionLabelMax: 'max',\n  aggregationFunctionLabelSize: 'size'\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"field\", \"type\", \"align\", \"width\", \"height\", \"empty\", \"style\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Skeleton from '@mui/material/Skeleton';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { createRandomNumberGenerator } from \"../../utils/utils.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CIRCULAR_CONTENT_SIZE = '1.3em';\nconst CONTENT_HEIGHT = '1.2em';\nconst DEFAULT_CONTENT_WIDTH_RANGE = [40, 80];\nconst CONTENT_WIDTH_RANGE_BY_TYPE = {\n  number: [40, 60],\n  string: [40, 80],\n  date: [40, 60],\n  dateTime: [60, 80],\n  singleSelect: [40, 80]\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    classes,\n    empty\n  } = ownerState;\n  const slots = {\n    root: ['cell', 'cellSkeleton', `cell--text${align ? capitalize(align) : 'Left'}`, empty && 'cellEmpty']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst randomNumberGenerator = createRandomNumberGenerator(12345);\nfunction GridSkeletonCell(props) {\n  const {\n      field,\n      type,\n      align,\n      width,\n      height,\n      empty = false,\n      style,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = {\n    classes: rootProps.classes,\n    align,\n    empty\n  };\n  const classes = useUtilityClasses(ownerState);\n\n  // Memo prevents the non-circular skeleton widths changing to random widths on every render\n  const skeletonProps = React.useMemo(() => {\n    const isCircularContent = type === 'boolean' || type === 'actions';\n    if (isCircularContent) {\n      return {\n        variant: 'circular',\n        width: CIRCULAR_CONTENT_SIZE,\n        height: CIRCULAR_CONTENT_SIZE\n      };\n    }\n\n    // The width of the skeleton is a random number between the min and max values\n    // The min and max values are determined by the type of the column\n    const [min, max] = type ? CONTENT_WIDTH_RANGE_BY_TYPE[type] ?? DEFAULT_CONTENT_WIDTH_RANGE : DEFAULT_CONTENT_WIDTH_RANGE;\n    return {\n      variant: 'text',\n      width: `${Math.round(randomNumberGenerator(min, max))}%`,\n      height: CONTENT_HEIGHT\n    };\n  }, [type]);\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    \"data-field\": field,\n    className: clsx(classes.root, className),\n    style: _extends({\n      height,\n      maxWidth: width,\n      minWidth: width\n    }, style)\n  }, other, {\n    children: !empty && /*#__PURE__*/_jsx(Skeleton, _extends({}, skeletonProps))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridSkeletonCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.string,\n  /**\n   * If `true`, the cell will not display the skeleton but still reserve the cell space.\n   * @default false\n   */\n  empty: PropTypes.bool,\n  field: PropTypes.string,\n  height: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]),\n  type: PropTypes.oneOf(['actions', 'boolean', 'custom', 'date', 'dateTime', 'number', 'singleSelect', 'string']),\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nconst Memoized = fastMemo(GridSkeletonCell);\nexport { Memoized as GridSkeletonCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['iconButtonContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridIconButtonContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'IconButtonContainer',\n  overridesResolver: (props, styles) => styles.iconButtonContainer\n})(() => ({\n  display: 'flex',\n  visibility: 'hidden',\n  width: 0\n}));\nexport const GridIconButtonContainer = forwardRef(function GridIconButtonContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridIconButtonContainerRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    ref: ref\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { useGridSelectorV8 } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelSelectorWithLabel, gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['filterIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderFilterIconButtonWrapped(props) {\n  if (!props.counter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridColumnHeaderFilterIconButton, _extends({}, props));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButtonWrapped.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nfunction GridColumnHeaderFilterIconButton(props) {\n  const {\n    counter,\n    field,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const labelId = useId();\n  const isOpen = useGridSelectorV8(apiRef, gridPreferencePanelSelectorWithLabel, labelId);\n  const panelId = useId();\n  const toggleFilter = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    const {\n      open,\n      openedPanelValue\n    } = gridPreferencePanelStateSelector(apiRef.current.state);\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hideFilterPanel();\n    } else {\n      apiRef.current.showFilterPanel(undefined, panelId, labelId);\n    }\n    if (onClick) {\n      onClick(apiRef.current.getColumnHeaderParams(field), event);\n    }\n  }, [apiRef, field, onClick, panelId, labelId]);\n  if (!counter) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    id: labelId,\n    onClick: toggleFilter,\n    color: \"default\",\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderFiltersLabel'),\n    size: \"small\",\n    tabIndex: -1,\n    \"aria-haspopup\": \"menu\",\n    \"aria-expanded\": isOpen,\n    \"aria-controls\": isOpen ? panelId : undefined\n  }, rootProps.slotProps?.baseIconButton, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnFilteredIcon, {\n      className: classes.icon,\n      fontSize: \"small\"\n    })\n  }));\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('columnHeaderFiltersTooltipActive')(counter),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n      children: [counter > 1 && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n        badgeContent: counter,\n        color: \"default\",\n        children: iconButton\n      }), counter === 1 && iconButton]\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderFilterIconButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  counter: PropTypes.number,\n  field: PropTypes.string.isRequired,\n  onClick: PropTypes.func\n} : void 0;\nexport { GridColumnHeaderFilterIconButtonWrapped as GridColumnHeaderFilterIconButton };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"direction\", \"index\", \"sortingOrder\", \"disabled\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridIconButtonContainer } from \"./GridIconButtonContainer.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    icon: ['sortIcon']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction getIcon(icons, direction, className, sortingOrder) {\n  let Icon;\n  const iconProps = {};\n  if (direction === 'asc') {\n    Icon = icons.columnSortedAscendingIcon;\n  } else if (direction === 'desc') {\n    Icon = icons.columnSortedDescendingIcon;\n  } else {\n    Icon = icons.columnUnsortedIcon;\n    iconProps.sortingOrder = sortingOrder;\n  }\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({\n    fontSize: \"small\",\n    className: className\n  }, iconProps)) : null;\n}\nfunction GridColumnHeaderSortIconRaw(props) {\n  const {\n      direction,\n      index,\n      sortingOrder,\n      disabled\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const iconElement = getIcon(rootProps.slots, direction, classes.icon, sortingOrder);\n  if (!iconElement) {\n    return null;\n  }\n  const iconButton = /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n    tabIndex: -1,\n    \"aria-label\": apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    title: apiRef.current.getLocaleText('columnHeaderSortIconLabel'),\n    size: \"small\",\n    disabled: disabled\n  }, rootProps.slotProps?.baseIconButton, other, {\n    children: iconElement\n  }));\n  return /*#__PURE__*/_jsxs(GridIconButtonContainer, {\n    children: [index != null && /*#__PURE__*/_jsx(rootProps.slots.baseBadge, {\n      badgeContent: index,\n      color: \"default\",\n      overlap: \"circular\",\n      children: iconButton\n    }), index == null && iconButton]\n  });\n}\nconst GridColumnHeaderSortIcon = /*#__PURE__*/React.memo(GridColumnHeaderSortIconRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSortIconRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  direction: PropTypes.oneOf(['asc', 'desc']),\n  disabled: PropTypes.bool,\n  field: PropTypes.string.isRequired,\n  index: PropTypes.number,\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])).isRequired\n} : void 0;\nexport { GridColumnHeaderSortIcon };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"selectedRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['selectedRowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridSelectedRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SelectedRowCount',\n  overridesResolver: (props, styles) => styles.selectedRowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2),\n  visibility: 'hidden',\n  width: 0,\n  height: 0,\n  [theme.breakpoints.up('sm')]: {\n    visibility: 'visible',\n    width: 'auto',\n    height: 'auto'\n  }\n}));\nconst GridSelectedRowCount = forwardRef(function GridSelectedRowCount(props, ref) {\n  const {\n      className,\n      selectedRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  const rowSelectedText = apiRef.current.getLocaleText('footerRowSelected')(selectedRowCount);\n  return /*#__PURE__*/_jsx(GridSelectedRowCountRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    ref: ref,\n    children: rowSelectedText\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridSelectedRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  selectedRowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridSelectedRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['footerContainer', 'withBorderColor']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFooterContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FooterContainer',\n  overridesResolver: (props, styles) => styles.footerContainer\n})({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  minHeight: 52,\n  borderTop: '1px solid'\n});\nconst GridFooterContainer = forwardRef(function GridFooterContainer(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridFooterContainerRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooterContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooterContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { gridTopLevelRowCountSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { selectedGridRowsCountSelector } from \"../hooks/features/rowSelection/gridRowSelectionSelector.js\";\nimport { gridFilteredTopLevelRowCountSelector } from \"../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridSelectedRowCount } from \"./GridSelectedRowCount.js\";\nimport { GridFooterContainer } from \"./containers/GridFooterContainer.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridFooter = forwardRef(function GridFooter(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const totalTopLevelRowCount = useGridSelector(apiRef, gridTopLevelRowCountSelector);\n  const selectedRowCount = useGridSelector(apiRef, selectedGridRowsCountSelector);\n  const visibleTopLevelRowCount = useGridSelector(apiRef, gridFilteredTopLevelRowCountSelector);\n  const selectedRowCountElement = !rootProps.hideFooterSelectedRowCount && selectedRowCount > 0 ? /*#__PURE__*/_jsx(GridSelectedRowCount, {\n    selectedRowCount: selectedRowCount\n  }) : /*#__PURE__*/_jsx(\"div\", {});\n  const rowCountElement = !rootProps.hideFooterRowCount && !rootProps.pagination ? /*#__PURE__*/_jsx(rootProps.slots.footerRowCount, _extends({}, rootProps.slotProps?.footerRowCount, {\n    rowCount: totalTopLevelRowCount,\n    visibleRowCount: visibleTopLevelRowCount\n  })) : null;\n  const paginationElement = rootProps.pagination && !rootProps.hideFooterPagination && rootProps.slots.pagination && /*#__PURE__*/_jsx(rootProps.slots.pagination, _extends({}, rootProps.slotProps?.pagination));\n  return /*#__PURE__*/_jsxs(GridFooterContainer, _extends({}, props, {\n    ref: ref,\n    children: [selectedRowCountElement, rowCountElement, paginationElement]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"rowCount\", \"visibleRowCount\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['rowCount']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridRowCountRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'RowCount',\n  overridesResolver: (props, styles) => styles.rowCount\n})(({\n  theme\n}) => ({\n  alignItems: 'center',\n  display: 'flex',\n  margin: theme.spacing(0, 2)\n}));\nconst GridRowCount = forwardRef(function GridRowCount(props, ref) {\n  const {\n      className,\n      rowCount,\n      visibleRowCount\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const ownerState = useGridRootProps();\n  const classes = useUtilityClasses(ownerState);\n  if (rowCount === 0) {\n    return null;\n  }\n  const text = visibleRowCount < rowCount ? apiRef.current.getLocaleText('footerTotalVisibleRows')(visibleRowCount, rowCount) : rowCount.toLocaleString();\n  return /*#__PURE__*/_jsxs(GridRowCountRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    ref: ref,\n    children: [apiRef.current.getLocaleText('footerTotalRows'), \" \", text]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRowCount.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  rowCount: PropTypes.number.isRequired,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  visibleRowCount: PropTypes.number.isRequired\n} : void 0;\nexport { GridRowCount };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['overlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridOverlayRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'Overlay',\n  overridesResolver: (_, styles) => styles.overlay\n})({\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  alignSelf: 'center',\n  alignItems: 'center',\n  justifyContent: 'center',\n  backgroundColor: 'var(--unstable_DataGrid-overlayBackground)'\n});\nconst GridOverlay = forwardRef(function GridOverlay(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridOverlayRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridOverlay };","import { PinnedColumnPosition } from \"../constants.js\";\nexport const getPinnedCellOffset = (pinnedPosition, computedWidth, columnIndex, columnPositions, columnsTotalWidth, scrollbarWidth) => {\n  let pinnedOffset;\n  switch (pinnedPosition) {\n    case PinnedColumnPosition.LEFT:\n      pinnedOffset = columnPositions[columnIndex];\n      break;\n    case PinnedColumnPosition.RIGHT:\n      pinnedOffset = columnsTotalWidth - columnPositions[columnIndex] - computedWidth + scrollbarWidth;\n      break;\n    default:\n      pinnedOffset = undefined;\n      break;\n  }\n  return pinnedOffset;\n};","import { PinnedColumnPosition } from \"../internals/constants.js\";\nexport const shouldCellShowRightBorder = (pinnedPosition, indexInSection, sectionLength, showCellVerticalBorderRootProp, gridHasFiller) => {\n  const isSectionLastCell = indexInSection === sectionLength - 1;\n  if (pinnedPosition === PinnedColumnPosition.LEFT && isSectionLastCell) {\n    return true;\n  }\n  if (showCellVerticalBorderRootProp) {\n    if (pinnedPosition === PinnedColumnPosition.LEFT) {\n      return true;\n    }\n    if (pinnedPosition === PinnedColumnPosition.RIGHT) {\n      return !isSectionLastCell;\n    }\n    // pinnedPosition === undefined, middle section\n    return !isSectionLastCell || gridHasFiller;\n  }\n  return false;\n};\nexport const shouldCellShowLeftBorder = (pinnedPosition, indexInSection) => {\n  return pinnedPosition === PinnedColumnPosition.RIGHT && indexInSection === 0;\n};","import * as React from 'react';\nimport clsx from 'clsx';\nimport { gridClasses } from \"../constants/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst classes = {\n  root: gridClasses.scrollbarFiller,\n  header: gridClasses['scrollbarFiller--header'],\n  borderTop: gridClasses['scrollbarFiller--borderTop'],\n  borderBottom: gridClasses['scrollbarFiller--borderBottom'],\n  pinnedRight: gridClasses['scrollbarFiller--pinnedRight']\n};\nfunction GridScrollbarFillerCell({\n  header,\n  borderTop = true,\n  borderBottom,\n  pinnedRight\n}) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    role: \"presentation\",\n    className: clsx(classes.root, header && classes.header, borderTop && classes.borderTop, borderBottom && classes.borderBottom, pinnedRight && classes.pinnedRight)\n  });\n}\nexport { GridScrollbarFillerCell };","import { PinnedColumnPosition } from \"../internals/constants.js\";\nexport const rtlFlipSide = (position, isRtl) => {\n  if (!position) {\n    return undefined;\n  }\n  if (!isRtl) {\n    if (position === PinnedColumnPosition.LEFT) {\n      return 'left';\n    }\n    if (position === PinnedColumnPosition.RIGHT) {\n      return 'right';\n    }\n  } else {\n    if (position === PinnedColumnPosition.LEFT) {\n      return 'right';\n    }\n    if (position === PinnedColumnPosition.RIGHT) {\n      return 'left';\n    }\n  }\n  return undefined;\n};","import { rtlFlipSide } from \"../../utils/rtlFlipSide.js\";\nexport function attachPinnedStyle(style, isRtl, pinnedPosition, pinnedOffset) {\n  const side = rtlFlipSide(pinnedPosition, isRtl);\n  if (!side || pinnedOffset === undefined) {\n    return style;\n  }\n  style[side] = pinnedOffset;\n  return style;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport useForkRef from '@mui/utils/useForkRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridColumnPositionsSelector, gridDimensionsSelector, gridVisibleColumnDefinitionsSelector, gridVisiblePinnedColumnDefinitionsSelector, useGridApiEventHandler, useGridSelector } from \"../hooks/index.js\";\nimport { PinnedColumnPosition } from \"../internals/constants.js\";\nimport { gridColumnsTotalWidthSelector } from \"../hooks/features/dimensions/gridDimensionsSelectors.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../constants/gridClasses.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../utils/cellBorderUtils.js\";\nimport { escapeOperandAttributeSelector } from \"../utils/domUtils.js\";\nimport { GridScrollbarFillerCell } from \"./GridScrollbarFillerCell.js\";\nimport { rtlFlipSide } from \"../utils/rtlFlipSide.js\";\nimport { attachPinnedStyle } from \"../internals/utils/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SkeletonOverlay = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'SkeletonLoadingOverlay',\n  overridesResolver: (props, styles) => styles.skeletonLoadingOverlay\n})({\n  minWidth: '100%',\n  width: 'max-content',\n  // prevents overflow: clip; cutting off the x axis\n  height: '100%',\n  overflow: 'clip' // y axis is hidden while the x axis is allowed to overflow\n});\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['skeletonLoadingOverlay']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst getColIndex = el => parseInt(el.getAttribute('data-colindex'), 10);\nconst GridSkeletonLoadingOverlay = forwardRef(function GridSkeletonLoadingOverlay(props, forwardedRef) {\n  const rootProps = useGridRootProps();\n  const {\n    slots\n  } = rootProps;\n  const isRtl = useRtl();\n  const classes = useUtilityClasses({\n    classes: rootProps.classes\n  });\n  const ref = React.useRef(null);\n  const handleRef = useForkRef(ref, forwardedRef);\n  const apiRef = useGridApiContext();\n  const dimensions = useGridSelector(apiRef, gridDimensionsSelector);\n  const viewportHeight = dimensions?.viewportInnerSize.height ?? 0;\n  const skeletonRowsCount = Math.ceil(viewportHeight / dimensions.rowHeight);\n  const totalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const positions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const inViewportCount = React.useMemo(() => positions.filter(value => value <= totalWidth).length, [totalWidth, positions]);\n  const allVisibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const columns = React.useMemo(() => allVisibleColumns.slice(0, inViewportCount), [allVisibleColumns, inViewportCount]);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const getPinnedPosition = React.useCallback(field => {\n    if (pinnedColumns.left.findIndex(col => col.field === field) !== -1) {\n      return PinnedColumnPosition.LEFT;\n    }\n    if (pinnedColumns.right.findIndex(col => col.field === field) !== -1) {\n      return PinnedColumnPosition.RIGHT;\n    }\n    return undefined;\n  }, [pinnedColumns.left, pinnedColumns.right]);\n  const children = React.useMemo(() => {\n    const array = [];\n    for (let i = 0; i < skeletonRowsCount; i += 1) {\n      const rowCells = [];\n      for (let colIndex = 0; colIndex < columns.length; colIndex += 1) {\n        const column = columns[colIndex];\n        const pinnedPosition = getPinnedPosition(column.field);\n        const isPinnedLeft = pinnedPosition === PinnedColumnPosition.LEFT;\n        const isPinnedRight = pinnedPosition === PinnedColumnPosition.RIGHT;\n        const pinnedSide = rtlFlipSide(pinnedPosition, isRtl);\n        const sectionLength = pinnedSide ? pinnedColumns[pinnedSide].length // pinned section\n        : columns.length - pinnedColumns.left.length - pinnedColumns.right.length; // middle section\n        const sectionIndex = pinnedSide ? pinnedColumns[pinnedSide].findIndex(col => col.field === column.field) // pinned section\n        : colIndex - pinnedColumns.left.length; // middle section\n        const scrollbarWidth = dimensions.hasScrollY ? dimensions.scrollbarSize : 0;\n        const pinnedStyle = attachPinnedStyle({}, isRtl, pinnedPosition, getPinnedCellOffset(pinnedPosition, column.computedWidth, colIndex, positions, dimensions.columnsTotalWidth, scrollbarWidth));\n        const gridHasFiller = dimensions.columnsTotalWidth < dimensions.viewportOuterSize.width;\n        const showRightBorder = shouldCellShowRightBorder(pinnedPosition, sectionIndex, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n        const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, sectionIndex);\n        const isLastColumn = colIndex === columns.length - 1;\n        const isFirstPinnedRight = isPinnedRight && sectionIndex === 0;\n        const hasFillerBefore = isFirstPinnedRight && gridHasFiller;\n        const hasFillerAfter = isLastColumn && !isFirstPinnedRight && gridHasFiller;\n        const expandedWidth = dimensions.viewportOuterSize.width - dimensions.columnsTotalWidth;\n        const emptyCellWidth = Math.max(0, expandedWidth);\n        const emptyCell = /*#__PURE__*/_jsx(slots.skeletonCell, {\n          width: emptyCellWidth,\n          empty: true\n        }, `skeleton-filler-column-${i}`);\n        const hasScrollbarFiller = isLastColumn && scrollbarWidth !== 0;\n        if (hasFillerBefore) {\n          rowCells.push(emptyCell);\n        }\n        rowCells.push(/*#__PURE__*/_jsx(slots.skeletonCell, {\n          field: column.field,\n          type: column.type,\n          align: column.align,\n          width: \"var(--width)\",\n          height: dimensions.rowHeight,\n          \"data-colindex\": colIndex,\n          className: clsx(isPinnedLeft && gridClasses['cell--pinnedLeft'], isPinnedRight && gridClasses['cell--pinnedRight'], showRightBorder && gridClasses['cell--withRightBorder'], showLeftBorder && gridClasses['cell--withLeftBorder']),\n          style: _extends({\n            '--width': `${column.computedWidth}px`\n          }, pinnedStyle)\n        }, `skeleton-column-${i}-${column.field}`));\n        if (hasFillerAfter) {\n          rowCells.push(emptyCell);\n        }\n        if (hasScrollbarFiller) {\n          rowCells.push(/*#__PURE__*/_jsx(GridScrollbarFillerCell, {\n            pinnedRight: pinnedColumns.right.length > 0\n          }, `skeleton-scrollbar-filler-${i}`));\n        }\n      }\n      array.push(/*#__PURE__*/_jsx(\"div\", {\n        className: clsx(gridClasses.row, gridClasses.rowSkeleton, i === 0 && gridClasses['row--firstVisible']),\n        children: rowCells\n      }, `skeleton-row-${i}`));\n    }\n    return array;\n  }, [slots, columns, pinnedColumns, skeletonRowsCount, rootProps.showCellVerticalBorder, dimensions, positions, getPinnedPosition, isRtl]);\n\n  // Sync the column resize of the overlay columns with the grid\n  const handleColumnResize = params => {\n    const {\n      colDef,\n      width\n    } = params;\n    const cells = ref.current?.querySelectorAll(`[data-field=\"${escapeOperandAttributeSelector(colDef.field)}\"]`);\n    if (!cells) {\n      throw new Error('MUI X: Expected skeleton cells to be defined with `data-field` attribute.');\n    }\n    const resizedColIndex = columns.findIndex(col => col.field === colDef.field);\n    const pinnedPosition = getPinnedPosition(colDef.field);\n    const isPinnedLeft = pinnedPosition === PinnedColumnPosition.LEFT;\n    const isPinnedRight = pinnedPosition === PinnedColumnPosition.RIGHT;\n    const currentWidth = getComputedStyle(cells[0]).getPropertyValue('--width');\n    const delta = parseInt(currentWidth, 10) - width;\n    if (cells) {\n      cells.forEach(element => {\n        element.style.setProperty('--width', `${width}px`);\n      });\n    }\n    if (isPinnedLeft) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedLeft']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex > resizedColIndex) {\n          element.style.left = `${parseInt(getComputedStyle(element).left, 10) - delta}px`;\n        }\n      });\n    }\n    if (isPinnedRight) {\n      const pinnedCells = ref.current?.querySelectorAll(`.${gridClasses['cell--pinnedRight']}`);\n      pinnedCells?.forEach(element => {\n        const colIndex = getColIndex(element);\n        if (colIndex < resizedColIndex) {\n          element.style.right = `${parseInt(getComputedStyle(element).right, 10) + delta}px`;\n        }\n      });\n    }\n  };\n  useGridApiEventHandler(apiRef, 'columnResize', handleColumnResize);\n  return /*#__PURE__*/_jsx(SkeletonOverlay, _extends({\n    className: classes.root\n  }, props, {\n    ref: handleRef,\n    children: children\n  }));\n});\nexport { GridSkeletonLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"variant\", \"noRowsVariant\", \"style\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport LinearProgress from '@mui/material/LinearProgress';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { GridSkeletonLoadingOverlay } from \"./GridSkeletonLoadingOverlay.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { gridRowCountSelector, useGridSelector } from \"../hooks/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst LOADING_VARIANTS = {\n  'circular-progress': {\n    component: CircularProgress,\n    style: {}\n  },\n  'linear-progress': {\n    component: LinearProgress,\n    style: {\n      display: 'block'\n    }\n  },\n  skeleton: {\n    component: GridSkeletonLoadingOverlay,\n    style: {\n      display: 'block'\n    }\n  }\n};\nconst GridLoadingOverlay = forwardRef(function GridLoadingOverlay(props, ref) {\n  const {\n      variant = 'circular-progress',\n      noRowsVariant = 'circular-progress',\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rowsCount = useGridSelector(apiRef, gridRowCountSelector);\n  const activeVariant = LOADING_VARIANTS[rowsCount === 0 ? noRowsVariant : variant];\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({\n    style: _extends({}, activeVariant.style, style)\n  }, other, {\n    ref: ref,\n    children: /*#__PURE__*/_jsx(activeVariant.component, {})\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridLoadingOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The variant of the overlay when no rows are displayed.\n   * @default 'circular-progress'\n   */\n  noRowsVariant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton']),\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant of the overlay.\n   * @default 'circular-progress'\n   */\n  variant: PropTypes.oneOf(['circular-progress', 'linear-progress', 'skeleton'])\n} : void 0;\nexport { GridLoadingOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridNoRowsOverlay = forwardRef(function GridNoRowsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noRowsLabel = apiRef.current.getLocaleText('noRowsLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({}, props, {\n    ref: ref,\n    children: noRowsLabel\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridNoRowsOverlay.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridNoRowsOverlay };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport PropTypes from 'prop-types';\nimport TablePagination, { tablePaginationClasses } from '@mui/material/TablePagination';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridSelector } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { gridPaginationModelSelector, gridPaginationRowCountSelector, gridPageCountSelector } from \"../hooks/features/pagination/gridPaginationSelector.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridPaginationRoot = styled(TablePagination)(({\n  theme\n}) => ({\n  maxHeight: 'calc(100% + 1px)',\n  // border width\n  flexGrow: 1,\n  [`& .${tablePaginationClasses.selectLabel}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block'\n    }\n  },\n  [`& .${tablePaginationClasses.input}`]: {\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'inline-flex'\n    }\n  }\n}));\nconst wrapLabelDisplayedRows = (labelDisplayedRows, estimated) => {\n  return ({\n    from,\n    to,\n    count,\n    page\n  }) => labelDisplayedRows({\n    from,\n    to,\n    count,\n    page,\n    estimated\n  });\n};\nconst defaultLabelDisplayedRows = ({\n  from,\n  to,\n  count,\n  estimated\n}) => {\n  if (!estimated) {\n    return `${from}–${to} of ${count !== -1 ? count : `more than ${to}`}`;\n  }\n  return `${from}–${to} of ${count !== -1 ? count : `more than ${estimated > to ? estimated : to}`}`;\n};\n\n// A mutable version of a readonly array.\n\nconst GridPagination = forwardRef(function GridPagination(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const paginationModel = useGridSelector(apiRef, gridPaginationModelSelector);\n  const rowCount = useGridSelector(apiRef, gridPaginationRowCountSelector);\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n  const {\n    paginationMode,\n    loading,\n    estimatedRowCount\n  } = rootProps;\n  const computedProps = React.useMemo(() => {\n    if (rowCount === -1 && paginationMode === 'server' && loading) {\n      return {\n        backIconButtonProps: {\n          disabled: true\n        },\n        nextIconButtonProps: {\n          disabled: true\n        }\n      };\n    }\n    return {};\n  }, [loading, paginationMode, rowCount]);\n  const lastPage = React.useMemo(() => Math.max(0, pageCount - 1), [pageCount]);\n  const computedPage = React.useMemo(() => {\n    if (rowCount === -1) {\n      return paginationModel.page;\n    }\n    return paginationModel.page <= lastPage ? paginationModel.page : lastPage;\n  }, [lastPage, paginationModel.page, rowCount]);\n  const handlePageSizeChange = React.useCallback(event => {\n    const pageSize = Number(event.target.value);\n    apiRef.current.setPageSize(pageSize);\n  }, [apiRef]);\n  const handlePageChange = React.useCallback((_, page) => {\n    apiRef.current.setPage(page);\n  }, [apiRef]);\n  const isPageSizeIncludedInPageSizeOptions = pageSize => {\n    for (let i = 0; i < rootProps.pageSizeOptions.length; i += 1) {\n      const option = rootProps.pageSizeOptions[i];\n      if (typeof option === 'number') {\n        if (option === pageSize) {\n          return true;\n        }\n      } else if (option.value === pageSize) {\n        return true;\n      }\n    }\n    return false;\n  };\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const warnedOnceMissingInPageSizeOptions = React.useRef(false);\n    const pageSize = rootProps.paginationModel?.pageSize ?? paginationModel.pageSize;\n    if (!warnedOnceMissingInPageSizeOptions.current && !rootProps.autoPageSize && !isPageSizeIncludedInPageSizeOptions(pageSize)) {\n      console.warn([`MUI X: The page size \\`${paginationModel.pageSize}\\` is not present in the \\`pageSizeOptions\\`.`, `Add it to show the pagination select.`].join('\\n'));\n      warnedOnceMissingInPageSizeOptions.current = true;\n    }\n  }\n  const pageSizeOptions = isPageSizeIncludedInPageSizeOptions(paginationModel.pageSize) ? rootProps.pageSizeOptions : [];\n  const locales = apiRef.current.getLocaleText('MuiTablePagination');\n  const wrappedLabelDisplayedRows = wrapLabelDisplayedRows(locales.labelDisplayedRows || defaultLabelDisplayedRows, estimatedRowCount);\n  return /*#__PURE__*/_jsx(GridPaginationRoot, _extends({\n    component: \"div\",\n    count: rowCount,\n    page: computedPage\n    // TODO: Remove the cast once the type is fixed in Material UI and that the min Material UI version\n    // for x-data-grid is past the fix.\n    // Note that Material UI will not mutate the array, so this is safe.\n    ,\n    rowsPerPageOptions: pageSizeOptions,\n    rowsPerPage: paginationModel.pageSize,\n    onPageChange: handlePageChange,\n    onRowsPerPageChange: handlePageSizeChange\n  }, computedProps, locales, {\n    labelDisplayedRows: wrappedLabelDisplayedRows\n  }, props, {\n    ref: ref\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPagination.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  component: PropTypes.elementType\n} : void 0;\nexport { GridPagination };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelContentRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelContent',\n  overridesResolver: (props, styles) => styles.panelContent\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400\n});\nfunction GridPanelContent(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelContentRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelContent.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelContent };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelFooter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelFooterRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelFooter',\n  overridesResolver: (props, styles) => styles.panelFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5),\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\nfunction GridPanelFooter(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelFooterRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelFooter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelFooter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport FocusTrap from '@mui/material/Unstable_TrapFocus';\nimport { styled } from '@mui/material/styles';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelWrapper']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelWrapperRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelWrapper',\n  overridesResolver: (props, styles) => styles.panelWrapper\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  '&:focus': {\n    outline: 0\n  }\n});\nconst isEnabled = () => true;\nconst GridPanelWrapper = forwardRef(function GridPanelWrapper(props, ref) {\n  const {\n      className,\n      slotProps = {}\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(FocusTrap, _extends({\n    open: true,\n    disableEnforceFocus: true,\n    isEnabled: isEnabled\n  }, slotProps.TrapFocus, {\n    children: /*#__PURE__*/_jsx(GridPanelWrapperRoot, _extends({\n      tabIndex: -1,\n      className: clsx(classes.root, className),\n      ownerState: rootProps\n    }, other, {\n      ref: ref\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanelWrapper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridPanelWrapper };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"item\", \"hasMultipleFilters\", \"deleteFilter\", \"applyFilterChanges\", \"showMultiFilterOperators\", \"disableMultiFilterOperator\", \"applyMultiFilterOperatorChanges\", \"focusElementRef\", \"logicOperators\", \"columnsSort\", \"filterColumns\", \"deleteIconProps\", \"logicOperatorInputProps\", \"operatorInputProps\", \"columnInputProps\", \"valueInputProps\", \"readOnly\", \"children\"],\n  _excluded2 = [\"InputComponentProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId, unstable_capitalize as capitalize } from '@mui/utils';\nimport { styled } from '@mui/material/styles';\nimport clsx from 'clsx';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { gridFilterableColumnDefinitionsSelector, gridColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../../constants/gridClasses.js\";\nimport { getValueFromValueOptions, getValueOptions } from \"./filterPanelUtils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { createElement as _createElement } from \"react\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['filterForm'],\n    deleteIcon: ['filterFormDeleteIcon'],\n    logicOperatorInput: ['filterFormLogicOperatorInput'],\n    columnInput: ['filterFormColumnInput'],\n    operatorInput: ['filterFormOperatorInput'],\n    valueInput: ['filterFormValueInput']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridFilterFormRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterForm',\n  overridesResolver: (props, styles) => styles.filterForm\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  padding: theme.spacing(1)\n}));\nconst FilterFormDeleteIcon = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormDeleteIcon',\n  overridesResolver: (_, styles) => styles.filterFormDeleteIcon\n})(({\n  theme\n}) => ({\n  flexShrink: 0,\n  justifyContent: 'flex-end',\n  marginRight: theme.spacing(0.5),\n  marginBottom: theme.spacing(0.2)\n}));\nconst FilterFormLogicOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormLogicOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormLogicOperatorInput\n})({\n  minWidth: 55,\n  marginRight: 5,\n  justifyContent: 'end'\n});\nconst FilterFormColumnInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormColumnInput',\n  overridesResolver: (_, styles) => styles.filterFormColumnInput\n})({\n  width: 150\n});\nconst FilterFormOperatorInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormOperatorInput',\n  overridesResolver: (_, styles) => styles.filterFormOperatorInput\n})({\n  width: 150\n});\nconst FilterFormValueInput = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'FilterFormValueInput',\n  overridesResolver: (_, styles) => styles.filterFormValueInput\n})({\n  width: 190\n});\nconst getLogicOperatorLocaleKey = logicOperator => {\n  switch (logicOperator) {\n    case GridLogicOperator.And:\n      return 'filterPanelOperatorAnd';\n    case GridLogicOperator.Or:\n      return 'filterPanelOperatorOr';\n    default:\n      throw new Error('MUI X: Invalid `logicOperator` property in the `GridFilterPanel`.');\n  }\n};\nconst getColumnLabel = col => col.headerName || col.field;\nconst collator = new Intl.Collator();\nconst GridFilterForm = forwardRef(function GridFilterForm(props, ref) {\n  const {\n      item,\n      hasMultipleFilters,\n      deleteFilter,\n      applyFilterChanges,\n      showMultiFilterOperators,\n      disableMultiFilterOperator,\n      applyMultiFilterOperatorChanges,\n      focusElementRef,\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterColumns,\n      deleteIconProps = {},\n      logicOperatorInputProps = {},\n      operatorInputProps = {},\n      columnInputProps = {},\n      valueInputProps = {},\n      readOnly\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const columnLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const columnSelectId = useId();\n  const columnSelectLabelId = useId();\n  const operatorSelectId = useId();\n  const operatorSelectLabelId = useId();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const valueRef = React.useRef(null);\n  const filterSelectorRef = React.useRef(null);\n  const multiFilterOperator = filterModel.logicOperator ?? GridLogicOperator.And;\n  const hasLogicOperatorColumn = hasMultipleFilters && logicOperators.length > 0;\n  const baseFormControlProps = rootProps.slotProps?.baseFormControl || {};\n  const baseSelectProps = rootProps.slotProps?.baseSelect || {};\n  const isBaseSelectNative = baseSelectProps.native ?? false;\n  const baseInputLabelProps = rootProps.slotProps?.baseInputLabel || {};\n  const baseSelectOptionProps = rootProps.slotProps?.baseSelectOption || {};\n  const {\n      InputComponentProps\n    } = valueInputProps,\n    valueInputPropsOther = _objectWithoutPropertiesLoose(valueInputProps, _excluded2);\n  const {\n    filteredColumns,\n    selectedField\n  } = React.useMemo(() => {\n    let itemField = item.field;\n\n    // Yields a valid value if the current filter belongs to a column that is not filterable\n    const selectedNonFilterableColumn = columnLookup[item.field].filterable === false ? columnLookup[item.field] : null;\n    if (selectedNonFilterableColumn) {\n      return {\n        filteredColumns: [selectedNonFilterableColumn],\n        selectedField: itemField\n      };\n    }\n    if (filterColumns === undefined || typeof filterColumns !== 'function') {\n      return {\n        filteredColumns: filterableColumns,\n        selectedField: itemField\n      };\n    }\n    const filteredFields = filterColumns({\n      field: item.field,\n      columns: filterableColumns,\n      currentFilters: filterModel?.items || []\n    });\n    return {\n      filteredColumns: filterableColumns.filter(column => {\n        const isFieldIncluded = filteredFields.includes(column.field);\n        if (column.field === item.field && !isFieldIncluded) {\n          itemField = undefined;\n        }\n        return isFieldIncluded;\n      }),\n      selectedField: itemField\n    };\n  }, [filterColumns, filterModel?.items, filterableColumns, item.field, columnLookup]);\n  const sortedFilteredColumns = React.useMemo(() => {\n    switch (columnsSort) {\n      case 'asc':\n        return filteredColumns.sort((a, b) => collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      case 'desc':\n        return filteredColumns.sort((a, b) => -collator.compare(getColumnLabel(a), getColumnLabel(b)));\n      default:\n        return filteredColumns;\n    }\n  }, [filteredColumns, columnsSort]);\n  const currentColumn = item.field ? apiRef.current.getColumn(item.field) : null;\n  const currentOperator = React.useMemo(() => {\n    if (!item.operator || !currentColumn) {\n      return null;\n    }\n    return currentColumn.filterOperators?.find(operator => operator.value === item.operator);\n  }, [item, currentColumn]);\n  const changeColumn = React.useCallback(event => {\n    const field = event.target.value;\n    const column = apiRef.current.getColumn(field);\n    if (column.field === currentColumn.field) {\n      // column did not change\n      return;\n    }\n\n    // try to keep the same operator when column change\n    const newOperator = column.filterOperators.find(operator => operator.value === item.operator) || column.filterOperators[0];\n\n    // Erase filter value if the input component or filtered column type is modified\n    const eraseFilterValue = !newOperator.InputComponent || newOperator.InputComponent !== currentOperator?.InputComponent || column.type !== currentColumn.type;\n    let filterValue = eraseFilterValue ? undefined : item.value;\n\n    // Check filter value against the new valueOptions\n    if (column.type === 'singleSelect' && filterValue !== undefined) {\n      const colDef = column;\n      const valueOptions = getValueOptions(colDef);\n      if (Array.isArray(filterValue)) {\n        filterValue = filterValue.filter(val => {\n          return (\n            // Only keep values that are in the new value options\n            getValueFromValueOptions(val, valueOptions, colDef?.getOptionValue) !== undefined\n          );\n        });\n      } else if (getValueFromValueOptions(item.value, valueOptions, colDef?.getOptionValue) === undefined) {\n        // Reset the filter value if it is not in the new value options\n        filterValue = undefined;\n      }\n    }\n    applyFilterChanges(_extends({}, item, {\n      field,\n      operator: newOperator.value,\n      value: filterValue\n    }));\n  }, [apiRef, applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeOperator = React.useCallback(event => {\n    const operator = event.target.value;\n    const newOperator = currentColumn?.filterOperators.find(op => op.value === operator);\n    const eraseItemValue = !newOperator?.InputComponent || newOperator?.InputComponent !== currentOperator?.InputComponent;\n    applyFilterChanges(_extends({}, item, {\n      operator,\n      value: eraseItemValue ? undefined : item.value\n    }));\n  }, [applyFilterChanges, item, currentColumn, currentOperator]);\n  const changeLogicOperator = React.useCallback(event => {\n    const logicOperator = event.target.value === GridLogicOperator.And.toString() ? GridLogicOperator.And : GridLogicOperator.Or;\n    applyMultiFilterOperatorChanges(logicOperator);\n  }, [applyMultiFilterOperatorChanges]);\n  const handleDeleteFilter = () => {\n    deleteFilter(item);\n  };\n  React.useImperativeHandle(focusElementRef, () => ({\n    focus: () => {\n      if (currentOperator?.InputComponent) {\n        valueRef?.current?.focus();\n      } else {\n        filterSelectorRef.current.focus();\n      }\n    }\n  }), [currentOperator]);\n  return /*#__PURE__*/_jsxs(GridFilterFormRoot, _extends({\n    className: classes.root,\n    \"data-id\": item.id,\n    ownerState: rootProps\n  }, other, {\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(FilterFormDeleteIcon, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, deleteIconProps, {\n      className: clsx(classes.deleteIcon, baseFormControlProps.className, deleteIconProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        title: apiRef.current.getLocaleText('filterPanelDeleteIconLabel'),\n        onClick: handleDeleteFilter,\n        size: \"small\",\n        disabled: readOnly\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.filterPanelDeleteIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    })), /*#__PURE__*/_jsx(FilterFormLogicOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, logicOperatorInputProps, {\n      sx: [hasLogicOperatorColumn ? {\n        display: 'flex'\n      } : {\n        display: 'none'\n      }, showMultiFilterOperators ? {\n        visibility: 'visible'\n      } : {\n        visibility: 'hidden'\n      }, baseFormControlProps.sx, logicOperatorInputProps.sx],\n      className: clsx(classes.logicOperatorInput, baseFormControlProps.className, logicOperatorInputProps.className),\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('filterPanelLogicOperator')\n        },\n        value: multiFilterOperator ?? '',\n        onChange: changeLogicOperator,\n        disabled: !!disableMultiFilterOperator || logicOperators.length === 1,\n        native: isBaseSelectNative\n      }, rootProps.slotProps?.baseSelect, {\n        children: logicOperators.map(logicOperator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: logicOperator.toString(),\n          value: logicOperator.toString()\n        }), apiRef.current.getLocaleText(getLogicOperatorLocaleKey(logicOperator))))\n      }))\n    })), /*#__PURE__*/_jsxs(FilterFormColumnInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, columnInputProps, {\n      className: clsx(classes.columnInput, baseFormControlProps.className, columnInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: columnSelectId,\n        id: columnSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelColumns')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: columnSelectLabelId,\n        id: columnSelectId,\n        label: apiRef.current.getLocaleText('filterPanelColumns'),\n        value: selectedField ?? '',\n        onChange: changeColumn,\n        native: isBaseSelectNative,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: sortedFilteredColumns.map(col => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: col.field,\n          value: col.field\n        }), getColumnLabel(col)))\n      }))]\n    })), /*#__PURE__*/_jsxs(FilterFormOperatorInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, operatorInputProps, {\n      className: clsx(classes.operatorInput, baseFormControlProps.className, operatorInputProps.className),\n      ownerState: rootProps,\n      children: [/*#__PURE__*/_jsx(rootProps.slots.baseInputLabel, _extends({}, baseInputLabelProps, {\n        htmlFor: operatorSelectId,\n        id: operatorSelectLabelId,\n        children: apiRef.current.getLocaleText('filterPanelOperator')\n      })), /*#__PURE__*/_jsx(rootProps.slots.baseSelect, _extends({\n        labelId: operatorSelectLabelId,\n        label: apiRef.current.getLocaleText('filterPanelOperator'),\n        id: operatorSelectId,\n        value: item.operator,\n        onChange: changeOperator,\n        native: isBaseSelectNative,\n        inputRef: filterSelectorRef,\n        disabled: readOnly\n      }, rootProps.slotProps?.baseSelect, {\n        children: currentColumn?.filterOperators?.map(operator => /*#__PURE__*/_createElement(rootProps.slots.baseSelectOption, _extends({}, baseSelectOptionProps, {\n          native: isBaseSelectNative,\n          key: operator.value,\n          value: operator.value\n        }), operator.label || apiRef.current.getLocaleText(`filterOperator${capitalize(operator.value)}`)))\n      }))]\n    })), /*#__PURE__*/_jsx(FilterFormValueInput, _extends({\n      variant: \"standard\",\n      as: rootProps.slots.baseFormControl\n    }, baseFormControlProps, valueInputPropsOther, {\n      className: clsx(classes.valueInput, baseFormControlProps.className, valueInputPropsOther.className),\n      ownerState: rootProps,\n      children: currentOperator?.InputComponent ? /*#__PURE__*/_jsx(currentOperator.InputComponent, _extends({\n        apiRef: apiRef,\n        item: item,\n        applyValue: applyFilterChanges,\n        focusElementRef: valueRef,\n        disabled: readOnly\n      }, currentOperator.InputComponentProps, InputComponentProps), item.field) : null\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterForm.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Callback called when the operator, column field or value is changed.\n   * @param {GridFilterItem} item The updated [[GridFilterItem]].\n   */\n  applyFilterChanges: PropTypes.func.isRequired,\n  /**\n   * Callback called when the logic operator is changed.\n   * @param {GridLogicOperator} operator The new logic operator.\n   */\n  applyMultiFilterOperatorChanges: PropTypes.func.isRequired,\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Props passed to the column input component.\n   * @default {}\n   */\n  columnInputProps: PropTypes.any,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Callback called when the delete button is clicked.\n   * @param {GridFilterItem} item The deleted [[GridFilterItem]].\n   */\n  deleteFilter: PropTypes.func.isRequired,\n  /**\n   * Props passed to the delete icon.\n   * @default {}\n   */\n  deleteIconProps: PropTypes.any,\n  /**\n   * If `true`, disables the logic operator field but still renders it.\n   */\n  disableMultiFilterOperator: PropTypes.bool,\n  /**\n   * Allows to filter the columns displayed in the filter form.\n   * @param {FilterColumnsArgs} args The columns of the grid and name of field.\n   * @returns {GridColDef['field'][]} The filtered fields array.\n   */\n  filterColumns: PropTypes.func,\n  /**\n   * A ref allowing to set imperative focus.\n   * It can be passed to the el\n   */\n  focusElementRef: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the logic operator field is rendered.\n   * The field will be invisible if `showMultiFilterOperators` is also `true`.\n   */\n  hasMultipleFilters: PropTypes.bool.isRequired,\n  /**\n   * The [[GridFilterItem]] representing this form.\n   */\n  item: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    operator: PropTypes.string.isRequired,\n    value: PropTypes.any\n  }).isRequired,\n  /**\n   * Props passed to the logic operator input component.\n   * @default {}\n   */\n  logicOperatorInputProps: PropTypes.any,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * Props passed to the operator input component.\n   * @default {}\n   */\n  operatorInputProps: PropTypes.any,\n  /**\n   * `true` if the filter is disabled/read only.\n   * i.e. `colDef.fiterable = false` but passed in `filterModel`\n   * @default false\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * If `true`, the logic operator field is visible.\n   */\n  showMultiFilterOperators: PropTypes.bool,\n  /**\n   * Props passed to the value input component.\n   * @default {}\n   */\n  valueInputProps: PropTypes.any\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterForm API](https://mui.com/x/api/data-grid/grid-filter-form/)\n */\nexport { GridFilterForm };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"logicOperators\", \"columnsSort\", \"filterFormProps\", \"getColumnForNewFilter\", \"children\", \"disableAddFilterButton\", \"disableRemoveAllButton\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { GridLogicOperator } from \"../../../models/gridFilterItem.js\";\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridPanelContent } from \"../GridPanelContent.js\";\nimport { GridPanelFooter } from \"../GridPanelFooter.js\";\nimport { GridPanelWrapper } from \"../GridPanelWrapper.js\";\nimport { GridFilterForm } from \"./GridFilterForm.js\";\nimport { useGridRootProps } from \"../../../hooks/utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../../hooks/utils/useGridSelector.js\";\nimport { gridFilterModelSelector } from \"../../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridFilterableColumnDefinitionsSelector, gridFilterableColumnLookupSelector } from \"../../../hooks/features/columns/gridColumnsSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst getGridFilter = col => ({\n  field: col.field,\n  operator: col.filterOperators[0].value,\n  id: Math.round(Math.random() * 1e5)\n});\nconst GridFilterPanel = forwardRef(function GridFilterPanel(props, ref) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const filterModel = useGridSelector(apiRef, gridFilterModelSelector);\n  const filterableColumns = useGridSelector(apiRef, gridFilterableColumnDefinitionsSelector);\n  const filterableColumnsLookup = useGridSelector(apiRef, gridFilterableColumnLookupSelector);\n  const lastFilterRef = React.useRef(null);\n  const placeholderFilter = React.useRef(null);\n  const {\n      logicOperators = [GridLogicOperator.And, GridLogicOperator.Or],\n      columnsSort,\n      filterFormProps,\n      getColumnForNewFilter,\n      disableAddFilterButton = false,\n      disableRemoveAllButton = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const applyFilter = apiRef.current.upsertFilterItem;\n  const applyFilterLogicOperator = React.useCallback(operator => {\n    apiRef.current.setFilterLogicOperator(operator);\n  }, [apiRef]);\n  const getDefaultFilter = React.useCallback(() => {\n    let nextColumnWithOperator;\n    if (getColumnForNewFilter && typeof getColumnForNewFilter === 'function') {\n      // To allow override the column for default (first) filter\n      const nextFieldName = getColumnForNewFilter({\n        currentFilters: filterModel?.items || [],\n        columns: filterableColumns\n      });\n      if (nextFieldName === null) {\n        return null;\n      }\n      nextColumnWithOperator = filterableColumns.find(({\n        field\n      }) => field === nextFieldName);\n    } else {\n      nextColumnWithOperator = filterableColumns.find(colDef => colDef.filterOperators?.length);\n    }\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel?.items, filterableColumns, getColumnForNewFilter]);\n  const getNewFilter = React.useCallback(() => {\n    if (getColumnForNewFilter === undefined || typeof getColumnForNewFilter !== 'function') {\n      return getDefaultFilter();\n    }\n    const currentFilters = filterModel.items.length ? filterModel.items : [getDefaultFilter()].filter(Boolean);\n\n    // If no items are there in filterModel, we have to pass defaultFilter\n    const nextColumnFieldName = getColumnForNewFilter({\n      currentFilters: currentFilters,\n      columns: filterableColumns\n    });\n    if (nextColumnFieldName === null) {\n      return null;\n    }\n    const nextColumnWithOperator = filterableColumns.find(({\n      field\n    }) => field === nextColumnFieldName);\n    if (!nextColumnWithOperator) {\n      return null;\n    }\n    return getGridFilter(nextColumnWithOperator);\n  }, [filterModel.items, filterableColumns, getColumnForNewFilter, getDefaultFilter]);\n  const items = React.useMemo(() => {\n    if (filterModel.items.length) {\n      return filterModel.items;\n    }\n    if (!placeholderFilter.current) {\n      placeholderFilter.current = getDefaultFilter();\n    }\n    return placeholderFilter.current ? [placeholderFilter.current] : [];\n  }, [filterModel.items, getDefaultFilter]);\n  const hasMultipleFilters = items.length > 1;\n  const {\n    readOnlyFilters,\n    validFilters\n  } = React.useMemo(() => items.reduce((acc, item) => {\n    if (filterableColumnsLookup[item.field]) {\n      acc.validFilters.push(item);\n    } else {\n      acc.readOnlyFilters.push(item);\n    }\n    return acc;\n  }, {\n    readOnlyFilters: [],\n    validFilters: []\n  }), [items, filterableColumnsLookup]);\n  const addNewFilter = React.useCallback(() => {\n    const newFilter = getNewFilter();\n    if (!newFilter) {\n      return;\n    }\n    apiRef.current.upsertFilterItems([...items, newFilter]);\n  }, [apiRef, getNewFilter, items]);\n  const deleteFilter = React.useCallback(item => {\n    const shouldCloseFilterPanel = validFilters.length === 1;\n    apiRef.current.deleteFilterItem(item);\n    if (shouldCloseFilterPanel) {\n      apiRef.current.hideFilterPanel();\n    }\n  }, [apiRef, validFilters.length]);\n  const handleRemoveAll = React.useCallback(() => {\n    if (validFilters.length === 1 && validFilters[0].value === undefined) {\n      apiRef.current.deleteFilterItem(validFilters[0]);\n      return apiRef.current.hideFilterPanel();\n    }\n    return apiRef.current.setFilterModel(_extends({}, filterModel, {\n      items: readOnlyFilters\n    }), 'removeAllFilterItems');\n  }, [apiRef, readOnlyFilters, filterModel, validFilters]);\n  React.useEffect(() => {\n    if (logicOperators.length > 0 && filterModel.logicOperator && !logicOperators.includes(filterModel.logicOperator)) {\n      applyFilterLogicOperator(logicOperators[0]);\n    }\n  }, [logicOperators, applyFilterLogicOperator, filterModel.logicOperator]);\n  React.useEffect(() => {\n    if (validFilters.length > 0) {\n      lastFilterRef.current.focus();\n    }\n  }, [validFilters.length]);\n  return /*#__PURE__*/_jsxs(GridPanelWrapper, _extends({}, other, {\n    ref: ref,\n    children: [/*#__PURE__*/_jsxs(GridPanelContent, {\n      children: [readOnlyFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: index > 0,\n        disableMultiFilterOperator: index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: null,\n        readOnly: true,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index : item.id)), validFilters.map((item, index) => /*#__PURE__*/_jsx(GridFilterForm, _extends({\n        item: item,\n        applyFilterChanges: applyFilter,\n        deleteFilter: deleteFilter,\n        hasMultipleFilters: hasMultipleFilters,\n        showMultiFilterOperators: readOnlyFilters.length + index > 0,\n        disableMultiFilterOperator: readOnlyFilters.length + index !== 1,\n        applyMultiFilterOperatorChanges: applyFilterLogicOperator,\n        focusElementRef: index === validFilters.length - 1 ? lastFilterRef : null,\n        logicOperators: logicOperators,\n        columnsSort: columnsSort\n      }, filterFormProps), item.id == null ? index + readOnlyFilters.length : item.id))]\n    }), !rootProps.disableMultipleColumnsFiltering && !(disableAddFilterButton && disableRemoveAllButton) ? /*#__PURE__*/_jsxs(GridPanelFooter, {\n      children: [!disableAddFilterButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: addNewFilter,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelAddIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelAddFilter')\n      })) : /*#__PURE__*/_jsx(\"span\", {}), !disableRemoveAllButton && validFilters.length > 0 ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: handleRemoveAll,\n        startIcon: /*#__PURE__*/_jsx(rootProps.slots.filterPanelRemoveAllIcon, {})\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('filterPanelRemoveAll')\n      })) : null]\n    }) : null]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridFilterPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore - do not document.\n   */\n  children: PropTypes.node,\n  /**\n   * Changes how the options in the columns selector should be ordered.\n   * If not specified, the order is derived from the `columns` prop.\n   */\n  columnsSort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * If `true`, the `Add filter` button will not be displayed.\n   * @default false\n   */\n  disableAddFilterButton: PropTypes.bool,\n  /**\n   * If `true`, the `Remove all` button will be disabled\n   * @default false\n   */\n  disableRemoveAllButton: PropTypes.bool,\n  /**\n   * Props passed to each filter form.\n   */\n  filterFormProps: PropTypes.shape({\n    columnInputProps: PropTypes.any,\n    columnsSort: PropTypes.oneOf(['asc', 'desc']),\n    deleteIconProps: PropTypes.any,\n    filterColumns: PropTypes.func,\n    logicOperatorInputProps: PropTypes.any,\n    operatorInputProps: PropTypes.any,\n    valueInputProps: PropTypes.any\n  }),\n  /**\n   * Function that returns the next filter item to be picked as default filter.\n   * @param {GetColumnForNewFilterArgs} args Currently configured filters and columns.\n   * @returns {GridColDef['field']} The field to be used for the next filter or `null` to prevent adding a filter.\n   */\n  getColumnForNewFilter: PropTypes.func,\n  /**\n   * Sets the available logic operators.\n   * @default [GridLogicOperator.And, GridLogicOperator.Or]\n   */\n  logicOperators: PropTypes.arrayOf(PropTypes.oneOf(['and', 'or']).isRequired),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n *\n * API:\n * - [GridFilterPanel API](https://mui.com/x/api/data-grid/grid-filter-panel/)\n */\nexport { GridFilterPanel, getGridFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridPanelWrapper } from \"./GridPanelWrapper.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnsPanel(props) {\n  const rootProps = useGridRootProps();\n  return /*#__PURE__*/_jsx(GridPanelWrapper, _extends({}, props, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.columnsManagement, _extends({}, rootProps.slotProps?.columnsManagement))\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridColumnsPanel };","export const checkColumnVisibilityModelsSame = (a, b) => {\n  // Filter `false` values only, as `true` and not having a key are the same\n  const aFalseValues = new Set(Object.keys(a).filter(key => a[key] === false));\n  const bFalseValues = new Set(Object.keys(b).filter(key => b[key] === false));\n  if (aFalseValues.size !== bFalseValues.size) {\n    return false;\n  }\n  let result = true;\n  aFalseValues.forEach(key => {\n    if (!bFalseValues.has(key)) {\n      result = false;\n    }\n  });\n  return result;\n};\nexport const defaultSearchPredicate = (column, searchValue) => (column.headerName || column.field).toLowerCase().indexOf(searchValue) > -1;","import _extends from \"@babel/runtime/helpers/esm/extends\";\n/* eslint-disable @typescript-eslint/no-use-before-define */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport { styled } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport { inputBaseClasses } from '@mui/material/InputBase';\nimport { gridColumnDefinitionsSelector, gridColumnVisibilityModelSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useLazyRef } from \"../../hooks/utils/useLazyRef.js\";\nimport { checkColumnVisibilityModelsSame, defaultSearchPredicate } from \"./utils.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnsManagement'],\n    header: ['columnsManagementHeader'],\n    searchInput: ['columnsManagementSearchInput'],\n    footer: ['columnsManagementFooter'],\n    row: ['columnsManagementRow']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst collator = new Intl.Collator();\nfunction GridColumnsManagement(props) {\n  const apiRef = useGridApiContext();\n  const searchInputRef = React.useRef(null);\n  const columns = useGridSelector(apiRef, gridColumnDefinitionsSelector);\n  const initialColumnVisibilityModel = useLazyRef(() => gridColumnVisibilityModelSelector(apiRef)).current;\n  const columnVisibilityModel = useGridSelector(apiRef, gridColumnVisibilityModelSelector);\n  const rootProps = useGridRootProps();\n  const [searchValue, setSearchValue] = React.useState('');\n  const classes = useUtilityClasses(rootProps);\n  const {\n    sort,\n    searchPredicate = defaultSearchPredicate,\n    autoFocusSearchField = true,\n    disableShowHideToggle = false,\n    disableResetButton = false,\n    toggleAllMode = 'all',\n    getTogglableColumns,\n    searchInputProps\n  } = props;\n  const isResetDisabled = React.useMemo(() => checkColumnVisibilityModelsSame(columnVisibilityModel, initialColumnVisibilityModel), [columnVisibilityModel, initialColumnVisibilityModel]);\n  const sortedColumns = React.useMemo(() => {\n    switch (sort) {\n      case 'asc':\n        return [...columns].sort((a, b) => collator.compare(a.headerName || a.field, b.headerName || b.field));\n      case 'desc':\n        return [...columns].sort((a, b) => -collator.compare(a.headerName || a.field, b.headerName || b.field));\n      default:\n        return columns;\n    }\n  }, [columns, sort]);\n  const toggleColumn = event => {\n    const {\n      name: field\n    } = event.target;\n    apiRef.current.setColumnVisibility(field, columnVisibilityModel[field] === false);\n  };\n  const currentColumns = React.useMemo(() => {\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(sortedColumns) : null;\n    const togglableSortedColumns = togglableColumns ? sortedColumns.filter(({\n      field\n    }) => togglableColumns.includes(field)) : sortedColumns;\n    if (!searchValue) {\n      return togglableSortedColumns;\n    }\n    return togglableSortedColumns.filter(column => searchPredicate(column, searchValue.toLowerCase()));\n  }, [sortedColumns, searchValue, searchPredicate, getTogglableColumns]);\n  const toggleAllColumns = React.useCallback(isVisible => {\n    const currentModel = gridColumnVisibilityModelSelector(apiRef);\n    const newModel = _extends({}, currentModel);\n    const togglableColumns = getTogglableColumns ? getTogglableColumns(columns) : null;\n    (toggleAllMode === 'filteredOnly' ? currentColumns : columns).forEach(col => {\n      if (col.hideable && (togglableColumns == null || togglableColumns.includes(col.field))) {\n        if (isVisible) {\n          // delete the key from the model instead of setting it to `true`\n          delete newModel[col.field];\n        } else {\n          newModel[col.field] = false;\n        }\n      }\n    });\n    return apiRef.current.setColumnVisibilityModel(newModel);\n  }, [apiRef, columns, getTogglableColumns, toggleAllMode, currentColumns]);\n  const handleSearchValueChange = React.useCallback(event => {\n    setSearchValue(event.target.value);\n  }, []);\n  const hideableColumns = React.useMemo(() => currentColumns.filter(col => col.hideable), [currentColumns]);\n  const allHideableColumnsVisible = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] == null || columnVisibilityModel[column.field] !== false), [columnVisibilityModel, hideableColumns]);\n  const allHideableColumnsHidden = React.useMemo(() => hideableColumns.every(column => columnVisibilityModel[column.field] === false), [columnVisibilityModel, hideableColumns]);\n  const firstSwitchRef = React.useRef(null);\n  React.useEffect(() => {\n    if (autoFocusSearchField) {\n      searchInputRef.current.focus();\n    } else if (firstSwitchRef.current && typeof firstSwitchRef.current.focus === 'function') {\n      firstSwitchRef.current.focus();\n    }\n  }, [autoFocusSearchField]);\n  let firstHideableColumnFound = false;\n  const isFirstHideableColumn = column => {\n    if (firstHideableColumnFound === false && column.hideable !== false) {\n      firstHideableColumnFound = true;\n      return true;\n    }\n    return false;\n  };\n  const handleSearchReset = React.useCallback(() => {\n    setSearchValue('');\n    searchInputRef.current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnsManagementHeader, {\n      className: classes.header,\n      ownerState: rootProps,\n      children: /*#__PURE__*/_jsx(SearchInput, _extends({\n        as: rootProps.slots.baseTextField,\n        ownerState: rootProps,\n        placeholder: apiRef.current.getLocaleText('columnsManagementSearchTitle'),\n        inputRef: searchInputRef,\n        className: classes.searchInput,\n        value: searchValue,\n        onChange: handleSearchValueChange,\n        variant: \"outlined\",\n        size: \"small\",\n        type: \"search\",\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseInputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {})\n          }),\n          endAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n            \"aria-label\": apiRef.current.getLocaleText('columnsManagementDeleteIconLabel'),\n            size: \"small\",\n            sx: [searchValue ? {\n              visibility: 'visible'\n            } : {\n              visibility: 'hidden'\n            }],\n            tabIndex: -1,\n            onClick: handleSearchReset\n          }, rootProps.slotProps?.baseIconButton, {\n            children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterClearIcon, {\n              fontSize: \"small\"\n            })\n          }))\n        },\n        inputProps: {\n          'aria-label': apiRef.current.getLocaleText('columnsManagementSearchTitle')\n        },\n        autoComplete: \"off\",\n        fullWidth: true\n      }, rootProps.slotProps?.baseTextField, searchInputProps))\n    }), /*#__PURE__*/_jsxs(GridColumnsManagementBody, {\n      className: classes.root,\n      ownerState: rootProps,\n      children: [currentColumns.map(column => /*#__PURE__*/_jsx(FormControlLabel, {\n        className: classes.row,\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: column.hideable === false,\n          checked: columnVisibilityModel[column.field] !== false,\n          onClick: toggleColumn,\n          name: column.field,\n          sx: {\n            p: 0.5\n          },\n          inputRef: isFirstHideableColumn(column) ? firstSwitchRef : undefined\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: column.headerName || column.field\n      }, column.field)), currentColumns.length === 0 && /*#__PURE__*/_jsx(GridColumnsManagementEmptyText, {\n        ownerState: rootProps,\n        children: apiRef.current.getLocaleText('columnsManagementNoColumns')\n      })]\n    }), (!disableShowHideToggle || !disableResetButton) && currentColumns.length > 0 ? /*#__PURE__*/_jsxs(GridColumnsManagementFooter, {\n      ownerState: rootProps,\n      className: classes.footer,\n      children: [!disableShowHideToggle ? /*#__PURE__*/_jsx(FormControlLabel, {\n        control: /*#__PURE__*/_jsx(rootProps.slots.baseCheckbox, _extends({\n          disabled: hideableColumns.length === 0,\n          checked: allHideableColumnsVisible,\n          indeterminate: !allHideableColumnsVisible && !allHideableColumnsHidden,\n          onClick: () => toggleAllColumns(!allHideableColumnsVisible),\n          name: apiRef.current.getLocaleText('columnsManagementShowHideAllText'),\n          sx: {\n            p: 0.5\n          }\n        }, rootProps.slotProps?.baseCheckbox)),\n        label: apiRef.current.getLocaleText('columnsManagementShowHideAllText')\n      }) : /*#__PURE__*/_jsx(\"span\", {}), !disableResetButton ? /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        onClick: () => apiRef.current.setColumnVisibilityModel(initialColumnVisibilityModel),\n        disabled: isResetDisabled\n      }, rootProps.slotProps?.baseButton, {\n        children: apiRef.current.getLocaleText('columnsManagementReset')\n      })) : null]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnsManagement.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the column search field will be focused automatically.\n   * If `false`, the first column switch input will be focused automatically.\n   * This helps to avoid input keyboard panel to popup automatically on touch devices.\n   * @default true\n   */\n  autoFocusSearchField: PropTypes.bool,\n  /**\n   * If `true`, the `Reset` button will not be disabled\n   * @default false\n   */\n  disableResetButton: PropTypes.bool,\n  /**\n   * If `true`, the `Show/Hide all` toggle checkbox will not be displayed.\n   * @default false\n   */\n  disableShowHideToggle: PropTypes.bool,\n  /**\n   * Returns the list of togglable columns.\n   * If used, only those columns will be displayed in the panel\n   * which are passed as the return value of the function.\n   * @param {GridColDef[]} columns The `ColDef` list of all columns.\n   * @returns {GridColDef['field'][]} The list of togglable columns' field names.\n   */\n  getTogglableColumns: PropTypes.func,\n  searchInputProps: PropTypes.object,\n  searchPredicate: PropTypes.func,\n  sort: PropTypes.oneOf(['asc', 'desc']),\n  /**\n   * Changes the behavior of the `Show/Hide All` toggle when the search field is used:\n   * - `all`: Will toggle all columns.\n   * - `filteredOnly`: Will only toggle columns that match the search criteria.\n   * @default 'all'\n   */\n  toggleAllMode: PropTypes.oneOf(['all', 'filteredOnly'])\n} : void 0;\nconst GridColumnsManagementBody = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagement',\n  overridesResolver: (props, styles) => styles.columnsManagement\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0, 3, 1.5),\n  display: 'flex',\n  flexDirection: 'column',\n  overflow: 'auto',\n  flex: '1 1',\n  maxHeight: 400,\n  alignItems: 'flex-start'\n}));\nconst GridColumnsManagementHeader = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementHeader',\n  overridesResolver: (props, styles) => styles.columnsManagementHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1.5, 3)\n}));\nconst SearchInput = styled(TextField, {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementSearchInput',\n  overridesResolver: (props, styles) => styles.columnsManagementSearchInput\n})(({\n  theme\n}) => ({\n  [`& .${inputBaseClasses.root}`]: {\n    padding: theme.spacing(0, 1.5, 0, 1.5)\n  },\n  [`& .${inputBaseClasses.input}::-webkit-search-decoration,\n  & .${inputBaseClasses.input}::-webkit-search-cancel-button,\n  & .${inputBaseClasses.input}::-webkit-search-results-button,\n  & .${inputBaseClasses.input}::-webkit-search-results-decoration`]: {\n    /* clears the 'X' icon from Chrome */\n    display: 'none'\n  }\n}));\nconst GridColumnsManagementFooter = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnsManagementFooter',\n  overridesResolver: (props, styles) => styles.columnsManagementFooter\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 1, 0.5, 3),\n  display: 'flex',\n  justifyContent: 'space-between',\n  borderTop: `1px solid ${theme.palette.divider}`\n}));\nconst GridColumnsManagementEmptyText = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(0.5, 0),\n  color: theme.palette.grey[500]\n}));\nexport { GridColumnsManagement };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport ClickAwayListener from '@mui/material/ClickAwayListener';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPanelClasses = generateUtilityClasses('MuiDataGrid', ['panel', 'paper']);\nconst GridPanelRoot = styled(Popper, {\n  name: 'MuiDataGrid',\n  slot: 'Panel',\n  overridesResolver: (props, styles) => styles.panel\n})(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst GridPaperRoot = styled(Paper, {\n  name: 'MuiDataGrid',\n  slot: 'Paper',\n  overridesResolver: (props, styles) => styles.paper\n})(({\n  theme\n}) => ({\n  backgroundColor: (theme.vars || theme).palette.background.paper,\n  minWidth: 300,\n  maxHeight: 450,\n  display: 'flex',\n  maxWidth: `calc(100vw - ${theme.spacing(0.5)})`,\n  overflow: 'auto'\n}));\nconst GridPanel = forwardRef((props, ref) => {\n  const {\n      children,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = gridPanelClasses;\n  const [isPlaced, setIsPlaced] = React.useState(false);\n  const handleClickAway = React.useCallback(() => {\n    apiRef.current.hidePreferences();\n  }, [apiRef]);\n  const handleKeyDown = React.useCallback(event => {\n    if (event.key === 'Escape') {\n      apiRef.current.hidePreferences();\n    }\n  }, [apiRef]);\n  const modifiers = React.useMemo(() => [{\n    name: 'flip',\n    enabled: true,\n    options: {\n      rootBoundary: 'document'\n    }\n  }, {\n    name: 'isPlaced',\n    enabled: true,\n    phase: 'main',\n    fn: () => {\n      setIsPlaced(true);\n    },\n    effect: () => () => {\n      setIsPlaced(false);\n    }\n  }], []);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  React.useEffect(() => {\n    const panelAnchor = apiRef.current.rootElementRef?.current?.querySelector('[data-id=\"gridPanelAnchor\"]');\n    if (panelAnchor) {\n      setAnchorEl(panelAnchor);\n    }\n  }, [apiRef]);\n  if (!anchorEl) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridPanelRoot, _extends({\n    placement: \"bottom-start\",\n    className: clsx(classes.panel, className),\n    ownerState: rootProps,\n    anchorEl: anchorEl,\n    modifiers: modifiers\n  }, other, {\n    ref: ref,\n    children: /*#__PURE__*/_jsx(ClickAwayListener, {\n      mouseEvent: \"onPointerUp\",\n      touchEvent: false,\n      onClickAway: handleClickAway,\n      children: /*#__PURE__*/_jsx(GridPaperRoot, {\n        className: classes.paper,\n        ownerState: rootProps,\n        elevation: 8,\n        onKeyDown: handleKeyDown,\n        children: isPlaced && children\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridPanel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * Popper render function or node.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  ownerState: PropTypes.object\n} : void 0;\nexport { GridPanel };","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"selected\", \"rowId\", \"row\", \"index\", \"style\", \"rowHeight\", \"className\", \"visibleColumns\", \"pinnedColumns\", \"offsetLeft\", \"columnsTotalWidth\", \"firstColumnIndex\", \"lastColumnIndex\", \"focusedColumnIndex\", \"isFirstVisible\", \"isLastVisible\", \"isNotVisible\", \"showBottomBorder\", \"scrollbarWidth\", \"gridHasFiller\", \"onClick\", \"onDoubleClick\", \"onMouseEnter\", \"onMouseLeave\", \"onMouseOut\", \"onMouseOver\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { isObjectEmpty } from '@mui/x-internals/isObjectEmpty';\nimport { GridEditModes, GridCellModes } from \"../models/gridEditRowModel.js\";\nimport { gridClasses } from \"../constants/gridClasses.js\";\nimport { composeGridClasses } from \"../utils/composeGridClasses.js\";\nimport { useGridRootProps } from \"../hooks/utils/useGridRootProps.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../utils/cellBorderUtils.js\";\nimport { gridColumnPositionsSelector } from \"../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector, objectShallowCompare, useGridSelectorV8 } from \"../hooks/utils/useGridSelector.js\";\nimport { useGridVisibleRows } from \"../hooks/utils/useGridVisibleRows.js\";\nimport { findParentElementFromClassName, isEventTargetInPortal } from \"../utils/domUtils.js\";\nimport { GRID_CHECKBOX_SELECTION_COL_DEF } from \"../colDef/gridCheckboxSelectionColDef.js\";\nimport { GRID_ACTIONS_COLUMN_TYPE } from \"../colDef/gridActionsColDef.js\";\nimport { GRID_DETAIL_PANEL_TOGGLE_FIELD, PinnedColumnPosition } from \"../internals/constants.js\";\nimport { gridSortModelSelector } from \"../hooks/features/sorting/gridSortingSelector.js\";\nimport { gridRowMaximumTreeDepthSelector } from \"../hooks/features/rows/gridRowsSelector.js\";\nimport { gridEditRowsStateSelector, gridRowIsEditingSelector } from \"../hooks/features/editing/gridEditingSelectors.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"./GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../internals/utils/getPinnedCellOffset.js\";\nimport { useGridConfiguration } from \"../hooks/utils/useGridConfiguration.js\";\nimport { useGridPrivateApiContext } from \"../hooks/utils/useGridPrivateApiContext.js\";\nimport { createSelectorV8 } from \"../utils/createSelector.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst isRowReorderingEnabledSelector = createSelectorV8(gridEditRowsStateSelector, (editRows, rowReordering) => {\n  if (!rowReordering) {\n    return false;\n  }\n  const isEditingRows = !isObjectEmpty(editRows);\n  return !isEditingRows;\n});\nconst GridRow = forwardRef(function GridRow(props, refProp) {\n  const {\n      selected,\n      rowId,\n      row,\n      index,\n      style: styleProp,\n      rowHeight,\n      className,\n      visibleColumns,\n      pinnedColumns,\n      offsetLeft,\n      columnsTotalWidth,\n      firstColumnIndex,\n      lastColumnIndex,\n      focusedColumnIndex,\n      isFirstVisible,\n      isLastVisible,\n      isNotVisible,\n      showBottomBorder,\n      scrollbarWidth,\n      gridHasFiller,\n      onClick,\n      onDoubleClick,\n      onMouseEnter,\n      onMouseLeave,\n      onMouseOut,\n      onMouseOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const configuration = useGridConfiguration();\n  const ref = React.useRef(null);\n  const rootProps = useGridRootProps();\n  const currentPage = useGridVisibleRows(apiRef, rootProps);\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const treeDepth = useGridSelector(apiRef, gridRowMaximumTreeDepthSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const rowReordering = rootProps.rowReordering;\n  const isRowReorderingEnabled = useGridSelectorV8(apiRef, isRowReorderingEnabledSelector, rowReordering);\n  const handleRef = useForkRef(ref, refProp);\n  const rowNode = apiRef.current.getRowNode(rowId);\n  const editing = useGridSelectorV8(apiRef, gridRowIsEditingSelector, {\n    rowId,\n    editMode: rootProps.editMode\n  });\n  const editable = rootProps.editMode === GridEditModes.Row;\n  const hasFocusCell = focusedColumnIndex !== undefined;\n  const hasVirtualFocusCellLeft = hasFocusCell && focusedColumnIndex >= pinnedColumns.left.length && focusedColumnIndex < firstColumnIndex;\n  const hasVirtualFocusCellRight = hasFocusCell && focusedColumnIndex < visibleColumns.length - pinnedColumns.right.length && focusedColumnIndex >= lastColumnIndex;\n  const classes = composeGridClasses(rootProps.classes, {\n    root: ['row', selected && 'selected', editable && 'row--editable', editing && 'row--editing', isFirstVisible && 'row--firstVisible', isLastVisible && 'row--lastVisible', showBottomBorder && 'row--borderBottom', rowHeight === 'auto' && 'row--dynamicHeight']\n  });\n  const getRowAriaAttributes = configuration.hooks.useGridRowAriaAttributes();\n  React.useLayoutEffect(() => {\n    if (currentPage.range) {\n      const rowIndex = apiRef.current.getRowIndexRelativeToVisibleRows(rowId);\n      // Pinned rows are not part of the visible rows\n      if (rowIndex !== undefined) {\n        apiRef.current.unstable_setLastMeasuredRowIndex(rowIndex);\n      }\n    }\n    if (ref.current && rowHeight === 'auto') {\n      return apiRef.current.observeRowHeight(ref.current, rowId);\n    }\n    return undefined;\n  }, [apiRef, currentPage.range, rowHeight, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // Ignore portal\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n\n    // The row might have been deleted\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getRowParams(rowId), event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, rowId]);\n  const publishClick = React.useCallback(event => {\n    const cell = findParentElementFromClassName(event.target, gridClasses.cell);\n    const field = cell?.getAttribute('data-field');\n\n    // Check if the field is available because the cell that fills the empty\n    // space of the row has no field.\n    if (field) {\n      // User clicked in the checkbox added by checkboxSelection\n      if (field === GRID_CHECKBOX_SELECTION_COL_DEF.field) {\n        return;\n      }\n\n      // User opened a detail panel\n      if (field === GRID_DETAIL_PANEL_TOGGLE_FIELD) {\n        return;\n      }\n\n      // User reorders a row\n      if (field === '__reorder__') {\n        return;\n      }\n\n      // User is editing a cell\n      if (apiRef.current.getCellMode(rowId, field) === GridCellModes.Edit) {\n        return;\n      }\n\n      // User clicked a button from the \"actions\" column type\n      const column = apiRef.current.getColumn(field);\n      if (column?.type === GRID_ACTIONS_COLUMN_TYPE) {\n        return;\n      }\n    }\n    publish('rowClick', onClick)(event);\n  }, [apiRef, onClick, publish, rowId]);\n  const {\n    slots,\n    slotProps,\n    disableColumnReorder\n  } = rootProps;\n  const heightEntry = useGridSelector(apiRef, () => _extends({}, apiRef.current.getRowHeightEntry(rowId)), objectShallowCompare);\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        opacity: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const rowStyle = _extends({}, styleProp, {\n      maxHeight: rowHeight === 'auto' ? 'none' : rowHeight,\n      // max-height doesn't support \"auto\"\n      minHeight: rowHeight,\n      '--height': typeof rowHeight === 'number' ? `${rowHeight}px` : rowHeight\n    });\n    if (heightEntry.spacingTop) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderTopWidth' : 'marginTop';\n      rowStyle[property] = heightEntry.spacingTop;\n    }\n    if (heightEntry.spacingBottom) {\n      const property = rootProps.rowSpacingType === 'border' ? 'borderBottomWidth' : 'marginBottom';\n      let propertyValue = rowStyle[property];\n      // avoid overriding existing value\n      if (typeof propertyValue !== 'number') {\n        propertyValue = parseInt(propertyValue || '0', 10);\n      }\n      propertyValue += heightEntry.spacingBottom;\n      rowStyle[property] = propertyValue;\n    }\n    return rowStyle;\n  }, [isNotVisible, rowHeight, styleProp, heightEntry, rootProps.rowSpacingType]);\n  const rowClassNames = apiRef.current.unstable_applyPipeProcessors('rowClassName', [], rowId);\n  const ariaAttributes = rowNode ? getRowAriaAttributes(rowNode, index) : undefined;\n  if (typeof rootProps.getRowClassName === 'function') {\n    const indexRelativeToCurrentPage = index - (currentPage.range?.firstRowIndex || 0);\n    const rowParams = _extends({}, apiRef.current.getRowParams(rowId), {\n      isFirstVisible: indexRelativeToCurrentPage === 0,\n      isLastVisible: indexRelativeToCurrentPage === currentPage.rows.length - 1,\n      indexRelativeToCurrentPage\n    });\n    rowClassNames.push(rootProps.getRowClassName(rowParams));\n  }\n\n  /* Start of rendering */\n  if (!rowNode) {\n    return null;\n  }\n  const getCell = (column, indexInSection, indexRelativeToAllColumns, sectionLength, pinnedPosition = PinnedColumnPosition.NONE) => {\n    const cellColSpanInfo = apiRef.current.unstable_getCellColSpanInfo(rowId, indexRelativeToAllColumns);\n    if (cellColSpanInfo?.spannedByColSpan) {\n      return null;\n    }\n    const width = cellColSpanInfo?.cellProps.width ?? column.computedWidth;\n    const colSpan = cellColSpanInfo?.cellProps.colSpan ?? 1;\n    const pinnedOffset = getPinnedCellOffset(pinnedPosition, column.computedWidth, indexRelativeToAllColumns, columnPositions, columnsTotalWidth, scrollbarWidth);\n    if (rowNode?.type === 'skeletonRow') {\n      return /*#__PURE__*/_jsx(slots.skeletonCell, {\n        type: column.type,\n        width: width,\n        height: rowHeight,\n        field: column.field,\n        align: column.align\n      }, column.field);\n    }\n\n    // when the cell is a reorder cell we are not allowing to reorder the col\n    // fixes https://github.com/mui/mui-x/issues/11126\n    const isReorderCell = column.field === '__reorder__';\n    const canReorderColumn = !(disableColumnReorder || column.disableReorder);\n    const canReorderRow = isRowReorderingEnabled && !sortModel.length && treeDepth <= 1;\n    const disableDragEvents = !(canReorderColumn || isReorderCell && canReorderRow);\n    const cellIsNotVisible = pinnedPosition === PinnedColumnPosition.VIRTUAL;\n    const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n    const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n    return /*#__PURE__*/_jsx(slots.cell, _extends({\n      column: column,\n      width: width,\n      rowId: rowId,\n      align: column.align || 'left',\n      colIndex: indexRelativeToAllColumns,\n      colSpan: colSpan,\n      disableDragEvents: disableDragEvents,\n      isNotVisible: cellIsNotVisible,\n      pinnedOffset: pinnedOffset,\n      pinnedPosition: pinnedPosition,\n      showLeftBorder: showLeftBorder,\n      showRightBorder: showRightBorder,\n      row: row,\n      rowNode: rowNode\n    }, slotProps?.cell), column.field);\n  };\n  const leftCells = pinnedColumns.left.map((column, i) => {\n    const indexRelativeToAllColumns = i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.left.length, PinnedColumnPosition.LEFT);\n  });\n  const rightCells = pinnedColumns.right.map((column, i) => {\n    const indexRelativeToAllColumns = visibleColumns.length - pinnedColumns.right.length + i;\n    return getCell(column, i, indexRelativeToAllColumns, pinnedColumns.right.length, PinnedColumnPosition.RIGHT);\n  });\n  const middleColumnsLength = visibleColumns.length - pinnedColumns.left.length - pinnedColumns.right.length;\n  const cells = [];\n  if (hasVirtualFocusCellLeft) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedColumnPosition.VIRTUAL));\n  }\n  for (let i = firstColumnIndex; i < lastColumnIndex; i += 1) {\n    const column = visibleColumns[i];\n    const indexInSection = i - pinnedColumns.left.length;\n    if (!column) {\n      continue;\n    }\n    cells.push(getCell(column, indexInSection, i, middleColumnsLength));\n  }\n  if (hasVirtualFocusCellRight) {\n    cells.push(getCell(visibleColumns[focusedColumnIndex], focusedColumnIndex - pinnedColumns.left.length, focusedColumnIndex, middleColumnsLength, PinnedColumnPosition.VIRTUAL));\n  }\n  const eventHandlers = row ? {\n    onClick: publishClick,\n    onDoubleClick: publish('rowDoubleClick', onDoubleClick),\n    onMouseEnter: publish('rowMouseEnter', onMouseEnter),\n    onMouseLeave: publish('rowMouseLeave', onMouseLeave),\n    onMouseOut: publish('rowMouseOut', onMouseOut),\n    onMouseOver: publish('rowMouseOver', onMouseOver)\n  } : null;\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    \"data-id\": rowId,\n    \"data-rowindex\": index,\n    role: \"row\",\n    className: clsx(...rowClassNames, classes.root, className),\n    style: style\n  }, ariaAttributes, eventHandlers, other, {\n    ref: handleRef,\n    children: [leftCells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: gridClasses.cellOffsetLeft,\n      style: {\n        width: offsetLeft\n      }\n    }), cells, /*#__PURE__*/_jsx(\"div\", {\n      role: \"presentation\",\n      className: clsx(gridClasses.cell, gridClasses.cellEmpty)\n    }), rightCells, scrollbarWidth !== 0 && /*#__PURE__*/_jsx(ScrollbarFiller, {\n      pinnedRight: pinnedColumns.right.length > 0,\n      borderTop: !isFirstVisible\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridRow.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnsTotalWidth: PropTypes.number.isRequired,\n  firstColumnIndex: PropTypes.number.isRequired,\n  /**\n   * Determines which cell has focus.\n   * If `null`, no cell in this row has focus.\n   */\n  focusedColumnIndex: PropTypes.number,\n  gridHasFiller: PropTypes.bool.isRequired,\n  /**\n   * Index of the row in the whole sorted and filtered dataset.\n   * If some rows above have expanded children, this index also take those children into account.\n   */\n  index: PropTypes.number.isRequired,\n  isFirstVisible: PropTypes.bool.isRequired,\n  isLastVisible: PropTypes.bool.isRequired,\n  isNotVisible: PropTypes.bool.isRequired,\n  lastColumnIndex: PropTypes.number.isRequired,\n  offsetLeft: PropTypes.number.isRequired,\n  onClick: PropTypes.func,\n  onDoubleClick: PropTypes.func,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  pinnedColumns: PropTypes.object.isRequired,\n  row: PropTypes.object.isRequired,\n  rowHeight: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number]).isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  scrollbarWidth: PropTypes.number.isRequired,\n  selected: PropTypes.bool.isRequired,\n  showBottomBorder: PropTypes.bool.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridRow = fastMemo(GridRow);\nexport { MemoizedGridRow as GridRow };","export function isObjectEmpty(object) {\n  // eslint-disable-next-line\n  for (const _ in object) {\n    return false;\n  }\n  return true;\n}","import { unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../constants/gridClasses.js\";\nexport function composeGridClasses(classes, slots) {\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n}","// Based on https://stackoverflow.com/a/59518678\nlet cachedSupportsPreventScroll;\nexport function doesSupportPreventScroll() {\n  if (cachedSupportsPreventScroll === undefined) {\n    document.createElement('div').focus({\n      get preventScroll() {\n        cachedSupportsPreventScroll = true;\n        return false;\n      }\n    });\n  }\n  return cachedSupportsPreventScroll;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"column\", \"row\", \"rowId\", \"rowNode\", \"align\", \"children\", \"colIndex\", \"width\", \"className\", \"style\", \"colSpan\", \"disableDragEvents\", \"isNotVisible\", \"pinnedOffset\", \"pinnedPosition\", \"showRightBorder\", \"showLeftBorder\", \"onClick\", \"onDoubleClick\", \"onMouseDown\", \"onMouseUp\", \"onMouseOver\", \"onKeyDown\", \"onKeyUp\", \"onDragEnter\", \"onDragOver\"],\n  _excluded2 = [\"changeReason\", \"unstable_updateValueOnRender\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef, unstable_composeClasses as composeClasses, unstable_ownerDocument as ownerDocument, unstable_capitalize as capitalize } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { doesSupportPreventScroll } from \"../../utils/doesSupportPreventScroll.js\";\nimport { getDataGridUtilityClass, gridClasses } from \"../../constants/gridClasses.js\";\nimport { GridCellModes } from \"../../models/index.js\";\nimport { useGridSelector, useGridSelectorV8 } from \"../../hooks/utils/useGridSelector.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridFocusCellSelector, gridTabIndexCellSelector } from \"../../hooks/features/focus/gridFocusStateSelector.js\";\nimport { GridPinnedColumnPosition } from \"../../hooks/features/columns/gridColumnsInterfaces.js\";\nimport { PinnedColumnPosition } from \"../../internals/constants.js\";\nimport { gridRowSpanningHiddenCellsSelector, gridRowSpanningSpannedCellsSelector } from \"../../hooks/features/rows/gridRowSpanningSelectors.js\";\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { gridEditCellStateSelector } from \"../../hooks/features/editing/gridEditingSelectors.js\";\nimport { attachPinnedStyle } from \"../../internals/utils/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const gridPinnedColumnPositionLookup = {\n  [PinnedColumnPosition.LEFT]: GridPinnedColumnPosition.LEFT,\n  [PinnedColumnPosition.RIGHT]: GridPinnedColumnPosition.RIGHT,\n  [PinnedColumnPosition.NONE]: undefined,\n  [PinnedColumnPosition.VIRTUAL]: undefined\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    isEditable,\n    isSelected,\n    isSelectionMode,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['cell', `cell--text${capitalize(align)}`, isSelected && 'selected', isEditable && 'cell--editable', showLeftBorder && 'cell--withLeftBorder', showRightBorder && 'cell--withRightBorder', pinnedPosition === PinnedColumnPosition.LEFT && 'cell--pinnedLeft', pinnedPosition === PinnedColumnPosition.RIGHT && 'cell--pinnedRight', isSelectionMode && !isEditable && 'cell--selectionMode']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nlet warnedOnce = false;\n\n// TODO(v7): Removing the wrapper will break the docs performance visualization demo.\n\nconst GridCell = forwardRef(function GridCell(props, ref) {\n  const {\n      column,\n      row,\n      rowId,\n      rowNode,\n      align,\n      colIndex,\n      width,\n      className,\n      style: styleProp,\n      colSpan,\n      disableDragEvents,\n      isNotVisible,\n      pinnedOffset,\n      pinnedPosition,\n      showRightBorder,\n      showLeftBorder,\n      onClick,\n      onDoubleClick,\n      onMouseDown,\n      onMouseUp,\n      onMouseOver,\n      onKeyDown,\n      onKeyUp,\n      onDragEnter,\n      onDragOver\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const field = column.field;\n  const editCellState = useGridSelectorV8(apiRef, gridEditCellStateSelector, {\n    rowId,\n    field\n  });\n  const cellMode = editCellState ? GridCellModes.Edit : GridCellModes.View;\n  const cellParams = apiRef.current.getCellParamsForRow(rowId, field, row, {\n    colDef: column,\n    cellMode,\n    rowNode: rowNode,\n    tabIndex: useGridSelector(apiRef, () => {\n      const cellTabIndex = gridTabIndexCellSelector(apiRef);\n      return cellTabIndex && cellTabIndex.field === field && cellTabIndex.id === rowId ? 0 : -1;\n    }),\n    hasFocus: useGridSelector(apiRef, () => {\n      const focus = gridFocusCellSelector(apiRef);\n      return focus?.id === rowId && focus.field === field;\n    })\n  });\n  cellParams.api = apiRef.current;\n  const isSelected = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('isCellSelected', false, {\n    id: rowId,\n    field\n  }));\n  const hiddenCells = useGridSelector(apiRef, gridRowSpanningHiddenCellsSelector);\n  const spannedCells = useGridSelector(apiRef, gridRowSpanningSpannedCellsSelector);\n  const {\n    hasFocus,\n    isEditable = false,\n    value\n  } = cellParams;\n  const canManageOwnFocus = column.type === 'actions' && column.getActions?.(apiRef.current.getRowParams(rowId)).some(action => !action.props.disabled);\n  const tabIndex = (cellMode === 'view' || !isEditable) && !canManageOwnFocus ? cellParams.tabIndex : -1;\n  const {\n    classes: rootClasses,\n    getCellClassName\n  } = rootProps;\n\n  // There is a hidden grid state access in `applyPipeProcessor('cellClassName', ...)`\n  const pipesClassName = useGridSelector(apiRef, () => apiRef.current.unstable_applyPipeProcessors('cellClassName', [], {\n    id: rowId,\n    field\n  }).filter(Boolean).join(' '));\n  const classNames = [pipesClassName];\n  if (column.cellClassName) {\n    classNames.push(typeof column.cellClassName === 'function' ? column.cellClassName(cellParams) : column.cellClassName);\n  }\n  if (column.display === 'flex') {\n    classNames.push(gridClasses['cell--flex']);\n  }\n  if (getCellClassName) {\n    classNames.push(getCellClassName(cellParams));\n  }\n  const valueToRender = cellParams.formattedValue ?? value;\n  const cellRef = React.useRef(null);\n  const handleRef = useForkRef(ref, cellRef);\n  const focusElementRef = React.useRef(null);\n  const isSelectionMode = rootProps.cellSelection ?? false;\n  const ownerState = {\n    align,\n    showLeftBorder,\n    showRightBorder,\n    isEditable,\n    classes: rootProps.classes,\n    pinnedPosition,\n    isSelected,\n    isSelectionMode\n  };\n  const classes = useUtilityClasses(ownerState);\n  const publishMouseUp = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseUp) {\n      onMouseUp(event);\n    }\n  }, [apiRef, field, onMouseUp, rowId]);\n  const publishMouseDown = React.useCallback(eventName => event => {\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (onMouseDown) {\n      onMouseDown(event);\n    }\n  }, [apiRef, field, onMouseDown, rowId]);\n  const publish = React.useCallback((eventName, propHandler) => event => {\n    // The row might have been deleted during the click\n    if (!apiRef.current.getRow(rowId)) {\n      return;\n    }\n    const params = apiRef.current.getCellParams(rowId, field || '');\n    apiRef.current.publishEvent(eventName, params, event);\n    if (propHandler) {\n      propHandler(event);\n    }\n  }, [apiRef, field, rowId]);\n  const isCellRowSpanned = hiddenCells[rowId]?.[field] ?? false;\n  const rowSpan = spannedCells[rowId]?.[field] ?? 1;\n  const style = React.useMemo(() => {\n    if (isNotVisible) {\n      return {\n        padding: 0,\n        opacity: 0,\n        width: 0,\n        height: 0,\n        border: 0\n      };\n    }\n    const cellStyle = attachPinnedStyle(_extends({\n      '--width': `${width}px`\n    }, styleProp), isRtl, pinnedPosition, pinnedOffset);\n    const isLeftPinned = pinnedPosition === PinnedColumnPosition.LEFT;\n    const isRightPinned = pinnedPosition === PinnedColumnPosition.RIGHT;\n    if (rowSpan > 1) {\n      cellStyle.height = `calc(var(--height) * ${rowSpan})`;\n      cellStyle.zIndex = 5;\n      if (isLeftPinned || isRightPinned) {\n        cellStyle.zIndex = 6;\n      }\n    }\n    return cellStyle;\n  }, [width, isNotVisible, styleProp, pinnedOffset, pinnedPosition, isRtl, rowSpan]);\n  React.useEffect(() => {\n    if (!hasFocus || cellMode === GridCellModes.Edit) {\n      return;\n    }\n    const doc = ownerDocument(apiRef.current.rootElementRef.current);\n    if (cellRef.current && !cellRef.current.contains(doc.activeElement)) {\n      const focusableElement = cellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusElementRef.current || focusableElement || cellRef.current;\n      if (doesSupportPreventScroll()) {\n        elementToFocus.focus({\n          preventScroll: true\n        });\n      } else {\n        const scrollPosition = apiRef.current.getScrollPosition();\n        elementToFocus.focus();\n        apiRef.current.scroll(scrollPosition);\n      }\n    }\n  }, [hasFocus, cellMode, apiRef]);\n  if (isCellRowSpanned) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      \"data-colindex\": colIndex,\n      role: \"presentation\",\n      style: _extends({\n        width: 'var(--width)'\n      }, style)\n    });\n  }\n  let handleFocus = other.onFocus;\n  if (process.env.NODE_ENV === 'test' && rootProps.experimentalFeatures?.warnIfFocusStateIsNotSynced) {\n    handleFocus = event => {\n      const focusedCell = gridFocusCellSelector(apiRef);\n      if (focusedCell?.id === rowId && focusedCell.field === field) {\n        if (typeof other.onFocus === 'function') {\n          other.onFocus(event);\n        }\n        return;\n      }\n      if (!warnedOnce) {\n        console.warn([`MUI X: The cell with id=${rowId} and field=${field} received focus.`, `According to the state, the focus should be at id=${focusedCell?.id}, field=${focusedCell?.field}.`, \"Not syncing the state may cause unwanted behaviors since the `cellFocusIn` event won't be fired.\", 'Call `fireEvent.mouseUp` before the `fireEvent.click` to sync the focus with the state.'].join('\\n'));\n        warnedOnce = true;\n      }\n    };\n  }\n  let children;\n  let title;\n  if (editCellState === null && column.renderCell) {\n    children = column.renderCell(cellParams);\n  }\n  if (editCellState !== null && column.renderEditCell) {\n    const updatedRow = apiRef.current.getRowWithUpdatedValues(rowId, column.field);\n\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const editCellStateRest = _objectWithoutPropertiesLoose(editCellState, _excluded2);\n    const formattedValue = column.valueFormatter ? column.valueFormatter(editCellState.value, updatedRow, column, apiRef) : cellParams.formattedValue;\n    const params = _extends({}, cellParams, {\n      row: updatedRow,\n      formattedValue\n    }, editCellStateRest);\n    children = column.renderEditCell(params);\n    classNames.push(gridClasses['cell--editing']);\n    classNames.push(rootClasses?.['cell--editing']);\n  }\n  if (children === undefined) {\n    const valueString = valueToRender?.toString();\n    children = valueString;\n    title = valueString;\n  }\n  if (/*#__PURE__*/React.isValidElement(children) && canManageOwnFocus) {\n    children = /*#__PURE__*/React.cloneElement(children, {\n      focusElementRef\n    });\n  }\n  const draggableEventHandlers = disableDragEvents ? null : {\n    onDragEnter: publish('cellDragEnter', onDragEnter),\n    onDragOver: publish('cellDragOver', onDragOver)\n  };\n  return /*#__PURE__*/_jsx(\"div\", _extends({\n    className: clsx(classes.root, classNames, className),\n    role: \"gridcell\",\n    \"data-field\": field,\n    \"data-colindex\": colIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-colspan\": colSpan,\n    \"aria-rowspan\": rowSpan,\n    style: style,\n    title: title,\n    tabIndex: tabIndex,\n    onClick: publish('cellClick', onClick),\n    onDoubleClick: publish('cellDoubleClick', onDoubleClick),\n    onMouseOver: publish('cellMouseOver', onMouseOver),\n    onMouseDown: publishMouseDown('cellMouseDown'),\n    onMouseUp: publishMouseUp('cellMouseUp'),\n    onKeyDown: publish('cellKeyDown', onKeyDown),\n    onKeyUp: publish('cellKeyUp', onKeyUp)\n  }, draggableEventHandlers, other, {\n    onFocus: handleFocus,\n    ref: handleRef,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridCell.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  align: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n  colIndex: PropTypes.number.isRequired,\n  colSpan: PropTypes.number,\n  column: PropTypes.object.isRequired,\n  disableDragEvents: PropTypes.bool,\n  isNotVisible: PropTypes.bool.isRequired,\n  pinnedOffset: PropTypes.number,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]).isRequired,\n  row: PropTypes.object.isRequired,\n  rowId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  rowNode: PropTypes.object.isRequired,\n  showLeftBorder: PropTypes.bool.isRequired,\n  showRightBorder: PropTypes.bool.isRequired,\n  width: PropTypes.number.isRequired\n} : void 0;\nconst MemoizedGridCell = fastMemo(GridCell);\nexport { MemoizedGridCell as GridCell };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    open\n  } = ownerState;\n  const slots = {\n    root: ['menuIcon', open && 'menuOpen'],\n    button: ['menuIconButton']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nexport const ColumnHeaderMenuIcon = /*#__PURE__*/React.memo(props => {\n  const {\n    colDef,\n    open,\n    columnMenuId,\n    columnMenuButtonId,\n    iconButtonRef\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const handleMenuIconClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n    apiRef.current.toggleColumnMenu(colDef.field);\n  }, [apiRef, colDef.field]);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('columnMenuLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        ref: iconButtonRef,\n        tabIndex: -1,\n        className: classes.button,\n        \"aria-label\": apiRef.current.getLocaleText('columnMenuLabel'),\n        size: \"small\",\n        onClick: handleMenuIconClick,\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? columnMenuId : undefined,\n        id: columnMenuButtonId\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuIcon, {\n          fontSize: \"inherit\"\n        })\n      }))\n    }))\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useEventCallback as useEventCallback, HTMLElementType } from '@mui/utils';\nimport { useGridApiContext } from \"../../../hooks/utils/useGridApiContext.js\";\nimport { GridMenu } from \"../GridMenu.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GridColumnHeaderMenu({\n  columnMenuId,\n  columnMenuButtonId,\n  ContentComponent,\n  contentComponentProps,\n  field,\n  open,\n  target,\n  onExited\n}) {\n  const apiRef = useGridApiContext();\n  const colDef = apiRef.current.getColumn(field);\n  const hideMenu = useEventCallback(event => {\n    if (event) {\n      // Prevent triggering the sorting\n      event.stopPropagation();\n      if (target?.contains(event.target)) {\n        return;\n      }\n    }\n    apiRef.current.hideColumnMenu();\n  });\n  if (!target || !colDef) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridMenu, {\n    placement: `bottom-${colDef.align === 'right' ? 'start' : 'end'}`,\n    open: open,\n    target: target,\n    onClose: hideMenu,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(ContentComponent, _extends({\n      colDef: colDef,\n      hideMenu: hideMenu,\n      open: open,\n      id: columnMenuId,\n      labelledby: columnMenuButtonId\n    }, contentComponentProps))\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnMenuButtonId: PropTypes.string,\n  columnMenuId: PropTypes.string,\n  ContentComponent: PropTypes.elementType.isRequired,\n  contentComponentProps: PropTypes.any,\n  field: PropTypes.string.isRequired,\n  onExited: PropTypes.func,\n  open: PropTypes.bool.isRequired,\n  target: HTMLElementType\n} : void 0;\nexport { GridColumnHeaderMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"aria-label\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { isOverflown } from \"../../utils/domUtils.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaderTitle']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeaderTitleRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderTitle',\n  overridesResolver: (props, styles) => styles.columnHeaderTitle\n})({\n  textOverflow: 'ellipsis',\n  overflow: 'hidden',\n  whiteSpace: 'nowrap',\n  fontWeight: 'var(--unstable_DataGrid-headWeight)',\n  lineHeight: 'normal'\n});\nconst ColumnHeaderInnerTitle = forwardRef(function ColumnHeaderInnerTitle(props, ref) {\n  // Tooltip adds aria-label to the props, which is not needed since the children prop is a string\n  // See https://github.com/mui/mui-x/pull/14482\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeaderTitleRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    ref: ref\n  }));\n});\n// No React.memo here as if we display the sort icon, we need to recalculate the isOver\nfunction GridColumnHeaderTitle(props) {\n  const {\n    label,\n    description\n  } = props;\n  const rootProps = useGridRootProps();\n  const titleRef = React.useRef(null);\n  const [tooltip, setTooltip] = React.useState('');\n  const handleMouseOver = React.useCallback(() => {\n    if (!description && titleRef?.current) {\n      const isOver = isOverflown(titleRef.current);\n      if (isOver) {\n        setTooltip(label);\n      } else {\n        setTooltip('');\n      }\n    }\n  }, [description, label]);\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: description || tooltip\n  }, rootProps.slotProps?.baseTooltip, {\n    children: /*#__PURE__*/_jsx(ColumnHeaderInnerTitle, {\n      onMouseOver: handleMouseOver,\n      ref: titleRef,\n      children: label\n    })\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderTitle.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnWidth: PropTypes.number.isRequired,\n  description: PropTypes.node,\n  label: PropTypes.string.isRequired\n} : void 0;\nexport { GridColumnHeaderTitle };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"resizable\", \"resizing\", \"height\", \"side\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize } from '@mui/utils';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GridColumnHeaderSeparatorSides = /*#__PURE__*/function (GridColumnHeaderSeparatorSides) {\n  GridColumnHeaderSeparatorSides[\"Left\"] = \"left\";\n  GridColumnHeaderSeparatorSides[\"Right\"] = \"right\";\n  return GridColumnHeaderSeparatorSides;\n}(GridColumnHeaderSeparatorSides || {});\nconst useUtilityClasses = ownerState => {\n  const {\n    resizable,\n    resizing,\n    classes,\n    side\n  } = ownerState;\n  const slots = {\n    root: ['columnSeparator', resizable && 'columnSeparator--resizable', resizing && 'columnSeparator--resizing', side && `columnSeparator--side${capitalize(side)}`],\n    icon: ['iconSeparator']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderSeparatorRaw(props) {\n  const {\n      height,\n      side = GridColumnHeaderSeparatorSides.Right\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const ownerState = _extends({}, props, {\n    side,\n    classes: rootProps.classes\n  });\n  const classes = useUtilityClasses(ownerState);\n  const stopClick = React.useCallback(event => {\n    event.preventDefault();\n    event.stopPropagation();\n  }, []);\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events,jsx-a11y/no-static-element-interactions\n    _jsx(\"div\", _extends({\n      className: classes.root,\n      style: {\n        minHeight: height\n      }\n    }, other, {\n      onClick: stopClick,\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnResizeIcon, {\n        className: classes.icon\n      })\n    }))\n  );\n}\nconst GridColumnHeaderSeparator = /*#__PURE__*/React.memo(GridColumnHeaderSeparatorRaw);\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderSeparatorRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  height: PropTypes.number.isRequired,\n  resizable: PropTypes.bool.isRequired,\n  resizing: PropTypes.bool.isRequired,\n  side: PropTypes.oneOf(['left', 'right'])\n} : void 0;\nexport { GridColumnHeaderSeparator, GridColumnHeaderSeparatorSides };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"classes\", \"columnMenuOpen\", \"colIndex\", \"height\", \"isResizing\", \"sortDirection\", \"hasFocus\", \"tabIndex\", \"separatorSide\", \"isDraggable\", \"headerComponent\", \"description\", \"elementId\", \"width\", \"columnMenuIconButton\", \"columnMenu\", \"columnTitleIconButtons\", \"headerClassName\", \"label\", \"resizable\", \"draggableContainerProps\", \"columnHeaderSeparatorProps\", \"style\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { unstable_useForkRef as useForkRef } from '@mui/utils';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { GridColumnHeaderTitle } from \"./GridColumnHeaderTitle.js\";\nimport { GridColumnHeaderSeparator } from \"./GridColumnHeaderSeparator.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridGenericColumnHeaderItem = forwardRef(function GridGenericColumnHeaderItem(props, ref) {\n  const {\n      classes,\n      colIndex,\n      height,\n      isResizing,\n      sortDirection,\n      hasFocus,\n      tabIndex,\n      separatorSide,\n      isDraggable,\n      headerComponent,\n      description,\n      width,\n      columnMenuIconButton = null,\n      columnMenu = null,\n      columnTitleIconButtons = null,\n      headerClassName,\n      label,\n      resizable,\n      draggableContainerProps,\n      columnHeaderSeparatorProps,\n      style\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const headerCellRef = React.useRef(null);\n  const handleRef = useForkRef(headerCellRef, ref);\n  let ariaSort = 'none';\n  if (sortDirection != null) {\n    ariaSort = sortDirection === 'asc' ? 'ascending' : 'descending';\n  }\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  return /*#__PURE__*/_jsxs(\"div\", _extends({\n    className: clsx(classes.root, headerClassName),\n    style: _extends({}, style, {\n      height,\n      width\n    }),\n    role: \"columnheader\",\n    tabIndex: tabIndex,\n    \"aria-colindex\": colIndex + 1,\n    \"aria-sort\": ariaSort\n  }, other, {\n    ref: handleRef,\n    children: [/*#__PURE__*/_jsxs(\"div\", _extends({\n      className: classes.draggableContainer,\n      draggable: isDraggable,\n      role: \"presentation\"\n    }, draggableContainerProps, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        className: classes.titleContainer,\n        role: \"presentation\",\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: classes.titleContainerContent,\n          children: headerComponent !== undefined ? headerComponent : /*#__PURE__*/_jsx(GridColumnHeaderTitle, {\n            label: label,\n            description: description,\n            columnWidth: width\n          })\n        }), columnTitleIconButtons]\n      }), columnMenuIconButton]\n    })), /*#__PURE__*/_jsx(GridColumnHeaderSeparator, _extends({\n      resizable: !rootProps.disableColumnResize && !!resizable,\n      resizing: isResizing,\n      height: height,\n      side: separatorSide\n    }, columnHeaderSeparatorProps)), columnMenu]\n  }));\n});\nexport { GridGenericColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses, unstable_useId as useId } from '@mui/utils';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { useGridPrivateApiContext } from \"../../hooks/utils/useGridPrivateApiContext.js\";\nimport { ColumnHeaderMenuIcon } from \"./ColumnHeaderMenuIcon.js\";\nimport { GridColumnHeaderMenu } from \"../menu/columnMenu/GridColumnHeaderMenu.js\";\nimport { gridClasses, getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { PinnedColumnPosition } from \"../../internals/constants.js\";\nimport { attachPinnedStyle } from \"../../internals/utils/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    colDef,\n    classes,\n    isDragging,\n    sortDirection,\n    showRightBorder,\n    showLeftBorder,\n    filterItemsCounter,\n    pinnedPosition,\n    isLastUnpinned,\n    isSiblingFocused\n  } = ownerState;\n  const isColumnSorted = sortDirection != null;\n  const isColumnFiltered = filterItemsCounter != null && filterItemsCounter > 0;\n  // todo refactor to a prop on col isNumeric or ?? ie: coltype===price wont work\n  const isColumnNumeric = colDef.type === 'number';\n  const slots = {\n    root: ['columnHeader', colDef.headerAlign === 'left' && 'columnHeader--alignLeft', colDef.headerAlign === 'center' && 'columnHeader--alignCenter', colDef.headerAlign === 'right' && 'columnHeader--alignRight', colDef.sortable && 'columnHeader--sortable', isDragging && 'columnHeader--moving', isColumnSorted && 'columnHeader--sorted', isColumnFiltered && 'columnHeader--filtered', isColumnNumeric && 'columnHeader--numeric', 'withBorderColor', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', pinnedPosition === PinnedColumnPosition.LEFT && 'columnHeader--pinnedLeft', pinnedPosition === PinnedColumnPosition.RIGHT && 'columnHeader--pinnedRight',\n    // TODO: Remove classes below and restore `:has` selectors when they are supported in jsdom\n    // See https://github.com/mui/mui-x/pull/14559\n    isLastUnpinned && 'columnHeader--lastUnpinned', isSiblingFocused && 'columnHeader--siblingFocused'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnHeaderItem(props) {\n  const {\n    colDef,\n    columnMenuOpen,\n    colIndex,\n    headerHeight,\n    isResizing,\n    isLast,\n    sortDirection,\n    sortIndex,\n    filterItemsCounter,\n    hasFocus,\n    tabIndex,\n    disableReorder,\n    separatorSide,\n    showLeftBorder,\n    showRightBorder,\n    pinnedPosition,\n    pinnedOffset\n  } = props;\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const headerCellRef = React.useRef(null);\n  const columnMenuId = useId();\n  const columnMenuButtonId = useId();\n  const iconButtonRef = React.useRef(null);\n  const [showColumnMenuIcon, setShowColumnMenuIcon] = React.useState(columnMenuOpen);\n  const isDraggable = React.useMemo(() => !rootProps.disableColumnReorder && !disableReorder && !colDef.disableReorder, [rootProps.disableColumnReorder, disableReorder, colDef.disableReorder]);\n  let headerComponent;\n  if (colDef.renderHeader) {\n    headerComponent = colDef.renderHeader(apiRef.current.getColumnHeaderParams(colDef.field));\n  }\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    showRightBorder,\n    showLeftBorder\n  });\n  const classes = useUtilityClasses(ownerState);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, apiRef.current.getColumnHeaderParams(colDef.field), event);\n  }, [apiRef, colDef.field]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onClick: publish('columnHeaderClick'),\n    onContextMenu: publish('columnHeaderContextMenu'),\n    onDoubleClick: publish('columnHeaderDoubleClick'),\n    onMouseOver: publish('columnHeaderOver'),\n    // TODO remove as it's not used\n    onMouseOut: publish('columnHeaderOut'),\n    // TODO remove as it's not used\n    onMouseEnter: publish('columnHeaderEnter'),\n    // TODO remove as it's not used\n    onMouseLeave: publish('columnHeaderLeave'),\n    // TODO remove as it's not used\n    onKeyDown: publish('columnHeaderKeyDown'),\n    onFocus: publish('columnHeaderFocus'),\n    onBlur: publish('columnHeaderBlur')\n  }), [publish]);\n  const draggableEventHandlers = React.useMemo(() => isDraggable ? {\n    onDragStart: publish('columnHeaderDragStart'),\n    onDragEnter: publish('columnHeaderDragEnter'),\n    onDragOver: publish('columnHeaderDragOver'),\n    onDragEnd: publish('columnHeaderDragEnd')\n  } : {}, [isDraggable, publish]);\n  const columnHeaderSeparatorProps = React.useMemo(() => ({\n    onMouseDown: publish('columnSeparatorMouseDown'),\n    onDoubleClick: publish('columnSeparatorDoubleClick')\n  }), [publish]);\n  React.useEffect(() => {\n    if (!showColumnMenuIcon) {\n      setShowColumnMenuIcon(columnMenuOpen);\n    }\n  }, [showColumnMenuIcon, columnMenuOpen]);\n  const handleExited = React.useCallback(() => {\n    setShowColumnMenuIcon(false);\n  }, []);\n  const columnMenuIconButton = !rootProps.disableColumnMenu && !colDef.disableColumnMenu && /*#__PURE__*/_jsx(ColumnHeaderMenuIcon, {\n    colDef: colDef,\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    open: showColumnMenuIcon,\n    iconButtonRef: iconButtonRef\n  });\n  const columnMenu = /*#__PURE__*/_jsx(GridColumnHeaderMenu, {\n    columnMenuId: columnMenuId,\n    columnMenuButtonId: columnMenuButtonId,\n    field: colDef.field,\n    open: columnMenuOpen,\n    target: iconButtonRef.current,\n    ContentComponent: rootProps.slots.columnMenu,\n    contentComponentProps: rootProps.slotProps?.columnMenu,\n    onExited: handleExited\n  });\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const showSortIcon = (colDef.sortable || sortDirection != null) && !colDef.hideSortIcons && !rootProps.disableColumnSorting;\n  const columnTitleIconButtons = /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [!rootProps.disableColumnFilter && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderFilterIconButton, _extends({\n      field: colDef.field,\n      counter: filterItemsCounter\n    }, rootProps.slotProps?.columnHeaderFilterIconButton)), showSortIcon && /*#__PURE__*/_jsx(rootProps.slots.columnHeaderSortIcon, _extends({\n      field: colDef.field,\n      direction: sortDirection,\n      index: sortIndex,\n      sortingOrder: sortingOrder,\n      disabled: !colDef.sortable\n    }, rootProps.slotProps?.columnHeaderSortIcon))]\n  });\n  React.useLayoutEffect(() => {\n    const columnMenuState = apiRef.current.state.columnMenu;\n    if (hasFocus && !columnMenuState.open) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n      if (apiRef.current.columnHeadersContainerRef?.current) {\n        apiRef.current.columnHeadersContainerRef.current.scrollLeft = 0;\n      }\n    }\n  }, [apiRef, hasFocus]);\n  const headerClassName = typeof colDef.headerClassName === 'function' ? colDef.headerClassName({\n    field: colDef.field,\n    colDef\n  }) : colDef.headerClassName;\n  const label = colDef.headerName ?? colDef.field;\n  const style = React.useMemo(() => attachPinnedStyle(_extends({}, props.style), isRtl, pinnedPosition, pinnedOffset), [pinnedPosition, pinnedOffset, props.style, isRtl]);\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: columnMenuOpen,\n    colIndex: colIndex,\n    height: headerHeight,\n    isResizing: isResizing,\n    sortDirection: sortDirection,\n    hasFocus: hasFocus,\n    tabIndex: tabIndex,\n    separatorSide: separatorSide,\n    isDraggable: isDraggable,\n    headerComponent: headerComponent,\n    description: colDef.description,\n    elementId: colDef.field,\n    width: colDef.computedWidth,\n    columnMenuIconButton: columnMenuIconButton,\n    columnTitleIconButtons: columnTitleIconButtons,\n    headerClassName: clsx(headerClassName, isLast && gridClasses['columnHeader--last']),\n    label: label,\n    resizable: !rootProps.disableColumnResize && !!colDef.resizable,\n    \"data-field\": colDef.field,\n    columnMenu: columnMenu,\n    draggableContainerProps: draggableEventHandlers,\n    columnHeaderSeparatorProps: columnHeaderSeparatorProps,\n    style: style\n  }, mouseEventsHandlers));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaderItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  colIndex: PropTypes.number.isRequired,\n  columnMenuOpen: PropTypes.bool.isRequired,\n  disableReorder: PropTypes.bool,\n  filterItemsCounter: PropTypes.number,\n  hasFocus: PropTypes.bool,\n  headerHeight: PropTypes.number.isRequired,\n  isDragging: PropTypes.bool.isRequired,\n  isLast: PropTypes.bool.isRequired,\n  isLastUnpinned: PropTypes.bool.isRequired,\n  isResizing: PropTypes.bool.isRequired,\n  isSiblingFocused: PropTypes.bool.isRequired,\n  pinnedOffset: PropTypes.number,\n  pinnedPosition: PropTypes.oneOf([0, 1, 2, 3]),\n  separatorSide: PropTypes.oneOf(['left', 'right']),\n  showLeftBorder: PropTypes.bool.isRequired,\n  showRightBorder: PropTypes.bool.isRequired,\n  sortDirection: PropTypes.oneOf(['asc', 'desc']),\n  sortIndex: PropTypes.number,\n  style: PropTypes.object,\n  tabIndex: PropTypes.oneOf([-1, 0]).isRequired\n} : void 0;\nconst Memoized = fastMemo(GridColumnHeaderItem);\nexport { Memoized as GridColumnHeaderItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { unstable_useId as useId, unstable_composeClasses as composeClasses } from '@mui/utils';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridColumnGroupsLookupSelector } from \"../../hooks/features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { GridGenericColumnHeaderItem } from \"./GridGenericColumnHeaderItem.js\";\nimport { isEventTargetInPortal } from \"../../utils/domUtils.js\";\nimport { PinnedColumnPosition } from \"../../internals/constants.js\";\nimport { attachPinnedStyle } from \"../../internals/utils/index.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    headerAlign,\n    isDragging,\n    isLastColumn,\n    showLeftBorder,\n    showRightBorder,\n    groupId,\n    pinnedPosition\n  } = ownerState;\n  const slots = {\n    root: ['columnHeader', headerAlign === 'left' && 'columnHeader--alignLeft', headerAlign === 'center' && 'columnHeader--alignCenter', headerAlign === 'right' && 'columnHeader--alignRight', isDragging && 'columnHeader--moving', showRightBorder && 'columnHeader--withRightBorder', showLeftBorder && 'columnHeader--withLeftBorder', 'withBorderColor', groupId === null ? 'columnHeader--emptyGroup' : 'columnHeader--filledGroup', pinnedPosition === PinnedColumnPosition.LEFT && 'columnHeader--pinnedLeft', pinnedPosition === PinnedColumnPosition.RIGHT && 'columnHeader--pinnedRight', isLastColumn && 'columnHeader--last'],\n    draggableContainer: ['columnHeaderDraggableContainer'],\n    titleContainer: ['columnHeaderTitleContainer', 'withBorderColor'],\n    titleContainerContent: ['columnHeaderTitleContainerContent']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nfunction GridColumnGroupHeader(props) {\n  const {\n    groupId,\n    width,\n    depth,\n    maxDepth,\n    fields,\n    height,\n    colIndex,\n    hasFocus,\n    tabIndex,\n    isLastColumn,\n    pinnedPosition,\n    pinnedOffset\n  } = props;\n  const rootProps = useGridRootProps();\n  const isRtl = useRtl();\n  const headerCellRef = React.useRef(null);\n  const apiRef = useGridApiContext();\n  const columnGroupsLookup = useGridSelector(apiRef, gridColumnGroupsLookupSelector);\n  const group = groupId ? columnGroupsLookup[groupId] : {};\n  const {\n    headerName = groupId ?? '',\n    description = '',\n    headerAlign = undefined\n  } = group;\n  let headerComponent;\n  const render = groupId && columnGroupsLookup[groupId]?.renderHeaderGroup;\n  const renderParams = React.useMemo(() => ({\n    groupId,\n    headerName,\n    description,\n    depth,\n    maxDepth,\n    fields,\n    colIndex,\n    isLastColumn\n  }), [groupId, headerName, description, depth, maxDepth, fields, colIndex, isLastColumn]);\n  if (groupId && render) {\n    headerComponent = render(renderParams);\n  }\n  const ownerState = _extends({}, props, {\n    classes: rootProps.classes,\n    headerAlign,\n    depth,\n    isDragging: false\n  });\n  const label = headerName ?? groupId;\n  const id = useId();\n  const elementId = groupId === null ? `empty-group-cell-${id}` : groupId;\n  const classes = useUtilityClasses(ownerState);\n  React.useLayoutEffect(() => {\n    if (hasFocus) {\n      const focusableElement = headerCellRef.current.querySelector('[tabindex=\"0\"]');\n      const elementToFocus = focusableElement || headerCellRef.current;\n      elementToFocus?.focus();\n    }\n  }, [apiRef, hasFocus]);\n  const publish = React.useCallback(eventName => event => {\n    // Ignore portal\n    // See https://github.com/mui/mui-x/issues/1721\n    if (isEventTargetInPortal(event)) {\n      return;\n    }\n    apiRef.current.publishEvent(eventName, renderParams, event);\n  },\n  // For now this is stupid, because renderParams change all the time.\n  // Need to move it's computation in the api, such that for a given depth+columnField, I can get the group parameters\n  [apiRef, renderParams]);\n  const mouseEventsHandlers = React.useMemo(() => ({\n    onKeyDown: publish('columnGroupHeaderKeyDown'),\n    onFocus: publish('columnGroupHeaderFocus'),\n    onBlur: publish('columnGroupHeaderBlur')\n  }), [publish]);\n  const headerClassName = typeof group.headerClassName === 'function' ? group.headerClassName(renderParams) : group.headerClassName;\n  const style = React.useMemo(() => attachPinnedStyle(_extends({}, props.style), isRtl, pinnedPosition, pinnedOffset), [pinnedPosition, pinnedOffset, props.style, isRtl]);\n  return /*#__PURE__*/_jsx(GridGenericColumnHeaderItem, _extends({\n    ref: headerCellRef,\n    classes: classes,\n    columnMenuOpen: false,\n    colIndex: colIndex,\n    height: height,\n    isResizing: false,\n    sortDirection: null,\n    hasFocus: false,\n    tabIndex: tabIndex,\n    isDraggable: false,\n    headerComponent: headerComponent,\n    headerClassName: headerClassName,\n    description: description,\n    elementId: elementId,\n    width: width,\n    columnMenuIconButton: null,\n    columnTitleIconButtons: null,\n    resizable: false,\n    label: label,\n    \"aria-colspan\": fields.length\n    // The fields are wrapped between |-...-| to avoid confusion between fields \"id\" and \"id2\" when using selector data-fields~=\n    ,\n    \"data-fields\": `|-${fields.join('-|-')}-|`,\n    style: style\n  }, mouseEventsHandlers));\n}\nexport { GridColumnGroupHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { styled } from '@mui/material/styles';\nimport { useGridSelector } from \"../../utils/index.js\";\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nimport { useGridApiEventHandler } from \"../../utils/useGridApiEventHandler.js\";\nimport { GridColumnHeaderItem } from \"../../../components/columnHeaders/GridColumnHeaderItem.js\";\nimport { gridColumnsTotalWidthSelector, gridGroupHeaderHeightSelector, gridHasFillerSelector, gridHeaderHeightSelector, gridVerticalScrollbarWidthSelector } from \"../dimensions/gridDimensionsSelectors.js\";\nimport { gridRenderContextColumnsSelector } from \"../virtualization/index.js\";\nimport { computeOffsetLeft } from \"../virtualization/useGridVirtualScroller.js\";\nimport { GridColumnGroupHeader } from \"../../../components/columnHeaders/GridColumnGroupHeader.js\";\nimport { gridColumnPositionsSelector, gridVisiblePinnedColumnDefinitionsSelector, gridColumnLookupSelector } from \"../columns/index.js\";\nimport { gridColumnGroupsUnwrappedModelSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { GridScrollbarFillerCell as ScrollbarFiller } from \"../../../components/GridScrollbarFillerCell.js\";\nimport { getPinnedCellOffset } from \"../../../internals/utils/getPinnedCellOffset.js\";\nimport { GridColumnHeaderSeparatorSides } from \"../../../components/columnHeaders/GridColumnHeaderSeparator.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { shouldCellShowLeftBorder, shouldCellShowRightBorder } from \"../../../utils/cellBorderUtils.js\";\nimport { PinnedColumnPosition } from \"../../../internals/constants.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const GridColumnHeaderRow = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaderRow',\n  overridesResolver: (_, styles) => styles.columnHeaderRow\n})({\n  display: 'flex'\n});\nexport const useGridColumnHeaders = props => {\n  const {\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  } = props;\n  const [dragCol, setDragCol] = React.useState('');\n  const [resizeCol, setResizeCol] = React.useState('');\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const columnGroupsModel = useGridSelector(apiRef, gridColumnGroupsUnwrappedModelSelector);\n  const columnPositions = useGridSelector(apiRef, gridColumnPositionsSelector);\n  const renderContext = useGridSelector(apiRef, gridRenderContextColumnsSelector);\n  const pinnedColumns = useGridSelector(apiRef, gridVisiblePinnedColumnDefinitionsSelector);\n  const columnsLookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const offsetLeft = computeOffsetLeft(columnPositions, renderContext, pinnedColumns.left.length);\n  const columnsTotalWidth = useGridSelector(apiRef, gridColumnsTotalWidthSelector);\n  const gridHasFiller = useGridSelector(apiRef, gridHasFillerSelector);\n  const headerHeight = useGridSelector(apiRef, gridHeaderHeightSelector);\n  const groupHeaderHeight = useGridSelector(apiRef, gridGroupHeaderHeightSelector);\n  const scrollbarWidth = useGridSelector(apiRef, gridVerticalScrollbarWidthSelector);\n  const handleColumnResizeStart = React.useCallback(params => setResizeCol(params.field), []);\n  const handleColumnResizeStop = React.useCallback(() => setResizeCol(''), []);\n  const handleColumnReorderStart = React.useCallback(params => setDragCol(params.field), []);\n  const handleColumnReorderStop = React.useCallback(() => setDragCol(''), []);\n  const leftRenderContext = React.useMemo(() => {\n    return pinnedColumns.left.length ? {\n      firstColumnIndex: 0,\n      lastColumnIndex: pinnedColumns.left.length\n    } : null;\n  }, [pinnedColumns.left.length]);\n  const rightRenderContext = React.useMemo(() => {\n    return pinnedColumns.right.length ? {\n      firstColumnIndex: visibleColumns.length - pinnedColumns.right.length,\n      lastColumnIndex: visibleColumns.length\n    } : null;\n  }, [pinnedColumns.right.length, visibleColumns.length]);\n  useGridApiEventHandler(apiRef, 'columnResizeStart', handleColumnResizeStart);\n  useGridApiEventHandler(apiRef, 'columnResizeStop', handleColumnResizeStop);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragStart', handleColumnReorderStart);\n  useGridApiEventHandler(apiRef, 'columnHeaderDragEnd', handleColumnReorderStop);\n\n  // Helper for computation common between getColumnHeaders and getColumnGroupHeaders\n  const getColumnsToRender = params => {\n    const {\n      renderContext: currentContext = renderContext\n    } = params || {};\n    const firstColumnToRender = currentContext.firstColumnIndex;\n    const lastColumnToRender = currentContext.lastColumnIndex;\n    const renderedColumns = visibleColumns.slice(firstColumnToRender, lastColumnToRender);\n    return {\n      renderedColumns,\n      firstColumnToRender,\n      lastColumnToRender\n    };\n  };\n  const getFillers = (params, children, leftOverflow, borderBottom = false) => {\n    const isPinnedRight = params?.position === PinnedColumnPosition.RIGHT;\n    const isNotPinned = params?.position === undefined;\n    const hasScrollbarFiller = pinnedColumns.right.length > 0 && isPinnedRight || pinnedColumns.right.length === 0 && isNotPinned;\n    const leftOffsetWidth = offsetLeft - leftOverflow;\n    return /*#__PURE__*/_jsxs(React.Fragment, {\n      children: [isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        style: {\n          width: leftOffsetWidth\n        }\n      }), children, isNotPinned && /*#__PURE__*/_jsx(\"div\", {\n        role: \"presentation\",\n        className: clsx(gridClasses.filler, borderBottom && gridClasses['filler--borderBottom'])\n      }), hasScrollbarFiller && /*#__PURE__*/_jsx(ScrollbarFiller, {\n        header: true,\n        pinnedRight: isPinnedRight,\n        borderBottom: borderBottom,\n        borderTop: false\n      })]\n    });\n  };\n  const getColumnHeaders = (params, other = {}) => {\n    const {\n      renderedColumns,\n      firstColumnToRender\n    } = getColumnsToRender(params);\n    const columns = [];\n    for (let i = 0; i < renderedColumns.length; i += 1) {\n      const colDef = renderedColumns[i];\n      const columnIndex = firstColumnToRender + i;\n      const isFirstColumn = columnIndex === 0;\n      const tabIndex = columnHeaderTabIndexState !== null && columnHeaderTabIndexState.field === colDef.field || isFirstColumn && !hasOtherElementInTabSequence ? 0 : -1;\n      const hasFocus = columnHeaderFocus !== null && columnHeaderFocus.field === colDef.field;\n      const open = columnMenuState.open && columnMenuState.field === colDef.field;\n      const pinnedPosition = params?.position;\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, colDef.computedWidth, columnIndex, columnPositions, columnsTotalWidth, scrollbarWidth);\n      const siblingWithBorderingSeparator = pinnedPosition === PinnedColumnPosition.RIGHT ? renderedColumns[i - 1] : renderedColumns[i + 1];\n      const isSiblingFocused = siblingWithBorderingSeparator ? columnHeaderFocus !== null && columnHeaderFocus.field === siblingWithBorderingSeparator.field : false;\n      const isLastUnpinned = columnIndex + 1 === columnPositions.length - pinnedColumns.right.length;\n      const indexInSection = i;\n      const sectionLength = renderedColumns.length;\n      const showLeftBorder = shouldCellShowLeftBorder(pinnedPosition, indexInSection);\n      const showRightBorder = shouldCellShowRightBorder(pinnedPosition, indexInSection, sectionLength, rootProps.showCellVerticalBorder, gridHasFiller);\n      columns.push(/*#__PURE__*/_jsx(GridColumnHeaderItem, _extends({}, sortColumnLookup[colDef.field], {\n        columnMenuOpen: open,\n        filterItemsCounter: filterColumnLookup[colDef.field] && filterColumnLookup[colDef.field].length,\n        headerHeight: headerHeight,\n        isDragging: colDef.field === dragCol,\n        colDef: colDef,\n        colIndex: columnIndex,\n        isResizing: resizeCol === colDef.field,\n        isLast: columnIndex === columnPositions.length - 1,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        pinnedOffset: pinnedOffset,\n        isLastUnpinned: isLastUnpinned,\n        isSiblingFocused: isSiblingFocused,\n        showLeftBorder: showLeftBorder,\n        showRightBorder: showRightBorder\n      }, other), colDef.field));\n    }\n    return getFillers(params, columns, 0);\n  };\n  const getColumnHeadersRow = () => {\n    return /*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n      role: \"row\",\n      \"aria-rowindex\": headerGroupingMaxDepth + 1,\n      ownerState: rootProps,\n      className: gridClasses['row--borderBottom'],\n      children: [leftRenderContext && getColumnHeaders({\n        position: PinnedColumnPosition.LEFT,\n        renderContext: leftRenderContext\n      }, {\n        disableReorder: true\n      }), getColumnHeaders({\n        renderContext\n      }), rightRenderContext && getColumnHeaders({\n        position: PinnedColumnPosition.RIGHT,\n        renderContext: rightRenderContext\n      }, {\n        disableReorder: true,\n        separatorSide: GridColumnHeaderSeparatorSides.Left\n      })]\n    });\n  };\n  const getColumnGroupHeaders = ({\n    depth,\n    params\n  }) => {\n    const columnsToRender = getColumnsToRender(params);\n    if (columnsToRender.renderedColumns.length === 0) {\n      return null;\n    }\n    const {\n      firstColumnToRender,\n      lastColumnToRender\n    } = columnsToRender;\n    const rowStructure = columnGroupsHeaderStructure[depth];\n    const firstColumnFieldToRender = visibleColumns[firstColumnToRender].field;\n    const firstGroupToRender = columnGroupsModel[firstColumnFieldToRender]?.[depth] ?? null;\n    const firstGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === firstGroupToRender && columnFields.includes(firstColumnFieldToRender));\n    const lastColumnFieldToRender = visibleColumns[lastColumnToRender - 1].field;\n    const lastGroupToRender = columnGroupsModel[lastColumnFieldToRender]?.[depth] ?? null;\n    const lastGroupIndex = rowStructure.findIndex(({\n      groupId,\n      columnFields\n    }) => groupId === lastGroupToRender && columnFields.includes(lastColumnFieldToRender));\n    const visibleColumnGroupHeader = rowStructure.slice(firstGroupIndex, lastGroupIndex + 1).map(groupStructure => {\n      return _extends({}, groupStructure, {\n        columnFields: groupStructure.columnFields.filter(field => columnVisibility[field] !== false)\n      });\n    }).filter(groupStructure => groupStructure.columnFields.length > 0);\n    const firstVisibleColumnIndex = visibleColumnGroupHeader[0].columnFields.indexOf(firstColumnFieldToRender);\n    const hiddenGroupColumns = visibleColumnGroupHeader[0].columnFields.slice(0, firstVisibleColumnIndex);\n    const leftOverflow = hiddenGroupColumns.reduce((acc, field) => {\n      const column = columnsLookup[field];\n      return acc + (column.computedWidth ?? 0);\n    }, 0);\n    let columnIndex = firstColumnToRender;\n    const children = visibleColumnGroupHeader.map(({\n      groupId,\n      columnFields\n    }, index) => {\n      const hasFocus = columnGroupHeaderFocus !== null && columnGroupHeaderFocus.depth === depth && columnFields.includes(columnGroupHeaderFocus.field);\n      const tabIndex = columnGroupHeaderTabIndexState !== null && columnGroupHeaderTabIndexState.depth === depth && columnFields.includes(columnGroupHeaderTabIndexState.field) ? 0 : -1;\n      const headerInfo = {\n        groupId,\n        width: columnFields.reduce((acc, field) => acc + columnsLookup[field].computedWidth, 0),\n        fields: columnFields,\n        colIndex: columnIndex,\n        hasFocus,\n        tabIndex\n      };\n      const pinnedPosition = params.position;\n      const pinnedOffset = getPinnedCellOffset(pinnedPosition, headerInfo.width, columnIndex, columnPositions, columnsTotalWidth, scrollbarWidth);\n      columnIndex += columnFields.length;\n      let indexInSection = index;\n      if (pinnedPosition === PinnedColumnPosition.LEFT) {\n        // Group headers can expand to multiple columns, we need to adjust the index\n        indexInSection = columnIndex - 1;\n      }\n      return /*#__PURE__*/_jsx(GridColumnGroupHeader, {\n        groupId: groupId,\n        width: headerInfo.width,\n        fields: headerInfo.fields,\n        colIndex: headerInfo.colIndex,\n        depth: depth,\n        isLastColumn: index === visibleColumnGroupHeader.length - 1,\n        maxDepth: headerGroupingMaxDepth,\n        height: groupHeaderHeight,\n        hasFocus: hasFocus,\n        tabIndex: tabIndex,\n        pinnedPosition: pinnedPosition,\n        pinnedOffset: pinnedOffset,\n        showLeftBorder: shouldCellShowLeftBorder(pinnedPosition, indexInSection),\n        showRightBorder: shouldCellShowRightBorder(pinnedPosition, indexInSection, visibleColumnGroupHeader.length, rootProps.showCellVerticalBorder, gridHasFiller)\n      }, index);\n    });\n    return getFillers(params, children, leftOverflow);\n  };\n  const getColumnGroupHeadersRows = () => {\n    if (headerGroupingMaxDepth === 0) {\n      return null;\n    }\n    const headerRows = [];\n    for (let depth = 0; depth < headerGroupingMaxDepth; depth += 1) {\n      headerRows.push(/*#__PURE__*/_jsxs(GridColumnHeaderRow, {\n        role: \"row\",\n        \"aria-rowindex\": depth + 1,\n        ownerState: rootProps,\n        children: [leftRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: PinnedColumnPosition.LEFT,\n            renderContext: leftRenderContext,\n            maxLastColumn: leftRenderContext.lastColumnIndex\n          }\n        }), getColumnGroupHeaders({\n          depth,\n          params: {\n            renderContext\n          }\n        }), rightRenderContext && getColumnGroupHeaders({\n          depth,\n          params: {\n            position: PinnedColumnPosition.RIGHT,\n            renderContext: rightRenderContext,\n            maxLastColumn: rightRenderContext.lastColumnIndex\n          }\n        })]\n      }, depth));\n    }\n    return headerRows;\n  };\n  return {\n    renderContext,\n    leftRenderContext,\n    rightRenderContext,\n    pinnedColumns,\n    visibleColumns,\n    columnPositions,\n    getFillers,\n    getColumnHeadersRow,\n    getColumnsToRender,\n    getColumnGroupHeadersRows,\n    getPinnedCellOffset,\n    isDragging: !!dragCol,\n    getInnerProps: () => ({\n      role: 'rowgroup'\n    })\n  };\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from '@mui/system';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['columnHeaders']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridColumnHeadersRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ColumnHeaders',\n  overridesResolver: (props, styles) => styles.columnHeaders\n})({\n  display: 'flex',\n  flexDirection: 'column',\n  borderTopLeftRadius: 'var(--unstable_DataGrid-radius)',\n  borderTopRightRadius: 'var(--unstable_DataGrid-radius)'\n});\nexport const GridBaseColumnHeaders = forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridColumnHeadersRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    role: \"presentation\",\n    ref: ref\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"visibleColumns\", \"sortColumnLookup\", \"filterColumnLookup\", \"columnHeaderTabIndexState\", \"columnGroupHeaderTabIndexState\", \"columnHeaderFocus\", \"columnGroupHeaderFocus\", \"headerGroupingMaxDepth\", \"columnMenuState\", \"columnVisibility\", \"columnGroupsHeaderStructure\", \"hasOtherElementInTabSequence\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { fastMemo } from '@mui/x-internals/fastMemo';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridColumnHeaders } from \"../hooks/features/columnHeaders/useGridColumnHeaders.js\";\nimport { GridBaseColumnHeaders } from \"./columnHeaders/GridBaseColumnHeaders.js\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridColumnHeaders = forwardRef(function GridColumnHeaders(props, ref) {\n  const {\n      visibleColumns,\n      sortColumnLookup,\n      filterColumnLookup,\n      columnHeaderTabIndexState,\n      columnGroupHeaderTabIndexState,\n      columnHeaderFocus,\n      columnGroupHeaderFocus,\n      headerGroupingMaxDepth,\n      columnMenuState,\n      columnVisibility,\n      columnGroupsHeaderStructure,\n      hasOtherElementInTabSequence\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const {\n    getInnerProps,\n    getColumnHeadersRow,\n    getColumnGroupHeadersRows\n  } = useGridColumnHeaders({\n    visibleColumns,\n    sortColumnLookup,\n    filterColumnLookup,\n    columnHeaderTabIndexState,\n    columnGroupHeaderTabIndexState,\n    columnHeaderFocus,\n    columnGroupHeaderFocus,\n    headerGroupingMaxDepth,\n    columnMenuState,\n    columnVisibility,\n    columnGroupsHeaderStructure,\n    hasOtherElementInTabSequence\n  });\n  return /*#__PURE__*/_jsxs(GridBaseColumnHeaders, _extends({}, other, getInnerProps(), {\n    ref: ref,\n    children: [getColumnGroupHeadersRows(), getColumnHeadersRow()]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnHeaders.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  columnGroupHeaderFocus: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupHeaderTabIndexState: PropTypes.shape({\n    depth: PropTypes.number.isRequired,\n    field: PropTypes.string.isRequired\n  }),\n  columnGroupsHeaderStructure: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.shape({\n    columnFields: PropTypes.arrayOf(PropTypes.string).isRequired,\n    groupId: PropTypes.string\n  }))).isRequired,\n  columnHeaderFocus: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnHeaderTabIndexState: PropTypes.shape({\n    field: PropTypes.string.isRequired\n  }),\n  columnMenuState: PropTypes.shape({\n    field: PropTypes.string,\n    open: PropTypes.bool.isRequired\n  }).isRequired,\n  columnVisibility: PropTypes.object.isRequired,\n  filterColumnLookup: PropTypes.object.isRequired,\n  hasOtherElementInTabSequence: PropTypes.bool.isRequired,\n  headerGroupingMaxDepth: PropTypes.number.isRequired,\n  sortColumnLookup: PropTypes.object.isRequired,\n  visibleColumns: PropTypes.arrayOf(PropTypes.object).isRequired\n} : void 0;\nconst MemoizedGridColumnHeaders = fastMemo(GridColumnHeaders);\nexport { MemoizedGridColumnHeaders as GridColumnHeaders };","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"displayOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../utils/useGridRootProps.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nconst useGridColumnMenuSlots = props => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const {\n    defaultSlots,\n    defaultSlotProps,\n    slots = {},\n    slotProps = {},\n    hideMenu,\n    colDef,\n    addDividers = true\n  } = props;\n  const processedComponents = React.useMemo(() => _extends({}, defaultSlots, slots), [defaultSlots, slots]);\n  const processedSlotProps = React.useMemo(() => {\n    if (!slotProps || Object.keys(slotProps).length === 0) {\n      return defaultSlotProps;\n    }\n    const mergedProps = _extends({}, slotProps);\n    Object.entries(defaultSlotProps).forEach(([key, currentSlotProps]) => {\n      mergedProps[key] = _extends({}, currentSlotProps, slotProps[key] || {});\n    });\n    return mergedProps;\n  }, [defaultSlotProps, slotProps]);\n  const defaultItems = apiRef.current.unstable_applyPipeProcessors('columnMenu', [], props.colDef);\n  const userItems = React.useMemo(() => {\n    const defaultComponentKeys = Object.keys(defaultSlots);\n    return Object.keys(slots).filter(key => !defaultComponentKeys.includes(key));\n  }, [slots, defaultSlots]);\n  return React.useMemo(() => {\n    const uniqueItems = Array.from(new Set([...defaultItems, ...userItems]));\n    const cleansedItems = uniqueItems.filter(key => processedComponents[key] != null);\n    const sorted = cleansedItems.sort((a, b) => {\n      const leftItemProps = processedSlotProps[a];\n      const rightItemProps = processedSlotProps[b];\n      const leftDisplayOrder = Number.isFinite(leftItemProps?.displayOrder) ? leftItemProps.displayOrder : 100;\n      const rightDisplayOrder = Number.isFinite(rightItemProps?.displayOrder) ? rightItemProps.displayOrder : 100;\n      return leftDisplayOrder - rightDisplayOrder;\n    });\n    return sorted.reduce((acc, key, index) => {\n      let itemProps = {\n        colDef,\n        onClick: hideMenu\n      };\n      const processedComponentProps = processedSlotProps[key];\n      if (processedComponentProps) {\n        const customProps = _objectWithoutPropertiesLoose(processedComponentProps, _excluded);\n        itemProps = _extends({}, itemProps, customProps);\n      }\n      return addDividers && index !== sorted.length - 1 ? [...acc, [processedComponents[key], itemProps], [rootProps.slots.baseDivider, {}]] : [...acc, [processedComponents[key], itemProps]];\n    }, []);\n  }, [addDividers, colDef, defaultItems, hideMenu, processedComponents, processedSlotProps, userItems, rootProps.slots.baseDivider]);\n};\nexport { useGridColumnMenuSlots };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"hideMenu\", \"colDef\", \"id\", \"labelledby\", \"className\", \"children\", \"open\"];\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport MenuList from '@mui/material/MenuList';\nimport { styled } from '@mui/material/styles';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { isHideMenuKey } from \"../../../utils/keyboardUtils.js\";\nimport { gridClasses } from \"../../../constants/gridClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst StyledMenuList = styled(MenuList)(() => ({\n  minWidth: 248\n}));\nconst GridColumnMenuContainer = forwardRef(function GridColumnMenuContainer(props, ref) {\n  const {\n      hideMenu,\n      id,\n      labelledby,\n      className,\n      children,\n      open\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const handleListKeyDown = React.useCallback(event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      hideMenu(event);\n    }\n  }, [hideMenu]);\n  return /*#__PURE__*/_jsx(StyledMenuList, _extends({\n    id: id,\n    className: clsx(gridClasses.menuList, className),\n    \"aria-labelledby\": labelledby,\n    onKeyDown: handleListKeyDown,\n    autoFocus: open\n  }, other, {\n    ref: ref,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport { GridColumnMenuContainer };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { gridVisibleColumnDefinitionsSelector } from \"../../../../hooks/features/columns/index.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuHideItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = gridVisibleColumnDefinitionsSelector(apiRef);\n  const columnsWithMenu = visibleColumns.filter(col => col.disableColumnMenu !== true);\n  // do not allow to hide the last column with menu\n  const disabled = columnsWithMenu.length === 1;\n  const toggleColumn = React.useCallback(event => {\n    /**\n     * Disabled `MenuItem` would trigger `click` event\n     * after imperative `.click()` call on HTML element.\n     * Also, click is triggered in testing environment as well.\n     */\n    if (disabled) {\n      return;\n    }\n    apiRef.current.setColumnVisibility(colDef.field, false);\n    onClick(event);\n  }, [apiRef, colDef.field, onClick, disabled]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  if (colDef.hideable === false) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: toggleColumn,\n    disabled: disabled,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuHideIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuHideColumn')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuHideItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuHideItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { GridPreferencePanelsValue } from \"../../../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuManageItem(props) {\n  const {\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showColumns = React.useCallback(event => {\n    onClick(event); // hide column menu\n    apiRef.current.showPreferences(GridPreferencePanelsValue.columns);\n  }, [apiRef, onClick]);\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showColumns,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuManageColumnsIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuManageColumns')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuManageItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuManageItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GridColumnMenuHideItem } from \"./GridColumnMenuHideItem.js\";\nimport { GridColumnMenuManageItem } from \"./GridColumnMenuManageItem.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuColumnsItem(props) {\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GridColumnMenuHideItem, _extends({}, props)), /*#__PURE__*/_jsx(GridColumnMenuManageItem, _extends({}, props))]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuColumnsItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuColumnsItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuFilterItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const showFilter = React.useCallback(event => {\n    onClick(event);\n    apiRef.current.showFilterPanel(colDef.field);\n  }, [apiRef, colDef.field, onClick]);\n  if (rootProps.disableColumnFilter || !colDef.filterable) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: showFilter,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuFilterIcon, {\n        fontSize: \"small\"\n      })\n    }), /*#__PURE__*/_jsx(ListItemText, {\n      children: apiRef.current.getLocaleText('columnMenuFilter')\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuFilterItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuFilterItem };","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport { useGridSelector } from \"../../../../hooks/utils/useGridSelector.js\";\nimport { gridSortModelSelector } from \"../../../../hooks/features/sorting/gridSortingSelector.js\";\nimport { useGridApiContext } from \"../../../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GridColumnMenuSortItem(props) {\n  const {\n    colDef,\n    onClick\n  } = props;\n  const apiRef = useGridApiContext();\n  const sortModel = useGridSelector(apiRef, gridSortModelSelector);\n  const rootProps = useGridRootProps();\n  const sortDirection = React.useMemo(() => {\n    if (!colDef) {\n      return null;\n    }\n    const sortItem = sortModel.find(item => item.field === colDef.field);\n    return sortItem?.sort;\n  }, [colDef, sortModel]);\n  const sortingOrder = colDef.sortingOrder ?? rootProps.sortingOrder;\n  const onSortMenuItemClick = React.useCallback(event => {\n    onClick(event);\n    const direction = event.currentTarget.getAttribute('data-value') || null;\n    apiRef.current.sortColumn(colDef.field, direction === sortDirection ? null : direction);\n  }, [apiRef, colDef, onClick, sortDirection]);\n  if (rootProps.disableColumnSorting || !colDef || !colDef.sortable || !sortingOrder.some(item => !!item)) {\n    return null;\n  }\n  const getLabel = key => {\n    const label = apiRef.current.getLocaleText(key);\n    return typeof label === 'function' ? label(colDef) : label;\n  };\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [sortingOrder.includes('asc') && sortDirection !== 'asc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"asc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortAscendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortAsc')\n      })]\n    }) : null, sortingOrder.includes('desc') && sortDirection !== 'desc' ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      \"data-value\": \"desc\",\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.columnMenuSortDescendingIcon, {\n          fontSize: \"small\"\n        })\n      }), /*#__PURE__*/_jsx(ListItemText, {\n        children: getLabel('columnMenuSortDesc')\n      })]\n    }) : null, sortingOrder.includes(null) && sortDirection != null ? /*#__PURE__*/_jsxs(MenuItem, {\n      onClick: onSortMenuItemClick,\n      children: [/*#__PURE__*/_jsx(ListItemIcon, {}), /*#__PURE__*/_jsx(ListItemText, {\n        children: apiRef.current.getLocaleText('columnMenuUnsort')\n      })]\n    }) : null]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenuSortItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  onClick: PropTypes.func.isRequired\n} : void 0;\nexport { GridColumnMenuSortItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"defaultSlots\", \"defaultSlotProps\", \"slots\", \"slotProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridColumnMenuSlots } from \"../../../hooks/features/columnMenu/useGridColumnMenuSlots.js\";\nimport { GridColumnMenuContainer } from \"./GridColumnMenuContainer.js\";\nimport { GridColumnMenuColumnsItem } from \"./menuItems/GridColumnMenuColumnsItem.js\";\nimport { GridColumnMenuFilterItem } from \"./menuItems/GridColumnMenuFilterItem.js\";\nimport { GridColumnMenuSortItem } from \"./menuItems/GridColumnMenuSortItem.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GRID_COLUMN_MENU_SLOTS = {\n  columnMenuSortItem: GridColumnMenuSortItem,\n  columnMenuFilterItem: GridColumnMenuFilterItem,\n  columnMenuColumnsItem: GridColumnMenuColumnsItem\n};\nexport const GRID_COLUMN_MENU_SLOT_PROPS = {\n  columnMenuSortItem: {\n    displayOrder: 10\n  },\n  columnMenuFilterItem: {\n    displayOrder: 20\n  },\n  columnMenuColumnsItem: {\n    displayOrder: 30\n  }\n};\nconst GridGenericColumnMenu = forwardRef(function GridGenericColumnMenu(props, ref) {\n  const {\n      defaultSlots,\n      defaultSlotProps,\n      slots,\n      slotProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const orderedSlots = useGridColumnMenuSlots(_extends({}, other, {\n    defaultSlots,\n    defaultSlotProps,\n    slots,\n    slotProps\n  }));\n  return /*#__PURE__*/_jsx(GridColumnMenuContainer, _extends({}, other, {\n    ref: ref,\n    children: orderedSlots.map(([Component, otherProps], index) => /*#__PURE__*/_jsx(Component, _extends({}, otherProps), index))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridGenericColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  /**\n   * Initial `slotProps` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlotProps: PropTypes.object.isRequired,\n  /**\n   * Initial `slots` - it is internal, to be overrriden by Pro or Premium packages\n   * @ignore - do not document.\n   */\n  defaultSlots: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nconst GridColumnMenu = forwardRef(function GridColumnMenu(props, ref) {\n  return /*#__PURE__*/_jsx(GridGenericColumnMenu, _extends({}, props, {\n    ref: ref,\n    defaultSlots: GRID_COLUMN_MENU_SLOTS,\n    defaultSlotProps: GRID_COLUMN_MENU_SLOT_PROPS\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridColumnMenu.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  colDef: PropTypes.object.isRequired,\n  hideMenu: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  labelledby: PropTypes.string,\n  open: PropTypes.bool.isRequired,\n  /**\n   * Could be used to pass new props or override props specific to a column menu component\n   * e.g. `displayOrder`\n   */\n  slotProps: PropTypes.object,\n  /**\n   * `slots` could be used to add new and (or) override default column menu items\n   * If you register a nee component you must pass it's `displayOrder` in `slotProps`\n   * or it will be placed in the end of the list\n   */\n  slots: PropTypes.object\n} : void 0;\nexport { GridColumnMenu, GridGenericColumnMenu };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridApiContext } from \"../hooks/utils/useGridApiContext.js\";\nimport { GridOverlay } from \"./containers/GridOverlay.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridNoResultsOverlay = forwardRef(function GridNoResultsOverlay(props, ref) {\n  const apiRef = useGridApiContext();\n  const noResultsOverlayLabel = apiRef.current.getLocaleText('noResultsOverlayLabel');\n  return /*#__PURE__*/_jsx(GridOverlay, _extends({}, props, {\n    ref: ref,\n    children: noResultsOverlayLabel\n  }));\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sortingOrder\"];\nimport * as React from 'react';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridColumnUnsortedIcon = /*#__PURE__*/React.memo(function GridColumnHeaderSortIcon(props) {\n  const {\n      sortingOrder\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const [nextSortDirection] = sortingOrder;\n  const Icon = nextSortDirection === 'asc' ? rootProps.slots.columnSortedAscendingIcon : rootProps.slots.columnSortedDescendingIcon;\n  return Icon ? /*#__PURE__*/_jsx(Icon, _extends({}, other)) : null;\n});","import * as React from 'react';\nimport { createSvgIcon } from '@mui/material/utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const GridArrowUpwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 12l1.41 1.41L11 7.83V20h2V7.83l5.58 5.59L20 12l-8-8-8 8z\"\n}), 'ArrowUpward');\nexport const GridArrowDownwardIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z\"\n}), 'ArrowDownward');\nexport const GridKeyboardArrowRight = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.59 16.59 13.17 12 8.59 7.41 10 6l6 6-6 6-1.41-1.41z\"\n}), 'KeyboardArrowRight');\nexport const GridExpandMoreIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\nexport const GridFilterListIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M10 18h4v-2h-4v2zM3 6v2h18V6H3zm3 7h12v-2H6v2z\"\n}), 'FilterList');\nexport const GridFilterAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4.25 5.61C6.27 8.2 10 13 10 13v6c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-6s3.72-4.8 5.74-7.39c.51-.66.04-1.61-.79-1.61H5.04c-.83 0-1.3.95-.79 1.61z\"\n}), 'FilterAlt');\nexport const GridSearchIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexport const GridMenuIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"\n}), 'Menu');\nexport const GridCheckCircleIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n}), 'CheckCircle');\nexport const GridColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 5H3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm14 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1zm-7 0h-3c-.55 0-1 .45-1 1v12c0 .55.45 1 1 1h3c.55 0 1-.45 1-1V6c0-.55-.45-1-1-1z\"\n}), 'ColumnIcon');\nexport const GridSeparatorIcon = createSvgIcon(/*#__PURE__*/_jsx(\"rect\", {\n  width: \"1\",\n  height: \"24\",\n  x: \"11.5\",\n  rx: \"0.5\"\n}), 'Separator');\nexport const GridViewHeadlineIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 15h16v-2H4v2zm0 4h16v-2H4v2zm0-8h16V9H4v2zm0-6v2h16V5H4z\"\n}), 'ViewHeadline');\nexport const GridTableRowsIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21,8H3V4h18V8z M21,10H3v4h18V10z M21,16H3v4h18V16z\"\n}), 'TableRows');\nexport const GridViewStreamIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M4 18h17v-6H4v6zM4 5v6h17V5H4z\"\n}), 'ViewStream');\nexport const GridTripleDotsVerticalIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'TripleDotsVertical');\nexport const GridCloseIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexport const GridAddIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexport const GridRemoveIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 13H5v-2h14v2z\"\n}), 'Remove');\nexport const GridLoadIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4V1L8 5l4 4V6c3.31 0 6 2.69 6 6 0 1.01-.25 1.97-.7 2.8l1.46 1.46C19.54 15.03 20 13.57 20 12c0-4.42-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6 0-1.01.25-1.97.7-2.8L5.24 7.74C4.46 8.97 4 10.43 4 12c0 4.42 3.58 8 8 8v3l4-4-4-4v3z\"\n}), 'Load');\nexport const GridDragIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 18c0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2 2 .9 2 2zm-2-8c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0-6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm6 4c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'Drag');\nexport const GridSaveAltIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 12v7H5v-7H3v7c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-7h-2zm-6 .67l2.59-2.58L17 11.5l-5 5-5-5 1.41-1.41L11 12.67V3h2z\"\n}), 'SaveAlt');\nexport const GridCheckIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');\nexport const GridMoreVertIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreVert');\nexport const GridVisibilityOffIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\nexport const GridViewColumnIcon = createSvgIcon(/*#__PURE__*/_jsx(\"g\", {\n  children: /*#__PURE__*/_jsx(\"path\", {\n    d: \"M14.67,5v14H9.33V5H14.67z M15.67,19H21V5h-5.33V19z M8.33,19V5H3v14H8.33z\"\n  })\n}), 'ViewColumn');\nexport const GridClearIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Clear');\nexport const GridDeleteIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexport const GridDeleteForeverIcon = createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zm2.46-7.12l1.41-1.41L12 12.59l2.12-2.12 1.41 1.41L13.41 14l2.12 2.12-1.41 1.41L12 15.41l-2.12 2.12-1.41-1.41L10.59 14l-2.13-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"native\"];\nimport * as React from 'react';\nimport MUIMenuItem from '@mui/material/MenuItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MUISelectOption(_ref) {\n  let {\n      native\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  if (native) {\n    return /*#__PURE__*/_jsx(\"option\", _extends({}, props));\n  }\n  return /*#__PURE__*/_jsx(MUIMenuItem, _extends({}, props));\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport MUIBadge from '@mui/material/Badge';\nimport MUICheckbox from '@mui/material/Checkbox';\nimport MUIDivider from '@mui/material/Divider';\nimport MUITextField from '@mui/material/TextField';\nimport MUIFormControl from '@mui/material/FormControl';\nimport MUISelect from '@mui/material/Select';\nimport MUIButton from '@mui/material/Button';\nimport MUIIconButton from '@mui/material/IconButton';\nimport MUIInputAdornment from '@mui/material/InputAdornment';\nimport MUITooltip from '@mui/material/Tooltip';\nimport MUIPopper from '@mui/material/Popper';\nimport MUIInputLabel from '@mui/material/InputLabel';\nimport MUIChip from '@mui/material/Chip';\nimport { GridColumnUnsortedIcon } from \"./icons/GridColumnUnsortedIcon.js\";\nimport { GridAddIcon, GridArrowDownwardIcon, GridArrowUpwardIcon, GridCheckIcon, GridCloseIcon, GridColumnIcon, GridDragIcon, GridExpandMoreIcon, GridFilterAltIcon, GridFilterListIcon, GridKeyboardArrowRight, GridMoreVertIcon, GridRemoveIcon, GridSaveAltIcon, GridSearchIcon, GridSeparatorIcon, GridTableRowsIcon, GridTripleDotsVerticalIcon, GridViewHeadlineIcon, GridViewStreamIcon, GridVisibilityOffIcon, GridViewColumnIcon, GridClearIcon, GridLoadIcon, GridDeleteForeverIcon } from \"./icons/index.js\";\nimport MUISelectOption from \"./components/MUISelectOption.js\";\nconst iconSlots = {\n  booleanCellTrueIcon: GridCheckIcon,\n  booleanCellFalseIcon: GridCloseIcon,\n  columnMenuIcon: GridTripleDotsVerticalIcon,\n  openFilterButtonIcon: GridFilterListIcon,\n  filterPanelDeleteIcon: GridCloseIcon,\n  columnFilteredIcon: GridFilterAltIcon,\n  columnSelectorIcon: GridColumnIcon,\n  columnUnsortedIcon: GridColumnUnsortedIcon,\n  columnSortedAscendingIcon: GridArrowUpwardIcon,\n  columnSortedDescendingIcon: GridArrowDownwardIcon,\n  columnResizeIcon: GridSeparatorIcon,\n  densityCompactIcon: GridViewHeadlineIcon,\n  densityStandardIcon: GridTableRowsIcon,\n  densityComfortableIcon: GridViewStreamIcon,\n  exportIcon: GridSaveAltIcon,\n  moreActionsIcon: GridMoreVertIcon,\n  treeDataCollapseIcon: GridExpandMoreIcon,\n  treeDataExpandIcon: GridKeyboardArrowRight,\n  groupingCriteriaCollapseIcon: GridExpandMoreIcon,\n  groupingCriteriaExpandIcon: GridKeyboardArrowRight,\n  detailPanelExpandIcon: GridAddIcon,\n  detailPanelCollapseIcon: GridRemoveIcon,\n  rowReorderIcon: GridDragIcon,\n  quickFilterIcon: GridSearchIcon,\n  quickFilterClearIcon: GridCloseIcon,\n  columnMenuHideIcon: GridVisibilityOffIcon,\n  columnMenuSortAscendingIcon: GridArrowUpwardIcon,\n  columnMenuSortDescendingIcon: GridArrowDownwardIcon,\n  columnMenuFilterIcon: GridFilterAltIcon,\n  columnMenuManageColumnsIcon: GridViewColumnIcon,\n  columnMenuClearIcon: GridClearIcon,\n  loadIcon: GridLoadIcon,\n  filterPanelAddIcon: GridAddIcon,\n  filterPanelRemoveAllIcon: GridDeleteForeverIcon,\n  columnReorderIcon: GridDragIcon\n};\nconst materialSlots = _extends({}, iconSlots, {\n  baseBadge: MUIBadge,\n  baseCheckbox: MUICheckbox,\n  baseDivider: MUIDivider,\n  baseTextField: MUITextField,\n  baseFormControl: MUIFormControl,\n  baseSelect: MUISelect,\n  baseButton: MUIButton,\n  baseIconButton: MUIIconButton,\n  baseInputAdornment: MUIInputAdornment,\n  baseTooltip: MUITooltip,\n  basePopper: MUIPopper,\n  baseInputLabel: MUIInputLabel,\n  baseSelectOption: MUISelectOption,\n  baseChip: MUIChip\n});\nexport default materialSlots;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { GridSkeletonCell, GridColumnsPanel, GridFilterPanel, GridFooter, GridLoadingOverlay, GridNoRowsOverlay, GridPagination, GridPanel, GridRow, GridColumnHeaderFilterIconButton, GridRowCount, GridColumnsManagement, GridColumnHeaderSortIcon } from \"../components/index.js\";\nimport { GridCell } from \"../components/cell/GridCell.js\";\nimport { GridColumnHeaders } from \"../components/GridColumnHeaders.js\";\nimport { GridColumnMenu } from \"../components/menu/columnMenu/GridColumnMenu.js\";\nimport { GridDetailPanels } from \"../components/GridDetailPanels.js\";\nimport { GridPinnedRows } from \"../components/GridPinnedRows.js\";\nimport { GridNoResultsOverlay } from \"../components/GridNoResultsOverlay.js\";\nimport materialSlots from \"../material/index.js\";\n\n// TODO: camelCase these key. It's a private helper now.\n// Remove then need to call `uncapitalizeObjectKeys`.\nexport const DATA_GRID_DEFAULT_SLOTS_COMPONENTS = _extends({}, materialSlots, {\n  cell: GridCell,\n  skeletonCell: GridSkeletonCell,\n  columnHeaderFilterIconButton: GridColumnHeaderFilterIconButton,\n  columnHeaderSortIcon: GridColumnHeaderSortIcon,\n  columnMenu: GridColumnMenu,\n  columnHeaders: GridColumnHeaders,\n  detailPanels: GridDetailPanels,\n  footer: GridFooter,\n  footerRowCount: GridRowCount,\n  toolbar: null,\n  pinnedRows: GridPinnedRows,\n  loadingOverlay: GridLoadingOverlay,\n  noResultsOverlay: GridNoResultsOverlay,\n  noRowsOverlay: GridNoRowsOverlay,\n  pagination: GridPagination,\n  filterPanel: GridFilterPanel,\n  columnsPanel: GridColumnsPanel,\n  columnsManagement: GridColumnsManagement,\n  panel: GridPanel,\n  row: GridRow\n});","export function GridDetailPanels(_) {\n  return null;\n}","export function GridPinnedRows(_) {\n  return null;\n}","import * as React from 'react';\n\n/** Gathers props for the root element into a single `.forwardedProps` field */\nfunction groupForwardedProps(props) {\n  if (props.slotProps?.root) {\n    return props;\n  }\n  const keys = Object.keys(props);\n  if (!keys.some(key => key.startsWith('aria-') || key.startsWith('data-'))) {\n    return props;\n  }\n  const newProps = {};\n  const forwardedProps = props.forwardedProps ?? {};\n  for (let i = 0; i < keys.length; i += 1) {\n    const key = keys[i];\n    if (key.startsWith('aria-') || key.startsWith('data-')) {\n      forwardedProps[key] = props[key];\n    } else {\n      newProps[key] = props[key];\n    }\n  }\n  newProps.forwardedProps = forwardedProps;\n  return newProps;\n}\nexport function useProps(allProps) {\n  return React.useMemo(() => groupForwardedProps(allProps), [allProps]);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { useThemeProps } from '@mui/material/styles';\nimport { GRID_DEFAULT_LOCALE_TEXT } from \"../constants/index.js\";\nimport { DATA_GRID_DEFAULT_SLOTS_COMPONENTS } from \"../constants/defaultGridSlotsComponents.js\";\nimport { computeSlots, useProps } from \"../internals/utils/index.js\";\nimport { DATA_GRID_PROPS_DEFAULT_VALUES } from \"../constants/dataGridPropsDefaultValues.js\";\nconst DATA_GRID_FORCED_PROPS = {\n  disableMultipleColumnsFiltering: true,\n  disableMultipleColumnsSorting: true,\n  throttleRowsMs: undefined,\n  hideFooterRowCount: false,\n  pagination: true,\n  checkboxSelectionVisibleOnly: false,\n  disableColumnReorder: true,\n  keepColumnPositionIfDraggedOutside: false,\n  signature: 'DataGrid',\n  unstable_listView: false\n};\nconst defaultSlots = DATA_GRID_DEFAULT_SLOTS_COMPONENTS;\nexport const useDataGridProps = inProps => {\n  const themedProps = useProps(\n  // eslint-disable-next-line material-ui/mui-name-matches-component-name\n  useThemeProps({\n    props: inProps,\n    name: 'MuiDataGrid'\n  }));\n  const localeText = React.useMemo(() => _extends({}, GRID_DEFAULT_LOCALE_TEXT, themedProps.localeText), [themedProps.localeText]);\n  const slots = React.useMemo(() => computeSlots({\n    defaultSlots,\n    slots: themedProps.slots\n  }), [themedProps.slots]);\n  const injectDefaultProps = React.useMemo(() => {\n    return Object.keys(DATA_GRID_PROPS_DEFAULT_VALUES).reduce((acc, key) => {\n      // @ts-ignore\n      acc[key] = themedProps[key] ?? DATA_GRID_PROPS_DEFAULT_VALUES[key];\n      return acc;\n    }, {});\n  }, [themedProps]);\n  return React.useMemo(() => _extends({}, themedProps, injectDefaultProps, {\n    localeText,\n    slots\n  }, DATA_GRID_FORCED_PROPS), [themedProps, localeText, slots, injectDefaultProps]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function computeSlots({\n  defaultSlots,\n  slots\n}) {\n  const overrides = slots;\n  if (!overrides || Object.keys(overrides).length === 0) {\n    return defaultSlots;\n  }\n  const result = _extends({}, defaultSlots);\n  Object.keys(overrides).forEach(key => {\n    const k = key;\n    if (overrides[k] !== undefined) {\n      result[k] = overrides[k];\n    }\n  });\n  return result;\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { GridRoot } from \"../components/index.js\";\nimport { useGridAriaAttributes } from \"../hooks/utils/useGridAriaAttributes.js\";\nimport { useGridRowAriaAttributes } from \"../hooks/features/rows/useGridRowAriaAttributes.js\";\nimport { GridContextProvider } from \"../context/GridContextProvider.js\";\nimport { useDataGridComponent } from \"./useDataGridComponent.js\";\nimport { useDataGridProps } from \"./useDataGridProps.js\";\nimport { propValidatorsDataGrid, validateProps } from \"../internals/utils/propValidation.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst configuration = {\n  hooks: {\n    useGridAriaAttributes,\n    useGridRowAriaAttributes\n  }\n};\nconst DataGridRaw = forwardRef(function DataGrid(inProps, ref) {\n  const props = useDataGridProps(inProps);\n  const privateApiRef = useDataGridComponent(props.apiRef, props);\n  if (process.env.NODE_ENV !== 'production') {\n    validateProps(props, propValidatorsDataGrid);\n  }\n  return /*#__PURE__*/_jsx(GridContextProvider, {\n    privateApiRef: privateApiRef,\n    configuration: configuration,\n    props: props,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      className: props.className,\n      style: props.style,\n      sx: props.sx\n    }, props.forwardedProps, props.slotProps?.root, {\n      ref: ref\n    }))\n  });\n});\n/**\n * Demos:\n * - [DataGrid](https://mui.com/x/react-data-grid/demo/)\n *\n * API:\n * - [DataGrid API](https://mui.com/x/api/data-grid/data-grid/)\n */\nexport const DataGrid = /*#__PURE__*/React.memo(DataGridRaw);\nDataGridRaw.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The ref object that allows Data Grid manipulation. Can be instantiated with `useGridApiRef()`.\n   */\n  apiRef: PropTypes.shape({\n    current: PropTypes.object.isRequired\n  }),\n  /**\n   * The label of the Data Grid.\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * The id of the element containing a label for the Data Grid.\n   */\n  'aria-labelledby': PropTypes.string,\n  /**\n   * If `true`, the Data Grid height is dynamic and follows the number of rows in the Data Grid.\n   * @default false\n   * @deprecated Use flex parent container instead: https://mui.com/x/react-data-grid/layout/#flex-parent-container\n   * @example\n   * <div style={{ display: 'flex', flexDirection: 'column' }}>\n   *   <DataGrid />\n   * </div>\n   */\n  autoHeight: PropTypes.bool,\n  /**\n   * If `true`, the pageSize is calculated according to the container size and the max number of rows to avoid rendering a vertical scroll bar.\n   * @default false\n   */\n  autoPageSize: PropTypes.bool,\n  /**\n   * If `true`, columns are autosized after the datagrid is mounted.\n   * @default false\n   */\n  autosizeOnMount: PropTypes.bool,\n  /**\n   * The options for autosize when user-initiated.\n   */\n  autosizeOptions: PropTypes.shape({\n    columns: PropTypes.arrayOf(PropTypes.string),\n    disableColumnVirtualization: PropTypes.bool,\n    expand: PropTypes.bool,\n    includeHeaders: PropTypes.bool,\n    includeOutliers: PropTypes.bool,\n    outliersFactor: PropTypes.number\n  }),\n  /**\n   * Controls the modes of the cells.\n   */\n  cellModesModel: PropTypes.object,\n  /**\n   * If `true`, the Data Grid will display an extra column with checkboxes for selecting rows.\n   * @default false\n   */\n  checkboxSelection: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The character used to separate cell values when copying to the clipboard.\n   * @default '\\t'\n   */\n  clipboardCopyCellDelimiter: PropTypes.string,\n  /**\n   * Column region in pixels to render before/after the viewport\n   * @default 150\n   */\n  columnBufferPx: PropTypes.number,\n  /**\n   * Sets the height in pixels of the column group headers in the Data Grid.\n   * Inherits the `columnHeaderHeight` value if not set.\n   */\n  columnGroupHeaderHeight: PropTypes.number,\n  columnGroupingModel: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * Sets the height in pixel of the column headers in the Data Grid.\n   * @default 56\n   */\n  columnHeaderHeight: PropTypes.number,\n  /**\n   * Set of columns of type [[GridColDef]][].\n   */\n  columns: PropTypes.arrayOf(PropTypes.object).isRequired,\n  /**\n   * Set the column visibility model of the Data Grid.\n   * If defined, the Data Grid will ignore the `hide` property in [[GridColDef]].\n   */\n  columnVisibilityModel: PropTypes.object,\n  /**\n   * Set the density of the Data Grid.\n   * @default \"standard\"\n   */\n  density: PropTypes.oneOf(['comfortable', 'compact', 'standard']),\n  /**\n   * If `true`, column autosizing on header separator double-click is disabled.\n   * @default false\n   */\n  disableAutosize: PropTypes.bool,\n  /**\n   * If `true`, column filters are disabled.\n   * @default false\n   */\n  disableColumnFilter: PropTypes.bool,\n  /**\n   * If `true`, the column menu is disabled.\n   * @default false\n   */\n  disableColumnMenu: PropTypes.bool,\n  /**\n   * If `true`, resizing columns is disabled.\n   * @default false\n   */\n  disableColumnResize: PropTypes.bool,\n  /**\n   * If `true`, hiding/showing columns is disabled.\n   * @default false\n   */\n  disableColumnSelector: PropTypes.bool,\n  /**\n   * If `true`, the column sorting feature will be disabled.\n   * @default false\n   */\n  disableColumnSorting: PropTypes.bool,\n  /**\n   * If `true`, the density selector is disabled.\n   * @default false\n   */\n  disableDensitySelector: PropTypes.bool,\n  /**\n   * If `true`, `eval()` is not used for performance optimization.\n   * @default false\n   */\n  disableEval: PropTypes.bool,\n  /**\n   * If `true`, multiple selection using the Ctrl/CMD or Shift key is disabled.\n   * The MIT DataGrid will ignore this prop, unless `checkboxSelection` is enabled.\n   * @default false (`!props.checkboxSelection` for MIT Data Grid)\n   */\n  disableMultipleRowSelection: PropTypes.bool,\n  /**\n   * If `true`, the selection on click on a row or cell is disabled.\n   * @default false\n   */\n  disableRowSelectionOnClick: PropTypes.bool,\n  /**\n   * If `true`, the virtualization is disabled.\n   * @default false\n   */\n  disableVirtualization: PropTypes.bool,\n  /**\n   * Controls whether to use the cell or row editing.\n   * @default \"cell\"\n   */\n  editMode: PropTypes.oneOf(['cell', 'row']),\n  /**\n   * Use if the actual rowCount is not known upfront, but an estimation is available.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Applicable only with `paginationMode=\"server\"` and when `rowCount=\"-1\"`\n   */\n  estimatedRowCount: PropTypes.number,\n  /**\n   * Unstable features, breaking changes might be introduced.\n   * For each feature, if the flag is not explicitly set to `true`, the feature will be fully disabled and any property / method call will not have any effect.\n   */\n  experimentalFeatures: PropTypes.shape({\n    warnIfFocusStateIsNotSynced: PropTypes.bool\n  }),\n  /**\n   * The milliseconds delay to wait after a keystroke before triggering filtering.\n   * @default 150\n   */\n  filterDebounceMs: PropTypes.number,\n  /**\n   * Filtering can be processed on the server or client-side.\n   * Set it to 'server' if you would like to handle filtering on the server-side.\n   * @default \"client\"\n   */\n  filterMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * Set the filter model of the Data Grid.\n   */\n  filterModel: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      field: PropTypes.string.isRequired,\n      id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n      operator: PropTypes.string.isRequired,\n      value: PropTypes.any\n    })).isRequired,\n    logicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterExcludeHiddenColumns: PropTypes.bool,\n    quickFilterLogicOperator: PropTypes.oneOf(['and', 'or']),\n    quickFilterValues: PropTypes.array\n  }),\n  /**\n   * Forwarded props for the Data Grid root element.\n   * @ignore - do not document.\n   */\n  forwardedProps: PropTypes.object,\n  /**\n   * Function that applies CSS classes dynamically on cells.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {string} The CSS class to apply to the cell.\n   */\n  getCellClassName: PropTypes.func,\n  /**\n   * Function that returns the element to render in row detail.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {React.JSX.Element} The row detail element.\n   */\n  getDetailPanelContent: PropTypes.func,\n  /**\n   * Function that returns the estimated height for a row.\n   * Only works if dynamic row height is used.\n   * Once the row height is measured this value is discarded.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {number | null} The estimated row height value. If `null` or `undefined` then the default row height, based on the density, is applied.\n   */\n  getEstimatedRowHeight: PropTypes.func,\n  /**\n   * Function that applies CSS classes dynamically on rows.\n   * @param {GridRowClassNameParams} params With all properties from [[GridRowClassNameParams]].\n   * @returns {string} The CSS class to apply to the row.\n   */\n  getRowClassName: PropTypes.func,\n  /**\n   * Function that sets the row height per row.\n   * @param {GridRowHeightParams} params With all properties from [[GridRowHeightParams]].\n   * @returns {GridRowHeightReturnValue} The row height value. If `null` or `undefined` then the default row height is applied. If \"auto\" then the row height is calculated based on the content.\n   */\n  getRowHeight: PropTypes.func,\n  /**\n   * Return the id of a given [[GridRowModel]].\n   */\n  getRowId: PropTypes.func,\n  /**\n   * Function that allows to specify the spacing between rows.\n   * @param {GridRowSpacingParams} params With all properties from [[GridRowSpacingParams]].\n   * @returns {GridRowSpacing} The row spacing values.\n   */\n  getRowSpacing: PropTypes.func,\n  /**\n   * If `true`, the footer component is hidden.\n   * @default false\n   */\n  hideFooter: PropTypes.bool,\n  /**\n   * If `true`, the pagination component in the footer is hidden.\n   * @default false\n   */\n  hideFooterPagination: PropTypes.bool,\n  /**\n   * If `true`, the selected row count in the footer is hidden.\n   * @default false\n   */\n  hideFooterSelectedRowCount: PropTypes.bool,\n  /**\n   * If `true`, the diacritics (accents) are ignored when filtering or quick filtering.\n   * E.g. when filter value is `cafe`, the rows with `café` will be visible.\n   * @default false\n   */\n  ignoreDiacritics: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid will not use `valueFormatter` when exporting to CSV or copying to clipboard.\n   * If an object is provided, you can choose to ignore the `valueFormatter` for CSV export or clipboard export.\n   * @default false\n   */\n  ignoreValueFormatterDuringExport: PropTypes.oneOfType([PropTypes.shape({\n    clipboardExport: PropTypes.bool,\n    csvExport: PropTypes.bool\n  }), PropTypes.bool]),\n  /**\n   * If `select`, a group header checkbox in indeterminate state (like \"Select All\" checkbox)\n   * will select all the rows under it.\n   * If `deselect`, it will deselect all the rows under it.\n   * Works only if `checkboxSelection` is enabled.\n   * @default \"deselect\"\n   * @deprecated `select` will be the default behavior from v8 onwards\n   */\n  indeterminateCheckboxAction: PropTypes.oneOf(['deselect', 'select']),\n  /**\n   * The initial state of the DataGrid.\n   * The data in it will be set in the state on initialization but will not be controlled.\n   * If one of the data in `initialState` is also being controlled, then the control state wins.\n   */\n  initialState: PropTypes.object,\n  /**\n   * Callback fired when a cell is rendered, returns true if the cell is editable.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @returns {boolean} A boolean indicating if the cell is editable.\n   */\n  isCellEditable: PropTypes.func,\n  /**\n   * Determines if a row can be selected.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @returns {boolean} A boolean indicating if the row is selectable.\n   */\n  isRowSelectable: PropTypes.func,\n  /**\n   * If `true`, the selection model will retain selected rows that do not exist.\n   * Useful when using server side pagination and row selections need to be retained\n   * when changing pages.\n   * @default false\n   */\n  keepNonExistentRowsSelected: PropTypes.bool,\n  /**\n   * If `true`, a loading overlay is displayed.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Set the locale text of the Data Grid.\n   * You can find all the translation keys supported in [the source](https://github.com/mui/mui-x/blob/HEAD/packages/x-data-grid/src/constants/localeTextConstants.ts) in the GitHub repository.\n   */\n  localeText: PropTypes.object,\n  /**\n   * Pass a custom logger in the components that implements the [[Logger]] interface.\n   * @default console\n   */\n  logger: PropTypes.shape({\n    debug: PropTypes.func.isRequired,\n    error: PropTypes.func.isRequired,\n    info: PropTypes.func.isRequired,\n    warn: PropTypes.func.isRequired\n  }),\n  /**\n   * Allows to pass the logging level or false to turn off logging.\n   * @default \"error\" (\"warn\" in dev mode)\n   */\n  logLevel: PropTypes.oneOf(['debug', 'error', 'info', 'warn', false]),\n  /**\n   * Nonce of the inline styles for [Content Security Policy](https://www.w3.org/TR/2016/REC-CSP2-20161215/#script-src-the-nonce-attribute).\n   */\n  nonce: PropTypes.string,\n  /**\n   * Callback fired when any cell is clicked.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellClick: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to edit mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStart: PropTypes.func,\n  /**\n   * Callback fired when the cell turns to view mode.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onCellEditStop: PropTypes.func,\n  /**\n   * Callback fired when a keydown event comes from a cell element.\n   * @param {GridCellParams} params With all properties from [[GridCellParams]].\n   * @param {MuiEvent<React.KeyboardEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellKeyDown: PropTypes.func,\n  /**\n   * Callback fired when the `cellModesModel` prop changes.\n   * @param {GridCellModesModel} cellModesModel Object containing which cells are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onCellModesModelChange: PropTypes.func,\n  /**\n   * Callback called when the data is copied to the clipboard.\n   * @param {string} data The data copied to the clipboard.\n   */\n  onClipboardCopy: PropTypes.func,\n  /**\n   * Callback fired when a click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderClick: PropTypes.func,\n  /**\n   * Callback fired when a contextmenu event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   */\n  onColumnHeaderContextMenu: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when a mouse enter event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderEnter: PropTypes.func,\n  /**\n   * Callback fired when a mouse leave event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderLeave: PropTypes.func,\n  /**\n   * Callback fired when a mouseout event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOut: PropTypes.func,\n  /**\n   * Callback fired when a mouseover event comes from a column header element.\n   * @param {GridColumnHeaderParams} params With all properties from [[GridColumnHeaderParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnHeaderOver: PropTypes.func,\n  /**\n   * Callback fired when a column is reordered.\n   * @param {GridColumnOrderChangeParams} params With all properties from [[GridColumnOrderChangeParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnOrderChange: PropTypes.func,\n  /**\n   * Callback fired while a column is being resized.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnResize: PropTypes.func,\n  /**\n   * Callback fired when the column visibility model changes.\n   * @param {GridColumnVisibilityModel} model The new model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnVisibilityModelChange: PropTypes.func,\n  /**\n   * Callback fired when the width of a column is changed.\n   * @param {GridColumnResizeParams} params With all properties from [[GridColumnResizeParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onColumnWidthChange: PropTypes.func,\n  /**\n   * Callback fired when the density changes.\n   * @param {GridDensity} density New density value.\n   */\n  onDensityChange: PropTypes.func,\n  /**\n   * Callback fired when the Filter model changes before the filters are applied.\n   * @param {GridFilterModel} model With all properties from [[GridFilterModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onFilterModelChange: PropTypes.func,\n  /**\n   * Callback fired when the menu is closed.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuClose: PropTypes.func,\n  /**\n   * Callback fired when the menu is opened.\n   * @param {GridMenuParams} params With all properties from [[GridMenuParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onMenuOpen: PropTypes.func,\n  /**\n   * Callback fired when the pagination meta has changed.\n   * @param {GridPaginationMeta} paginationMeta Updated pagination meta.\n   */\n  onPaginationMetaChange: PropTypes.func,\n  /**\n   * Callback fired when the pagination model has changed.\n   * @param {GridPaginationModel} model Updated pagination model.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPaginationModelChange: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is closed.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelClose: PropTypes.func,\n  /**\n   * Callback fired when the preferences panel is opened.\n   * @param {GridPreferencePanelParams} params With all properties from [[GridPreferencePanelParams]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onPreferencePanelOpen: PropTypes.func,\n  /**\n   * Callback called when `processRowUpdate` throws an error or rejects.\n   * @param {any} error The error thrown.\n   */\n  onProcessRowUpdateError: PropTypes.func,\n  /**\n   * Callback fired when the Data Grid is resized.\n   * @param {ElementSize} containerSize With all properties from [[ElementSize]].\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onResize: PropTypes.func,\n  /**\n   * Callback fired when a row is clicked.\n   * Not called if the target clicked is an interactive element added by the built-in columns.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowClick: PropTypes.func,\n  /**\n   * Callback fired when the row count has changed.\n   * @param {number} count Updated row count.\n   */\n  onRowCountChange: PropTypes.func,\n  /**\n   * Callback fired when a double click event comes from a row container element.\n   * @param {GridRowParams} params With all properties from [[RowParams]].\n   * @param {MuiEvent<React.MouseEvent>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowDoubleClick: PropTypes.func,\n  /**\n   * Callback fired when the row turns to edit mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<React.KeyboardEvent | React.MouseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStart: PropTypes.func,\n  /**\n   * Callback fired when the row turns to view mode.\n   * @param {GridRowParams} params With all properties from [[GridRowParams]].\n   * @param {MuiEvent<MuiBaseEvent>} event The event that caused this prop to be called.\n   */\n  onRowEditStop: PropTypes.func,\n  /**\n   * Callback fired when the `rowModesModel` prop changes.\n   * @param {GridRowModesModel} rowModesModel Object containing which rows are in \"edit\" mode.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowModesModelChange: PropTypes.func,\n  /**\n   * Callback fired when the selection state of one or multiple rows changes.\n   * @param {GridRowSelectionModel} rowSelectionModel With all the row ids [[GridSelectionModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onRowSelectionModelChange: PropTypes.func,\n  /**\n   * Callback fired when the sort model changes before a column is sorted.\n   * @param {GridSortModel} model With all properties from [[GridSortModel]].\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   */\n  onSortModelChange: PropTypes.func,\n  /**\n   * Callback fired when the state of the Data Grid is updated.\n   * @param {GridState} state The new state.\n   * @param {MuiEvent<{}>} event The event object.\n   * @param {GridCallbackDetails} details Additional details for this callback.\n   * @ignore - do not document.\n   */\n  onStateChange: PropTypes.func,\n  /**\n   * Select the pageSize dynamically using the component UI.\n   * @default [25, 50, 100]\n   */\n  pageSizeOptions: PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.number.isRequired\n  })]).isRequired),\n  pagination: PropTypes.oneOf([true]),\n  /**\n   * The extra information about the pagination state of the Data Grid.\n   * Only applicable with `paginationMode=\"server\"`.\n   */\n  paginationMeta: PropTypes.shape({\n    hasNextPage: PropTypes.bool\n  }),\n  /**\n   * Pagination can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle the pagination on the client-side.\n   * Set it to 'server' if you would like to handle the pagination on the server-side.\n   * @default \"client\"\n   */\n  paginationMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The pagination model of type [[GridPaginationModel]] which refers to current `page` and `pageSize`.\n   */\n  paginationModel: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    pageSize: PropTypes.number.isRequired\n  }),\n  /**\n   * Callback called before updating a row with new values in the row and cell editing.\n   * @template R\n   * @param {R} newRow Row object with the new values.\n   * @param {R} oldRow Row object with the old values.\n   * @param {{ rowId: GridRowId }} params Additional parameters.\n   * @returns {Promise<R> | R} The final values to update the row.\n   */\n  processRowUpdate: PropTypes.func,\n  /**\n   * If `true`, the page is set to 0 after each sorting or filtering.\n   * This prop will be removed in the next major version and resetting the page will become the default behavior.\n   * @default false\n   */\n  resetPageOnSortFilter: PropTypes.bool,\n  /**\n   * The milliseconds throttle delay for resizing the grid.\n   * @default 60\n   */\n  resizeThrottleMs: PropTypes.number,\n  /**\n   * Row region in pixels to render before/after the viewport\n   * @default 150\n   */\n  rowBufferPx: PropTypes.number,\n  /**\n   * Set the total number of rows, if it is different from the length of the value `rows` prop.\n   * If some rows have children (for instance in the tree data), this number represents the amount of top level rows.\n   * Only works with `paginationMode=\"server\"`, ignored when `paginationMode=\"client\"`.\n   */\n  rowCount: PropTypes.number,\n  /**\n   * Sets the height in pixel of a row in the Data Grid.\n   * @default 52\n   */\n  rowHeight: PropTypes.number,\n  /**\n   * Controls the modes of the rows.\n   */\n  rowModesModel: PropTypes.object,\n  /**\n   * The milliseconds delay to wait after measuring the row height before recalculating row positions.\n   * Setting it to a lower value could be useful when using dynamic row height,\n   * but might reduce performance when displaying a large number of rows.\n   * @default 166\n   * @deprecated\n   */\n  rowPositionsDebounceMs: PropTypes.number,\n  /**\n   * Set of rows of type [[GridRowsProp]].\n   * @default []\n   */\n  rows: PropTypes.arrayOf(PropTypes.object),\n  /**\n   * If `false`, the row selection mode is disabled.\n   * @default true\n   */\n  rowSelection: PropTypes.bool,\n  /**\n   * Sets the row selection model of the Data Grid.\n   */\n  rowSelectionModel: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired), PropTypes.number, PropTypes.string]),\n  /**\n   * Sets the type of space between rows added by `getRowSpacing`.\n   * @default \"margin\"\n   */\n  rowSpacingType: PropTypes.oneOf(['border', 'margin']),\n  /**\n   * Override the height/width of the Data Grid inner scrollbar.\n   */\n  scrollbarSize: PropTypes.number,\n  /**\n   * If `true`, vertical borders will be displayed between cells.\n   * @default false\n   */\n  showCellVerticalBorder: PropTypes.bool,\n  /**\n   * If `true`, vertical borders will be displayed between column header items.\n   * @default false\n   */\n  showColumnVerticalBorder: PropTypes.bool,\n  /**\n   * Overridable components props dynamically passed to the component at rendering.\n   */\n  slotProps: PropTypes.object,\n  /**\n   * Overridable components.\n   */\n  slots: PropTypes.object,\n  /**\n   * Sorting can be processed on the server or client-side.\n   * Set it to 'client' if you would like to handle sorting on the client-side.\n   * Set it to 'server' if you would like to handle sorting on the server-side.\n   * @default \"client\"\n   */\n  sortingMode: PropTypes.oneOf(['client', 'server']),\n  /**\n   * The order of the sorting sequence.\n   * @default ['asc', 'desc', null]\n   */\n  sortingOrder: PropTypes.arrayOf(PropTypes.oneOf(['asc', 'desc'])),\n  /**\n   * Set the sort model of the Data Grid.\n   */\n  sortModel: PropTypes.arrayOf(PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    sort: PropTypes.oneOf(['asc', 'desc'])\n  })),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * If `true`, the Data Grid will auto span the cells over the rows having the same value.\n   * @default false\n   */\n  unstable_rowSpanning: PropTypes.bool,\n  /**\n   * If `true`, the Data Grid enables column virtualization when `getRowHeight` is set to `() => 'auto'`.\n   * By default, column virtualization is disabled when dynamic row height is enabled to measure the row height correctly.\n   * For datasets with a large number of columns, this can cause performance issues.\n   * The downside of enabling this prop is that the row height will be estimated based the cells that are currently rendered, which can cause row height change when scrolling horizontally.\n   * @default false\n   */\n  virtualizeColumnsWithAutoRowHeight: PropTypes.bool\n};","import { gridVisibleColumnDefinitionsSelector } from \"../features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"./useGridSelector.js\";\nimport { useGridRootProps } from \"./useGridRootProps.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../features/columnGrouping/gridColumnGroupsSelector.js\";\nimport { gridPinnedRowsCountSelector } from \"../features/rows/gridRowsSelector.js\";\nimport { useGridPrivateApiContext } from \"./useGridPrivateApiContext.js\";\nimport { isMultipleRowSelectionEnabled } from \"../features/rowSelection/utils.js\";\nimport { gridExpandedRowCountSelector } from \"../features/filter/gridFilterSelector.js\";\nexport const useGridAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const rootProps = useGridRootProps();\n  const visibleColumns = useGridSelector(apiRef, gridVisibleColumnDefinitionsSelector);\n  const accessibleRowCount = useGridSelector(apiRef, gridExpandedRowCountSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  const pinnedRowsCount = useGridSelector(apiRef, gridPinnedRowsCountSelector);\n  return {\n    role: 'grid',\n    'aria-colcount': visibleColumns.length,\n    'aria-rowcount': headerGroupingMaxDepth + 1 + pinnedRowsCount + accessibleRowCount,\n    'aria-multiselectable': isMultipleRowSelectionEnabled(rootProps)\n  };\n};","import * as React from 'react';\nimport { selectedIdsLookupSelector } from \"../rowSelection/index.js\";\nimport { useGridSelector } from \"../../utils/useGridSelector.js\";\nimport { gridColumnGroupsHeaderMaxDepthSelector } from \"../columnGrouping/gridColumnGroupsSelector.js\";\nimport { useGridPrivateApiContext } from \"../../utils/useGridPrivateApiContext.js\";\nexport const useGridRowAriaAttributes = () => {\n  const apiRef = useGridPrivateApiContext();\n  const selectedIdsLookup = useGridSelector(apiRef, selectedIdsLookupSelector);\n  const headerGroupingMaxDepth = useGridSelector(apiRef, gridColumnGroupsHeaderMaxDepthSelector);\n  return React.useCallback((rowNode, index) => {\n    const ariaAttributes = {};\n    const ariaRowIndex = index + headerGroupingMaxDepth + 2; // 1 for the header row and 1 as it's 1-based\n    ariaAttributes['aria-rowindex'] = ariaRowIndex;\n    if (apiRef.current.isRowSelectable(rowNode.id)) {\n      ariaAttributes['aria-selected'] = selectedIdsLookup[rowNode.id] !== undefined;\n    }\n    return ariaAttributes;\n  }, [apiRef, selectedIdsLookup, headerGroupingMaxDepth]);\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"label\", \"icon\", \"showInMenu\", \"onClick\"],\n  _excluded2 = [\"label\", \"icon\", \"showInMenu\", \"onClick\", \"closeMenuOnClick\", \"closeMenu\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridActionsCellItem = forwardRef((props, ref) => {\n  const rootProps = useGridRootProps();\n  if (!props.showInMenu) {\n    const {\n        label,\n        icon,\n        onClick\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const handleClick = event => {\n      onClick?.(event);\n    };\n    return /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n      size: \"small\",\n      role: \"menuitem\",\n      \"aria-label\": label\n    }, other, {\n      onClick: handleClick\n    }, rootProps.slotProps?.baseIconButton, {\n      ref: ref,\n      children: /*#__PURE__*/React.cloneElement(icon, {\n        fontSize: 'small'\n      })\n    }));\n  }\n  const {\n      label,\n      icon,\n      onClick,\n      closeMenuOnClick = true,\n      closeMenu\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const handleClick = event => {\n    onClick?.(event);\n    if (closeMenuOnClick) {\n      closeMenu?.();\n    }\n  };\n  return /*#__PURE__*/_jsxs(MenuItem, _extends({\n    ref: ref\n  }, other, {\n    onClick: handleClick,\n    children: [icon && /*#__PURE__*/_jsx(ListItemIcon, {\n      children: icon\n    }), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridActionsCellItem.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * from https://mui.com/material-ui/api/button-base/#ButtonBase-prop-component\n   */\n  component: PropTypes.elementType,\n  icon: PropTypes.element,\n  label: PropTypes.string.isRequired,\n  showInMenu: PropTypes.bool\n} : void 0;\nexport { GridActionsCellItem };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarContainer']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarContainerRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarContainer',\n  overridesResolver: (_, styles) => styles.toolbarContainer\n})(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  flexWrap: 'wrap',\n  gap: theme.spacing(1),\n  padding: theme.spacing(0.5, 0.5, 0)\n}));\nconst GridToolbarContainer = forwardRef(function GridToolbarContainer(props, ref) {\n  const {\n      className,\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  if (!children) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GridToolbarContainerRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other, {\n    ref: ref,\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarContainer.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridToolbarContainer };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { styled } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['panelHeader']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridPanelHeaderRoot = styled('div', {\n  name: 'MuiDataGrid',\n  slot: 'PanelHeader',\n  overridesResolver: (props, styles) => styles.panelHeader\n})(({\n  theme\n}) => ({\n  padding: theme.spacing(1)\n}));\nfunction GridPanelHeader(props) {\n  const {\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  return /*#__PURE__*/_jsx(GridPanelHeaderRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: rootProps\n  }, other));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridPanelHeader.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridPanelHeader };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId } from '@mui/material/utils';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst GridToolbarColumnsButton = forwardRef(function GridToolbarColumnsButton(props, ref) {\n  const {\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const columnButtonId = useId();\n  const columnPanelId = useId();\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const showColumns = event => {\n    if (preferencePanel.open && preferencePanel.openedPanelValue === GridPreferencePanelsValue.columns) {\n      apiRef.current.hidePreferences();\n    } else {\n      apiRef.current.showPreferences(GridPreferencePanelsValue.columns, columnPanelId, columnButtonId);\n    }\n    buttonProps.onClick?.(event);\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableColumnSelector) {\n    return null;\n  }\n  const isOpen = preferencePanel.open && preferencePanel.panelId === columnPanelId;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: apiRef.current.getLocaleText('toolbarColumnsLabel'),\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, tooltipProps, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      id: columnButtonId,\n      size: \"small\",\n      \"aria-label\": apiRef.current.getLocaleText('toolbarColumnsLabel'),\n      \"aria-haspopup\": \"menu\",\n      \"aria-expanded\": isOpen,\n      \"aria-controls\": isOpen ? columnPanelId : undefined,\n      startIcon: /*#__PURE__*/_jsx(rootProps.slots.columnSelectorIcon, {})\n    }, rootProps.slotProps?.baseButton, buttonProps, {\n      onPointerUp: event => {\n        if (preferencePanel.open) {\n          event.stopPropagation();\n        }\n        buttonProps.onPointerUp?.(event);\n      },\n      onClick: showColumns,\n      ref: ref,\n      children: apiRef.current.getLocaleText('toolbarColumns')\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarColumnsButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarColumnsButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { unstable_useId as useId, unstable_useForkRef as useForkRef } from '@mui/utils';\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { gridDensitySelector } from \"../../hooks/features/density/densitySelector.js\";\nimport { isHideMenuKey } from \"../../utils/keyboardUtils.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { GridMenu } from \"../menu/GridMenu.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { gridClasses } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbarDensitySelector = forwardRef(function GridToolbarDensitySelector(props, ref) {\n  const {\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const density = useGridSelector(apiRef, gridDensitySelector);\n  const densityButtonId = useId();\n  const densityMenuId = useId();\n  const [open, setOpen] = React.useState(false);\n  const buttonRef = React.useRef(null);\n  const handleRef = useForkRef(ref, buttonRef);\n  const densityOptions = [{\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityCompactIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityCompact'),\n    value: 'compact'\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityStandardIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityStandard'),\n    value: 'standard'\n  }, {\n    icon: /*#__PURE__*/_jsx(rootProps.slots.densityComfortableIcon, {}),\n    label: apiRef.current.getLocaleText('toolbarDensityComfortable'),\n    value: 'comfortable'\n  }];\n  const startIcon = React.useMemo(() => {\n    switch (density) {\n      case 'compact':\n        return /*#__PURE__*/_jsx(rootProps.slots.densityCompactIcon, {});\n      case 'comfortable':\n        return /*#__PURE__*/_jsx(rootProps.slots.densityComfortableIcon, {});\n      default:\n        return /*#__PURE__*/_jsx(rootProps.slots.densityStandardIcon, {});\n    }\n  }, [density, rootProps]);\n  const handleDensitySelectorOpen = event => {\n    setOpen(prevOpen => !prevOpen);\n    buttonProps.onClick?.(event);\n  };\n  const handleDensitySelectorClose = () => {\n    setOpen(false);\n  };\n  const handleDensityUpdate = newDensity => {\n    apiRef.current.setDensity(newDensity);\n    setOpen(false);\n  };\n  const handleListKeyDown = event => {\n    if (event.key === 'Tab') {\n      event.preventDefault();\n    }\n    if (isHideMenuKey(event.key)) {\n      setOpen(false);\n    }\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableDensitySelector) {\n    return null;\n  }\n  const densityElements = densityOptions.map((option, index) => /*#__PURE__*/_jsxs(MenuItem, {\n    onClick: () => handleDensityUpdate(option.value),\n    selected: option.value === density,\n    children: [/*#__PURE__*/_jsx(ListItemIcon, {\n      children: option.icon\n    }), option.label]\n  }, index));\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n      title: apiRef.current.getLocaleText('toolbarDensityLabel'),\n      enterDelay: 1000\n    }, rootProps.slotProps?.baseTooltip, tooltipProps, {\n      children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n        size: \"small\",\n        startIcon: startIcon,\n        \"aria-label\": apiRef.current.getLocaleText('toolbarDensityLabel'),\n        \"aria-haspopup\": \"menu\",\n        \"aria-expanded\": open,\n        \"aria-controls\": open ? densityMenuId : undefined,\n        id: densityButtonId\n      }, rootProps.slotProps?.baseButton, buttonProps, {\n        onClick: handleDensitySelectorOpen,\n        ref: handleRef,\n        children: apiRef.current.getLocaleText('toolbarDensity')\n      }))\n    })), /*#__PURE__*/_jsx(GridMenu, {\n      open: open,\n      target: buttonRef.current,\n      onClose: handleDensitySelectorClose,\n      position: \"bottom-start\",\n      children: /*#__PURE__*/_jsx(MenuList, {\n        id: densityMenuId,\n        className: gridClasses.menuList,\n        \"aria-labelledby\": densityButtonId,\n        onKeyDown: handleListKeyDown,\n        autoFocusItem: open,\n        children: densityElements\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarDensitySelector.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarDensitySelector };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { styled } from '@mui/material/styles';\nimport { unstable_composeClasses as composeClasses, unstable_capitalize as capitalize, unstable_useId as useId } from '@mui/utils';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { gridColumnLookupSelector } from \"../../hooks/features/columns/gridColumnsSelector.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridFilterActiveItemsSelector } from \"../../hooks/features/filter/gridFilterSelector.js\";\nimport { gridPreferencePanelStateSelector } from \"../../hooks/features/preferencesPanel/gridPreferencePanelSelector.js\";\nimport { GridPreferencePanelsValue } from \"../../hooks/features/preferencesPanel/gridPreferencePanelsValue.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { getDataGridUtilityClass } from \"../../constants/gridClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarFilterList']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarFilterListRoot = styled('ul', {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarFilterList',\n  overridesResolver: (_props, styles) => styles.toolbarFilterList\n})(({\n  theme\n}) => ({\n  margin: theme.spacing(1, 1, 0.5),\n  padding: theme.spacing(0, 1)\n}));\nconst GridToolbarFilterButton = forwardRef(function GridToolbarFilterButton(props, ref) {\n  const {\n    slotProps = {}\n  } = props;\n  const buttonProps = slotProps.button || {};\n  const tooltipProps = slotProps.tooltip || {};\n  const badgeProps = slotProps.badge || {};\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const activeFilters = useGridSelector(apiRef, gridFilterActiveItemsSelector);\n  const lookup = useGridSelector(apiRef, gridColumnLookupSelector);\n  const preferencePanel = useGridSelector(apiRef, gridPreferencePanelStateSelector);\n  const classes = useUtilityClasses(rootProps);\n  const filterButtonId = useId();\n  const filterPanelId = useId();\n  const tooltipContentNode = React.useMemo(() => {\n    if (preferencePanel.open) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipHide');\n    }\n    if (activeFilters.length === 0) {\n      return apiRef.current.getLocaleText('toolbarFiltersTooltipShow');\n    }\n    const getOperatorLabel = item => lookup[item.field].filterOperators.find(operator => operator.value === item.operator).label || apiRef.current.getLocaleText(`filterOperator${capitalize(item.operator)}`).toString();\n    const getFilterItemValue = item => {\n      const {\n        getValueAsString\n      } = lookup[item.field].filterOperators.find(operator => operator.value === item.operator);\n      return getValueAsString ? getValueAsString(item.value) : item.value;\n    };\n    return /*#__PURE__*/_jsxs(\"div\", {\n      children: [apiRef.current.getLocaleText('toolbarFiltersTooltipActive')(activeFilters.length), /*#__PURE__*/_jsx(GridToolbarFilterListRoot, {\n        className: classes.root,\n        ownerState: rootProps,\n        children: activeFilters.map((item, index) => _extends({}, lookup[item.field] && /*#__PURE__*/_jsx(\"li\", {\n          children: `${lookup[item.field].headerName || item.field}\n                  ${getOperatorLabel(item)}\n                  ${\n          // implicit check for null and undefined\n          item.value != null ? getFilterItemValue(item) : ''}`\n        }, index)))\n      })]\n    });\n  }, [apiRef, rootProps, preferencePanel.open, activeFilters, lookup, classes]);\n  const toggleFilter = event => {\n    const {\n      open,\n      openedPanelValue\n    } = preferencePanel;\n    if (open && openedPanelValue === GridPreferencePanelsValue.filters) {\n      apiRef.current.hidePreferences();\n    } else {\n      apiRef.current.showPreferences(GridPreferencePanelsValue.filters, filterPanelId, filterButtonId);\n    }\n    buttonProps.onClick?.(event);\n  };\n\n  // Disable the button if the corresponding is disabled\n  if (rootProps.disableColumnFilter) {\n    return null;\n  }\n  const isOpen = preferencePanel.open && preferencePanel.panelId === filterPanelId;\n  return /*#__PURE__*/_jsx(rootProps.slots.baseTooltip, _extends({\n    title: tooltipContentNode,\n    enterDelay: 1000\n  }, rootProps.slotProps?.baseTooltip, tooltipProps, {\n    children: /*#__PURE__*/_jsx(rootProps.slots.baseButton, _extends({\n      id: filterButtonId,\n      size: \"small\",\n      \"aria-label\": apiRef.current.getLocaleText('toolbarFiltersLabel'),\n      \"aria-controls\": isOpen ? filterPanelId : undefined,\n      \"aria-expanded\": isOpen,\n      \"aria-haspopup\": true,\n      startIcon: /*#__PURE__*/_jsx(rootProps.slots.baseBadge, _extends({\n        badgeContent: activeFilters.length,\n        color: \"primary\"\n      }, rootProps.slotProps?.baseBadge, badgeProps, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.openFilterButtonIcon, {})\n      }))\n    }, rootProps.slotProps?.baseButton, buttonProps, {\n      onClick: toggleFilter,\n      onPointerUp: event => {\n        if (preferencePanel.open) {\n          event.stopPropagation();\n        }\n        buttonProps.onPointerUp?.(event);\n      },\n      ref: ref,\n      children: apiRef.current.getLocaleText('toolbarFilters')\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarFilterButton.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object\n} : void 0;\nexport { GridToolbarFilterButton };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"quickFilterParser\", \"quickFilterFormatter\", \"debounceMs\", \"className\"];\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\nimport { unstable_debounce as debounce } from '@mui/utils';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { getDataGridUtilityClass } from \"../../constants/index.js\";\nimport { useGridApiContext } from \"../../hooks/utils/useGridApiContext.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { useGridSelector } from \"../../hooks/utils/useGridSelector.js\";\nimport { gridQuickFilterValuesSelector } from \"../../hooks/features/filter/index.js\";\nimport { isDeepEqual } from \"../../utils/utils.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['toolbarQuickFilter']\n  };\n  return composeClasses(slots, getDataGridUtilityClass, classes);\n};\nconst GridToolbarQuickFilterRoot = styled(TextField, {\n  name: 'MuiDataGrid',\n  slot: 'ToolbarQuickFilter',\n  overridesResolver: (props, styles) => styles.toolbarQuickFilter\n})(({\n  theme\n}) => ({\n  width: 'auto',\n  paddingBottom: theme.spacing(0.5),\n  '& input': {\n    marginLeft: theme.spacing(0.5)\n  },\n  '& .MuiInput-underline:before': {\n    borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`\n  },\n  [`& input[type=\"search\"]::-webkit-search-decoration,\n  & input[type=\"search\"]::-webkit-search-cancel-button,\n  & input[type=\"search\"]::-webkit-search-results-button,\n  & input[type=\"search\"]::-webkit-search-results-decoration`]: {\n    /* clears the 'X' icon from Chrome */\n    display: 'none'\n  }\n}));\nconst defaultSearchValueParser = searchText => searchText.split(' ').filter(word => word !== '');\nconst defaultSearchValueFormatter = values => values.join(' ');\nfunction GridToolbarQuickFilter(props) {\n  const apiRef = useGridApiContext();\n  const rootProps = useGridRootProps();\n  const classes = useUtilityClasses(rootProps);\n  const quickFilterValues = useGridSelector(apiRef, gridQuickFilterValuesSelector);\n  const {\n      quickFilterParser = defaultSearchValueParser,\n      quickFilterFormatter = defaultSearchValueFormatter,\n      debounceMs = rootProps.filterDebounceMs,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const [searchValue, setSearchValue] = React.useState(() => quickFilterFormatter(quickFilterValues ?? []));\n  const prevQuickFilterValuesRef = React.useRef(quickFilterValues);\n  React.useEffect(() => {\n    if (!isDeepEqual(prevQuickFilterValuesRef.current, quickFilterValues)) {\n      // The model of quick filter value has been updated\n      prevQuickFilterValuesRef.current = quickFilterValues;\n\n      // Update the input value if needed to match the new model\n      setSearchValue(prevSearchValue => isDeepEqual(quickFilterParser(prevSearchValue), quickFilterValues) ? prevSearchValue : quickFilterFormatter(quickFilterValues ?? []));\n    }\n  }, [quickFilterValues, quickFilterFormatter, quickFilterParser]);\n  const updateSearchValue = React.useCallback(newSearchValue => {\n    const newQuickFilterValues = quickFilterParser(newSearchValue);\n    prevQuickFilterValuesRef.current = newQuickFilterValues;\n    apiRef.current.setQuickFilterValues(newQuickFilterValues);\n  }, [apiRef, quickFilterParser]);\n  const debouncedUpdateSearchValue = React.useMemo(() => debounce(updateSearchValue, debounceMs), [updateSearchValue, debounceMs]);\n  React.useEffect(() => debouncedUpdateSearchValue.clear, [debouncedUpdateSearchValue]);\n  const handleSearchValueChange = React.useCallback(event => {\n    const newSearchValue = event.target.value;\n    setSearchValue(newSearchValue);\n    debouncedUpdateSearchValue(newSearchValue);\n  }, [debouncedUpdateSearchValue]);\n  const handleSearchReset = React.useCallback(() => {\n    setSearchValue('');\n    updateSearchValue('');\n  }, [updateSearchValue]);\n  return /*#__PURE__*/_jsx(GridToolbarQuickFilterRoot, _extends({\n    as: rootProps.slots.baseTextField,\n    ownerState: rootProps,\n    variant: \"standard\",\n    value: searchValue,\n    onChange: handleSearchValueChange,\n    className: clsx(classes.root, className),\n    placeholder: apiRef.current.getLocaleText('toolbarQuickFilterPlaceholder'),\n    \"aria-label\": apiRef.current.getLocaleText('toolbarQuickFilterLabel'),\n    type: \"search\"\n  }, other, {\n    InputProps: _extends({\n      startAdornment: /*#__PURE__*/_jsx(rootProps.slots.quickFilterIcon, {\n        fontSize: \"small\"\n      }),\n      endAdornment: /*#__PURE__*/_jsx(rootProps.slots.baseIconButton, _extends({\n        \"aria-label\": apiRef.current.getLocaleText('toolbarQuickFilterDeleteIconLabel'),\n        size: \"small\",\n        sx: [searchValue ? {\n          visibility: 'visible'\n        } : {\n          visibility: 'hidden'\n        }],\n        onClick: handleSearchReset\n      }, rootProps.slotProps?.baseIconButton, {\n        children: /*#__PURE__*/_jsx(rootProps.slots.quickFilterClearIcon, {\n          fontSize: \"small\"\n        })\n      }))\n    }, other.InputProps)\n  }, rootProps.slotProps?.baseTextField));\n}\nprocess.env.NODE_ENV !== \"production\" ? GridToolbarQuickFilter.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * The debounce time in milliseconds.\n   * @default 150\n   */\n  debounceMs: PropTypes.number,\n  /**\n   * Function responsible for formatting values of quick filter in a string when the model is modified\n   * @param {any[]} values The new values passed to the quick filter model\n   * @returns {string} The string to display in the text field\n   * @default (values: string[]) => values.join(' ')\n   */\n  quickFilterFormatter: PropTypes.func,\n  /**\n   * Function responsible for parsing text input in an array of independent values for quick filtering.\n   * @param {string} input The value entered by the user\n   * @returns {any[]} The array of value on which quick filter is applied\n   * @default (searchText: string) => searchText\n   *   .split(' ')\n   *   .filter((word) => word !== '')\n   */\n  quickFilterParser: PropTypes.func\n} : void 0;\n\n/**\n * Demos:\n * - [Filtering - overview](https://mui.com/x/react-data-grid/filtering/)\n * - [Filtering - quick filter](https://mui.com/x/react-data-grid/filtering/quick-filter/)\n *\n * API:\n * - [GridToolbarQuickFilter API](https://mui.com/x/api/data-grid/grid-toolbar-quick-filter/)\n */\nexport { GridToolbarQuickFilter };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"csvOptions\", \"printOptions\", \"excelOptions\", \"showQuickFilter\", \"quickFilterProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { forwardRef } from '@mui/x-internals/forwardRef';\nimport { GridToolbarContainer } from \"../containers/GridToolbarContainer.js\";\nimport { GridToolbarColumnsButton } from \"./GridToolbarColumnsButton.js\";\nimport { GridToolbarDensitySelector } from \"./GridToolbarDensitySelector.js\";\nimport { GridToolbarFilterButton } from \"./GridToolbarFilterButton.js\";\nimport { GridToolbarExport } from \"./GridToolbarExport.js\";\nimport { useGridRootProps } from \"../../hooks/utils/useGridRootProps.js\";\nimport { GridToolbarQuickFilter } from \"./GridToolbarQuickFilter.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst GridToolbar = forwardRef(function GridToolbar(props, ref) {\n  // TODO v7: think about where export option should be passed.\n  // from slotProps={{ toolbarExport: { ...exportOption } }} seems to be more appropriate\n  const _ref = props,\n    {\n      csvOptions,\n      printOptions,\n      excelOptions,\n      showQuickFilter = false,\n      quickFilterProps = {}\n    } = _ref,\n    other = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const rootProps = useGridRootProps();\n  if (rootProps.disableColumnFilter && rootProps.disableColumnSelector && rootProps.disableDensitySelector && !showQuickFilter) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxs(GridToolbarContainer, _extends({}, other, {\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(GridToolbarColumnsButton, {}), /*#__PURE__*/_jsx(GridToolbarFilterButton, {}), /*#__PURE__*/_jsx(GridToolbarDensitySelector, {}), /*#__PURE__*/_jsx(GridToolbarExport, {\n      csvOptions: csvOptions,\n      printOptions: printOptions\n      // @ts-ignore\n      ,\n      excelOptions: excelOptions\n    }), /*#__PURE__*/_jsx(\"div\", {\n      style: {\n        flex: 1\n      }\n    }), showQuickFilter && /*#__PURE__*/_jsx(GridToolbarQuickFilter, _extends({}, quickFilterProps))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? GridToolbar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // | To update them edit the TypeScript types and run \"pnpm proptypes\"  |\n  // ----------------------------------------------------------------------\n  csvOptions: PropTypes.object,\n  printOptions: PropTypes.object,\n  /**\n   * Props passed to the quick filter component.\n   */\n  quickFilterProps: PropTypes.object,\n  /**\n   * Show the quick filter component.\n   * @default false\n   */\n  showQuickFilter: PropTypes.bool,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.object,\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport { GridToolbar };","// A guide to feature toggling (deprecated)\n//\n// The feature toggle is:\n// - independent from the NODE_ENV\n// - isn't pruning code in production, as the objective is to eventually ship the code.\n// - doesn't allow to cherry-pick which feature to enable\n//\n// By default, the experimental features are only enabled in:\n// - the local environment\n// - the pull request previews\n//\n// Reviewers can force the value with the local storage and the GRID_EXPERIMENTAL_ENABLED key:\n// - 'true' => force it to be enabled\n// - 'false' => force it to be disabled\n//\n// Developers (users) are discouraged to enable the experimental feature by setting the GRID_EXPERIMENTAL_ENABLED env.\n// Instead, prefer exposing experimental APIs, for instance, a prop or a new `unstable_` module.\n\nexport const GRID_EXPERIMENTAL_ENABLED = false;","import { createSelector } from \"../../../utils/createSelector.js\";\nexport const gridColumnResizeSelector = state => state.columnResize;\nexport const gridResizingColumnFieldSelector = createSelector(gridColumnResizeSelector, columnResize => columnResize.resizingColumnField);","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _default = exports.default = parseInt(React.version, 10);","/**\n * @license React\n * use-sync-external-store-shim.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar React = require(\"react\");\nfunction is(x, y) {\n  return (x === y && (0 !== x || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\nvar objectIs = \"function\" === typeof Object.is ? Object.is : is,\n  useState = React.useState,\n  useEffect = React.useEffect,\n  useLayoutEffect = React.useLayoutEffect,\n  useDebugValue = React.useDebugValue;\nfunction useSyncExternalStore$2(subscribe, getSnapshot) {\n  var value = getSnapshot(),\n    _useState = useState({ inst: { value: value, getSnapshot: getSnapshot } }),\n    inst = _useState[0].inst,\n    forceUpdate = _useState[1];\n  useLayoutEffect(\n    function () {\n      inst.value = value;\n      inst.getSnapshot = getSnapshot;\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n    },\n    [subscribe, value, getSnapshot]\n  );\n  useEffect(\n    function () {\n      checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      return subscribe(function () {\n        checkIfSnapshotChanged(inst) && forceUpdate({ inst: inst });\n      });\n    },\n    [subscribe]\n  );\n  useDebugValue(value);\n  return value;\n}\nfunction checkIfSnapshotChanged(inst) {\n  var latestGetSnapshot = inst.getSnapshot;\n  inst = inst.value;\n  try {\n    var nextValue = latestGetSnapshot();\n    return !objectIs(inst, nextValue);\n  } catch (error) {\n    return !0;\n  }\n}\nfunction useSyncExternalStore$1(subscribe, getSnapshot) {\n  return getSnapshot();\n}\nvar shim =\n  \"undefined\" === typeof window ||\n  \"undefined\" === typeof window.document ||\n  \"undefined\" === typeof window.document.createElement\n    ? useSyncExternalStore$1\n    : useSyncExternalStore$2;\nexports.useSyncExternalStore =\n  void 0 !== React.useSyncExternalStore ? React.useSyncExternalStore : shim;\n"],"names":["module","exports","toPropertyKey","t","i","r","e","Symbol","toPrimitive","call","TypeError","String","Number","GridApiContext","React","undefined","useGridApiContext","apiRef","Error","join","useGridApiRef","GridRootPropsContext","useGridRootProps","contextValue","parseInt","forwardRef","render","reactMajor","Component","props","ref","displayName","name","is","Object","fastObjectShallowCompare","a","b","aLength","bLength","key","_","fastMemo","component","getDataGridUtilityClass","slot","generateUtilityClass","gridClasses","generateUtilityClasses","isOutputSelector","selector","acceptsApiRef","applySelector","current","state","applySelectorV8","args","instanceId","defaultCompare","objectShallowCompare","arrayShallowCompare","length","every","v","createRefs","equals","EMPTY","emptyGetSnapshot","useGridSelector","arguments","refs","useLazyRef","didInit","setState","subscribe","subscription","store","newState","unsubscribe","useSyncExternalStore","useGridSelectorV8","prevArgs","argsEqual","prev","curr","fn","Array","GridPrivateApiContext","useGridPrivateApiContext","privateApiRef","columnHeaderStyles","c","iconButtonContainer","visibility","width","menuIcon","separatorIconDragStyles","rx","x","shouldShowBorderTopRightRadiusSelector","dimensions","hasScrollX","hasScrollY","scrollbarSize","GridRootStyles","styled","overridesResolver","styles","root","autoHeight","autosizing","withVerticalBorder","actionsCell","booleanCell","cell","cellCheckbox","cellEmpty","cellOffsetLeft","cellSkeleton","checkboxInput","columnHeader","columnHeaderCheckbox","columnHeaderDraggableContainer","columnHeaderTitleContainer","columnHeaderTitleContainerContent","columnSeparator","detailPanelToggleCell","editBooleanCell","filterIcon","groupingCriteriaCell","groupingCriteriaCellLoadingContainer","groupingCriteriaCellToggle","headerFilterRow","iconSeparator","menuIconButton","menuList","menuOpen","overlayWrapperInner","pinnedRows","row","rowReorderCell","rowReorderCellContainer","rowReorderCellPlaceholder","rowSkeleton","scrollbar","scrollbarFiller","sortIcon","treeDataGroupingCell","treeDataGroupingCellLoadingContainer","treeDataGroupingCellToggle","withBorderColor","_ref","theme","shouldShowBorderTopRightRadius","borderColor","vars","palette","TableCell","border","mode","lighten","alpha","divider","darken","radius","shape","borderRadius","containerBackground","background","default","mixins","MuiDataGrid","pinnedBackground","overlayBackground","defaultChannel","action","disabledOpacity","hoverOpacity","hoverColor","hover","selectedOpacity","selectedHoverOpacity","selectedBackground","primary","mainChannel","main","selectedHoverBackground","blendFn","blendCssVars","blend","getPinnedBackgroundStyles","backgroundColor","pinnedHoverStyles","pinnedSelectedBackgroundColor","pinnedSelectedStyles","pinnedSelectedHoverStyles","selectedStyles","_extends","typography","fontWeightMedium","flex","boxSizing","position","borderWidth","borderStyle","color","text","body2","outline","height","display","minWidth","minHeight","flexDirection","overflow","overflowAnchor","borderTopLeftRadius","borderTopRightRadius","whiteSpace","maxWidth","WebkitTapHighlightColor","padding","outlineOffset","focusOutlineWidth","opacity","justifyContent","alignItems","transition","transitions","create","duration","shorter","gap","spacing","borderBottomWidth","borderBottomStyle","fontSize","cursor","marginLeft","marginRight","zIndex","columnHeaders","left","right","columnSeparatorOffset","touchAction","pointerEvents","shortest","borderBottom","filler","breakInside","lineHeight","borderTop","textOverflow","borderTopColor","userSelect","boxShadow","shadows","paper","secondary","disabled","gridGap","borderLeftColor","borderLeftWidth","borderLeftStyle","borderRightColor","borderRightWidth","borderRightStyle","textAlign","virtualScrollerContent","alignSelf","virtualScroller","overlay","gamma","f","o","Math","round","decomposeColor","overlayColor","rgb","values","recomposeColor","type","removeOpacity","reselectCreateSelector","createSelectorCreator","memoize","lruMemoize","memoizeOptions","maxSize","equalityCheck","cache","WeakMap","checkIsAPIRef","value","DEFAULT_INSTANCE_ID","id","createSelector","d","stateOrApiRef","instanceIdParam","isAPIRef","va","vb","vc","vd","ve","createSelectorV8","createSelectorMemoized","_len","_key","cacheKey","cacheArgsInit","get","cacheArgs","Map","cacheFn","set","COMPACT_DENSITY_FACTOR","COMFORTABLE_DENSITY_FACTOR","DENSITY_FACTORS","compact","comfortable","standard","gridDensitySelector","density","gridDensityFactorSelector","emptySubscribe","clientSnapshot","serverSnapshot","GridPinnedColumnPosition","EMPTY_PINNED_COLUMN_FIELDS","gridColumnsStateSelector","columns","gridColumnFieldsSelector","columnsState","orderedFields","gridColumnLookupSelector","lookup","gridColumnDefinitionsSelector","allFields","map","field","gridColumnVisibilityModelSelector","columnVisibilityModel","gridVisibleColumnDefinitionsSelector","filter","column","gridVisibleColumnFieldsSelector","visibleColumns","gridPinnedColumnsSelector","pinnedColumns","gridVisiblePinnedColumnDefinitionsSelector","isRtl","model","visibleColumnFields","visiblePinnedFields","invert","isArray","newPinnedColumns","remainingColumns","includes","leftPinnedColumns","columnsWithoutLeftPinnedColumns","rightPinnedColumns","filterVisibleColumns","gridColumnPositionsSelector","positions","currentPosition","push","computedWidth","gridFilterableColumnDefinitionsSelector","col","filterable","gridFilterableColumnLookupSelector","reduce","acc","gridHasColSpanSelector","some","colSpan","gridPreferencePanelStateSelector","preferencePanel","gridPreferencePanelSelectorWithLabel","panel","labelId","open","GridPreferencePanelsValue","GridPreferencesPanel","rootProps","preferencePanelState","panelContent","unstable_applyPipeProcessors","openedPanelValue","filters","_jsx","slots","as","basePopper","panelId","slotProps","children","GridHeader","_jsxs","toolbar","gridDimensionsSelector","gridColumnsTotalWidthSelector","columnsTotalWidth","gridRowHeightSelector","rowHeight","gridContentHeightSelector","contentSize","gridHasScrollXSelector","gridHasScrollYSelector","gridHasFillerSelector","viewportOuterSize","gridHeaderHeightSelector","headerHeight","gridGroupHeaderHeightSelector","groupHeaderHeight","gridVerticalScrollbarWidthSelector","gridHasBottomFillerSelector","needsLastRowBorder","minimumSize","TimerBasedCleanupTracking","constructor","timeout","this","timeouts","cleanupTimeout","register","object","unregisterToken","setTimeout","delete","cleanupToken","unregister","clearTimeout","reset","forEach","FinalizationRegistryBasedCleanupTracking","registry","FinalizationRegistry","GridSignature","ObjectToBeRetainedByReact","createUseGridApiEventHandler","registryContainer","cleanupTokensCounter","eventName","handler","options","objectRetainedByReact","handlerRef","cleanupTokenRef","enhancedHandler","params","event","details","defaultMuiPrevented","subscribeEvent","unstable_resetCleanupTracking","useGridApiEventHandler","optionsSubscriberOptions","isFirst","useGridApiOptionHandler","_excluded","GridEditInputCellRoot","InputBase","editInputCell","GridEditInputCell","colDef","hasFocus","debounceMs","isProcessingProps","onValueChange","other","_objectWithoutPropertiesLoose","inputRef","valueState","setValueState","classes","ownerState","composeClasses","useUtilityClasses","handleChange","async","newValue","target","getColumn","parsedValue","valueParser","getRow","setEditCellValue","unstable_skipValueParser","meta","unstable_getEditCellMeta","changeReason","useEnhancedEffect","focus","className","fullWidth","onChange","endAdornment","loadIcon","renderEditInputCell","sanitizeSortModel","disableMultipleColumnsSorting","mergeStateWithSortModel","sortModel","sorting","getNextGridSortDirection","sortingOrder","currentIdx","indexOf","gridNillComparator","v1","v2","collator","Intl","Collator","gridStringOrNumberComparator","value1","value2","nillResult","compare","toString","gridNumberComparator","gridDateComparator","GridFilterInputValue","item","applyValue","focusElementRef","tabIndex","clearButton","InputProps","variant","others","filterTimeout","useTimeout","filterValueState","setFilterValueState","sanitizeFilterItemValue","applying","setIsApplying","useId","onFilterChange","start","filterDebounceMs","newItem","isNaN","fromInput","baseTextField","label","getLocaleText","placeholder","inputProps","InputLabelProps","shrink","isObject","escapeRegExp","replace","clamp","min","max","range","from","to","isDeepEqual","size","entriesA","entries","has","entryA","Set","ArrayBuffer","isView","RegExp","source","flags","valueOf","prototype","keys","hasOwnProperty","deepClone","obj","structuredClone","JSON","parse","stringify","runIf","condition","_excluded2","GridFilterInputMultipleValue","error","helperText","TextFieldProps","itemValue","filterItemValue","Autocomplete","multiple","freeSolo","filterOptions","inputValue","renderTags","getTagProps","option","index","_getTagProps","tagProps","baseChip","renderInput","GridLogicOperator","defaultGridFilterLookup","filteredRowsLookup","filteredChildrenCountLookup","filteredDescendantCountLookup","getDefaultGridFilterModel","items","logicOperator","And","quickFilterValues","quickFilterLogicOperator","getPublicApiRef","getPublicApi","hasEval","cleanFilterItem","cleanItem","random","operator","filterOperators","sanitizeFilterModel","disableMultipleColumnsFiltering","hasSeveralItems","hasItemsWithoutIds","mergeStateWithFilterModel","filterModel","filteringState","removeDiacritics","normalize","getFilterCallbackFromItem","filterItem","parser","ignoreDiacritics","newFilterItem","filterOperator","find","publicApiRef","applyFilterOnRow","getApplyFilterFn","getRowValue","filterItemsApplierId","buildAggregatedFilterItemsApplier","disableEval","appliers","callback","Function","getHasEval","shouldApplyFilter","resultPerItemId","applier","filterItemCore","replaceAll","shouldApplyItem","shouldQuickFilterExcludeHiddenColumns","quickFilterExcludeHiddenColumns","buildAggregatedFilterApplier","isRowMatchingFilterItems","isRowMatchingQuickFilter","buildAggregatedQuickFilterApplier","Boolean","columnFields","appliersPerField","getApplyQuickFilterFn","quickFilterValue","result","outer","filterValue","passingFilterItems","passingQuickFilterValues","isNotNull","passFilterLogic","allFilterItemResults","allQuickFilterResults","cleanedFilterItems","filterModelItems","cleanedFilterItemResults","cleanedQuickFilterResults","filterItemPredicate","filterItemResult","quickFilterValuePredicate","quickFilterValueResult","getGridStringQuickFilterFn","filterRegex","columnValue","getRowFormattedValue","test","createContainsFilterFn","disableTrim","negate","trimmedValue","trim","matches","createEqualityFilterFn","sensitivity","usage","isEqual","createEmptyFilterFn","isEmpty","getGridStringOperators","InputComponent","requiresFilterValue","val","GRID_STRING_COL_DEF","Infinity","hideable","sortable","resizable","groupable","pinnable","aggregable","editable","sortComparator","align","renderEditCell","parseNumericValue","getGridNumericQuickFilterFn","getGridNumericOperators","InputComponentProps","GRID_NUMERIC_COL_DEF","headerAlign","valueFormatter","isNumber","toLocaleString","convertFilterItemValueToInputValue","inputType","dateCopy","Date","getTime","toISOString","substring","setMinutes","getMinutes","getTimezoneOffset","GridFilterInputDate","clear","date","buildApplyFilterFn","compareFn","showTime","keepHours","setSeconds","setHours","time","getGridDateOperators","StyledInputBase","GridEditDateCell","valueProp","isDateTime","valueTransformed","parsedDate","formattedDate","substr","parsed","formatted","parseValueToDate","split","year","month","day","setFullYear","hours","minutes","newFormattedDate","newParsedDate","renderEditDateCell","throwIfNotDateObject","columnType","rowId","gridDateFormatter","getRowId","toLocaleDateString","gridDateTimeFormatter","GRID_DATE_COL_DEF","pastedValueParser","GRID_DATETIME_COL_DEF","gridRowsStateSelector","rows","gridRowCountSelector","totalRowCount","gridRowsLoadingSelector","loading","gridTopLevelRowCountSelector","totalTopLevelRowCount","gridRowsLookupSelector","dataRowIdToModelLookup","gridRowsDataRowIdToIdLookupSelector","dataRowIdToIdLookup","gridRowTreeSelector","tree","gridRowGroupsToFetchSelector","groupsToFetch","gridRowGroupingNameSelector","groupingName","gridRowTreeDepthsSelector","treeDepths","gridRowMaximumTreeDepthSelector","nodeCount","_ref2","depth","sort","gridDataRowIdsSelector","dataRowIds","gridPinnedRowsSelector","additionalRowGroups","rawPinnedRows","bottom","rowEntry","top","gridPinnedRowsCountSelector","GRID_ROOT_GROUP_ID","GRID_ID_AUTOGENERATED","checkGridRowIdIsValid","getRowIdFromRowModel","rowModel","detailErrorMessage","createRowsInternalCache","rowCount","updates","rowsBeforePartialUpdates","loadingPropBeforePartialUpdates","rowCountPropBeforePartialUpdates","getTopLevelRowCount","rowCountProp","rootGroupNode","footerId","getRowsStateFromCache","_ref3","loadingProp","previousTree","previousTreeDepths","previousGroupsToFetch","caches","unProcessedTree","unProcessedTreeDepths","unProcessedDataRowIds","applyStrategyProcessor","groupingParamsWithHydrateRows","actions","insert","modify","remove","idToActionLookup","isAutogeneratedRow","isAutogeneratedRowNode","rowNode","isAutoGenerated","getTreeNodeDescendants","parentId","skipAutoGeneratedRows","node","validDescendants","child","childDescendants","j","updateCacheWithNewRows","_ref4","previousCache","groupKeys","uniqueUpdates","update","partialUpdates","alreadyAppliedActionsToRemove","partialRow","actionAlreadyAppliedToRow","_action","oldRow","actionTypeWithActionsToRemove","actionType","idsToRemove","minimalContentHeight","computeRowsUpdates","nonPinnedRowsUpdates","getRowNode","pinnedRowsCache","prevModel","idLookup","getValidRowHeight","rowHeightProp","defaultRowHeight","warningMessage","GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD","GRID_DETAIL_PANEL_TOGGLE_FIELD","PinnedColumnPosition","GridBooleanCellRaw","isServerSideRowGroupingRow","treeData","Icon","booleanCellTrueIcon","booleanCellFalseIcon","titleAccess","GridBooleanCell","renderBooleanCell","GridEditBooleanCell","idProp","checked","htmlFor","clsx","baseCheckbox","renderEditBooleanCell","toLowerCase","BooleanOperatorContainer","margin","GridFilterInputBoolean","labelProp","selectId","baseSelectProps","baseSelect","isSelectNative","native","baseSelectOptionProps","baseSelectOption","baseFormControl","baseInputLabel","notched","displayEmpty","getGridBooleanOperators","sanitizedValue","GRID_BOOLEAN_COL_DEF","renderCell","gridBooleanFormatter","stringToBoolean","GridCellEditStartReasons","GridCellEditStopReasons","GridEditModes","GridCellModes","GridRowModes","isSingleSelectColDef","getValueOptions","additionalParams","valueOptions","getValueFromValueOptions","getOptionValue","optionValue","GridEditSingleSelectCell","initialOpen","editMode","Cell","setOpen","MenuProps","otherBaseSelectProps","getOptionLabel","formattedTargetValue","onOpen","isKeyboardEvent","onClose","handleClose","reason","Row","getCellParams","publishEvent","escapeKeyDown","cellFocusOut","valueOption","_createElement","renderEditSingleSelectCell","renderSingleSelectOptions","OptionComponent","SingleSelectOperatorContainer","GridFilterInputSingleSelect","resolvedColumn","currentValueOptions","createFilterOptions","GridFilterInputMultipleSingleSelect","isOptionEqualToValue","resolvedValueOptions","filteredValues","resolvedValue","parseObjectValue","getGridSingleSelectOperators","filterItemValues","GRID_SINGLE_SELECT_COL_DEF","GridMenuRoot","Popper","menu","modal","transformOrigin","GridMenu","onExited","savedFocusRef","document","activeElement","HTMLElement","handleClickAway","contains","anchorEl","placement","TransitionProps","ClickAwayListener","onClickAway","mouseEvent","Grow","style","popperOnExited","Paper","hasActions","getActions","GridActionsCell","focusedButtonIndex","setFocusedButtonIndex","rootRef","buttonRef","ignoreCallToFocus","touchRippleRefs","useRtl","menuId","buttonId","getRowParams","iconButtons","showInMenu","menuButtons","numberOfButtons","stop","preventScroll","focusableButtonIndex","findIndex","hideMenu","handleTouchRippleRef","instance","handleButtonClick","onClick","role","onKeyDown","getNewIndex","direction","indexMod","newIndex","preventDefault","stopPropagation","button","touchRippleRef","baseIconButton","toggleMenu","moreActionsIcon","MenuList","autoFocusItem","closeMenu","renderActionsCell","GRID_ACTIONS_COLUMN_TYPE","GRID_ACTIONS_COL_DEF","headerName","disableColumnMenu","disableExport","DEFAULT_GRID_COL_TYPE_KEY","getGridDefaultColumnTypes","string","number","dateTime","boolean","singleSelect","custom","gridHeaderFilteringStateSelector","headerFiltering","gridHeaderFilteringEnabledSelector","headerFilteringState","enabled","gridHeaderFilteringEditFieldSelector","editing","gridHeaderFilteringMenuSelector","gridColumnGroupingSelector","columnGrouping","gridColumnGroupsUnwrappedModelSelector","unwrappedGroupingModel","gridColumnGroupsLookupSelector","gridColumnGroupsHeaderStructureSelector","headerStructure","gridColumnGroupsHeaderMaxDepthSelector","maxDepth","COLUMNS_DIMENSION_PROPERTIES","COLUMN_TYPES","hydrateColumnsWidth","rawState","columnsLookup","totalFlexUnits","widthAllocatedBeforeFlex","flexColumns","columnField","isFlex","availableWidth","initialFreeSpace","computedColumnWidths","uniqueFlexColumns","flexColumnsLookup","all","frozenFields","freeze","frozen","loopOverFlexItems","violationsLookup","remainingFreeSpace","flexUnits","totalViolation","computeFlexColumnsWidth","getDefaultColTypeDef","createColumnsState","columnsToUpsert","initialState","keepOnlyColumnsToUpsert","isInsideStateInitializer","currentState","columnsToKeep","columnsToUpsertLookup","newColumn","existingState","hasBeenResized","resolveProps","columnsStateWithPortableColumns","applyInitialState","columnsWithUpdatedDimensions","orderedFieldsLookup","cleanOrderedFields","newOrderedFields","newColumnLookup","newColDef","getRootDimensions","getTotalHeaderHeight","unstable_listView","densityFactor","isHeaderFilteringEnabled","floor","columnHeaderHeight","columnGroupHeaderHeight","headerFilterHeight","GridScrollAreaRawRoot","scrollArea","offsetSelector","leftPinnedWidth","rightPinnedWidth","GridScrollAreaContent","scrollDirection","scrollPosition","sideOffset","getCanScrollMore","maxScrollLeft","viewportInnerSize","canScrollMore","setCanScrollMore","totalHeaderHeight","handleDragOver","useEventCallback","offset","clientX","getBoundingClientRect","scroll","handleScrolling","onDragOver","GridScrollArea","dragging","setDragging","noop","useRunOnce","effect","didRun","gridSortingStateSelector","gridSortedRowIdsSelector","sortingState","sortedRows","gridSortedRowEntriesSelector","sortedIds","idRowsLookup","rowTree","gridSortModelSelector","gridSortColumnLookupSelector","res","sortItem","sortDirection","sortIndex","gridFilterStateSelector","gridFilterModelSelector","filterState","gridQuickFilterValuesSelector","gridVisibleRowsLookupSelector","visibleRowsLookup","gridFilteredRowsLookupSelector","gridFilteredDescendantCountLookupSelector","gridExpandedSortedRowEntriesSelector","gridExpandedSortedRowIdsSelector","visibleSortedRowEntries","gridFilteredSortedRowEntriesSelector","gridFilteredSortedRowIdsSelector","filteredSortedRowEntries","gridFilteredSortedTopLevelRowEntriesSelector","visibleSortedRowIds","depthPositionCounter","lastDepth","visibleSortedRows","rowTreeDepth","gridExpandedRowCountSelector","gridFilteredTopLevelRowCountSelector","visibleSortedTopLevelRows","gridFilteredRowCountSelector","gridFilteredDescendantRowCountSelector","topLevelRowCount","gridFilterActiveItemsSelector","columnLookup","gridFilterActiveItemsLookupSelector","activeFilters","getPageCount","pageSize","page","ceil","getDefaultGridPaginationModel","autoPageSize","throwIfPageSizeExceedsTheLimit","signatureProp","DataGrid","gridPaginationSelector","pagination","gridPaginationEnabledClientSideSelector","paginationMode","gridPaginationModelSelector","paginationModel","gridPaginationRowCountSelector","gridPaginationMetaSelector","gridPageSelector","gridPageSizeSelector","gridPageCountSelector","gridPaginationRowRangeSelector","clientSidePaginationEnabled","visibleSortedTopLevelRowEntries","visibleTopLevelRowCount","topLevelFirstRowIndex","topLevelLastRowIndex","firstRowIndex","lastRowIndex","topLevelFirstRow","topLevelRowsInCurrentPageCount","topLevelRowAdded","gridPaginatedVisibleSortedGridRowEntriesSelector","paginationRange","slice","gridPaginatedVisibleSortedGridRowIdsSelector","gridVisibleRowsSelector","clientPaginationEnabled","paginationRowRange","paginationRows","expandedSortedRowEntries","rowToIndexMap","getVisibleRows","useGridVisibleRows","isFirefox","navigator","userAgent","gridRowSelectionStateSelector","rowSelection","selectedGridRowsCountSelector","selection","selectedGridRowsSelector","selectedRows","rowsLookup","selectedIdsLookupSelector","gridRowsMetaSelector","rowsMeta","gridVirtualizationSelector","virtualization","gridVirtualizationEnabledSelector","gridVirtualizationColumnEnabledSelector","enabledForColumns","gridVirtualizationRowEnabledSelector","enabledForRows","gridRenderContextSelector","renderContext","gridRenderContextColumnsSelector","firstColumnIndex","lastColumnIndex","useGridApiMethod","apiMethods","isFirstRender","EMPTY_RENDER_CONTEXT","virtualizationStateInitializer","disableVirtualization","useGridVirtualization","setVirtualization","api","unstable_setVirtualization","unstable_setColumnVirtualization","gridRowSpanningStateSelector","rowSpanning","gridRowSpanningHiddenCellsSelector","hiddenCells","gridRowSpanningSpannedCellsSelector","spannedCells","gridRowSpanningHiddenCellsOriginMapSelector","hiddenCellOriginMap","gridListColumnSelector","listViewColumn","gridFocusStateSelector","gridFocusCellSelector","focusState","gridFocusColumnHeaderSelector","gridFocusColumnHeaderFilterSelector","columnHeaderFilter","gridFocusColumnGroupHeaderSelector","columnGroupHeader","gridTabIndexStateSelector","gridTabIndexCellSelector","gridTabIndexColumnHeaderSelector","gridTabIndexColumnHeaderFilterSelector","gridTabIndexColumnGroupHeaderSelector","gridFocusedVirtualCellSelector","focusedCell","currentPage","rowIndex","columnIndex","isFocusedCellOutOfRenderContext","roundToDecimalPlaces","decimals","isJSDOM","window","ScrollDirection","EMPTY_SCROLL_POSITION","EMPTY_DETAIL_PANELS","useGridVirtualScroller","listView","pinnedColumnDefinitions","hasBottomPinnedRows","panels","setPanels","selectedRowsLookup","mainRef","mainElementRef","scrollerRef","virtualScrollerRef","scrollbarVerticalRef","virtualScrollbarVerticalRef","scrollbarHorizontalRef","virtualScrollbarHorizontalRef","hasColSpan","isRenderContextReady","contentHeight","needsHorizontalScrollbar","needsHorizontalScrollbarSelector","verticalScrollbarWidth","gridHasFiller","previousSize","mainRefCallback","initialRect","lastSize","ResizeObserver","observer","entry","newSize","contentRect","observe","disconnect","ignoreNextScrollEvent","previousContextScrollPosition","previousRowContext","focusedVirtualCell","scrollTimeout","frozenContext","scrollCache","createScrollCache","rowBufferPx","columnBufferPx","verticalBuffer","horizontalBuffer","NONE","buffer","bufferForDirection","MINIMUM_COLUMN_WIDTH","updateRenderContext","nextRenderContext","context1","context2","areRenderContextsEqual","didRowsIntervalChange","isReady","triggerUpdateRenderContext","scroller","maxScrollTop","newScroll","scrollTop","scrollLeft","dx","dy","isScrolling","abs","DOWN","UP","RIGHT","LEFT","directionForDelta","rowScroll","columnScroll","didCrossThreshold","didChangeDirection","computeRenderContext","inputsSelector","ReactDOM","forceUpdateRenderContext","handleScroll","handleWheel","handleTouchMove","scrollerStyle","overflowX","overflowY","flexBasis","flexShrink","onContentSizeApplied","isScrollRestored","unsubscribeContentSizeChange","getRows","baseRenderContext","isLastSection","isPinnedSection","rowIndexOffset","rowModels","firstRowToRender","lastRowToRender","rowIndexes","virtualRowIndex","unshift","rowProps","columnPositions","rowIndexInPage","minFirstColumn","maxLastColumn","calculateColSpan","baseRowHeight","rowHasAutoHeight","unstable_getRowHeight","isSelected","isRowSelectable","isFirstVisible","isLastVisible","isLastVisibleInSection","currentRenderContext","isVirtualFocusRow","isVirtualFocusColumn","offsetLeft","computeOffsetLeft","showBottomBorder","selected","focusedColumnIndex","isNotVisible","scrollbarWidth","getInfiniteLoadingTriggerElement","lastRowId","getContainerProps","getScrollerProps","onScroll","onWheel","onTouchMove","platform","getContentProps","getRenderZoneProps","getScrollbarVerticalProps","getScrollbarHorizontalProps","getScrollAreaProps","hiddenCellsOriginMap","at","lastColumn","viewportInnerWidth","viewportInnerHeight","lastRowHeight","lastColumnWidth","virtualizeColumnsWithAutoRowHeight","inputs","realLeft","getNearestIndexToRender","atStart","lastPosition","rowSpanHiddenCellOrigin","minSpannedRowIndex","hasRowWithAutoHeight","getIndexesToRender","firstIndex","lastIndex","minFirstIndex","maxLastIndex","bufferBefore","rowBefore","bufferAfter","rowAfter","binarySearch","actualRenderContext","initialFirstColumnToRender","lastColumnToRender","columnBefore","columnAfter","firstColumnToRender","_ref5","visibleRows","firstNonSpannedColumnToRender","cellColSpanInfo","unstable_getCellColSpanInfo","spannedByColSpan","leftVisibleCellIndex","getFirstNonSpannedColumnToRender","deriveRenderContext","lastMeasuredIndexRelativeToAllRows","getLastMeasuredRowIndex","allRowsMeasured","lastMeasuredIndexRelativeToCurrentPage","interval","exponentialSearch","sliceStart","sliceEnd","pivot","isBefore","firstPosition","firstIndexPadded","lastIndexPadded","pinnedLeftLength","useGridOverlays","visibleRowCount","pinnedRowsCount","noRows","overlayType","loadingOverlayVariant","loadingOverlay","GridOverlayWrapperRoot","shouldForwardProp","prop","overlayWrapper","GridOverlayWrapperInner","inner","GridOverlayWrapper","topContainerHeight","bottomContainerHeight","GridOverlays","Overlay","overlayProps","gridColumnMenuSelector","columnMenu","MemoizedGridHeaders","filterColumnLookup","sortColumnLookup","columnHeaderTabIndexState","hasNoCellTabIndexState","columnGroupHeaderTabIndexState","columnHeaderFocus","columnGroupHeaderFocus","headerGroupingMaxDepth","columnMenuState","columnVisibility","columnGroupsHeaderStructure","hasOtherElementInTabSequence","columnsContainerRef","columnHeadersContainerRef","GridConfigurationContext","useGridConfiguration","configuration","GridPanelAnchor","Element","hasPinnedRight","flexGrow","GridMainContainer","ariaAttributes","hooks","useGridAriaAttributes","GridTopContainer","GridBottomContainer","VirtualScrollerContentRoot","overflowedContent","GridVirtualScrollerContent","Filler","Pinned","PinnedLeft","borderRight","PinnedRight","borderLeft","Main","Memoized","rowsLength","VirtualScrollerRenderZoneRoot","virtualScrollerRenderZone","GridVirtualScrollerRenderZone","offsetTop","transform","Scrollbar","ScrollbarVertical","ScrollbarHorizontal","GridVirtualScrollbar","isLocked","scrollbarRef","contentRef","content","propertyDimension","propertyScroll","propertyScrollPosition","hasScroll","scrollbarInnerSize","onScrollerScroll","onScrollbarScroll","useOnMount","passive","addEventListener","removeEventListener","setProperty","Container","useForkRef","Scroller","hasPinnedRightSelector","GridVirtualScroller","hasBottomFiller","overlaysProps","TopContainer","GridHeaders","Overlays","Content","RenderZone","detailPanels","SpaceFiller","BottomContainer","GridFooterPlaceholder","hideFooter","footer","GridRoot","rootElementRef","rootMountCallback","handleRef","showCellVerticalBorder","capitalize","GridBody","MemoizedGridRoot","getGridRowGroupSelectableDescendants","groupId","sortedRowIds","groupNode","descendants","isMultipleRowSelectionEnabled","signature","checkboxSelection","disableMultipleRowSelection","findRowsToSelect","selectedRow","autoSelectDescendants","autoSelectParents","addRow","filteredRows","selectedIdsLookup","selectedDescendants","add","checkAllDescendantsSelected","traverseParents","siblings","getFilteredRowNodeSiblings","parent","childId","findRowsToDeselect","deselectedRow","removeRow","allParents","getRowNodeParents","parents","descendant","GridContextProvider","Provider","forceDebug","localStorage","setItem","removeItem","err","localStorageAvailable","getItem","noopLogger","debug","info","warn","LOG_LEVELS","getAppender","logLevel","appender","console","minLogLevelIdx","logger","loggerObj","method","idx","message","EventManager","maxListeners","warnOnce","events","on","listener","collection","highPriority","regular","removeListener","removeAllListeners","emit","highPriorityListeners","regularListeners","apply","once","that","oneTimeListener","_len2","_key2","Store","_value","listeners","getSnapshot","l","SYMBOL_API_PRIVATE","globalId","useGridApiInitialization","inputApiRef","existingPrivateApi","privateApi","methods","methodName","currentPrivateMethod","spying","publicApi","currentPublicMethod","eventManager","createPrivateAPI","createPublicAPI","isPropagationStopped","isSyntheticEvent","DataGridPro","DataGridPremium","GRID_DEFAULT_STRATEGY","GRID_STRATEGIES_PROCESSORS","rowTreeCreation","filtering","visibleRowsLookupCreation","useGridInitialization","useGridRefs","isFirstEffect","useGridIsRtl","useGridLoggerFactory","getLogger","controlStateMapRef","registerControlState","controlStateItem","stateId","ignoreSetState","updatedControlStateIds","controlState","oldSubState","stateSelector","newSubState","hasPropChanged","propModel","el","propOnChange","changeEvent","updateControlState","previousState","forceUpdate","privateStateApi","useGridStateInitialization","isRunning","runAppliers","groupCache","registerPipeProcessor","group","processor","processors","processorsAsArray","registerPipeApplier","_appliers","otherAppliers","_toPropertyKey","requestPipeProcessorsApplication","preProcessingPublicApi","context","useGridPipeProcessing","availableStrategies","strategiesCache","registerStrategyProcessor","strategyName","processorName","cleanup","otherProcessors","groupPreProcessors","previousProcessor","getActiveStrategy","activeStrategy","strategyGroup","availableStrategyEntry","strategy","isAvailable","setStrategyAvailability","useGridStrategyProcessing","useGridLocaleText","localeText","useGridInitializeState","initializer","isInitialized","useGridLogger","newLogger","useGridNativeEventListener","targetElement","GridCellCheckboxForwardRef","checkboxElement","rippleRef","element","getCellElement","input","querySelector","handleKeyDown","isSelectable","checkboxPropsSelector","rowSelectionPropagation","rowSelectionLookup","isIndeterminate","isChecked","selectableDescendantsCount","selectedDescendantsCount","indeterminateCheckboxAction","indeterminate","GridCellCheckboxRenderer","GridHeaderCheckbox","tabIndexState","visibleRowIds","paginatedVisibleRowIds","filteredSelection","keepNonExistentRowsSelected","selectionCandidates","checkboxSelectionVisibleOnly","currentSelectionSize","getColumnHeaderElement","handleSelectionChange","p","GRID_CHECKBOX_SELECTION_FIELD","GRID_CHECKBOX_SELECTION_COL_DEF","disableReorder","valueGetter","renderHeader","sanitizeCellValue","csvOptions","valueStr","shouldAppendQuotes","escapeFormulas","escapedValue","delimiter","serializeCellValue","cellParams","ignoreValueFormatter","formattedValue","CSVRow","rowString","addValue","getRowString","buildCSV","rowIds","CSVBody","serializeRow","includeHeaders","filteredColumns","headerRows","includeColumnGroupsHeaders","columnGroupLookup","getAllGroupDetails","maxColumnGroupsDepth","columnGroupPathsLookup","columnGroupPath","getColumnGroupPath","headerGroupRow","columnGroupId","columnGroup","mainHeaderRow","isPrintableKey","ctrlKey","metaKey","isNavigationKey","isHideMenuKey","isPasteShortcut","fromCharCode","keyCode","shiftKey","altKey","writeToClipboardPolyfill","data","span","createElement","textContent","body","appendChild","createRange","selectNode","getSelection","removeAllRanges","addRange","execCommand","removeChild","useGridClipboard","ignoreValueFormatterProp","ignoreValueFormatterDuringExport","clipboardExport","clipboardCopyCellDelimiter","handleCopy","isCopyShortcut","selectionEnd","selectionStart","textToCopy","getSelectedRows","getDataAsCsv","clipboard","writeText","catch","onClipboardCopy","columnMenuStateInitializer","useFirstRender","useGridRegisterPipeProcessor","registerPreProcessor","useGridRegisterPipeApplier","columnsStateInitializer","mergeColumnsState","densityStateInitializer","getColumnsToExport","fields","currentColumns","allColumns","defaultGetRowsToExport","filteredSortedRowIds","bodyRows","topPinnedRowsIds","bottomPinnedRowsIds","GridToolbarExportContainer","buttonProps","tooltipProps","tooltip","exportButtonId","exportMenuId","handleMenuClose","baseTooltip","title","enterDelay","baseButton","startIcon","exportIcon","prevOpen","_excluded3","GridCsvExportMenuItem","MenuItem","exportDataAsCsv","GridPrintExportMenuItem","exportDataAsPrint","GridToolbarExport","printOptions","excelOptions","preProcessedButtons","componentName","useGridCsvExport","csvExport","getRowsToExport","csv","blob","extension","fullName","HTMLAnchorElement","url","URL","createObjectURL","href","download","click","revokeObjectURL","exportAs","Blob","utf8WithBom","Uint8Array","fileName","addExportMenuButtons","initialValue","disableToolbarButton","getDerivedPaginationModel","paginationState","paginationModelProp","pageCount","validPage","getValidPage","useGridPrintExport","hasRootReference","doc","previousGridState","previousColumnVisibility","previousRows","previousVirtualizationState","ownerDocument","updateGridColumnsForPrint","includeCheckboxes","Promise","resolve","exportedColumnFields","newColumnVisibilityModel","setColumnVisibilityModel","updateGridRowsForPrint","newRows","setRows","handlePrintWindowLoad","printWindow","normalizeOptions","copyStyles","hideToolbar","printDoc","contentDocument","gridRootElement","gridClone","cloneNode","contain","gridToolbarElementHeight","toolbarContainer","offsetHeight","gridFooterElementHeight","footerContainer","computedTotalHeight","currentPageTotalHeight","gridFooterElement","container","marginTop","innerHTML","defaultPageStyle","pageStyle","styleElement","createTextNode","head","bodyClassName","classList","stylesheetLoadPromises","rootCandidate","getRootNode","headStyleElements","querySelectorAll","tagName","newHeadStyleElements","sheet","styleCSS","cssRules","cssText","getAttribute","attributes","attr","setAttribute","nodeName","nodeValue","then","contentWindow","print","handlePrintWindowAfterPrint","restoreState","exportState","getSortedRows","requestAnimationFrame","iframeEl","buildPrintWindow","onload","matchMedia","mql","useGridRegisterStrategyProcessor","filterStateInitializer","getVisibleRowsLookup","getVisibleRowsLookupState","createMemoizedValues","focusStateInitializer","findParentElementFromClassName","elem","closest","escapeOperandAttributeSelector","operand","getGridRowElementSelector","isEventTargetInPortal","nodeType","currentTarget","findGridElement","klass","findPinnedCells","colIndex","filterFn","cells","queryRows","rowElement","currentColIndex","parseCellColIndex","findPinnedHeaders","elements","ariaColIndex","getLeftColumnIndex","firstColIndex","lastColIndex","getRightColumnIndex","gridVisibleRowsWithPinnedRowsSelector","concat","useGridKeyboardNavigation","getCurrentPageRows","headerFilteringEnabled","headerFilters","goToCell","closestColumnToUse","rowSpanScanDirection","nextCellColSpanInfo","rightVisibleCellIndex","nonRowSpannedRowId","rowSpanHiddenCells","nextRowIndex","nextRowId","findNonRowSpannedCell","rowIndexRelativeToAllRows","scrollToIndexes","setCellFocus","goToHeader","getVisibleColumns","setColumnHeaderFocus","goToHeaderFilter","setColumnHeaderFilterFocus","goToGroupHeader","setColumnGroupHeaderFocus","getRowIdFromIndex","handleColumnHeaderKeyDown","headerTitleNode","currentPageRows","viewportPageSize","getViewportPageSize","colIndexBefore","getColumnIndex","firstRowIndexInPage","lastRowIndexInPage","columnGroupMaxDepth","shouldPreventDefault","rightColIndex","leftColIndex","toggleColumnMenu","handleHeaderFilterKeyDown","isEditing","isHeaderMenuOpen","handleColumnGroupHeaderKeyDown","focusedColumnGroup","currentField","currentDepth","remainingRightColumns","remainingLeftColumns","handleCellKeyDown","cellMode","Edit","getColumnIndexFn","rowIndexBefore","groupingColDefField","match","getRowGroupingCriteriaFromGroupingField","isGroupingColumn","checkIfCanStartEditing","paginationStateInitializer","paginationMeta","useGridPagination","useGridPaginationMeta","onPaginationMetaChange","setPaginationMeta","newPaginationMeta","stateExportPreProcessing","prevState","exportedPaginationMeta","exportOnlyDirtyModels","stateRestorePreProcessing","restoredPaginationMeta","stateToRestore","useGridPaginationModel","previousFilterModel","onPaginationModelChange","setPage","currentModel","setPaginationModel","setPageSize","handleUpdateAutoPageSize","maximumPageSizeWithoutScrollBar","handleRowCountChange","newRowCount","navigateToStart","getScrollPosition","handleFilterModelChange","currentActiveFilters","handlePaginationModelChange","resetPageOnSortFilter","isEnabled","useGridRowCount","rowCountState","previousPageSize","onRowCountChange","setRowCount","exportedRowCount","restoredRowCount","isLastPage","hasNextPage","preferencePanelStateInitializer","gridEditRowsStateSelector","editRows","gridRowIsEditingSelector","gridEditCellStateSelector","getDefaultCellValue","GridRowEditStartReasons","GridRowEditStopReasons","editingStateInitializer","useGridEditing","useGridCellEditing","cellModesModel","setCellModesModel","cellModesModelRef","prevCellModesModel","processRowUpdate","onProcessRowUpdateError","cellModesModelProp","onCellModesModelChange","runIfEditModeIsCell","throwIfNotEditable","isCellEditable","throwIfNotInMode","getCellMode","handleCellDoubleClick","isEditable","newParams","cellDoubleClick","handleCellFocusOut","View","which","enterKeyDown","shiftTabKeyDown","tabKeyDown","printableKeyDown","pasteKeyDown","deleteKeyDown","handleCellEditStart","startCellEditModeParams","deleteValue","startCellEditMode","handleCellEditStop","cellToFocusAfter","runPendingEditCellValueMutation","ignoreModifications","stopCellEditMode","onCellEditStart","onCellEditStop","editRowsState","hasFieldErrors","editingState","updateCellModesModel","newModel","isNewModelDifferentFromProp","updateFieldInCellModesModel","newProps","_newModel$id","otherFields","updateOrDeleteFieldState","newEditingState","updateStateToStartCellEditMode","getCellValue","shouldProcessEditCellProps","preProcessEditCellProps","hasChanged","updateStateToStopCellEditMode","finishCellEditMode","moveFocusToRelativeCell","rowUpdate","getRowWithUpdatedValuesFromCellEditing","handleError","errorThrown","finalRowUpdate","updateRows","editingPrivateApi","setCellEditingEditCellValue","skipValueParser","valueSetter","copyOfPrevCellModes","prevMode","originalId","useGridRowEditing","rowModesModel","setRowModesModel","rowModesModelRef","prevRowModesModel","focusTimeout","nextFocusedCell","rowModesModelProp","onRowModesModelChange","runIfEditModeIsRow","getRowMode","hasFieldsWithErrors","fieldProps","rowParams","handleCellFocusIn","rowFocusOut","nextFieldToFocus","handleRowEditStart","startRowEditModeParams","fieldToFocus","startRowEditMode","handleRowEditStop","stopRowEditMode","onRowEditStart","onRowEditStop","updateRowModesModel","updateRowInRowModesModel","updateOrDeleteRowState","updateStateToStartRowEditMode","processedProps","updateStateToStopRowEditMode","focusedField","finishRowEditMode","getRowWithUpdatedValuesFromRowEditing","setRowEditingEditCellValue","promises","_editingState$id","otherFieldsProps","promise","thisField","fieldColumn","_editingState$id2","copyOfPrevRowModesModel","ids","debounceMap","isCellEditableProp","debounces","runCallback","debouncedField","maybeDebounce","runImmediately","setEditCellValueToCall","getRowWithUpdatedValues","getEditCellMeta","editingSharedPrivateApi","rowsStateInitializer","isDataSourceAvailable","unstable_dataSource","flatRowTreeCreationMethod","groupingField","groupingKey","childrenFromPath","childrenExpanded","createFlatRowTree","idsToRemoveFromRootGroup","idToDelete","idToInsert","rootGroup","rootGroupChildren","updateFlatRowTree","MissingRowIdError","useGridParamsApi","getColumnHeaderParams","getAllColumns","getCellParamsForRow","rawValue","cellFocus","cellTabIndex","unstable_listColumn","getGridColumnHeaderElement","getRowElement","getGridRowElement","getGridCellElement","paramsPrivateApi","getSelectionModelPropValue","selectionModelProp","prevSelectionModel","rowSelectionStateInitializer","rowSelectionModel","useGridRowSelection","runIfRowSelectionIsEnabled","applyAutoSelection","propRowSelectionModel","lastRowToggled","onRowSelectionModelChange","disableRowSelectionOnClick","propIsRowSelectable","canHaveMultipleSelection","isNestedData","expandMouseRowRangeSelection","endId","startId","isRowSelected","startIndex","endIndex","selectRowRange","setRowSelectionModel","selectRow","resetSelection","newSelection","selectRows","selectableIds","currentLookup","allPagesRowIds","end","rowsBetweenStartAndEnd","selectionPrivateApi","removeOutdatedSelection","sortModelUpdated","currentSelection","selectionLookup","filterMode","isNonExistent","shouldReapplyPropagation","handleSingleRowSelection","hasCtrlKey","isMultipleSelectionDisabled","handleRowClick","preventSelectionOnShift","handleRowSelectionCheckboxChange","nativeEvent","handleHeaderSelectionCheckboxChange","rowsToBeSelected","focusCell","isNextRowSelected","newRowIndex","getRowIndexRelativeToVisibleRows","previousRowIndex","getAllRowIds","isStateControlled","useGridRowSelectionPreProcessors","updateSelectionColumn","selectionColumn","cellClassName","headerClassName","shouldHaveSelectionColumn","haveSelectionColumn","sortingStateInitializer","scrollIntoView","containerSize","elementSize","elementOffset","elementEnd","DATA_GRID_PROPS_DEFAULT_VALUES","autosizeOnMount","disableAutosize","disableColumnFilter","disableColumnReorder","disableColumnResize","disableColumnSelector","disableColumnSorting","disableDensitySelector","hideFooterPagination","hideFooterRowCount","hideFooterSelectedRowCount","keepColumnPositionIfDraggedOutside","pageSizeOptions","resizeThrottleMs","rowPositionsDebounceMs","rowSpacingType","showColumnVerticalBorder","sortingMode","throttleRowsMs","unstable_rowSpanning","EMPTY_SIZE","EMPTY_DIMENSIONS","rowWidth","headersTotalHeight","dimensionsStateInitializer","getStaticDimensions","columnsTotalWidthSelector","colCount","useGridDimensions","errorShown","rootDimensionsRef","isFirstSizing","setDimensions","setCSSVariables","resize","computedStyle","ownerWindow","getComputedStyle","parseFloat","areElementSizesEqual","getRowHeight","updateDimensions","rootElement","cachedSize","scrollbarSizeCache","scrollDiv","offsetWidth","clientWidth","measureScrollbarSize","pinnedTopRowsTotalHeight","pinnedBottomRowsTotalHeight","hasScrollXIfNoYScrollBar","hasScrollYIfNoXScrollBar","newDimensions","prevDimensions","updateDimensionCallback","debouncedUpdateDimensions","func","lastArgs","wait","later","throttled","throttle","apiPublic","apiPrivate","handleRootMount","handleResize","onResize","k","pinnedColumnns","validRowHeight","w","globalThis","unobserve","rowsMetaStateInitializer","heights","dataRowCount","calculateCellColSpan","minFirstColumnIndex","maxLastColumnIndex","columnsLength","setCellColSpanInfo","cellProps","nextColumnIndex","isLeaf","recurrentUnwrapGroupingColumnModel","columnGroupNode","unwrappedGroupingModelToComplete","unwrapGroupingColumnModel","columnGroupingModel","unwrappedSubTree","getColumnGroupsHeaderStructure","orderedColumns","pinnedFields","getParents","groupingHeaderStructure","haveSameParents","field1","field2","depthStructure","structure","newField","lastGroup","prevField","haveDifferentContainers","createGroupLookup","groupLookup","groupParam","subTreeLookup","columnGroupsStateInitializer","DEFAULT_GRID_AUTOSIZE_OPTIONS","includeOutliers","outliersFactor","expand","disableColumnVirtualization","trackFinger","currentTouchId","changedTouches","touch","identifier","y","clientY","computeNewWidth","initialOffsetToSeparator","clickX","columnBounds","resizeDirection","newWidth","preventClick","stopImmediatePropagation","useColumnVirtualizationDisabled","asyncCheck","reject","_resolve","_reject","createControllablePromise","extractColumnWidths","widthByField","findGridCells","widths","filteredWidths","inputValues","factor","q1","q3","iqr","deviation","excludeOutliers","header","columnHeaderTitle","iconContainer","menuContainer","paddingWidth","paddingLeft","paddingRight","scrollWidth","hasColumnMin","hasColumnMax","maxContent","columnResizeStateInitializer","columnResize","resizingColumnField","createResizeRefs","initialColWidth","initialTotalWidth","previousMouseClickEvent","columnHeaderElement","headerFilterElement","groupHeaderElements","cellElements","leftPinnedCellsAfter","rightPinnedCellsBefore","fillerLeft","fillerRight","leftPinnedHeadersAfter","rightPinnedHeadersBefore","useGridColumnResize","stopResizeEventTimeout","touchId","updateWidth","prevWidth","widthDiff","columnWidthDiff","newTotalWidth","div","finalWidth","pinnedPosition","updateProperty","finishResize","stopListening","prevEvent","prevTimeStamp","timeStamp","prevClientX","prevClientY","setColumnWidth","storeReferences","separator","xStart","findGroupHeaderElementsFromField","findGridCellElementsFromCol","findLeftPinnedCellsAfterCol","findRightPinnedCellsBeforeCol","findLeftPinnedHeadersAfterCol","findRightPinnedHeadersBeforeCol","side","flipResizeDirection","getResizeDirection","computeOffsetToSeparator","handleResizeMouseUp","handleResizeMouseMove","buttons","handleTouchEnd","finger","handleTouchStart","cellSeparator","removeProperty","handleResizeStart","handleResizeStop","handleColumnResizeMouseDown","handleColumnSeparatorDoubleClick","autosizeColumns","autosizeOptions","columnVirtualizationDisabled","isAutosizingRef","userOptions","newColumns","totalWidth","total","remainingWidth","widthPerColumn","updateColumns","onColumnResize","onColumnWidthChange","property","delta","isRowContextInitialized","cellValue","rowSpanValueGetter","EMPTY_STATE","EMPTY_RANGE","skippedFields","computeRowSpanningState","colDefs","rangeToProcess","resetState","processedRange","spannedRowId","spannedRowIndex","rowSpan","backwardsHiddenCells","prevIndex","prevRowEntry","currentRow","hiddenCellIndex","relativeIndex","getInitialRangeToProcess","paginationLastRowIndex","rowSpanningStateInitializer","isFilteringPending","listViewStateInitializer","getListColumnWidth","useDataGridComponent","useGridRowsPreProcessors","previousColumnsProp","onColumnVisibilityModelChange","setGridColumnsState","getColumnPosition","setColumnVisibility","isVisible","getColumnIndexRelativeToVisibleColumns","setColumnIndex","targetIndexPosition","oldIndexPosition","updatedColumns","fieldRemoved","splice","targetIndex","oldIndex","columnReorderApi","columnsStateToExport","columnVisibilityModelToExport","colDefDimensions","propertyName","propertyValue","columnVisibilityModelToImport","preferencePanelPreProcessing","ColumnsPanel","columnsPanel","addColumnMenuItems","columnMenuItems","prevInnerWidth","hydrateColumns","useGridColumns","useGridRows","lastUpdateMs","now","lastRowCount","getRowIdProp","throttledRowsChange","run","throttleRemainingTimeMs","prevCache","updateServerRows","setLoading","getRowModels","dataRows","getRowsCount","setRowChildrenExpansion","isExpanded","currentNode","newNode","getRowGroupChildren","applySorting","applyFiltering","setRowIndex","allRows","updatedRows","rowApi","unstable_replaceRows","seenIds","removedRowId","rowTreeNodeConfig","rowProApi","rowProPrivateApi","groupRows","previousDataSource","handleStrategyProcessorChange","handleStrategyActivityChange","applyHydrateRowsProcessor","response","isRowCountPropUpdated","areNewRowsAlreadyInState","isNewLoadingAlreadyInState","isNewRowCountAlreadyInState","useGridRowSpanning","updateRowSpanningState","testRange","getUnprocessedRange","newProcessedRange","newSpannedCellsCount","newHiddenCellsCount","currentSpannedCellsCount","currentHiddenCellsCount","resetRowSpanningState","resetColSpan","columnSpanningPrivateApi","getCellColSpanInfo","useGridColumnSpanning","useGridColumnGrouping","handleColumnIndexChange","updateColumnGroupingState","getPinnedColumns","useGridFocus","lastClickedCell","publishCellFocusOut","getColumnGroupHeaderFocus","columnIndexToFocus","rowIndexToFocus","rowToFocus","colSpanInfo","columnToFocus","handleColumnHeaderFocus","handleColumnGroupHeaderFocus","handleBlur","relatedTarget","handleCellMouseDown","handleDocumentClick","cellElement","handleCellModeChange","handleRowSet","lastFocusedRowId","rowEl","lastFocusedRowIndex","dataset","rowindex","nextRow","useEventcallback","currentFocusedCell","focusPrivateApi","useGridPreferencesPanel","hidePreferences","showPreferences","preferencePanelToExport","useGridFilter","onFilterModelChange","updateFilteredRows","getFilterState","visibleRowsLookupState","addColumnMenuItem","applyFilters","upsertFilterItem","itemIndex","setFilterModel","upsertFilterItems","existingItems","deleteFilterItem","itemToDelete","showFilterPanel","targetColumnField","filterItemsWithValue","newFilterItems","filterItemOnTarget","targetColumn","hideFilterPanel","setFilterLogicOperator","setQuickFilterValues","unstable_applyFilters","inputFilterModel","isRowMatchingFilters","filterResult","filterApi","filterModelToExport","callbacks","FilterPanel","filterPanel","getRowsRef","flatFilteringMethod","filterCache","isRowPassing","handleColumnsChange","updateVisibleRowsLookupState","useGridSorting","onSortModelChange","upsertSortModel","existingIdx","newSortModel","createSortItem","directionOverride","existing","nextSort","sortRowList","buildAggregatedSortingApplier","comparatorList","parseSortItem","comparator","getSortComparator","getSortCellParams","rowList","compareRows","row1","row2","sortCellParams1","sortCellParams2","setSortModel","sortColumn","allowMultipleSorting","getSortModel","getSortedRowIds","getRowIdFromRowIndex","sortModelToExport","flatSortingMethod","sortedChildren","handleColumnHeaderClick","latestColumns","useGridDensity","onDensityChange","setDensity","newDensity","exportedDensity","restoredDensity","useGridRowsMeta","getRowHeightProp","getRowSpacing","getEstimatedRowHeight","heightCache","lastMeasuredRowIndex","isHeightMetaValid","processHeightEntry","getRowHeightEntry","rowHeightFromUser","needsFirstMeasurement","estimatedRowHeight","indexRelativeToCurrentPage","spacingTop","spacingBottom","hydrateRowsMeta","detail","didHeightsChange","resizeObserver","borderBoxSize","blockSize","__mui_id","unstable_storeRowHeightMeasurement","rowsMetaApi","unstable_setLastMeasuredRowIndex","storeRowHeightMeasurement","didChange","resetRowHeights","rowsMetaPrivateApi","observeRowHeight","useGridScroll","colRef","scrollCoordinates","cellWidth","elementIndex","targetOffsetHeight","showColumnMenu","hideColumnMenu","visibleOrderedFields","fieldIndex","useGridColumnMenu","onColumnHeaderClick","onColumnHeaderContextMenu","onColumnHeaderDoubleClick","onColumnHeaderOver","onColumnHeaderOut","onColumnHeaderEnter","onColumnHeaderLeave","onCellClick","onCellDoubleClick","onCellKeyDown","onPreferencePanelClose","onPreferencePanelOpen","onMenuOpen","onMenuClose","onRowDoubleClick","onRowClick","onStateChange","useGridEvents","useGridStatePersistence","updateListColumnWidth","listColumn","useGridListView","GRID_DEFAULT_LOCALE_TEXT","noRowsLabel","noResultsOverlayLabel","toolbarDensity","toolbarDensityLabel","toolbarDensityCompact","toolbarDensityStandard","toolbarDensityComfortable","toolbarColumns","toolbarColumnsLabel","toolbarFilters","toolbarFiltersLabel","toolbarFiltersTooltipHide","toolbarFiltersTooltipShow","toolbarFiltersTooltipActive","count","toolbarQuickFilterPlaceholder","toolbarQuickFilterLabel","toolbarQuickFilterDeleteIconLabel","toolbarExport","toolbarExportLabel","toolbarExportCSV","toolbarExportPrint","toolbarExportExcel","columnsManagementSearchTitle","columnsManagementNoColumns","columnsManagementShowHideAllText","columnsManagementReset","columnsManagementDeleteIconLabel","filterPanelAddFilter","filterPanelRemoveAll","filterPanelDeleteIconLabel","filterPanelLogicOperator","filterPanelOperator","filterPanelOperatorAnd","filterPanelOperatorOr","filterPanelColumns","filterPanelInputLabel","filterPanelInputPlaceholder","filterOperatorContains","filterOperatorDoesNotContain","filterOperatorEquals","filterOperatorDoesNotEqual","filterOperatorStartsWith","filterOperatorEndsWith","filterOperatorIs","filterOperatorNot","filterOperatorAfter","filterOperatorOnOrAfter","filterOperatorBefore","filterOperatorOnOrBefore","filterOperatorIsEmpty","filterOperatorIsNotEmpty","filterOperatorIsAnyOf","headerFilterOperatorContains","headerFilterOperatorDoesNotContain","headerFilterOperatorEquals","headerFilterOperatorDoesNotEqual","headerFilterOperatorStartsWith","headerFilterOperatorEndsWith","headerFilterOperatorIs","headerFilterOperatorNot","headerFilterOperatorAfter","headerFilterOperatorOnOrAfter","headerFilterOperatorBefore","headerFilterOperatorOnOrBefore","headerFilterOperatorIsEmpty","headerFilterOperatorIsNotEmpty","headerFilterOperatorIsAnyOf","filterValueAny","filterValueTrue","filterValueFalse","columnMenuLabel","columnMenuShowColumns","columnMenuManageColumns","columnMenuFilter","columnMenuHideColumn","columnMenuUnsort","columnMenuSortAsc","columnMenuSortDesc","columnHeaderFiltersTooltipActive","columnHeaderFiltersLabel","columnHeaderSortIconLabel","footerRowSelected","footerTotalRows","footerTotalVisibleRows","visibleCount","totalCount","checkboxSelectionHeaderName","checkboxSelectionSelectAllRows","checkboxSelectionUnselectAllRows","checkboxSelectionSelectRow","checkboxSelectionUnselectRow","booleanCellTrueLabel","booleanCellFalseLabel","actionsCellMore","pinToLeft","pinToRight","unpin","treeDataGroupingHeaderName","treeDataExpand","treeDataCollapse","groupingColumnHeaderName","groupColumn","unGroupColumn","detailPanelToggle","expandDetailPanel","collapseDetailPanel","MuiTablePagination","rowReorderingHeaderName","aggregationMenuItemHeader","aggregationFunctionLabelSum","aggregationFunctionLabelAvg","aggregationFunctionLabelMin","aggregationFunctionLabelMax","aggregationFunctionLabelSize","CIRCULAR_CONTENT_SIZE","DEFAULT_CONTENT_WIDTH_RANGE","CONTENT_WIDTH_RANGE_BY_TYPE","randomNumberGenerator","seed","imul","createRandomNumberGenerator","empty","skeletonProps","Skeleton","GridIconButtonContainerRoot","GridIconButtonContainer","icon","GridColumnHeaderFilterIconButtonWrapped","counter","GridColumnHeaderFilterIconButton","isOpen","toggleFilter","iconButton","columnFilteredIcon","baseBadge","badgeContent","GridColumnHeaderSortIconRaw","iconElement","icons","iconProps","columnSortedAscendingIcon","columnSortedDescendingIcon","columnUnsortedIcon","getIcon","overlap","GridColumnHeaderSortIcon","GridSelectedRowCountRoot","selectedRowCount","breakpoints","up","GridSelectedRowCount","rowSelectedText","GridFooterContainerRoot","GridFooterContainer","GridFooter","selectedRowCountElement","rowCountElement","footerRowCount","paginationElement","GridRowCountRoot","GridRowCount","GridOverlayRoot","GridOverlay","getPinnedCellOffset","pinnedOffset","shouldCellShowRightBorder","indexInSection","sectionLength","showCellVerticalBorderRootProp","isSectionLastCell","shouldCellShowLeftBorder","pinnedRight","GridScrollbarFillerCell","rtlFlipSide","attachPinnedStyle","SkeletonOverlay","skeletonLoadingOverlay","getColIndex","GridSkeletonLoadingOverlay","forwardedRef","viewportHeight","skeletonRowsCount","inViewportCount","allVisibleColumns","getPinnedPosition","array","rowCells","isPinnedLeft","isPinnedRight","pinnedSide","sectionIndex","pinnedStyle","showRightBorder","showLeftBorder","isLastColumn","isFirstPinnedRight","hasFillerBefore","hasFillerAfter","expandedWidth","emptyCellWidth","emptyCell","skeletonCell","hasScrollbarFiller","resizedColIndex","currentWidth","getPropertyValue","pinnedCells","LOADING_VARIANTS","CircularProgress","LinearProgress","skeleton","GridLoadingOverlay","noRowsVariant","rowsCount","activeVariant","GridNoRowsOverlay","GridPaginationRoot","TablePagination","maxHeight","tablePaginationClasses","selectLabel","defaultLabelDisplayedRows","estimated","GridPagination","estimatedRowCount","computedProps","backIconButtonProps","nextIconButtonProps","lastPage","computedPage","handlePageSizeChange","handlePageChange","isPageSizeIncludedInPageSizeOptions","locales","wrappedLabelDisplayedRows","labelDisplayedRows","wrapLabelDisplayedRows","rowsPerPageOptions","rowsPerPage","onPageChange","onRowsPerPageChange","GridPanelContentRoot","GridPanelContent","GridPanelFooterRoot","panelFooter","GridPanelFooter","GridPanelWrapperRoot","panelWrapper","GridPanelWrapper","FocusTrap","disableEnforceFocus","TrapFocus","GridFilterFormRoot","filterForm","FilterFormDeleteIcon","filterFormDeleteIcon","marginBottom","FilterFormLogicOperatorInput","filterFormLogicOperatorInput","FilterFormColumnInput","filterFormColumnInput","FilterFormOperatorInput","filterFormOperatorInput","FilterFormValueInput","filterFormValueInput","getColumnLabel","GridFilterForm","hasMultipleFilters","deleteFilter","applyFilterChanges","showMultiFilterOperators","disableMultiFilterOperator","applyMultiFilterOperatorChanges","logicOperators","Or","columnsSort","filterColumns","deleteIconProps","logicOperatorInputProps","operatorInputProps","columnInputProps","valueInputProps","readOnly","filterableColumns","columnSelectId","columnSelectLabelId","operatorSelectId","operatorSelectLabelId","deleteIcon","logicOperatorInput","columnInput","operatorInput","valueInput","valueRef","filterSelectorRef","multiFilterOperator","hasLogicOperatorColumn","baseFormControlProps","isBaseSelectNative","baseInputLabelProps","valueInputPropsOther","selectedField","itemField","selectedNonFilterableColumn","filteredFields","currentFilters","isFieldIncluded","sortedFilteredColumns","currentColumn","currentOperator","changeColumn","newOperator","changeOperator","op","eraseItemValue","changeLogicOperator","handleDeleteFilter","filterPanelDeleteIcon","sx","getLogicOperatorLocaleKey","getGridFilter","GridFilterPanel","filterableColumnsLookup","lastFilterRef","placeholderFilter","filterFormProps","getColumnForNewFilter","disableAddFilterButton","disableRemoveAllButton","applyFilter","applyFilterLogicOperator","getDefaultFilter","nextColumnWithOperator","nextFieldName","getNewFilter","nextColumnFieldName","readOnlyFilters","validFilters","addNewFilter","newFilter","shouldCloseFilterPanel","handleRemoveAll","filterPanelAddIcon","filterPanelRemoveAllIcon","GridColumnsPanel","columnsManagement","checkColumnVisibilityModelsSame","aFalseValues","bFalseValues","defaultSearchPredicate","searchValue","searchInput","GridColumnsManagement","searchInputRef","initialColumnVisibilityModel","setSearchValue","searchPredicate","autoFocusSearchField","disableShowHideToggle","disableResetButton","toggleAllMode","getTogglableColumns","searchInputProps","isResetDisabled","sortedColumns","toggleColumn","togglableColumns","togglableSortedColumns","toggleAllColumns","handleSearchValueChange","hideableColumns","allHideableColumnsVisible","allHideableColumnsHidden","firstSwitchRef","firstHideableColumnFound","isFirstHideableColumn","handleSearchReset","GridColumnsManagementHeader","SearchInput","startAdornment","baseInputAdornment","quickFilterIcon","quickFilterClearIcon","autoComplete","GridColumnsManagementBody","FormControlLabel","control","GridColumnsManagementEmptyText","GridColumnsManagementFooter","columnsManagementHeader","TextField","columnsManagementSearchInput","inputBaseClasses","columnsManagementFooter","_ref6","grey","gridPanelClasses","GridPanelRoot","GridPaperRoot","GridPanel","isPlaced","setIsPlaced","modifiers","rootBoundary","phase","setAnchorEl","panelAnchor","touchEvent","elevation","isRowReorderingEnabledSelector","rowReordering","isObjectEmpty","GridRow","refProp","styleProp","onDoubleClick","onMouseEnter","onMouseLeave","onMouseOut","onMouseOver","treeDepth","isRowReorderingEnabled","hasFocusCell","hasVirtualFocusCellLeft","hasVirtualFocusCellRight","composeGridClasses","getRowAriaAttributes","useGridRowAriaAttributes","publish","propHandler","publishClick","heightEntry","rowStyle","rowClassNames","getRowClassName","getCell","indexRelativeToAllColumns","isReorderCell","canReorderColumn","canReorderRow","disableDragEvents","cellIsNotVisible","VIRTUAL","leftCells","rightCells","middleColumnsLength","eventHandlers","ScrollbarFiller","MemoizedGridRow","cachedSupportsPreventScroll","GridCell","onMouseDown","onMouseUp","onKeyUp","onDragEnter","editCellState","canManageOwnFocus","rootClasses","getCellClassName","classNames","valueToRender","cellRef","isSelectionMode","cellSelection","publishMouseUp","publishMouseDown","isCellRowSpanned","cellStyle","isLeftPinned","isRightPinned","focusableElement","elementToFocus","handleFocus","onFocus","updatedRow","editCellStateRest","valueString","draggableEventHandlers","MemoizedGridCell","ColumnHeaderMenuIcon","columnMenuId","columnMenuButtonId","iconButtonRef","handleMenuIconClick","columnMenuIcon","GridColumnHeaderMenu","ContentComponent","contentComponentProps","labelledby","GridColumnHeaderTitleRoot","fontWeight","ColumnHeaderInnerTitle","GridColumnHeaderTitle","description","titleRef","setTooltip","handleMouseOver","isOver","scrollHeight","clientHeight","GridColumnHeaderSeparatorSides","GridColumnHeaderSeparatorRaw","Right","resizing","stopClick","columnResizeIcon","GridColumnHeaderSeparator","GridGenericColumnHeaderItem","isResizing","separatorSide","isDraggable","headerComponent","columnMenuIconButton","columnTitleIconButtons","draggableContainerProps","columnHeaderSeparatorProps","headerCellRef","ariaSort","draggableContainer","draggable","titleContainer","titleContainerContent","columnWidth","columnMenuOpen","isLast","filterItemsCounter","showColumnMenuIcon","setShowColumnMenuIcon","isDragging","isLastUnpinned","isSiblingFocused","isColumnSorted","isColumnFiltered","isColumnNumeric","mouseEventsHandlers","onContextMenu","onBlur","onDragStart","onDragEnd","handleExited","showSortIcon","hideSortIcons","columnHeaderFilterIconButton","columnHeaderSortIcon","elementId","GridColumnGroupHeader","columnGroupsLookup","renderHeaderGroup","renderParams","GridColumnHeaderRow","columnHeaderRow","GridColumnHeadersRoot","GridBaseColumnHeaders","MemoizedGridColumnHeaders","getInnerProps","getColumnHeadersRow","getColumnGroupHeadersRows","dragCol","setDragCol","resizeCol","setResizeCol","columnGroupsModel","handleColumnResizeStart","handleColumnResizeStop","handleColumnReorderStart","handleColumnReorderStop","leftRenderContext","rightRenderContext","getColumnsToRender","currentContext","renderedColumns","getFillers","leftOverflow","isNotPinned","leftOffsetWidth","getColumnHeaders","isFirstColumn","siblingWithBorderingSeparator","GridColumnHeaderItem","getColumnGroupHeaders","columnsToRender","rowStructure","firstColumnFieldToRender","firstGroupToRender","firstGroupIndex","lastColumnFieldToRender","lastGroupToRender","lastGroupIndex","visibleColumnGroupHeader","groupStructure","firstVisibleColumnIndex","headerInfo","Left","useGridColumnHeaders","StyledMenuList","GridColumnMenuContainer","handleListKeyDown","autoFocus","GridColumnMenuHideItem","ListItemIcon","columnMenuHideIcon","ListItemText","GridColumnMenuManageItem","showColumns","columnMenuManageColumnsIcon","GridColumnMenuColumnsItem","GridColumnMenuFilterItem","showFilter","columnMenuFilterIcon","GridColumnMenuSortItem","onSortMenuItemClick","getLabel","columnMenuSortAscendingIcon","columnMenuSortDescendingIcon","GRID_COLUMN_MENU_SLOTS","columnMenuSortItem","columnMenuFilterItem","columnMenuColumnsItem","GRID_COLUMN_MENU_SLOT_PROPS","displayOrder","GridGenericColumnMenu","defaultSlots","defaultSlotProps","orderedSlots","addDividers","processedComponents","processedSlotProps","mergedProps","currentSlotProps","defaultItems","userItems","defaultComponentKeys","sorted","leftItemProps","rightItemProps","isFinite","itemProps","processedComponentProps","customProps","baseDivider","useGridColumnMenuSlots","otherProps","GridColumnMenu","GridNoResultsOverlay","GridColumnUnsortedIcon","nextSortDirection","GridArrowUpwardIcon","createSvgIcon","GridArrowDownwardIcon","GridKeyboardArrowRight","GridExpandMoreIcon","GridFilterListIcon","GridFilterAltIcon","GridSearchIcon","GridMenuIcon","GridCheckCircleIcon","GridColumnIcon","GridSeparatorIcon","GridViewHeadlineIcon","GridTableRowsIcon","GridViewStreamIcon","GridTripleDotsVerticalIcon","GridCloseIcon","GridAddIcon","GridRemoveIcon","GridLoadIcon","GridDragIcon","GridSaveAltIcon","GridCheckIcon","GridMoreVertIcon","GridVisibilityOffIcon","GridViewColumnIcon","GridClearIcon","GridDeleteIcon","GridDeleteForeverIcon","iconSlots","openFilterButtonIcon","columnSelectorIcon","densityCompactIcon","densityStandardIcon","densityComfortableIcon","treeDataCollapseIcon","treeDataExpandIcon","groupingCriteriaCollapseIcon","groupingCriteriaExpandIcon","detailPanelExpandIcon","detailPanelCollapseIcon","rowReorderIcon","columnMenuClearIcon","columnReorderIcon","MUIBadge","MUICheckbox","MUIDivider","MUITextField","MUIFormControl","MUISelect","MUIButton","MUIIconButton","MUIInputAdornment","MUITooltip","MUIPopper","MUIInputLabel","MUIMenuItem","MUIChip","DATA_GRID_DEFAULT_SLOTS_COMPONENTS","materialSlots","GridSkeletonCell","GridColumnHeaders","noResultsOverlay","noRowsOverlay","useProps","allProps","startsWith","forwardedProps","groupForwardedProps","DATA_GRID_FORCED_PROPS","useDataGridProps","inProps","themedProps","useThemeProps","overrides","computeSlots","injectDefaultProps","accessibleRowCount","ariaRowIndex","DataGridRaw","propTypes","PropTypes","isRequired","experimentalFeatures","warnIfFocusStateIsNotSynced","getDetailPanelContent","nonce","onColumnOrderChange","GridActionsCellItem","handleClick","closeMenuOnClick","GridToolbarContainerRoot","flexWrap","GridToolbarContainer","GridPanelHeaderRoot","panelHeader","GridPanelHeader","GridToolbarColumnsButton","columnButtonId","columnPanelId","onPointerUp","GridToolbarDensitySelector","densityButtonId","densityMenuId","densityOptions","densityElements","handleDensityUpdate","handleDensitySelectorClose","GridToolbarFilterListRoot","_props","toolbarFilterList","GridToolbarFilterButton","badgeProps","badge","filterButtonId","filterPanelId","tooltipContentNode","getOperatorLabel","getFilterItemValue","getValueAsString","GridToolbarQuickFilterRoot","toolbarQuickFilter","paddingBottom","defaultSearchValueParser","searchText","word","defaultSearchValueFormatter","GridToolbarQuickFilter","quickFilterParser","quickFilterFormatter","prevQuickFilterValuesRef","prevSearchValue","updateSearchValue","newSearchValue","newQuickFilterValues","debouncedUpdateSearchValue","debounce","GridToolbar","showQuickFilter","quickFilterProps","GRID_EXPERIMENTAL_ENABLED","gridColumnResizeSelector","gridResizingColumnFieldSelector","_typeof","iterator","_interopRequireWildcard","require","version","objectIs","useState","useEffect","useLayoutEffect","useDebugValue","checkIfSnapshotChanged","inst","latestGetSnapshot","nextValue","shim","_useState"],"sourceRoot":""}