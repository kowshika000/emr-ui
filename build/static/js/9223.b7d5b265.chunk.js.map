{"version":3,"file":"static/js/9223.b7d5b265.chunk.js","mappings":"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","sources":["theme.js","Redux/api/axiosInstance.jsx","Redux/api/apiEndpoints.jsx","Redux/slice/login/authSlice.jsx","Redux/slice/appointement/allBranchSlice.jsx","components/global/Topbar.jsx","components/other/Landing.jsx","core/modules/secure/SecureLayout.jsx","core/EMRRouteBuilder.jsx","components/global/Toast.jsx","auth/LoginForm.jsx","auth/Signup.jsx","auth/ForgotPassword.jsx","core/api/AxiosInstance.js","core/services/APIService.js","components/global/loader/LoadingContext.js","auth/ResetPassword.jsx","core/modules/public/PublicRoutes.jsx","auth/auth.jsx","components/global/ScreenWrapper.jsx","components/global/EMRtabs.jsx","components/FormFields/FormInput.jsx","components/FormFields/DropdownOptions.jsx","Redux/slice/registration/registerPatientsSlice.jsx","secure/registration/component/PatientInfo/PatientInfo.jsx","Redux/slice/appointement/allDoctorsSlice.jsx","secure/registration/component/RegisterPatient.jsx","Redux/slice/registration/emergencyPatientSlice.jsx","secure/registration/component/Emergency.jsx","Redux/slice/appointement/searchPatientSlice.jsx","Redux/slice/registration/revisitSlice.jsx","secure/registration/component/Revisit.jsx","Redux/slice/dashboard/scheduleListSlice.jsx","components/global/loader/EMRLoaderOverlay.jsx","components/global/EMRMenuIcon.jsx","secure/dashboard/components/ScheduleList.jsx","secure/dashboard/components/PatientRecall.jsx","secure/dashboard/components/PatientVaccinationSchedules.jsx","secure/registration/component/PatientInfo/PatientList.jsx","secure/registration/Registration.jsx","secure/doctorNurseDashboard/components/docOptions.jsx","secure/doctorNurseDashboard/components/RevenueDataList.jsx","secure/doctorNurseDashboard/components/OthersDataList.jsx","secure/doctorNurseDashboard/components/mainDataList.jsx","components/global/doctorNurseLoader.jsx","secure/doctorNurseDashboard/doctorDashboard.jsx","secure/appointment/component/BlockAvailability.jsx","secure/privileges/Privileges.jsx","secure/insurance/data.js","secure/insurance/components/opInsurance/components/ClaimDetails.jsx","secure/insurance/components/opInsurance/components/ManualSubmission.jsx","secure/insurance/components/opInsurance/OPInsurance.jsx","secure/insurance/components/ipInsurance/IPInsurance.jsx","secure/insurance/components/referralRegistration/ReferralRegistration.jsx","secure/insurance/Insurance.jsx","components/FormFields/Loading.jsx","Redux/slice/appointement/doctorAvailableSlotSlice.jsx","Redux/slice/appointement/bookAppointementSlice.jsx","secure/appointment/component/NewEvent.jsx","Redux/slice/appointement/cancelScheduleSlice.jsx","secure/appointment/bookSlot/modal/Cancel.jsx","Redux/slice/appointement/reScheduleSlice.jsx","secure/appointment/bookSlot/modal/Reschedule.jsx","secure/appointment/bookSlot/Events.jsx","secure/appointment/bookSlot/CalendarView.jsx","secure/appointment/bookSlot/Filter.jsx","secure/appointment/bookSlot/Appointment.jsx","secure/appointment/AllAppointment.jsx","secure/masterSetup/Org/AddOrg.jsx","secure/masterSetup/Org/EditOrg.jsx","secure/masterSetup/Org/OrgSetup.jsx","secure/masterSetup/master.jsx","core/modules/secure/SecureRoutes.jsx","core/Routes.jsx","components/global/ToastProvider.jsx","components/global/ErrorBoundary.jsx","Redux/slice/appointement/allAppointmentSlice.jsx","Redux/slice/appointement/allFacilitySheduleSlice.jsx","Redux/slice/appointement/facilitiesAvailableSlotSlice.jsx","Redux/slice/appointement/allFacilitiesSlice.jsx","Redux/slice/appointement/searchDoctorSilce.jsx","Redux/slice/appointement/searchFacilitiesSlice.jsx","Redux/store.jsx","App.jsx","bootstrap.js"],"sourcesContent":["import { createContext, useState, useMemo } from \"react\";\nimport { createTheme } from \"@mui/material/styles\";\n\n// color design tokens export\nexport const tokens = (mode) => ({\n  ...(mode === \"dark\"\n    ? {\n        grey: {\n          100: \"#e0e0e0\",\n          200: \"#c2c2c2\",\n          300: \"#a3a3a3\",\n          400: \"#858585\",\n          500: \"#666666\",\n          600: \"#525252\",\n          700: \"#3d3d3d\",\n          800: \"#292929\",\n          900: \"#141414\",\n        },\n        primary: {\n          100: \"#d0d1d5\",\n          200: \"#a1a4ab\",\n          300: \"#727681\",\n          400: \"#1F2A40\",\n          // 500: \"#141b2d\",\n          500: \"#011d65\",\n          600: \"#101624\",\n          700: \"#0c101b\",\n          800: \"#080b12\",\n          900: \"#040509\",\n        },\n        greenAccent: {\n          100: \"#dbf5ee\",\n          200: \"#b7ebde\",\n          300: \"#94e2cd\",\n          400: \"#70d8bd\",\n          500: \"#4cceac\",\n          600: \"#3da58a\",\n          700: \"#2e7c67\",\n          800: \"#1e5245\",\n          900: \"#0f2922\",\n        },\n        redAccent: {\n          100: \"#f8dcdb\",\n          200: \"#f1b9b7\",\n          300: \"#e99592\",\n          400: \"#e2726e\",\n          500: \"#db4f4a\",\n          600: \"#af3f3b\",\n          700: \"#832f2c\",\n          800: \"#58201e\",\n          900: \"#2c100f\",\n        },\n        blueAccent: {\n          100: \"#e1e2fe\",\n          200: \"#c3c6fd\",\n          300: \"#a4a9fc\",\n          400: \"#868dfb\",\n          500: \"#6870fa\",\n          600: \"#535ac8\",\n          700: \"#3e4396\",\n          800: \"#2a2d64\",\n          900: \"#151632\",\n        },\n      }\n    : {\n        grey: {\n          100: \"#141414\",\n          200: \"#292929\",\n          300: \"#3d3d3d\",\n          400: \"#525252\",\n          500: \"#666666\",\n          600: \"#858585\",\n          700: \"#a3a3a3\",\n          800: \"#c2c2c2\",\n          900: \"#e0e0e0\",\n        },\n        primary: {\n          100: \"#040509\",\n          200: \"#080b12\",\n          300: \"#0c101b\",\n          400: \"#f2f0f0\", // manually changed\n          500: \"#141b2d\",\n          600: \"#1F2A40\",\n          700: \"#727681\",\n          800: \"#a1a4ab\",\n          900: \"#d0d1d5\",\n        },\n        greenAccent: {\n          100: \"#0f2922\",\n          200: \"#1e5245\",\n          300: \"#2e7c67\",\n          400: \"#3da58a\",\n          500: \"#4cceac\",\n          600: \"#70d8bd\",\n          700: \"#94e2cd\",\n          800: \"#b7ebde\",\n          900: \"#dbf5ee\",\n        },\n        redAccent: {\n          100: \"#2c100f\",\n          200: \"#58201e\",\n          300: \"#832f2c\",\n          400: \"#af3f3b\",\n          500: \"#db4f4a\",\n          600: \"#e2726e\",\n          700: \"#e99592\",\n          800: \"#f1b9b7\",\n          900: \"#f8dcdb\",\n        },\n        blueAccent: {\n          100: \"#151632\",\n          200: \"#2a2d64\",\n          300: \"#3e4396\",\n          400: \"#535ac8\",\n          500: \"#6870fa\",\n          600: \"#868dfb\",\n          700: \"#a4a9fc\",\n          800: \"#c3c6fd\",\n          900: \"#e1e2fe\",\n        },\n      }),\n});\n\n// mui theme settings\nexport const themeSettings = (mode) => {\n  const colors = tokens(mode);\n  return {\n    palette: {\n      mode: mode,\n      ...(mode === \"dark\"\n        ? {\n            // palette values for dark mode\n            primary: {\n              main: colors.primary[500],\n            },\n            secondary: {\n              main: colors.greenAccent[500],\n            },\n            neutral: {\n              dark: colors.grey[700],\n              main: colors.grey[500],\n              light: colors.grey[100],\n            },\n            background: {\n              default: colors.primary[500],\n            },\n          }\n        : {\n            // palette values for light mode\n            primary: {\n              main: colors.primary[100],\n            },\n            secondary: {\n              main: colors.greenAccent[500],\n            },\n            neutral: {\n              dark: colors.grey[700],\n              main: colors.grey[500],\n              light: colors.grey[100],\n            },\n            background: {\n              default: \"#fcfcfc\",\n            },\n          }),\n    },\n    typography: {\n      fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n      fontSize: 12,\n      h1: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 40,\n      },\n      h2: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 32,\n      },\n      h3: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 24,\n      },\n      h4: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 20,\n      },\n      h5: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 16,\n      },\n      h6: {\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\n        fontSize: 14,\n      },\n    },\n  };\n};\n\n// context for color mode\nexport const ColorModeContext = createContext({\n  toggleColorMode: () => {},\n});\nexport const overridesContext = createContext({\n  overrides: () => {},\n});\n\nexport const useMode = () => {\n  const [mode, setMode] = useState(\"light\");\n\n  const colorMode = useMemo(\n    () => ({\n      toggleColorMode: () =>\n        setMode((prev) => (prev === \"light\" ? \"dark\" : \"light\")),\n    }),\n    []\n  );\n\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\n  return [theme, colorMode];\n};\n","import axios from \"axios\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL:\r\n    // \"http://localhost:8080/app/\",\r\n    \"http://ec2-16-171-232-159.eu-north-1.compute.amazonaws.com:8080/app/\",\r\n});\r\naxiosInstance.interceptors.request.use((config) => {\r\n  if (config.data instanceof FormData) {\r\n    config.headers[\"Content-Type\"] = \"multipart/form-data\";\r\n  } else {\r\n    config.headers[\"Content-Type\"] = \"application/json\";\r\n  }\r\n  return config;\r\n});\r\n\r\nexport default axiosInstance;\r\n","export const API_ENDPOINTS = {\r\n  LOGIN: \"auth/signin\",\r\n  ALL_BRANCH: \"admin/getAllBranches\",\r\n  ALL_APPOINTMENT: \"doctorappointment/getAllAppointments\",\r\n  All_DOCTORS: \"doctor/getAllDoctors\",\r\n  ALL_FACILITIES: \"facility/getAllFacilitiesByBranchAndDate\",\r\n  DOC_AVAILABLE: \"timeslot/getAvailableSlotsForAllDoctors\",\r\n  FACILITY_SCHEDULES: \"facility/getAllFacilitySchedules\",\r\n  FACILITY_AVAILABLE: \"timeslot/getAvailableSlotsForAllFacilities\",\r\n  SEARCH_DOCTOR: \"doctor/searchDoctors\",\r\n  SEARCH_FACILITY: \"facility/searchFacilities\",\r\n  SEARCH_PATIENT: \"patient/searchPatients\",\r\n  REGISTER_PATIENT: \"patient/patientRegistration\",\r\n  REVISIT_PATIENT: \"patient/patientRevisit\",\r\n  EMERGENCY_PATIENT: \"patient/patientEmergency\",\r\n  BOOK_APPOINTMENT: \"doctorappointment/bookAppointment\",\r\n  SCHEDULE_LIST: \"doctorappointment/getScheduleList\",\r\n  RE_SCHEDULE: \"doctorappointment/rescheduleAppointment\",\r\n  CANCEL_SCHEDULE: \"doctorappointment/cancelAppointment\",\r\n};\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const login = createAsyncThunk(\r\n  \"auth/login\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        API_ENDPOINTS.LOGIN,\r\n        credentials\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || \"Login Failed\");\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState: {\r\n    user: [],\r\n    // token: null,\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.user = null; // Ensure user is null (not an empty array)\r\n      state.loading = false;\r\n      state.error = null;\r\n      \r\n      localStorage.removeItem(\"user\");\r\n      localStorage.removeItem(\"rememberedUsername\"); // Remove remembered username too\r\n    }\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(login.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(login.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.user = action.payload.data; // Store user data properly\r\n        localStorage.setItem(\"user\", JSON.stringify(action.payload.data)); // Store only user data\r\n      })\r\n      \r\n      .addCase(login.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { logout } = authSlice.actions;\r\n\r\nexport default authSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const allBranch = createAsyncThunk(\r\n  \"admin/branch\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(\r\n        API_ENDPOINTS.ALL_BRANCH,\r\n        credentials\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst allBranceSlice = createSlice({\r\n  name: \"allBranch\",\r\n  initialState: {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(allBranch.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(allBranch.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.data = action.payload.data;\r\n      })\r\n      .addCase(allBranch.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default allBranceSlice.reducer;\r\n","import React, { useEffect, useMemo, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Box,\n  IconButton,\n  useTheme,\n  Tooltip,\n  Typography,\n  Divider,\n  Chip,\n} from \"@mui/material\";\nimport { useContext } from \"react\";\nimport { ColorModeContext, tokens } from \"../../theme\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\nimport DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\nimport NotificationsOutlinedIcon from \"@mui/icons-material/NotificationsOutlined\";\nimport \"./topbar.css\";\nimport ListAltIcon from \"@mui/icons-material/ListAlt\";\nimport ErrorIcon from \"@mui/icons-material/Error\";\nimport SwapHorizIcon from \"@mui/icons-material/SwapHoriz\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../Redux/slice/login/authSlice\";\nimport { allBranch } from \"../../Redux/slice/appointement/allBranchSlice\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Menu, MenuBook } from \"@mui/icons-material\";\nimport { Switch, FormControlLabel } from \"@mui/material\";\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\nimport ShareLocationIcon from \"@mui/icons-material/ShareLocation\";\n\nconst Topbar = ({ reloadApp, branchId, username, role }) => {\n  const [branches, setBranches] = useState([]);\n  // const [branch, setBranch] = useState(null);\n\n  const [userData, setUserData] = useState(null);\n  const [selectedBranchId, setSelectedBranchId] = useState(null);\n\n  useEffect(() => {\n    const loginUser = localStorage.getItem(\"user\");\n\n    if (loginUser) {\n      const parsedUser = JSON.parse(loginUser);\n      setUserData(parsedUser.data);\n      setSelectedBranchId(parsedUser.data?.branchMaster?.branchId || null);\n      console.log(\"userData\", parsedUser.data);\n    } else {\n      console.log(\"No user data found in localStorage\");\n    }\n  }, []);\n\n  const currentURL = window.location.href;\n  const dispatch = useDispatch();\n  const { data } = useSelector((state) => state?.allBranch);\n  const branchData = data?.data;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (!branchData?.length) {\n      dispatch(allBranch());\n    }\n  }, [dispatch, branchData]);\n\n  useEffect(() => {\n    if (branchData) {\n      setBranches(branchData);\n    }\n  }, [data]);\n\n  const theme = useTheme();\n  const colorMode = useContext(ColorModeContext);\n\n  const [open, setOpen] = useState(false);\n\n  const handleChange = (branchId) => {\n    setSelectedBranchId(branchId);\n    setOpen(false);\n  };\n\n  const logoutApp = () => {\n    dispatch(logout());\n    navigate(\"/login\");\n  };\n\n  const branchName = selectedBranchId\n    ? branches.find((branch) => branch.branchId === selectedBranchId)\n        ?.branchName\n    : \"Select Branch\";\n\n  return (\n    <Box\n      id=\"topbar\"\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      p={2}\n      padding={\"5px 16px\"}\n      height={\"10%\"}\n      sx={{\n        backgroundColor: \"#71BBB2\",\n        color: \"black\",\n      }}\n    >\n      {currentURL.includes(\"secure\") && (\n        <>\n          <Box display={\"flex\"} my={\"auto\"} gap={\"10px\"}>\n            <Box alignSelf={\"center\"} fontSize={\"26px\"}>\n              E M R\n            </Box>\n            <IconButton onClick={() => navigate(\"/secure/landing\")}>\n              <Menu />\n            </IconButton>\n          </Box>\n          <Box display=\"flex\" my={\"auto\"} gap={2}>\n            <div className=\"my-auto \">\n              {/* <div style={{ color: \"white\",  }}>\n                {userData?.roleMaster?.roleName}\n              </div> */}\n              <Chip\n                label={userData?.roleMaster?.roleName}\n                variant=\"outlined\"\n                sx={{ fontSize: \"12px\" }}\n              />\n            </div>\n            <Box\n              alignSelf={\"center\"}\n              sx={{\n                position: \"relative\",\n                backgroundColor: \"transparent\",\n                borderRadius: \"5px\",\n                padding: \"5px\",\n                cursor: \"pointer\",\n              }}\n            >\n              <Box\n                display=\"flex\"\n                alignItems=\"center\"\n                onClick={() => setOpen(!open)}\n                sx={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <Chip\n                  icon={<ShareLocationIcon color=\"white\" />}\n                  label={branchName}\n                  sx={{\n                    backgroundColor: \"#71BBB2\",\n                    fontSize: \"12px\",\n                    textTransform: \"capitalize\",\n                    \"&:hover\": {\n                      boxShadow: \"0px 4px 8px rgba(0, 0, 0, 0.2)\",\n                      transform: \"scale(1.05)\",\n                    },\n                  }}\n                />\n              </Box>\n\n              {/* Dropdown List */}\n              {open && (\n                <Box\n                  sx={{\n                    position: \"absolute\",\n                    top: \"40px\",\n                    left: \"0\",\n                    right: \"0\",\n                    backgroundColor: \"rgb(204, 219, 219)\",\n                    borderRadius: \"5px\",\n                    zIndex: 1,\n                    minWidth: \"140px\",\n                    overflowY: \"auto\",\n                    color: \"black\",\n                  }}\n                >\n                  {branches.map((branch) => (\n                    <MenuItem\n                      key={branch.branchId}\n                      // value={branch.branchId}\n                      onClick={() => handleChange(branch.branchId)}\n                    >\n                      {branch.branchName}\n                    </MenuItem>\n                  ))}\n                </Box>\n              )}\n            </Box>\n\n            <IconButton onClick={colorMode.toggleColorMode}>\n              {theme.palette.mode === \"dark\" ? (\n                <DarkModeOutlinedIcon />\n              ) : (\n                <LightModeOutlinedIcon />\n              )}\n            </IconButton>\n            <IconButton>\n              <NotificationsOutlinedIcon />\n            </IconButton>\n\n            {/* <IconButton onClick={() => navigate(\"/secure/landing\")}>\n              <Menu  />\n            </IconButton> */}\n            <IconButton sx={{ margin: \"0 10px\" }} onClick={logoutApp}>\n              <LogoutIcon />\n            </IconButton>\n          </Box>\n\n          {/* <div className=\"my-auto \">\n            <IconButton onClick={() => navigate(\"/secure/landing\")}>\n              <Menu  />\n            </IconButton>\n          </div> */}\n        </>\n      )}\n\n      {/* Dashboard content */}\n      {/* {currentURL.includes(\"doctor\") && !currentURL.includes(\"dashboard\") ? (\n        <>\n          \n          <Box display=\"flex\" alignItems=\"center\">\n            <Typography variant=\"body1\">Clinic Date - 21/09/2024</Typography>\n            <Divider orientation=\"vertical\" flexItem sx={{ mx: 2 }} />\n            <Typography variant=\"body1\">Start time - HH:MM:SS</Typography>\n            <Divider orientation=\"vertical\" flexItem sx={{ mx: 2 }} />\n            <Typography variant=\"body1\">End time - HH:MM:SS</Typography>\n          </Box>\n\n          <Box display=\"flex\" alignItems=\"center\">\n            <Tooltip title=\"Order Set\">\n              <IconButton sx={{ margin: \"0 10px\" }}>\n                <ListAltIcon sx={{ color: \"blue\" }} />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"ERX Status\">\n              <IconButton sx={{ margin: \"0 10px\" }}>\n                <ErrorIcon sx={{ color: \"red\" }} />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Switch Branch\">\n              <IconButton sx={{ margin: \"0 10px\" }}>\n                <SwapHorizIcon sx={{ color: \"green\" }} />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Alert\">\n              <IconButton sx={{ margin: \"0 10px\" }}>\n                <ErrorIcon sx={{ color: \"orange\" }} />\n              </IconButton>\n            </Tooltip>\n            <Tooltip title=\"Log out\">\n              <IconButton sx={{ margin: \"0 10px\" }}>\n                <LogoutIcon sx={{ color: \"purple\" }} />\n              </IconButton>\n            </Tooltip>\n          </Box>\n        </>\n      ) : ( */}\n      <>\n        {/* Right-aligned icons */}\n        {/* <Box display=\"flex\" alignItems=\"center\">\n          <Tooltip title=\"Log out\">\n            <IconButton sx={{ margin: \"0 10px\" }} onClick={logoutApp}>\n              <LogoutIcon sx={{ color: \"white\" }} />\n            </IconButton>\n          </Tooltip>\n        </Box> */}\n      </>\n      {/* )} */}\n    </Box>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    branchId: state?.auth?.user?.data?.branchMaster.branchId,\n    username: state?.auth?.user?.data?.userName,\n    role: state?.auth?.user?.data?.roleMaster?.roleName,\n  };\n};\n\nexport default connect(mapStateToProps)(Topbar);\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  FaCalendarCheck,\r\n  FaUserPlus,\r\n  FaFileInvoiceDollar,\r\n  FaProcedures,\r\n  FaBed,\r\n  FaUserMd,\r\n  FaFlask,\r\n  FaClipboardList,\r\n  FaFileAlt,\r\n  FaUserNurse,\r\n} from \"react-icons/fa\";\r\n\r\nconst allModules = [\r\n  {\r\n    name: \"Appointment\",\r\n    icon: <FaCalendarCheck />,\r\n    path: \"/secure/appointment\",\r\n    color: \"#6B8E23\",\r\n  },\r\n  {\r\n    name: \"Registration\",\r\n    icon: <FaUserPlus />,\r\n    path: \"/secure/registration\",\r\n    color: \"#FFA500\",\r\n  },\r\n  {\r\n    name: \"Doctor EMR\",\r\n    icon: <FaUserMd />,\r\n    path: \"/secure/doctorEmr\",\r\n    color: \"#9932CC\",\r\n  },\r\n  {\r\n    name: \"Nurse EMR\",\r\n    icon: <FaUserNurse />,\r\n    path: \"/secure/nurseEmr\",\r\n    color: \"#A52A2A\",\r\n  },\r\n  {\r\n    name: \"Billing\",\r\n    icon: <FaFileInvoiceDollar />,\r\n    path: \"/secure/billing/list\",\r\n    color: \"#008080\",\r\n  },\r\n  {\r\n    name: \"Report\",\r\n    icon: <FaFileAlt />,\r\n    path: \"/secure\",\r\n    color: \"#FF6B6B\",\r\n  },\r\n  {\r\n    name: \"IP EMR\",\r\n    icon: <FaProcedures />,\r\n    path: \"/secure/ipemr\",\r\n    color: \"#4169E1\",\r\n  },\r\n  {\r\n    name: \"Bed & Ward\",\r\n    icon: <FaBed />,\r\n    path: \"/secure/bedandward\",\r\n    color: \"#A52A2A\",\r\n  },\r\n\r\n  {\r\n    name: \"Laboratory\",\r\n    icon: <FaFlask />,\r\n    path: \"/secure/lab\",\r\n    color: \"#32CD32\",\r\n  },\r\n  {\r\n    name: \"Master\",\r\n    icon: <FaClipboardList />,\r\n    path: \"/secure/master\",\r\n    color: \"#FF6B6B\",\r\n  },\r\n];\r\n\r\nconst Landing = () => {\r\n  const navigate = useNavigate();\r\n  const [filteredModules, setFilteredModules] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loginUser = localStorage.getItem(\"user\");\r\n    if (loginUser) {\r\n      const userData = JSON.parse(loginUser);\r\n      const userRole = userData?.data?.roleMaster?.roleName || \"\";\r\n\r\n      let allowedModules = [];\r\n\r\n      if (userRole === \"Receptionist\") {\r\n        allowedModules = allModules.filter(\r\n          (mod) =>\r\n            mod.name === \"Appointment\" ||\r\n            mod.name === \"Registration\" ||\r\n            mod.name === \"Billing\" ||\r\n            mod.name === \"Report\"\r\n        );\r\n      } else if (userRole === \"Billing\") {\r\n        allowedModules = allModules.filter(\r\n          (mod) => mod.name === \"Billing\" || mod.name === \"Report\"\r\n        );\r\n      } else {\r\n        allowedModules = allModules;\r\n      }\r\n\r\n      setFilteredModules(allowedModules);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        // minHeight: \"100vh\",\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        backgroundColor: \"#f5f5f5\",\r\n        padding: \"20px\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(auto-fit, minmax(150px, 1fr))\",\r\n          gap: \"20px\",\r\n          //   width: \"100%\",\r\n          maxWidth: \"900px\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        className=\"mx-auto\"\r\n      >\r\n        {filteredModules.length > 0 ? (\r\n          filteredModules.map((module, index) => (\r\n            <div\r\n              key={index}\r\n              onClick={() => navigate(module.path)}\r\n              style={{\r\n                backgroundColor: module.color,\r\n                width: \"150px\",\r\n                height: \"150px\",\r\n                borderRadius: \"10px\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                cursor: \"pointer\",\r\n                transition: \"transform 0.2s, box-shadow 0.2s\",\r\n                color: \"white\",\r\n                fontSize: \"18px\",\r\n                fontWeight: \"bold\",\r\n                textAlign: \"center\",\r\n                boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\r\n              }}\r\n              onMouseEnter={(e) =>\r\n                (e.currentTarget.style.transform = \"scale(1.1)\")\r\n              }\r\n              onMouseLeave={(e) =>\r\n                (e.currentTarget.style.transform = \"scale(1)\")\r\n              }\r\n            >\r\n              <div style={{ fontSize: \"40px\", marginBottom: \"10px\" }}>\r\n                {module.icon}\r\n              </div>\r\n              {module.name}\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No modules available for your role</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import React, { useState } from \"react\";\nimport Topbar from \"../../../components/global/Topbar\";\nimport Sidebar from \"../../../components/global/Sidebar\";\nimport DoctorEmrSidebar from \"../../../components/global/DoctorEmrSidebar\";\nimport PatientTabs from \"../../../secure/doctorEMR/components/patientTabs\";\nimport PatientVitals from \"../../../secure/doctorEMR/components/PatientVitals\";\nimport PatientDetails from \"../../../secure/doctorEMR/components/patientDetails\";\nimport Landing from \"../../../components/other/Landing\";\n\nconst SecureLayout = ({ children }) => {\n  const [isSidebar, setIsSidebar] = useState(true);\n  const currentURL = window.location.href;\n\n  return (\n    <div className=\"app\">\n      <Topbar setIsSidebar={setIsSidebar} />\n      {/* {currentURL.includes(\"doctorEmr\") && <PatientTabs />} */}\n      {/* {currentURL.includes(\"doctor\") && !currentURL.includes(\"dashboard\") && <PatientDetails />}\n      {currentURL.includes(\"doctor\") && !currentURL.includes(\"dashboard\") && <PatientVitals />} */}\n      <main className=\"content\">\n        {/* {currentURL.includes(\"secure\") && <Landing />} */}\n        {/* {currentURL.includes(\"secure\") && <Sidebar isSidebar={isSidebar} />} */}\n        {/* {currentURL.includes(\"doctor\") && !currentURL.includes(\"dashboard\") && <DoctorEmrSidebar isSidebar={isSidebar} />} */}\n        {children}\n      </main>\n    </div>\n  );\n};\n\nexport default SecureLayout;\n","import React, { useEffect, useState } from \"react\";\nimport { Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport SecureLayout from \"./modules/secure/SecureLayout\";\nimport { useSelector } from \"react-redux\";\n\nexport const EMRRouteBuilder = (props) => {\n  const [routes, setRoutes] = useState();\n  const navigate = useNavigate(); // React Router navigation function\n  const user = useSelector((state) => state?.auth?.user); // Get user from Redux state\n\n  // Check if user exists in localStorage\n  const isUserStored = () => {\n    return localStorage.getItem(\"user\") !== null; // Returns true if \"user\" is in localStorage\n  };\n\n  useEffect(() => {\n    if (isUserStored()) {\n      navigate(\"/secure/landing\", { replace: true }); // Redirect to landing if user exists\n    } else {\n      navigate(\"/login\", { replace: true }); // Redirect to login if no user found\n    }\n  }, []); // Runs only on component mount\n\n  useEffect(() => {\n    buildRoutes();\n  }, [user]); // Re-run route building when the user state changes\n\n  const buildRoutes = () => {\n    const promiseRoutes = props.routes.map(\n      async (route) => await buildRoute(route)\n    );\n    Promise.all(promiseRoutes).then((routes) => {\n      setRoutes(routes);\n    });\n  };\n\n  async function buildRoute(route) {\n    let Component = route.component;\n\n    if (props.interceptor) {\n      Component = await props.interceptor(route);\n    }\n\n    if (route.secure) {\n      if (isUserStored()) {\n        return (\n          <Route\n            key={route.path}\n            path={route.path}\n            exact={route.exact}\n            element={\n              <SecureLayout>\n                <Component />\n              </SecureLayout>\n            }\n          />\n        );\n      } else {\n        return (\n          <Route\n            key={route.path}\n            path={route.path}\n            exact={route.exact}\n            element={<Navigate to=\"/login\" />}\n          />\n        );\n      }\n    }\n\n    return (\n      <Route\n        key={route.path}\n        path={route.path}\n        exact={route.exact}\n        element={<Component />}\n      />\n    );\n  }\n\n  function renderRoutes() {\n    return <Routes>{routes}</Routes>;\n  }\n\n  return renderRoutes();\n};\n","import { toast } from \"react-toastify\";\n\nexport const showToast = (messages, type = \"info\") => {\n  const toastContent = <ToastMessage messages={messages} />;\n\n  const toastOptions = {\n    autoClose: 10000,\n  };\n\n  switch (type) {\n    case \"success\":\n      toast.success(toastContent, toastOptions);\n      break;\n    case \"error\":\n      toast.error(toastContent, toastOptions);\n      break;\n    case \"warning\":\n      toast.warn(toastContent, toastOptions);\n      break;\n    case \"info\":\n    default:\n      toast.info(toastContent, toastOptions);\n      break;\n  }\n};\n\nconst ToastMessage = ({ messages }) => {\n  const messageArray = Array.isArray(messages) ? messages : [messages];\n  return (\n    <div>\n      {messageArray?.map((message, i) => (\n        <ul key={`${message}_${i}`}>\n          <li>{message}</li>\n        </ul>\n      ))}\n    </div>\n  );\n};\n\nexport default ToastMessage;\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { login } from \"../Redux/slice/login/authSlice\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { showToast } from \"../components/global/Toast\";\r\n\r\nconst LoginForm = ({ setShowForgotPage, setShowLoginPage, setShowSignup }) => {\r\n  const [formValues, setFormValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { loading } = useSelector((state) => state.auth);\r\n\r\n  const validateForm = () => {\r\n    const errors = {};\r\n    if (!formValues.email.trim()) {\r\n      errors.email = \"Email is required\";\r\n    }\r\n    if (!formValues.password) {\r\n      errors.password = \"Password is required\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const formErrors = validateForm();\r\n    if (Object.keys(formErrors).length === 0) {\r\n      try {\r\n        const resultAction = await dispatch(login(formValues));\r\n        if (login.fulfilled.match(resultAction)) {\r\n          navigate(\"/secure/landing\"); \r\n        } else {\r\n          showToast(\"Invalid email or password!\");\r\n        }\r\n      } catch (error) {\r\n        showToast(\"Something went wrong!!\");\r\n      }\r\n    } else {\r\n      setErrors(formErrors);\r\n      showToast(\"Something went wrong!!\");\r\n    }\r\n  };\r\n  \r\n\r\n  const handleChange = (field) => (e) => {\r\n    setFormValues({ ...formValues, [field]: e.target.value });\r\n    setErrors((prevErrors) => ({ ...prevErrors, [field]: \"\" }));\r\n  };\r\n  const handleShowForgot = () => {\r\n    setShowLoginPage(false);\r\n    setShowForgotPage(true);\r\n  };\r\n  const handleClickSignup = () => {\r\n    setShowSignup(true);\r\n    setShowLoginPage(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"title\">Account Login</div>\r\n      <div className=\"desc\">\r\n        If you are already a member you can login with your email address and\r\n        password.\r\n      </div>\r\n      <form onSubmit={handleLogin}>\r\n        <TextField\r\n          label=\"Email Address\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          error={!!errors.email}\r\n          onChange={handleChange(\"email\")}\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          label=\"Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          error={!!errors.password}\r\n          onChange={handleChange(\"password\")}\r\n          size=\"small\"\r\n        />\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            marginBottom: 16,\r\n          }}\r\n        >\r\n          <FormControlLabel control={<Checkbox />} label=\"Remember me\" />\r\n          <div style={{ alignSelf: \"center\" }}>\r\n            <div onClick={handleShowForgot} className=\"forgot-password-link\">\r\n              Forgot Password ?\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          disabled={loading}\r\n        >\r\n          {loading ? <CircularProgress size={24} /> : \"Login\"}\r\n        </Button>\r\n\r\n        <div className=\"signup-info\">\r\n          Don't have an account ?&nbsp;\r\n          <div onClick={handleClickSignup} className=\"signup-link\">\r\n            Sign up here\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport \"./auth.css\";\r\nimport { Button, TextField } from \"@mui/material\";\r\n\r\nconst Signup = ({ setShowLoginPage, setShowSignup }) => {\r\n  const handleClickLogin = () => {\r\n    setShowLoginPage(true);\r\n    setShowSignup(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>Register Account</h2>\r\n      <form>\r\n        <TextField\r\n          label=\"Email Address\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          label=\"Phone Number\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          label=\"Enter Password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          label=\"Confirm Password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n        />\r\n        <div className=\"mt-2\">\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n            Register\r\n          </Button>\r\n        </div>\r\n      </form>\r\n      <div className=\"signup-info\">\r\n        Already have an account ?&nbsp;\r\n        <div onClick={handleClickLogin} className=\"signup-link\">\r\n          Login\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import React, { useState } from \"react\";\r\nimport { Button, TextField } from \"@mui/material\";\r\n\r\nconst ForgotPassword = ({\r\n  setShowForgotPage,\r\n  setShowLoginPage,\r\n  setShowReset,\r\n}) => {\r\n  const [formValues, setFormValues] = useState({ email: \"\" });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validateForm = () => {\r\n    let errors = {};\r\n    if (!formValues.email.trim()) {\r\n      errors.email = \"Email is required\";\r\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formValues.email)) {\r\n      errors.email = \"Enter a valid email\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = validateForm();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n    // Call API if no errors\r\n    console.log(\"Sending reset email to:\", formValues.email);\r\n    // let response = await postData(`/app/auth/forgotPassword?email=${formValues.email}`);\r\n    setShowReset(true);\r\n    setShowForgotPage(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormValues({ email: e.target.value });\r\n    setErrors((prevErrors) => ({ ...prevErrors, email: \"\" })); // Remove error on typing\r\n  };\r\n\r\n  const handleClickLogin = () => {\r\n    setShowLoginPage(true);\r\n    setShowForgotPage(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Forgot Password</h2>\r\n\r\n      <form onSubmit={handleResetPassword}>\r\n        <TextField\r\n          label=\"Email address\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          size=\"small\"\r\n          error={!!errors.email}\r\n          // helperText={errors.email}\r\n          value={formValues.email}\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"mt-2\">\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n            Send to Email\r\n          </Button>\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"signup-info\">\r\n        Back to&nbsp;\r\n        <div onClick={handleClickLogin} className=\"signup-link\">\r\n          Login\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"http://ec2-16-171-230-69.eu-north-1.compute.amazonaws.com:8080/\",\n  // baseURL: \"http://ec2-51-20-6-134.eu-north-1.compute.amazonaws.com:8080/\",\n  // baseURL: \"http://localhost:8080\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\n// Request interceptor to add tokens or modify requests\naxiosInstance.interceptors.request.use(\n  (config) => {\n    const branchId = localStorage.getItem(\"branchId\");\n    if (branchId) {\n      if (config.method === \"get\") {\n        const url = new URL(config.url, config.baseURL);\n        url.searchParams.append(\"branchId\", parseInt(branchId));\n        config.url = url.pathname + url.search;\n      } else {\n        if (config.data) {\n          config.data = { ...config.data, branchId };\n        } else {\n          config.data = { branchId };\n        }\n      }\n    }\n    return config;\n  },\n  (error) => Promise.reject(error)\n);\n\n// Response interceptor to handle errors globally\naxiosInstance.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // Handle errors or show notifications here\n    console.error(\"API call error:\", error);\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n","import axiosInstance from \"../api/AxiosInstance\";\n\nexport const fetchData = async (url, params) => {\n  try {\n    const response = await axiosInstance.get(url, params);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const postData = async (url, data) => {\n  try {\n    const response = await axiosInstance.post(url, data);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const deleteData = async (url, data) => {\n  try {\n    const response = await axiosInstance.delete(url, data);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\n\nexport const doctorDashboardCount = async (url, params) => {\n  try {\n    const response = await axiosInstance.get(\n      `${url}?doctorId=${params?.doctorId}&ipOpFlag=${params?.ipOpFlag}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching doctor dashboard count:\", error);\n    throw error;\n  }\n};\n\nexport const doctorDashboardDataList = async (url, params) => {\n  console.log(params,\"params\")\n  try {\n    const response = await axiosInstance.get(\n      `${url}?doctorId=${params?.doctorId}&ipOpFlag=${params?.ipOpFlag}&context=${params?.context}&page=${params?.page}&size=${params?.size}&ptName=${params?.ptName}&status=${params?.status}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching doctor dashboard data:\", error);\n    throw error;\n  }\n};\n","import React, { createContext, useState, useContext } from \"react\";\n\nconst LoadingContext = createContext();\n\nexport const LoadingProvider = ({ children }) => {\n  const [loading, setLoading] = useState(false);\n\n  return (\n    <LoadingContext.Provider value={{ loading, setLoading }}>\n      {children}\n    </LoadingContext.Provider>\n  );\n};\n\nexport const useLoading = () => useContext(LoadingContext);\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  TextField,\r\n  Alert,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { postData } from \"../core/services/APIService\";\r\nimport { useLoading } from \"../components/global/loader/LoadingContext\";\r\n\r\nconst ResetPassword = () => {\r\n  const [formValues, setFormValues] = useState({\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n  const [alertMessage, setAlertMessage] = useState(\"\");\r\n  const { loading, setLoading } = useLoading();\r\n\r\n  const validateForm = () => {\r\n    let errors = {};\r\n    if (!formValues.password.trim()) {\r\n      errors.password = \"Password is required\";\r\n    }\r\n    if (!formValues.confirmPassword.trim()) {\r\n      errors.confirmPassword = \"Confirm Password is required\";\r\n    }\r\n    if (formValues.password !== formValues.confirmPassword) {\r\n      errors.confirmPassword = \"Passwords do not match\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleResetPassword = async (e) => {\r\n    e.preventDefault();\r\n    setMessage(\"\");\r\n    setAlertMessage(\"\");\r\n\r\n    const validationErrors = validateForm();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const search = window.location.search;\r\n    const params = new URLSearchParams(search);\r\n    const token = params.get(\"token\");\r\n\r\n    try {\r\n      const response = await postData(\r\n        `/auth/resetPassword?token=${token}&newPassword=${formValues.password}&confirmPassword=${formValues.confirmPassword}`\r\n      );\r\n      setLoading(false);\r\n      if (response.status) {\r\n        setMessage(\"Password has been reset successfully.\");\r\n      } else {\r\n        setAlertMessage(response.message || \"Failed to reset password.\");\r\n      }\r\n    } catch (error) {\r\n      setLoading(false);\r\n      setAlertMessage(\"Invalid or expired token\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (field) => (e) => {\r\n    setFormValues({ ...formValues, [field]: e.target.value });\r\n    setErrors((prevErrors) => ({ ...prevErrors, [field]: \"\" })); // Remove error on typing\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Password Reset</h2>\r\n\r\n      {/* Display error message */}\r\n      {alertMessage && <Alert severity=\"error\">{alertMessage}</Alert>}\r\n\r\n      {/* Display success message */}\r\n      {message && <Alert severity=\"success\">{message}</Alert>}\r\n\r\n      <form onSubmit={handleResetPassword}>\r\n        <TextField\r\n          label=\"Enter Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          error={!!errors.password}\r\n          helperText={errors.password}\r\n          // value={formValues.password}\r\n          onChange={handleChange(\"password\")}\r\n          size=\"small\"\r\n        />\r\n        <TextField\r\n          label=\"Confirm Password\"\r\n          type=\"password\"\r\n          variant=\"outlined\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          error={!!errors.confirmPassword}\r\n          // helperText={errors.confirmPassword}\r\n          value={formValues.confirmPassword}\r\n          onChange={handleChange(\"confirmPassword\")}\r\n          size=\"small\"\r\n        />\r\n        <div className=\"mt-2\">\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            fullWidth\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress size={24} /> : \"Submit\"}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","import React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport LoginForm from \"../../../auth/LoginForm\";\nimport Signup from \"../../../auth/Signup\";\nimport ForgotPassword from \"../../../auth/ForgotPassword\";\nimport ResetPassword from \"../../../auth/ResetPassword\";\nimport AuthPage from \"../../../auth/auth\";\n\n\nexport const PUBLIC_ROUTES = [\n  { path: \"*\", component: () => <Navigate to=\"/login\" /> },\n  { path: \"/login\", component: AuthPage },\n  { path: \"/register\", component: Signup },\n  { path: \"/forgot-password\", component: ForgotPassword },\n  { path: \"/reset-password\", component: ResetPassword }\n];\n","import React, { useState } from \"react\";\r\nimport { Paper } from \"@mui/material\";\r\nimport bgImg from \"../assets/bgImg.jpg\";\r\nimport LoginForm from \"./LoginForm\";\r\nimport ForgotPassword from \"./ForgotPassword\";\r\nimport Signup from \"./Signup\";\r\nimport ResetPassword from \"./ResetPassword\";\r\n\r\nconst AuthPage = () => {\r\n  const [showLoginPage, setShowLoginPage] = useState(true);\r\n  const [showForgotPage, setShowForgotPage] = useState(false);\r\n  const [showSignup, setShowSignup] = useState(false);\r\n  const [showReset, setShowReset] = useState(false);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        backgroundImage: `url(${bgImg})`,\r\n        backgroundSize: \"cover\",\r\n        width: \"100%\",\r\n        // backgroundColor: \"teal\",\r\n        // background:\r\n        //   \"linear-gradient(to right,rgb(95, 255, 242) 50%,rgb(57, 150, 156) 50%)\",\r\n      }}\r\n    >\r\n      <Paper\r\n        elevation={5}\r\n        sx={{\r\n          p: 4,\r\n          width: 400,\r\n          bgcolor: \"rgba(255, 255, 255, 0.8)\",\r\n          opacity: \"75%\",\r\n        }}\r\n      >\r\n        {showLoginPage && (\r\n          <LoginForm\r\n            setShowForgotPage={setShowForgotPage}\r\n            setShowLoginPage={setShowLoginPage}\r\n            setShowSignup={setShowSignup}\r\n          />\r\n        )}\r\n        {showForgotPage && (\r\n          <ForgotPassword\r\n            setShowForgotPage={setShowForgotPage}\r\n            setShowLoginPage={setShowLoginPage}\r\n            setShowReset={setShowReset}\r\n          />\r\n        )}\r\n        {showSignup && (\r\n          <Signup\r\n            setShowLoginPage={setShowLoginPage}\r\n            setShowSignup={setShowSignup}\r\n          />\r\n        )}\r\n        {showReset && <ResetPassword />}\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","import React from \"react\";\n\n// Wrapper component to prevent children from exceeding the viewport\nconst ScreenWrapper = ({ children, style, ...props }) => {\n  return (\n    <div\n      style={{\n        width: \"100vw\",\n        height: \"100vh\",\n        overflow: \"auto\",\n        boxSizing: \"border-box\",\n        backgroundColor: \"#68727a05\",\n        ...style\n      }}\n      {...props}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default ScreenWrapper;\n","import React, { useState } from \"react\";\nimport { Tabs } from \"antd\";\nimport { motion, AnimatePresence } from \"framer-motion\";\nimport \"antd/dist/reset.css\"; // Import Ant Design styles\n\nconst { TabPane } = Tabs;\n\nconst EMRtabs = ({ tabsList, defaultTab, setActiveTab }) => {\n  const [activeKey, setActiveKey] = useState(defaultTab ?? tabsList[0]?.value);\n\n  const handleChange = (key) => {\n    setActiveKey(key);\n    setActiveTab(key);\n  };\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {/* Ant Design Tabs */}\n      <Tabs\n        activeKey={activeKey}\n        onChange={handleChange}\n        // centered\n        type=\"card\" // Can be 'line', 'card', or 'editable-card'\n        tabBarStyle={\n          {\n            // backgroundColor: \"#00748b\",\n            // color: \"white\",\n            // borderRadius: \"8px\",\n          }\n        }\n        style={{\n          width: \"100%\",\n        }}\n      >\n        {tabsList.map((tab) => (\n          <TabPane tab={<span>{tab.name}</span>} key={tab.value} />\n        ))}\n      </Tabs>\n\n      {/* Animated Tab Content */}\n      <div\n        // style={{ position: \"relative\", overflow: \"hidden\", marginTop: \"16px\" }}\n      >\n        <AnimatePresence mode=\"wait\">\n          {tabsList.map((tab) =>\n            tab.value === activeKey ? (\n              <motion.div\n                key={tab.value}\n                initial={{ x: 100, opacity: 0 }} // Slide in from right\n                animate={{ x: 0, opacity: 1 }} // Fade in\n                exit={{ x: -100, opacity: 0 }} // Slide out to left\n                transition={{ duration: 0.3 }}\n                style={{ position: \"absolute\", width: \"100%\" }}\n              >\n                {tab.content}\n              </motion.div>\n            ) : null\n          )}\n        </AnimatePresence>\n      </div>\n    </div>\n  );\n};\n\nexport default EMRtabs;\n","import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Box,\r\n  MenuItem,\r\n  Select,\r\n  InputLabel,\r\n  FormControl,\r\n  FormHelperText,\r\n  Button,\r\n  IconButton,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nconst FormInput = ({\r\n  label,\r\n  value,\r\n  onChange,\r\n  type = \"text\",\r\n  options = [],\r\n  required = false,\r\n  setDependentValue,\r\n  ...props\r\n}) => {\r\n  const [error, setError] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(value || null);\r\n\r\n  const formatDate = (date) => {\r\n    if (!date) return \"\";\r\n    return new Date(date).toISOString().split(\"T\")[0];\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    if (required && !value) {\r\n      setError(true);\r\n    } else {\r\n      setError(false);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      setSelectedFile(file);\r\n      onChange(file);\r\n      setError(false);\r\n    }\r\n  };\r\n\r\n  const handleRemoveFile = () => {\r\n    setSelectedFile(null);\r\n    onChange(null);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      {type === \"select\" ? (\r\n        <FormControl\r\n          required={required}\r\n          error={error}\r\n          size=\"small\"\r\n          sx={{ width: \"100%\" }}\r\n        >\r\n          <InputLabel>{label}</InputLabel>\r\n          <Select\r\n            value={value || \"\"}\r\n            onChange={(e) => {\r\n              const selectedOption = options.find(\r\n                (option) => option.label === e.target.value\r\n              );\r\n              onChange(selectedOption?.label || \"\");\r\n              setError(required && !selectedOption?.label);\r\n            }}\r\n            onBlur={handleBlur}\r\n            label={label}\r\n            sx={{ width: \"100%\" }}\r\n            {...props}\r\n          >\r\n            <MenuItem value=\"\" disabled>\r\n              Select {label}\r\n            </MenuItem>\r\n            {options.map((option, index) => (\r\n              <MenuItem\r\n                key={index}\r\n                value={option.label}\r\n                sx={{ fontSize: \"12px\" }}\r\n              >\r\n                {option.label}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n          {error && <FormHelperText>{label} is required</FormHelperText>}\r\n        </FormControl>\r\n      ) : type === \"file\" ? (\r\n        <Box>\r\n          {!selectedFile ? (\r\n            <Button\r\n              variant=\"outlined\"\r\n              component=\"label\"\r\n              className=\"w-100 my-auto\"\r\n            >\r\n              Upload {label}\r\n              <input type=\"file\" hidden onChange={handleFileChange} />\r\n            </Button>\r\n          ) : (\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                border: \"1px solid #ccc\",\r\n                borderRadius: \"4px\",\r\n                padding: \"4px 8px\",\r\n                backgroundColor: \"#f9f9f9\",\r\n                justifyContent: \"space-between\",\r\n              }}\r\n            >\r\n              <Typography sx={{ fontSize: \"14px\", color: \"#333\" }}>\r\n                {selectedFile.name}\r\n              </Typography>\r\n              <IconButton size=\"small\" onClick={handleRemoveFile}>\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </Box>\r\n          )}\r\n          {/* {error && <FormHelperText error>{label} is required</FormHelperText>} */}\r\n        </Box>\r\n      ) : (\r\n        <TextField\r\n          label={label}\r\n          value={type === \"date\" ? formatDate(value) : value}\r\n          onChange={(e) => {\r\n            const newValue = e.target.value;\r\n            if (type === \"date\" && setDependentValue) {\r\n              const calculatedAge = calculateAge(newValue);\r\n              setDependentValue(calculatedAge);\r\n            }\r\n            onChange(newValue);\r\n            setError(required && !newValue);\r\n          }}\r\n          onBlur={handleBlur}\r\n          size=\"small\"\r\n          fullWidth\r\n          required={required}\r\n          type={type === \"textarea\" ? undefined : type}\r\n          multiline={type === \"textarea\"}\r\n          rows={type === \"textarea\" ? 2 : undefined}\r\n          error={error}\r\n          // helperText={error ? `${label} is required` : \"\"}\r\n          InputLabelProps={{\r\n            shrink: type === \"date\" ? true : undefined,\r\n          }}\r\n          inputProps={{\r\n            ...(type === \"date\" && { pattern: \"\\\\d{4}-\\\\d{2}-\\\\d{2}\" }),\r\n          }}\r\n          {...props}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst calculateAge = (dob) => {\r\n  const birthDate = new Date(dob);\r\n  const today = new Date();\r\n  const age = today.getFullYear() - birthDate.getFullYear();\r\n  const m = today.getMonth() - birthDate.getMonth();\r\n  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n    return age - 1;\r\n  }\r\n  return age;\r\n};\r\n\r\nexport default FormInput;\r\n","import { getNames } from \"country-list\";\r\n\r\nexport const DropdownOptions = {\r\n  visitOptions: [\r\n    // { id: \"1\", label: \"Emergency Room\", value: \"emergency_room\" },\r\n    // { id: \"2\", label: \"Surgery Room\", value: \"surgery\" },\r\n    // { id: \"3\", label: \"Physio Room\", value: \"physio_room\" },\r\n    // { id: \"4\", label: \"Non Consultation\", value: \"non_consultation\" },\r\n    // { id: \"5\", label: \"Tele Medicine\", value: \"tele_medicine\" },\r\n    { id: \"6\", label: \"In Patient\", value: \"ip\" },\r\n    { id: \"7\", label: \"Out Patient\", value: \"op\" },\r\n  ],\r\n  genderOpton: [\r\n    { label: \"Select\", value: \"\" },\r\n    { label: \"Female\", value: \"female\" },\r\n    { label: \"Male\", value: \"male\" },\r\n    { label: \"Other\", value: \"other\" },\r\n  ],\r\n  nationalityOptions: getNames().map((name) => ({\r\n    value: name.toLowerCase(),\r\n    label: name,\r\n  })),\r\n  visaTypeOptions: [\r\n    { id: \"1\", label: \"Local\", value: \"local\" },\r\n    { id: \"2\", label: \"Resident\", value: \"resident\" },\r\n    { id: \"3\", label: \"Visitor\", value: \"visitor\" },\r\n  ],\r\n  specialityOptions: [\r\n    { id: \"1\", label: \"speciality 1\", value: \"speciality_1\" },\r\n    { id: \"2\", label: \"speciality 2\", value: \"speciality_2\" },\r\n  ],\r\n  encounterTypeOptions: [\r\n    {\r\n      id: \"1\",\r\n      label: \"No Bed + No Emergency Room\",\r\n      value: \"no_bed_no_emergency_room\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      label: \"No Bed + Emergency Room\",\r\n      value: \"no_bed_emergency_room\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      label: \"Daycase Bed + No Emergency Room\",\r\n      value: \"daycase_bed_no_emergency_room\",\r\n    },\r\n    {\r\n      id: \"4\",\r\n      label: \"Daycase Bed + Emergency Room\",\r\n      value: \"daycase_bed_emergency_room\",\r\n    },\r\n  ],\r\n  ipEncounterTypeOptions: [\r\n    {\r\n      id: \"1\",\r\n      label: \"daycase bed + emergency  \",\r\n      value: \"daycase_emergency_room\",\r\n    },\r\n    // {\r\n    //   id: \"2\",\r\n    //   label: \"No Bed + Emergency Room\",\r\n    //   value: \"no_bed_emergency_room\",\r\n    // },\r\n    // {\r\n    //   id: \"3\",\r\n    //   label: \"Daycase Bed + No Emergency Room\",\r\n    //   value: \"daycase_bed_no_emergency_room\",\r\n    // },\r\n    // {\r\n    //   id: \"4\",\r\n    //   label: \"Daycase Bed + Emergency Room\",\r\n    //   value: \"daycase_bed_emergency_room\",\r\n    // },\r\n  ],\r\n  doctorOptions: [\r\n    { id: \"1\", label: \"Doctor 1\", value: \"doctor_1\" },\r\n    { id: \"2\", label: \"Doctor 2\", value: \"doctor_2\" },\r\n  ],\r\n  paymentOptions: [\r\n    {\r\n      id: \"1\",\r\n      label: \"Cash\",\r\n      value: \"cash\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      label: \"Insurance\",\r\n      value: \"insurance\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      label: \"Corporate\",\r\n      value: \"corporate\",\r\n    },\r\n  ],\r\n  infoSourceOptions: [\r\n    { id: \"1\", label: \"Event\", value: \"event\" },\r\n    { id: \"2\", label: \"Family and Friends\", value: \"family_and_friends\" },\r\n    { id: \"3\", label: \"Fazaa\", value: \"fazaa\" },\r\n    { id: \"4\", label: \"Google\", value: \"google\" },\r\n    { id: \"5\", label: \"My Alfred App\", value: \"my_alfred_app\" },\r\n    { id: \"6\", label: \"Promotions\", value: \"promotion\" },\r\n    { id: \"7\", label: \"Social Media\", value: \"social_media\" },\r\n    { id: \"8\", label: \"Website\", value: \"website\" },\r\n  ],\r\n  patientTypeOptions: [\r\n    { id: \"1\", label: \"Normal\", value: \"normal\" },\r\n    { id: \"2\", label: \"Recruitment\", value: \"recruitment\" },\r\n    { id: \"3\", label: \"Pre-Employment\", value: \"pre-employment\" },\r\n    { id: \"4\", label: \"VIP\", value: \"vip\" },\r\n    { id: \"5\", label: \"VVIP\", value: \"vvip\" },\r\n    { id: \"6\", label: \"Determination\", value: \"determination\" },\r\n  ],\r\n  otherIdOptions: [\r\n    { id: \"1\", label: \"Passport\", value: \"passport\" },\r\n    { id: \"2\", label: \"GCC ID\", value: \"gcc_id\" },\r\n    { id: \"3\", label: \"Driving License\", value: \"driving_license\" },\r\n  ],\r\n  addressOptions: [\r\n    { id: \"1\", label: \"Dubai\", value: \"Dubai\" },\r\n    { id: \"2\", label: \"Abu Dhabi\", value: \"Abu Dhabi\" },\r\n    { id: \"3\", label: \"Sharjah\", value: \"Sharjah\" },\r\n    { id: \"4\", label: \"Fujairah\", value: \"Fujairah\" },\r\n    { id: \"5\", label: \"Ras Al Khaimah\", value: \"Ras Al Khaimah\" },\r\n    { id: \"6\", label: \"Umm Al Quwain\", value: \"Umm Al Quwain\" },\r\n    { id: \"7\", label: \"Ajman\", value: \"Ajman\" },\r\n    { id: \"8\", label: \"Others\", value: \"Others\" },\r\n    { id: \"9\", label: \"Unknown\", value: \"Unknown\" },\r\n  ],\r\n  referralOptions: [\r\n    { id: \"1\", label: \"Yes\", value: \"yes\" },\r\n    { id: \"2\", label: \"No\", value: \"no\" },\r\n  ],\r\n  religionOptions: [\r\n    { id: \"1\", label: \"Buddhist\", value: \"BUD\" },\r\n    { id: \"2\", label: \"Buddhist: Mahayana\", value: \"BMA\" },\r\n    { id: \"3\", label: \"Buddhist: Theravada\", value: \"BTH\" },\r\n    { id: \"4\", label: \"Christian\", value: \"CHR\" },\r\n    { id: \"5\", label: \"Christian: Anglican\", value: \"ANG\" },\r\n    { id: \"6\", label: \"Christian: Baptist\", value: \"BAP\" },\r\n    { id: \"7\", label: \"Christian: Christian Science\", value: \"CHS\" },\r\n    { id: \"8\", label: \"Christian: Episcopalian\", value: \"EPI\" },\r\n    { id: \"9\", label: \"Christian: Greek Orthodox\", value: \"GRE\" },\r\n    { id: \"10\", label: \"Christian: Jehovah's Witness\", value: \"JWN\" },\r\n    { id: \"11\", label: \"Christian: Lutheran\", value: \"LUT\" },\r\n    { id: \"12\", label: \"Christian: Mennonite\", value: \"MEN\" },\r\n    { id: \"13\", label: \"Christian: Methodist\", value: \"MET\" },\r\n    { id: \"14\", label: \"Christian: Pentecostal\", value: \"PEN\" },\r\n    { id: \"15\", label: \"Christian: Presbyterian\", value: \"PRE\" },\r\n    { id: \"16\", label: \"Christian: Protestant\", value: \"PRO\" },\r\n    { id: \"17\", label: \"Christian: Roman Catholic\", value: \"CAT\" },\r\n    { id: \"18\", label: \"Christian: Seventh Day Adventist\", value: \"SEV\" },\r\n    { id: \"19\", label: \"Christian: Unitarian Universalist\", value: \"UNU\" },\r\n    { id: \"20\", label: \"Ethnic Religionist\", value: \"ERL\" },\r\n    { id: \"21\", label: \"Hindu\", value: \"HIN\" },\r\n    { id: \"22\", label: \"Hindu: Other\", value: \"HOT\" },\r\n    { id: \"23\", label: \"Jain\", value: \"JAI\" },\r\n    { id: \"24\", label: \"Jewish\", value: \"JEW\" },\r\n    { id: \"25\", label: \"Muslim\", value: \"MOS\" },\r\n    { id: \"26\", label: \"Muslim: Other\", value: \"MOT\" },\r\n    { id: \"27\", label: \"Muslim: Shiite\", value: \"MSH\" },\r\n    { id: \"28\", label: \"Muslim: Sunni\", value: \"MSU\" },\r\n    { id: \"29\", label: \"Other\", value: \"OTH\" },\r\n    { id: \"30\", label: \"Sikh\", value: \"SIK\" },\r\n    { id: \"31\", label: \"Shintoist\", value: \"SHN\" },\r\n    { id: \"32\", label: \"Unknown\", value: \"VAR\" },\r\n  ],\r\n  patientPriorityOptions: [\r\n    { id: \"1\", label: \"Normal\", value: \"normal\" },\r\n    { id: \"2\", label: \"VIP\", value: \"vip\" },\r\n    { id: \"3\", label: \"VVIP\", value: \"vvip\" },\r\n  ],\r\n  maritalStatusOptions: [\r\n    { id: \"1\", label: \"Annulled\", value: \"annulled\" },\r\n    { id: \"2\", label: \"Divorced\", value: \"divorced\" },\r\n    { id: \"3\", label: \"Legally Married\", value: \"legally_married\" },\r\n    { id: \"4\", label: \"Married\", value: \"married\" },\r\n    { id: \"5\", label: \"Other\", value: \"other\" },\r\n    { id: \"6\", label: \"Separated\", value: \"separated\" },\r\n    { id: \"7\", label: \"Single\", value: \"single\" },\r\n    { id: \"8\", label: \"Unknown\", value: \"unknown\" },\r\n    { id: \"9\", label: \"Widowed\", value: \"widowed\" },\r\n    { id: \"10\", label: \"Unmarried\", value: \"unmarried\" },\r\n  ],\r\n  occupationOptions: [\r\n    { value: \"\", label: \"--Please choose an option--\" },\r\n    { value: \"agriculture\", label: \"Agriculture\" },\r\n    { value: \"airlines\", label: \"Airlines\" },\r\n    { value: \"healthcare\", label: \"Healthcare and medicine\" },\r\n    { value: \"arts\", label: \"Arts and entertainment\" },\r\n    { value: \"banking\", label: \"Banking and Finance\" },\r\n    { value: \"blue_collar\", label: \"Blue Collar\" },\r\n    { value: \"business\", label: \"Business\" },\r\n    { value: \"consultant\", label: \"Consultant\" },\r\n    { value: \"industrial\", label: \"Industrial and manufacturing\" },\r\n    { value: \"home_maker\", label: \"Home Maker\" },\r\n    { value: \"hospitality\", label: \"Hospitality\" },\r\n    { value: \"it_professional\", label: \"IT Professional\" },\r\n    { value: \"law_enforcement\", label: \"Law enforcement and armed forces\" },\r\n    { value: \"lawyer\", label: \"Lawyer\" },\r\n    { value: \"media\", label: \"Media\" },\r\n    { value: \"mining\", label: \"Mining\" },\r\n    { value: \"other\", label: \"Other\" },\r\n    { value: \"research\", label: \"Research\" },\r\n    { value: \"retired\", label: \"Retired\" },\r\n    { value: \"road_transport\", label: \"Road Transport\" },\r\n    { value: \"science_technology\", label: \"Science and technology\" },\r\n    { value: \"shipping\", label: \"Shipping\" },\r\n    { value: \"skilled_labor\", label: \"Skilled Labor\" },\r\n    { value: \"sports\", label: \"Sports\" },\r\n    { value: \"student\", label: \"Student\" },\r\n    { value: \"teacher\", label: \"Teacher\" },\r\n    { value: \"unknown\", label: \"Unknown\" },\r\n  ],\r\n};\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const registerPatients = createAsyncThunk(\r\n  \"patient/registerPatients\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const formData = new FormData();\r\n\r\n      Object.keys(credentials).forEach((key) => {\r\n        formData.append(key, credentials[key]);\r\n      });\r\n\r\n      const response = await axiosInstance.post(\r\n        API_ENDPOINTS.REGISTER_PATIENT,\r\n        formData\r\n      );\r\n\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(\r\n        error.response?.data?.message || \"Something went wrong\"\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nconst registerPatientsSlice = createSlice({\r\n  name: \"registerPatients\",\r\n  initialState: {\r\n    registerPatientData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(registerPatients.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerPatients.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.registerPatientData = action.payload.data;\r\n      })\r\n      .addCase(registerPatients.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default registerPatientsSlice.reducer;\r\n","import React from \"react\";\r\n// import SignatureCanvas from \"react-signature-canvas\";\r\nimport QRCode from \"react-qr-code\";\r\nimport { Box, Button } from \"@mui/material\";\r\n// import { useSearchParams } from \"react-router-dom\";\r\n\r\nexport const PatientInfo = ({ patientData, setShowPatientInfo }) => {\r\n  if (!patientData) {\r\n    return (\r\n      <Box p={3} textAlign=\"center\">\r\n        No patient data available\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  const qrCodeUrl = `${window.location.origin}/confirm-registration?mrdNo=${patientData?.mrdNo}`;\r\n\r\n  return (\r\n    <Box p={3} style={{ backgroundColor: \"#fff\" }}>\r\n      <div className=\"text-dark header mb-3\">Patient Demographic Details</div>\r\n\r\n      <Box\r\n        display=\"flex\"\r\n        flexWrap=\"wrap\"\r\n        justifyContent={\"space-between\"}\r\n        gap={2}\r\n        p={2}\r\n      >\r\n        {[\r\n          { label: \"MRD No\", value: patientData?.mrdNo },\r\n          { label: \"Patient Name\", value: patientData?.patientName },\r\n          { label: \"Date of Birth\", value: patientData?.dob },\r\n          { label: \"Visit Type\", value: patientData?.visitType },\r\n          { label: \"Nationality\", value: patientData?.nationality },\r\n          { label: \"Visa Type\", value: patientData?.visaType },\r\n          { label: \"Phone Number\", value: patientData?.phoneNumber },\r\n          { label: \"Info Source\", value: patientData?.infoSource },\r\n          { label: \"Address\", value: patientData?.address },\r\n          { label: \"Referral Case\", value: patientData?.referralCase },\r\n          { label: \"Reg Date\", value: patientData?.regDate },\r\n          { label: \"Age\", value: patientData?.age },\r\n          { label: \"Email ID\", value: patientData?.email },\r\n          { label: \"National ID\", value: patientData?.nationalId },\r\n          { label: \"Phone Number (Work)\", value: patientData?.workPhoneNumber },\r\n          { label: \"Preferred Language\", value: patientData?.language },\r\n          { label: \"Religion\", value: patientData?.religion },\r\n          { label: \"Referred By\", value: patientData?.referredBy },\r\n          { label: \"Patient Type\", value: patientData?.patientType },\r\n          { label: \"Patient Priority\", value: patientData?.patientPriority },\r\n          { label: \"Gender\", value: patientData?.gender },\r\n          { label: \"Marital Status\", value: patientData?.maritalStatus },\r\n          { label: \"Other ID\", value: patientData?.otherId },\r\n          { label: \"Land Phone\", value: patientData?.landPhone },\r\n          { label: \"Occupation\", value: patientData?.occupation },\r\n          { label: \"Place\", value: patientData?.place },\r\n          { label: \"Patient Remark\", value: patientData?.patientRemarks },\r\n        ].map(({ label, value }) => (\r\n          <Box\r\n            key={label}\r\n            minWidth=\"150px\"\r\n            display={\"flex\"}\r\n            flexDirection={\"column\"}\r\n          >\r\n            <div style={{ color: \"rgb(142, 150, 150)\" }}>{label}</div>{\" \"}\r\n            <div> {value ?? \"--\"}</div>\r\n          </Box>\r\n        ))}\r\n      </Box>\r\n      <Box mt={3} display=\"flex\" justifyContent=\"end\">\r\n        <QRCode value={qrCodeUrl} style={{ width: \"100px\", height: \"100px\" }} />\r\n      </Box>\r\n\r\n      <Box p={2} display=\"flex\" justifyContent=\"end\">\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => setShowPatientInfo(false)}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const allDoctors = createAsyncThunk(\r\n  \"doctor/allDoctors\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(\r\n        API_ENDPOINTS.All_DOCTORS,\r\n        credentials\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst allDoctorsSlice = createSlice({\r\n  name: \"allDoctors\",\r\n  initialState: {\r\n    doctorData: [],\r\n    docloading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(allDoctors.pending, (state) => {\r\n        state.docloading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(allDoctors.fulfilled, (state, action) => {\r\n        state.docloading = false;\r\n        state.doctorData = action.payload.data;\r\n      })\r\n      .addCase(allDoctors.rejected, (state, action) => {\r\n        state.docloading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default allDoctorsSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Button } from \"react-bootstrap\";\nimport \"../Registration.css\";\nimport FormInput from \"../../../components/FormFields/FormInput\";\nimport { DropdownOptions } from \"../../../components/FormFields/DropdownOptions\";\nimport { useDispatch } from \"react-redux\";\nimport { registerPatients } from \"../../../Redux/slice/registration/registerPatientsSlice\";\nimport { useSelector } from \"react-redux\";\nimport { showToast } from \"../../../components/global/Toast\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { PatientInfo } from \"./PatientInfo/PatientInfo\";\nimport { allDoctors } from \"../../../Redux/slice/appointement/allDoctorsSlice\";\n\nconst RegisterPatient = () => {\n  const OPTION = DropdownOptions;\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const bookedDetails = location.state?.bookedDetails;\n  const surgeryPatientData = location.state?.patientData;\n  const schedulePatientData = location.state?.rowData;\n\n  // console.log(\"schedulePatientData\", schedulePatientData);\n\n  const [showPatientInfo, setShowPatientInfo] = useState(false);\n  const [patientData, setPatientData] = useState();\n\n  const { loading, error } = useSelector((state) => state.regPatient);\n  const { registerPatientData } = useSelector((state) => state.regPatient);\n  const { doctorData, docloading } = useSelector((state) => state?.allDoctor);\n\n  const allDoctorData = doctorData?.data || [];\n\n  const [specialityOptions, setSpecialityOptions] = useState([]);\n  const [doctorOptions, setDoctorOptions] = useState([]);\n\n  const [showOtherId, setshowOtherId] = useState(false);\n\n  useEffect(() => {\n    dispatch(allDoctors());\n  }, []);\n\n  const getCurrentDateTime = () => {\n    const now = new Date();\n    const date = now.toISOString().split(\"T\")[0];\n    const time = now.toTimeString().split(\" \")[0];\n    return `${date} ${time}`;\n  };\n\n  const [formData, setFormData] = useState({\n    // image: \"\",\n    visitType: surgeryPatientData ? \"In Patient\" : \"\" || \"\",\n    patientName:\n      bookedDetails?.patientName ||\n      surgeryPatientData?.patient ||\n      schedulePatientData?.patientName ||\n      \"\",\n    gender: \"\",\n    dob: \"\",\n    nationality: \"\",\n    visaType: \"\",\n    phoneNumber:\n      bookedDetails?.phoneNo ||\n      surgeryPatientData?.mobile ||\n      schedulePatientData?.mobile ||\n      \"\",\n    infoSource: \"\",\n    address: \"\",\n    referralCase: \"\",\n    regDate: getCurrentDateTime(),\n    age: \"\",\n    email: bookedDetails?.emailId || schedulePatientData?.emailId || \"\",\n    nationalId: \"\",\n    workPhoneNumber: \"\",\n    language: \"\",\n    religion: \"\",\n    referredBy: \"\",\n    patientType: \"\",\n    patientPriority: \"\",\n    maritalStatus: \"\",\n    otherId: \"\",\n    landPhone: \"\",\n    occupation: \"\",\n    place: \"\",\n    patientRemarks: \"\",\n    speciality: \"\",\n    encounterType: \"\",\n    doctorName:\n      surgeryPatientData?.doctor || schedulePatientData?.doctorName || \"\",\n    paymentType: \"\",\n    subInsurance: \"\",\n    networkType: \"\",\n    insuranceCardNo: \"\",\n    insuranceEffDate: \"\",\n    certificateNumber: \"\",\n    maxInsuranceLiability: \"\",\n    maxInsuranceCopay: \"\",\n    extraCardNumber: \"\",\n    insuranceExpireDate: \"\",\n    dependents: \"\",\n    insuranceClaimNumber: \"\",\n    insuranceApprovalLimit: \"\",\n    copayPatient: \"\",\n    existing: \"no\",\n    // admissionDate: \"\",\n    // admissionTime: \"\",\n    // expectedDischargeDate: surgeryPatientData?.exp_discharge_date || \"\",\n    // expectedDischargeTime: \"\",\n    // admissionNote: \"\",\n    // ward: surgeryPatientData?.ward || \"\",\n    // roomNo: \"\",\n    // bedNo: \"\",\n    // bedRate: \"\",\n    // accomodationNote: \"\",\n  });\n\n  // Extract unique speciality names\n  useEffect(() => {\n    const specialities = [\n      ...new Set(allDoctorData.map((doctor) => doctor.specialityName)),\n    ].map((name) => ({ label: name, value: name }));\n\n    setSpecialityOptions(specialities);\n  }, [allDoctorData]);\n\n  // Filter doctors based on selected speciality\n  useEffect(() => {\n    if (formData.speciality) {\n      const filteredDoctors = allDoctorData\n        .filter((doctor) => doctor.specialityName === formData.speciality)\n        .map((doctor) => ({\n          label: doctor.doctorName,\n          value: doctor.doctorId,\n        }));\n\n      setDoctorOptions(filteredDoctors);\n    } else {\n      setDoctorOptions([]);\n    }\n  }, [formData.speciality, allDoctorData]);\n\n  const handleInputChange = (field, value) => {\n    setFormData((prevData) => ({\n      ...prevData,\n      [field]: value,\n      // ...(field === \"speciality\" && { doctorName: \"\" }),\n    }));\n  };\n\n  const registerPatient = () => {\n    // Required fields validation\n    const requiredFields = [\n      \"visitType\",\n      \"patientName\",\n      \"dob\",\n      \"nationality\",\n      \"address\",\n      \"referralCase\",\n      \"regDate\",\n      \"age\",\n      \"email\",\n      \"nationalId\",\n      \"patientPriority\",\n      \"gender\",\n      \"otherId\",\n      \"maritalStatus\",\n      \"occupation\",\n      \"speciality\",\n      \"doctorName\",\n      \"paymentType\",\n      \"encounterType\",\n    ];\n    const missingFields = requiredFields.filter((field) => !formData[field]);\n    if (missingFields.length > 0) {\n      showToast(\n        <div>\n          <p>Please fill all required fields:</p>\n          <ul>\n            {missingFields.map((field, index) => (\n              <li key={index}>{field}</li>\n            ))}\n          </ul>\n        </div>,\n        \"error\"\n      );\n      return;\n    }\n    dispatch(registerPatients(formData));\n    //   if(!loading){\n    //   setFormData((prev) => ({\n    //     ...prev,\n    //     image: \"\",\n    //     visitType: \"\",\n    //     patientName: \"\",\n    //     gender: \"\",\n    //     dob: \"\",\n    //     nationality: \"\",\n    //     visaType: \"\",\n    //     phoneNumber: \"\",\n    //     infoSource: \"\",\n    //     address: \"\",\n    //     referralCase: \"\",\n    //     regDate: getCurrentDateTime(),\n    //     age: \"\",\n    //     email: \"\",\n    //     nationalId: \"\",\n    //     workPhoneNumber: \"\",\n    //     language: \"\",\n    //     religion: \"\",\n    //     referredBy: \"\",\n    //     patientType: \"\",\n    //     patientPriority: \"\",\n    //     maritalStatus: \"\",\n    //     otherId: \"\",\n    //     landPhone: \"\",\n    //     occupation: \"\",\n    //     place: \"\",\n    //     patientRemarks: \"\",\n    //     speciality: \"\",\n    //     encounterType: \"\",\n    //     doctorName: \"\",\n    //     paymentType: \"\",\n    //     subInsurance: \"\",\n    //     networkType: \"\",\n    //     insuranceCardNo: \"\",\n    //     insuranceEffDate: \"\",\n    //     certificateNumber: \"\",\n    //     maxInsuranceLiability: \"\",\n    //     maxInsuranceCopay: \"\",\n    //     extraCardNumber: \"\",\n    //     insuranceExpireDate: \"\",\n    //     dependents: \"\",\n    //     insuranceClaimNumber: \"\",\n    //     insuranceApprovalLimit: \"\",\n    //     copayPatient: \"\",\n    //     // admissionDate: \"\",\n    //     // admissionTime: \"\",\n    //     // expectedDischargeDate: \"\",\n    //     // expectedDischargeTime: \"\",\n    //     // admissionNote: \"\",\n    //     // ward: \"\",\n    //     // roomNo: \"\",\n    //     // bedNo: \"\",\n    //     // bedRate: \"\",\n    //     // accomodationNote: \"\",\n    //   }));\n    // };\n  };\n  useEffect(() => {\n    if (registerPatientData?.statusCode === 200) {\n      setShowPatientInfo(true);\n      setPatientData(registerPatientData?.data);\n    } else if (error) {\n      showToast(\"Something went wrong!!\", \"error\");\n    }\n  }, [registerPatientData, error]);\n\n  return (\n    <Box paddingBottom={\"20%\"}>\n      {showPatientInfo ? (\n        <PatientInfo\n          patientData={patientData}\n          setShowPatientInfo={setShowPatientInfo}\n        />\n      ) : (\n        <form>\n          <Box p={1} width={\"100%\"}>\n            <div>\n              <p className=\"text-dark header\">Patient Demographic Details</p>\n            </div>\n            <Box className=\"form-details-section\">\n              <FormInput\n                // label={\"Upload Photo\"}\n                type=\"file\"\n                onChange={(file) => {\n                  console.log(\"Selected file:\", file);\n                }}\n                inputProps={{ accept: \"image/*\" }}\n              />\n              <FormInput\n                label={\"Visit Type\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.visitOptions}\n                value={formData.visitType}\n                onChange={(value) => handleInputChange(\"visitType\", value)}\n              />\n              <FormInput\n                label={\"Patient Name\"}\n                required={true}\n                value={formData.patientName}\n                onChange={(value) => handleInputChange(\"patientName\", value)}\n              />\n              <FormInput\n                label={\"Date of Birth\"}\n                required={true}\n                type=\"date\"\n                value={formData.dob}\n                onChange={(value) => handleInputChange(\"dob\", value)}\n                setDependentValue={(calculatedAge) =>\n                  handleInputChange(\"age\", calculatedAge)\n                }\n              />\n              <FormInput\n                label={\"Nationality\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.nationalityOptions}\n                value={formData.nationality}\n                onChange={(value) => handleInputChange(\"nationality\", value)}\n              />\n              <FormInput\n                label={\"Visa Type\"}\n                type=\"select\"\n                options={OPTION.visaTypeOptions}\n                value={formData.visaType}\n                onChange={(value) => handleInputChange(\"visaType\", value)}\n              />\n              <FormInput\n                label={\"Phone Number\"}\n                value={formData.phoneNumber}\n                onChange={(value) => handleInputChange(\"phoneNumber\", value)}\n              />\n              <FormInput\n                label={\"Info Source\"}\n                type=\"select\"\n                options={OPTION.infoSourceOptions}\n                value={formData.infoSource}\n                onChange={(value) => handleInputChange(\"infoSource\", value)}\n              />\n              <FormInput\n                label={\"Address\"}\n                required={true}\n                // type=\"select\"\n                // options={OPTION.addressOptions}\n                value={formData.address}\n                onChange={(value) => handleInputChange(\"address\", value)}\n              />\n              <FormInput\n                label={\"Referral Case\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.referralOptions}\n                value={formData.referralCase}\n                onChange={(value) => handleInputChange(\"referralCase\", value)}\n              />\n              <FormInput\n                label={\"Reg Date\"}\n                type=\"date\"\n                required={true}\n                value={formData.regDate}\n                onChange={(value) => handleInputChange(\"regDate\", value)}\n              />\n              <FormInput\n                label={\"Age\"}\n                required={true}\n                value={formData.age}\n                onChange={(value) => handleInputChange(\"age\", value)}\n              />\n              <FormInput\n                label={\"Email ID\"}\n                required={true}\n                value={formData.email}\n                onChange={(value) => handleInputChange(\"email\", value)}\n              />\n              <FormInput\n                label={\"National Id\"}\n                required={true}\n                value={formData.nationalId}\n                onChange={(value) => handleInputChange(\"nationalId\", value)}\n              />\n              <FormInput\n                label={\"Phone Number (Work)\"}\n                value={formData.workPhoneNumber}\n                onChange={(value) =>\n                  handleInputChange(\"workPhoneNumber\", value)\n                }\n              />\n              <FormInput\n                label={\"Preferred Language\"}\n                value={formData.language}\n                onChange={(value) => handleInputChange(\"language\", value)}\n              />\n              <FormInput\n                label={\"Religion\"}\n                type=\"select\"\n                options={OPTION.religionOptions}\n                value={formData.religion}\n                onChange={(value) => handleInputChange(\"religion\", value)}\n              />\n              <FormInput\n                label={\"Referred By\"}\n                value={formData.referredBy}\n                onChange={(value) => handleInputChange(\"referredBy\", value)}\n              />\n              <FormInput\n                label={\"Patient Type\"}\n                type=\"select\"\n                options={OPTION.patientTypeOptions}\n                value={formData.patientType}\n                onChange={(value) => handleInputChange(\"patientType\", value)}\n              />\n              <FormInput\n                label={\"Patient Priority\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.patientPriorityOptions}\n                value={formData.patientPriority}\n                onChange={(value) =>\n                  handleInputChange(\"patientPriority\", value)\n                }\n              />\n              <FormInput\n                label={\"Gender\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.genderOpton}\n                value={formData.gender}\n                onChange={(value) => handleInputChange(\"gender\", value)}\n              />\n              <FormInput\n                label={\"Marital Status\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.maritalStatusOptions}\n                value={formData.maritalStatus}\n                onChange={(value) => handleInputChange(\"maritalStatus\", value)}\n              />\n              <FormInput\n                label={\"Other ID Name\"}\n                type=\"select\"\n                options={OPTION.otherIdOptions}\n                value={showOtherId}\n                onChange={() => setshowOtherId(true)}\n              />\n              {showOtherId && (\n                <FormInput\n                  label={\"Other ID No\"}\n                  required={true}\n                  value={formData.otherId}\n                  onChange={(value) => handleInputChange(\"otherId\", value)}\n                />\n              )}\n              <FormInput\n                label={\"Land Phone\"}\n                value={formData.landPhone}\n                onChange={(value) => handleInputChange(\"landPhone\", value)}\n              />\n              <FormInput\n                label={\"Occupation\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.occupationOptions}\n                value={formData.occupation}\n                onChange={(value) => handleInputChange(\"occupation\", value)}\n              />\n              <FormInput\n                label={\"Place\"}\n                value={formData.place}\n                onChange={(value) => handleInputChange(\"place\", value)}\n              />\n              <FormInput\n                label={\"Patient Remark\"}\n                value={formData.patientRemarks}\n                onChange={(value) => handleInputChange(\"patientRemarks\", value)}\n              />\n            </Box>\n          </Box>\n\n          <Box p={1} width={\"100%\"}>\n            <div>\n              <p className=\"text-dark header\">Consultation Details</p>\n            </div>\n            <Box className=\"form-details-section\">\n              <FormInput\n                label={\"Speciality\"}\n                required={true}\n                type=\"select\"\n                options={specialityOptions}\n                value={formData.speciality}\n                onChange={(value) => handleInputChange(\"speciality\", value)}\n              />\n\n              {formData.visitType === \"In Patient\" ? (\n                \"\"\n              ) : (\n                <FormInput\n                  label={\"Encounter Type\"}\n                  required={true}\n                  type=\"select\"\n                  options={OPTION.encounterTypeOptions}\n                  value={formData.encounterType}\n                  onChange={(value) =>\n                    handleInputChange(\"encounterType\", value)\n                  }\n                />\n              )}\n              <FormInput\n                label={\"Doctor Name\"}\n                required={true}\n                type=\"select\"\n                options={doctorOptions}\n                value={formData.doctorName}\n                onChange={(value) => handleInputChange(\"doctorName\", value)}\n              />\n            </Box>\n          </Box>\n\n          {formData.visitType === \"In Patient\" && (\n            <Box p={1} width={\"100%\"}>\n              <div>\n                <p className=\"text-dark header\">Admission Details</p>\n              </div>\n              <Box className=\"form-details-section mb-4\">\n                <FormInput\n                  label={\"Admission date\"}\n                  type=\"date\"\n                  // value={formData.admissionDate}\n                  // onChange={(value) =>\n                  //   handleInputChange(\"admissionDate\", value)\n                  // }\n                />\n                <FormInput\n                  label={\"Admission time\"}\n                  type=\"time\"\n                  // value={formData.admissionTime}\n                  // onChange={(value) =>\n                  //   handleInputChange(\"admissionTime\", value)\n                  // }\n                />\n                <FormInput\n                  label={\"Expected Discharge date\"}\n                  type=\"date\"\n                  // value={formData.expectedDischargeDate}\n                  // onChange={(value) =>\n                  //   handleInputChange(\"expectedDischargeDate\", value)\n                  // }\n                />\n                <FormInput\n                  label={\"Expected Discharge time\"}\n                  type=\"time\"\n                  // value={formData.expectedDischargeTime}\n                  // onChange={(value) =>\n                  //   handleInputChange(\"expectedDischargeTime\", value)\n                  // }\n                />\n                <FormInput\n                  label={\"Encounter Type\"}\n                  type=\"select\"\n                  // value={formData.encounterType}\n                  options={OPTION.ipEncounterTypeOptions}\n                  // onChange={(value) =>\n                  //   handleInputChange(\"encounterType\", value)\n                  // }\n                />\n                <FormInput\n                  label={\"Notes\"}\n                  // value={formData.admissionNote}\n                  // onChange={(value) =>\n                  //   handleInputChange(\"admissionNote\", value)\n                  // }\n                />\n              </Box>\n            </Box>\n          )}\n\n          {formData.visitType === \"In Patient\" && (\n            <Box p={1} width={\"100%\"}>\n              <div\n                className=\"d-flex \"\n                style={{ justifyContent: \"space-between\" }}\n              >\n                <p className=\"text-dark header\">Accomodation details</p>\n                <Link>Select Bed and Ward</Link>\n              </div>\n              <Box className=\"form-details-section mb-4\">\n                <FormInput\n                  label={\"Ward\"}\n                  // value={formData.ward}\n                  // onChange={(value) => handleInputChange(\"ward\", value)}\n                />\n                <FormInput\n                  label={\"Room No\"}\n                  // value={formData.roomNo}\n                  // onChange={(value) => handleInputChange(\"roomNo\", value)}\n                />\n                <FormInput\n                  label={\"Bed No\"}\n                  // value={formData.bedNo}\n                  // onChange={(value) => handleInputChange(\"bedNo\", value)}\n                />\n                <FormInput\n                  label={\"Bed Rate\"}\n                  // value={formData.bedRate}\n                  // onChange={(value) => handleInputChange(\"bedRate\", value)}\n                />\n                <FormInput\n                  label={\"Notes\"}\n                  // value={formData.accomodationNote}\n                  // onChange={(value) =>\n                  //   handleInputChange(\"accomodationNote\", value)\n                  // }\n                />\n                <div>\n                  <Button>Admit</Button>\n                </div>\n              </Box>\n            </Box>\n          )}\n\n          <Box p={1} width={\"100%\"}>\n            <div>\n              <p className=\"text-dark header\">Payment Details</p>\n            </div>\n\n            <Box className=\"form-details-section mb-4\">\n              <FormInput\n                label={\"Payment Type\"}\n                required={true}\n                type=\"select\"\n                options={OPTION.paymentOptions}\n                value={formData.paymentType}\n                onChange={(value) => handleInputChange(\"paymentType\", value)}\n              />\n            </Box>\n\n            {formData.paymentType === \"Insurance\" && (\n              <Box className=\"form-details-section\">\n                <FormInput\n                  label={\"Sub Insurance\"}\n                  type=\"select\"\n                  value={formData.subInsurance}\n                  onChange={(value) => handleInputChange(\"subInsurance\", value)}\n                />\n                <FormInput\n                  label={\"Network Type\"}\n                  value={formData.networkType}\n                  onChange={(value) => handleInputChange(\"networkType\", value)}\n                />\n                <FormInput\n                  label={\"Insurance Card No\"}\n                  required={true}\n                  value={formData.insuranceCardNo}\n                  onChange={(value) =>\n                    handleInputChange(\"insuranceCardNo\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Insurance Effective From\"}\n                  type=\"date\"\n                  value={formData.insuranceEffDate}\n                  onChange={(value) =>\n                    handleInputChange(\"insuranceEffDate\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Certificate No\"}\n                  value={formData.certificateNumber}\n                  onChange={(value) =>\n                    handleInputChange(\"certificateNumber\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Max Insurance Liability\"}\n                  value={formData.maxInsuranceLiability}\n                  onChange={(value) =>\n                    handleInputChange(\"maxInsuranceLiability\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Max Insurance Copay\"}\n                  value={formData.maxInsuranceCopay}\n                  onChange={(value) =>\n                    handleInputChange(\"maxInsuranceCopay\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Extra Card No\"}\n                  value={formData.extraCardNumber}\n                  onChange={(value) =>\n                    handleInputChange(\"extraCardNumber\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Insurance Expiry Date\"}\n                  required={true}\n                  type=\"date\"\n                  value={formData.insuranceExpireDate}\n                  onChange={(value) =>\n                    handleInputChange(\"insuranceExpireDate\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Dependents No\"}\n                  value={formData.dependents}\n                  onChange={(value) => handleInputChange(\"dependents\", value)}\n                />\n                <FormInput\n                  label={\"Insurance Claim No\"}\n                  value={formData.insuranceClaimNumber}\n                  onChange={(value) =>\n                    handleInputChange(\"insuranceClaimNumber\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Insurance Approval Limit\"}\n                  value={formData.insuranceApprovalLimit}\n                  onChange={(value) =>\n                    handleInputChange(\"insuranceApprovalLimit\", value)\n                  }\n                />\n                <FormInput\n                  label={\"Co Pay Patient\"}\n                  value={formData.copayPatient}\n                  onChange={(value) => handleInputChange(\"copayPatient\", value)}\n                />\n              </Box>\n            )}\n          </Box>\n          <Box\n            display={\"flex\"}\n            padding={\"0.5em\"}\n            width={\"100%\"}\n            justifyContent={\"flex-end\"}\n          >\n            <Button\n              onClick={registerPatient}\n              disabled={loading}\n              className=\"form-btn\"\n              type=\"submit\"\n            >\n              {loading ? \"Registering...\" : \"Register New Patient\"}\n            </Button>\n          </Box>\n        </form>\n      )}\n    </Box>\n  );\n};\n\nexport default RegisterPatient;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const emergencyPatients = createAsyncThunk(\r\n  \"patient/emergencyPatients\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        API_ENDPOINTS.EMERGENCY_PATIENT,\r\n        credentials\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst emergencyPatientsSlice = createSlice({\r\n  name: \"emergencyPatients\",\r\n  initialState: {\r\n    emergencyPatientData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(emergencyPatients.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(emergencyPatients.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.emergencyPatientData = action.payload.data;\r\n      })\r\n      .addCase(emergencyPatients.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default emergencyPatientsSlice.reducer;\r\n","import React, { useState } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Button } from \"react-bootstrap\";\nimport FormInput from \"../../../components/FormFields/FormInput\";\nimport { DropdownOptions } from \"../../../components/FormFields/DropdownOptions\";\nimport { useDispatch } from \"react-redux\";\nimport { emergencyPatients } from \"../../../Redux/slice/registration/emergencyPatientSlice\";\n\nconst Emergency = () => {\n  const dispatch = useDispatch();\n  const OPTION = DropdownOptions;\n  const getCurrentDateTime = () => {\n    const now = new Date();\n    const currentDate = now.toISOString().split(\"T\")[0];\n    const currentTime = now.toLocaleTimeString([], { hour12: false });\n    return `${currentDate} ${currentTime}`;\n  };\n\n  const [formData, setFormData] = useState({\n    visitType: \"\",\n    mrdNumber: \"\",\n    patientName: \"\",\n    dob: \"\",\n    nationality: \"\",\n    visaType: \"\",\n    phoneNumber: \"\",\n    infoSource: \"\",\n    regDate: getCurrentDateTime(),\n    age: \"\",\n    email: \"\",\n    nationalId: \"\",\n    workPhoneNo: \"\",\n    language: \"\",\n    patientType: \"\",\n    otherId: \"\",\n    landPhone: \"\",\n    speciality: \"\",\n    encounterType: \"\",\n    doctorName: \"\",\n  });\n\n  const handleInputChange = (field, value) => {\n    setFormData((prevData) => ({\n      ...prevData,\n      [field]: value,\n    }));\n  };\n\n  const registerPatient = () => {\n    dispatch(emergencyPatients(formData));\n  };\n\n  return (\n    <Box paddingBottom={\"20%\"}>\n      <Box>\n        <Box padding={\"1em\"} width={\"100%\"}>\n          <div>\n            <p className=\"text-dark header\">Patient Demographic Details</p>\n          </div>\n          <Box className=\"form-details-section\">\n            <FormInput\n              label={\"Visit Type\"}\n              required={true}\n              value={formData.visitType}\n              type=\"select\"\n              options={OPTION.visitOptions}\n              onChange={(value) => handleInputChange(\"visitType\", value)}\n            />\n            <FormInput\n              label={\"MRD Number\"}\n              value={formData.mrdNumber}\n              onChange={(value) => handleInputChange(\"mrdNumber\", value)}\n            />\n            <FormInput\n              label={\"Patient Name\"}\n              required={true}\n              value={formData.patientName}\n              onChange={(value) => handleInputChange(\"patientName\", value)}\n            />\n            <FormInput\n              label={\"Date of Birth\"}\n              required={true}\n              type=\"date\"\n              value={formData.dob}\n              onChange={(value) => handleInputChange(\"dob\", value)}\n              setDependentValue={(calculatedAge) =>\n                handleInputChange(\"age\", calculatedAge)\n              }\n            />\n            <FormInput\n              label={\"Nationality\"}\n              required={true}\n              type=\"select\"\n              options={OPTION.nationalityOptions}\n              value={formData.nationality}\n              onChange={(value) => handleInputChange(\"nationality\", value)}\n            />\n            <FormInput\n              label={\"Visa Type\"}\n              type=\"select\"\n              options={OPTION.visaTypeOptions}\n              value={formData.visaType}\n              onChange={(value) => handleInputChange(\"visaType\", value)}\n            />\n            <FormInput\n              label={\"Phone Number (Mobile)\"}\n              value={formData.phoneNumber}\n              onChange={(value) => handleInputChange(\"phoneNumber\", value)}\n            />\n            <FormInput\n              label={\"Info Source\"}\n              type=\"select\"\n              options={OPTION.infoSourceOptions}\n              value={formData.infoSource}\n              onChange={(value) => handleInputChange(\"infoSource\", value)}\n            />\n            <FormInput\n              label={\"Reg Date\"}\n              type=\"date\"\n              required={true}\n              value={formData.regDate}\n              onChange={(value) => handleInputChange(\"regDate\", value)}\n            />\n            <FormInput\n              label={\"Age\"}\n              required={true}\n              value={formData.age}\n              onChange={(value) => handleInputChange(\"age\", value)}\n            />\n            <FormInput\n              label={\"Email ID\"}\n              value={formData.email}\n              onChange={(value) => handleInputChange(\"email\", value)}\n            />\n\n            <FormInput\n              label={\"National Id\"}\n              value={formData.nationalId}\n              onChange={(value) => handleInputChange(\"nationalId\", value)}\n            />\n            <FormInput\n              label={\"Phone Number (Work)\"}\n              value={formData.workPhoneNo}\n              onChange={(value) => handleInputChange(\"workPhoneNo\", value)}\n            />\n            <FormInput\n              label={\"Preferred Language\"}\n              value={formData.language}\n              onChange={(value) =>\n                handleInputChange(\"language\", value)\n              }\n            />\n            <FormInput\n              label={\"Patient Type\"}\n              type=\"select\"\n              options={OPTION.patientTypeOptions}\n              value={formData.patientType}\n              onChange={(value) => handleInputChange(\"patientType\", value)}\n            />\n            <FormInput\n              label={\"Other ID\"}\n              type=\"select\"\n              options={OPTION.otherIdOptions}\n              value={formData.otherId}\n              onChange={(value) => handleInputChange(\"otherId\", value)}\n            />\n            <FormInput\n              label={\"Land Phone\"}\n              value={formData.landPhone}\n              onChange={(value) => handleInputChange(\"landPhone\", value)}\n            />\n          </Box>\n        </Box>\n        <Box padding={\"1em\"} width={\"100%\"}>\n          <div>\n            <p className=\"text-dark header\">Consultation Details</p>\n          </div>\n          <Box className=\"form-details-section\">\n            <FormInput\n              label={\"Speciality\"}\n              required={true}\n              type=\"select\"\n              options={OPTION.specialityOptions}\n              value={formData.speciality}\n              onChange={(value) => handleInputChange(\"speciality\", value)}\n            />\n            <FormInput\n              label={\"Encounter Type\"}\n              required={true}\n              type=\"select\"\n              options={OPTION.encounterTypeOptions}\n              value={formData.encounterType}\n              onChange={(value) => handleInputChange(\"encounterType\", value)}\n            />\n            <FormInput\n              label={\"Doctor Name\"}\n              required={true}\n              type=\"select\"\n              options={OPTION.doctorOptions}\n              value={formData.doctorName}\n              onChange={(value) => handleInputChange(\"doctorName\", value)}\n            />\n          </Box>\n        </Box>\n      </Box>\n      <Box\n        display={\"flex\"}\n        padding={\"0.5em\"}\n        width={\"100%\"}\n        justifyContent={\"flex-end\"}\n      >\n        <Button onClick={registerPatient} className=\"form-btn\">\n          Register Emergency Patient\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Emergency;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const searchPatients = createAsyncThunk(\r\n  \"patient/searchPatients\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.SEARCH_PATIENT, {\r\n        params: credentials,\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst searchPatientsSlice = createSlice({\r\n  name: \"searchPatients\",\r\n  initialState: {\r\n    searchPatientData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(searchPatients.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(searchPatients.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.searchPatientData = action.payload.data;\r\n      })\r\n      .addCase(searchPatients.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default searchPatientsSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const revisitPatients = createAsyncThunk(\r\n  \"patient/revisitPatients\",\r\n  async ({ credentials, patientId }, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.put(\r\n        `${API_ENDPOINTS.REVISIT_PATIENT}/${patientId}`,\r\n        credentials\r\n      );\r\n      return response.data; \r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message || \"Something went wrong!\");\r\n    }\r\n  }\r\n);\r\n\r\n\r\nconst revisitPatientsSlice = createSlice({\r\n  name: \"revisitPatients\",\r\n  initialState: {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(revisitPatients.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(revisitPatients.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.data = action.payload.data;\r\n      })\r\n      .addCase(revisitPatients.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default revisitPatientsSlice.reducer;\r\n","import { Autocomplete, Box, TextField } from \"@mui/material\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { searchPatients } from \"../../../Redux/slice/appointement/searchPatientSlice\";\r\nimport FormInput from \"../../../components/FormFields/FormInput\";\r\nimport { DropdownOptions } from \"../../../components/FormFields/DropdownOptions\";\r\nimport { revisitPatients } from \"../../../Redux/slice/registration/revisitSlice\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { PatientInfo } from \"./PatientInfo/PatientInfo\";\r\nimport { showToast } from \"../../../components/global/Toast\";\r\n\r\nconst Revisit = () => {\r\n  const location = useLocation();\r\n  const surgeryPatientData = location.state?.patientData;\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [selectedPatient, setSelectedPatient] = useState(null);\r\n\r\n  const [showPatientInfo, setShowPatientInfo] = useState(false);\r\n  const [patientData, setPatientData] = useState();\r\n\r\n  const OPTION = DropdownOptions;\r\n\r\n  const dispatch = useDispatch();\r\n  const { searchPatientData } = useSelector((state) => state.searchPatient);\r\n  const { data, loading, error } = useSelector((state) => state?.revisit);\r\n  console.log(data?.statusCode, \"revisit patient\");\r\n\r\n  const patientId = selectedPatient?.patientId;\r\n\r\n  const handleSearchChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    dispatch(searchPatients({ searchKey: inputValue }));\r\n    setSearchQuery(inputValue);\r\n  };\r\n\r\n  const handleOptionSelect = (event, value) => {\r\n    setSelectedPatient(value);\r\n  };\r\n\r\n  const [formData, setFormData] = useState({\r\n    mrdNumber: surgeryPatientData?.mr_no || \"\",\r\n    dob: \"\",\r\n    gender: \"\",\r\n    phoneNumber: surgeryPatientData?.mobile || \"\",\r\n    patientName: surgeryPatientData?.patient || \"\",\r\n    age: \"\",\r\n    nationality: \"\",\r\n    nationalId: \"\",\r\n    visaType: \"\",\r\n    speciality: \"\",\r\n    encounterType: \"\",\r\n    doctorName: surgeryPatientData?.doctor || \"\",\r\n    paymentType: \"\",\r\n    subInsurance: \"\",\r\n    networkType: \"\",\r\n    insuranceCardNo: \"\",\r\n    insuranceEffectiveFrom: \"\",\r\n    certificateNumber: \"\",\r\n    maxInsuranceLiability: \"\",\r\n    maxInsuranceCopay: \"\",\r\n    extraCardNumber: \"\",\r\n    insuranceExpireDate: \"\",\r\n    dependents: \"\",\r\n    insuranceClaimNumber: \"\",\r\n    insuranceApprovalLimit: \"\",\r\n    copayPatient: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (selectedPatient) {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        mrdNumber: selectedPatient?.mrdNo || \"\",\r\n        dob: selectedPatient?.dob || \"\",\r\n        gender: selectedPatient?.gender || \"\",\r\n        phoneNumber: selectedPatient?.phoneNo || \"\",\r\n        patientName: selectedPatient?.name || \"\",\r\n        age: selectedPatient?.age || \"\",\r\n        nationality: selectedPatient?.nationality || \"\",\r\n        nationalId: selectedPatient?.nationalId || \"\",\r\n        visaType: selectedPatient?.visaType || \"\",\r\n      }));\r\n    }\r\n  }, [selectedPatient]);\r\n\r\n  // console.log(selectedPatient, \"patient id\");\r\n\r\n  const handleInputChange = (field, value) => {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [field]: value,\r\n    }));\r\n  };\r\n\r\n  const revisitPatient = () => {\r\n    const requiredFields = [\r\n      \"patientName\",\r\n      \"dob\",\r\n      \"nationality\",\r\n      \"age\",\r\n      \"nationalId\",\r\n      \"gender\",\r\n      \"speciality\",\r\n      \"doctorName\",\r\n      \"paymentType\",\r\n      \"encounterType\",\r\n    ];\r\n    const missingFields = requiredFields.filter((field) => !formData[field]);\r\n    if (missingFields.length > 0) {\r\n      showToast(\r\n        <div>\r\n          <p>Please fill all required fields:</p>\r\n          <ul>\r\n            {missingFields.map((field, index) => (\r\n              <li key={index}>{field}</li>\r\n            ))}\r\n          </ul>\r\n        </div>,\r\n        \"error\"\r\n      );\r\n      return;\r\n    }\r\n    dispatch(revisitPatients({ credentials: formData, patientId }));\r\n    if (!loading) {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        mrdNumber: \"\",\r\n        dob: \"\",\r\n        gender: \"\",\r\n        phoneNumber: \"\",\r\n        patientName: \"\",\r\n        age: \"\",\r\n        nationality: \"\",\r\n        nationalId: \"\",\r\n        visaType: \"\",\r\n        speciality: \"\",\r\n        encounterType: \"\",\r\n        doctorName: \"\",\r\n        paymentType: \"\",\r\n        subInsurance: \"\",\r\n        networkType: \"\",\r\n        insuranceCardNo: \"\",\r\n        insuranceEffectiveFrom: \"\",\r\n        certificateNumber: \"\",\r\n        maxInsuranceLiability: \"\",\r\n        maxInsuranceCopay: \"\",\r\n        extraCardNumber: \"\",\r\n        insuranceExpireDate: \"\",\r\n        dependents: \"\",\r\n        insuranceClaimNumber: \"\",\r\n        insuranceApprovalLimit: \"\",\r\n        copayPatient: \"\",\r\n      }));\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (error) {\r\n      showToast(error || \"Something went wrong!!\", \"error\");\r\n    } else if (data?.revisitPatient) {\r\n      setShowPatientInfo(true);\r\n      setPatientData(data.revisitPatient);\r\n    }\r\n  }, [data, error]);\r\n\r\n  return (\r\n    <Box paddingBottom={\"20%\"}>\r\n      {showPatientInfo ? (\r\n        <PatientInfo\r\n          patientData={patientData}\r\n          setShowPatientInfo={setShowPatientInfo}\r\n        />\r\n      ) : (\r\n        <div>\r\n          <Box display={\"flex\"} justifyContent={\"start\"} my={1} ml={1}>\r\n            <Autocomplete\r\n              freeSolo\r\n              options={searchPatientData?.data || []}\r\n              getOptionLabel={(option) => option.name || \"\"}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Search Patients\"\r\n                  variant=\"outlined\"\r\n                  value={searchQuery}\r\n                  onChange={handleSearchChange}\r\n                  placeholder=\"Type to search...\"\r\n                  size=\"small\"\r\n                  sx={{ width: 300 }}\r\n                />\r\n              )}\r\n              onChange={handleOptionSelect}\r\n            />\r\n          </Box>\r\n          <Box>\r\n            <Box p={1} width={\"100%\"}>\r\n              <div>\r\n                <p className=\"text-dark header\">Patient Demographic Details</p>\r\n              </div>\r\n              <Box className=\"form-details-section\">\r\n                <FormInput\r\n                  label={\"MRD Number\"}\r\n                  value={formData.mrdNumber}\r\n                  onChange={(value) => handleInputChange(\"mrdNumber\", value)}\r\n                />\r\n                <FormInput\r\n                  label={\"Date of Birth\"}\r\n                  required={true}\r\n                  type=\"date\"\r\n                  value={formData.dob}\r\n                  onChange={(value) => handleInputChange(\"dob\", value)}\r\n                  setDependentValue={(calculatedAge) =>\r\n                    handleInputChange(\"age\", calculatedAge)\r\n                  }\r\n                />\r\n                <FormInput\r\n                  label={\"Gender\"}\r\n                  required={true}\r\n                  type=\"select\"\r\n                  options={OPTION.genderOpton}\r\n                  value={formData.gender}\r\n                  onChange={(value) => handleInputChange(\"gender\", value)}\r\n                />\r\n                <FormInput\r\n                  label={\"Mobile Number\"}\r\n                  value={formData.phoneNumber}\r\n                  onChange={(value) => handleInputChange(\"phoneNumber\", value)}\r\n                />\r\n                <FormInput\r\n                  label={\"Patient Name\"}\r\n                  required={true}\r\n                  value={formData.patientName}\r\n                  onChange={(value) => handleInputChange(\"patientName\", value)}\r\n                />\r\n                <FormInput\r\n                  label={\"Age\"}\r\n                  required={true}\r\n                  value={formData.age}\r\n                  onChange={(value) => handleInputChange(\"age\", value)}\r\n                />\r\n                <FormInput\r\n                  label={\"Nationality\"}\r\n                  required={true}\r\n                  type=\"select\"\r\n                  options={OPTION.nationalityOptions}\r\n                  value={formData.nationality}\r\n                  onChange={(value) => handleInputChange(\"nationality\", value)}\r\n                />\r\n                <FormInput\r\n                  label={\"National Id\"}\r\n                  value={formData.nationalId}\r\n                  onChange={(value) => handleInputChange(\"nationalId\", value)}\r\n                />\r\n                <FormInput\r\n                  label={\"Visa Type\"}\r\n                  type=\"select\"\r\n                  options={OPTION.visaTypeOptions}\r\n                  value={formData.visaType}\r\n                  onChange={(value) => handleInputChange(\"visaType\", value)}\r\n                />\r\n              </Box>\r\n            </Box>\r\n\r\n            <Box p={1} width={\"100%\"}>\r\n              <div>\r\n                <p className=\"text-dark header\">Consultation Details</p>\r\n              </div>\r\n              <Box className=\"form-details-section\">\r\n                <FormInput\r\n                  label={\"Speciality\"}\r\n                  required={true}\r\n                  type=\"select\"\r\n                  options={OPTION.specialityOptions}\r\n                  value={formData.speciality}\r\n                  onChange={(value) => handleInputChange(\"speciality\", value)}\r\n                />\r\n                <FormInput\r\n                  label={\"Encounter Type\"}\r\n                  required={true}\r\n                  type=\"select\"\r\n                  options={OPTION.encounterTypeOptions}\r\n                  value={formData.encounterType}\r\n                  onChange={(value) =>\r\n                    handleInputChange(\"encounterType\", value)\r\n                  }\r\n                />\r\n                <FormInput\r\n                  label={\"Doctor Name\"}\r\n                  required={true}\r\n                  type=\"select\"\r\n                  options={OPTION.doctorOptions}\r\n                  value={formData.doctorName}\r\n                  onChange={(value) => handleInputChange(\"doctorName\", value)}\r\n                />\r\n              </Box>\r\n            </Box>\r\n            <Box p={1} width={\"100%\"}>\r\n              <div>\r\n                <p className=\"text-dark header\">Payment Details</p>\r\n              </div>\r\n              <Box className=\"form-details-section\">\r\n                <FormInput\r\n                  label={\"Payment Type\"}\r\n                  required={true}\r\n                  type=\"select\"\r\n                  options={OPTION.paymentOptions}\r\n                  value={formData.paymentType}\r\n                  onChange={(value) => handleInputChange(\"paymentType\", value)}\r\n                />\r\n              </Box>\r\n              {formData.paymentType === \"Insurance\" && (\r\n                <Box className=\"form-details-section\">\r\n                  <FormInput\r\n                    label={\"Sub Insurance\"}\r\n                    type=\"select\"\r\n                    value={formData.subInsurance}\r\n                    onChange={(value) =>\r\n                      handleInputChange(\"subInsurance\", value)\r\n                    }\r\n                  />\r\n                  <FormInput\r\n                    label={\"Network Type\"}\r\n                    value={formData.networkType}\r\n                    onChange={(value) =>\r\n                      handleInputChange(\"networkType\", value)\r\n                    }\r\n                  />\r\n                  <FormInput\r\n                    label={\"Insurance Card No\"}\r\n                    required={true}\r\n                    value={formData.insuranceCardNo}\r\n                    onChange={(value) =>\r\n                      handleInputChange(\"insuranceCardNo\", value)\r\n                    }\r\n                  />\r\n                  <FormInput\r\n                    label={\"Insurance Effective From\"}\r\n                    type=\"date\"\r\n                    value={formData.insuranceEffectiveFrom}\r\n                    onChange={(value) =>\r\n                      handleInputChange(\"insuranceEffectiveFrom\", value)\r\n                    }\r\n                  />\r\n                  <FormInput\r\n                    label={\"Certificate No\"}\r\n                    value={formData.certificateNumber}\r\n                    onChange={(value) =>\r\n                      handleInputChange(\"certificateNumber\", value)\r\n                    }\r\n                  />\r\n                  <FormInput\r\n                    label={\"Max Insurance Liability\"}\r\n                    value={formData.maxInsuranceLiability}\r\n                    onChange={(value) =>\r\n                      handleInputChange(\"maxInsuranceLiability\", value)\r\n                    }\r\n                  />\r\n                  <FormInput\r\n                    label={\"Max Insurance Copay\"}\r\n                    value={formData.maxInsuranceCopay}\r\n                    onChange={(value) =>\r\n                      handleInputChange(\"maxInsuranceCopay\", value)\r\n                    }\r\n                  />\r\n                  <FormInput\r\n                    label={\"Extra Card No\"}\r\n                    value={formData.extraCardNumber}\r\n                    onChange={(value) =>\r\n                      handleInputChange(\"extraCardNumber\", value)\r\n                    }\r\n                  />\r\n                  <FormInput\r\n                    label={\"Insurance Expiry Date\"}\r\n                    required={true}\r\n                    type=\"date\"\r\n                    value={formData.insuranceExpireDate}\r\n                    onChange={(value) =>\r\n                      handleInputChange(\"insuranceExpireDate\", value)\r\n                    }\r\n                  />\r\n                  <FormInput\r\n                    label={\"Dependents No\"}\r\n                    value={formData.dependents}\r\n                    onChange={(value) => handleInputChange(\"dependents\", value)}\r\n                  />\r\n                  <FormInput\r\n                    label={\"Insurance Claim No\"}\r\n                    value={formData.insuranceClaimNumber}\r\n                    onChange={(value) =>\r\n                      handleInputChange(\"insuranceClaimNumber\", value)\r\n                    }\r\n                  />\r\n                  <FormInput\r\n                    label={\"Insurance Approval Limit\"}\r\n                    value={formData.insuranceApprovalLimit}\r\n                    onChange={(value) =>\r\n                      handleInputChange(\"insuranceApprovalLimit\", value)\r\n                    }\r\n                  />\r\n                  <FormInput\r\n                    label={\"Co Pay Patient\"}\r\n                    value={formData.copayPatient}\r\n                    onChange={(value) =>\r\n                      handleInputChange(\"copayPatient\", value)\r\n                    }\r\n                  />\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            display={\"flex\"}\r\n            padding={\"0.5em\"}\r\n            width={\"100%\"}\r\n            justifyContent={\"flex-end\"}\r\n          >\r\n            <Button onClick={revisitPatient} className=\"form-btn\">\r\n              {loading ? \"Registering...\" : \" Register Revisit Patient\"}\r\n            </Button>\r\n          </Box>\r\n        </div>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Revisit;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const scheduleList = createAsyncThunk(\r\n  \"appointment/scheduleList\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.SCHEDULE_LIST, {\r\n        params: credentials,\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst scheduleListSlice = createSlice({\r\n  name: \"scheduleList\",\r\n  initialState: {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(scheduleList.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(scheduleList.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.data = action.payload.data;\r\n      })\r\n      .addCase(scheduleList.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default scheduleListSlice.reducer;\r\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport { Spinner } from \"react-bootstrap\";\nimport \"./loader.css\";\n\nconst EMRLoader = ({ show }) => {\n  return (\n    <>\n      {show && (\n        <div className=\"fullscreen-loader\">\n          <Spinner style={{ color: \"green\" }} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default EMRLoader;\n","import React, { useState } from \"react\";\nimport { IconButton, Menu, MenuItem } from \"@mui/material\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport _ from \"lodash\"\n\nconst EMRMenuIcon = ({ itemsArray, callbackParam }) => {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = (callback) => {\n    setAnchorEl(null);\n    if (_.isEmpty(callback)) {\n      callback(callbackParam);\n    }\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-controls=\"menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n        color=\"inherit\"\n      >\n        <MenuIcon />\n      </IconButton>\n      <Menu\n        id=\"menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        {itemsArray.map((item) => (\n          <MenuItem onClick={() => handleClose(item.callback)}>\n            <item.icon />\n            &nbsp;{item.name}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default EMRMenuIcon;\n","import React, { useEffect, useState } from \"react\";\nimport { Table, Input, Select, Pagination, DatePicker } from \"antd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { scheduleList } from \"../../../Redux/slice/dashboard/scheduleListSlice\";\nimport moment from \"moment\";\nimport { MedicalInformationOutlined } from \"@mui/icons-material\";\nimport EMRLoader from \"../../../components/global/loader/EMRLoaderOverlay\";\nimport EMRMenuIcon from \"../../../components/global/EMRMenuIcon\";\n\nconst { Option } = Select;\n\nconst ScheduleList = () => {\n  const [filters, setFilters] = useState({});\n  const [appointments, setAppointments] = useState([]);\n  const [page, setPage] = useState(1);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const { data, loading } = useSelector((state) => state.schedule);\n  const appointmentData = data?.data;\n\n  useEffect(() => {\n    if (appointmentData) {\n      setAppointments(appointmentData);\n    }\n  }, [appointmentData]);\n\n  useEffect(() => {\n    dispatch(scheduleList(filters));\n  }, [filters, dispatch]);\n\n  const handleFilterChange = (key, value) => {\n    setFilters((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const handleDateChange = (key, date) => {\n    const formattedDate = date ? moment(date).format(\"DD/MM/YYYY\") : \"\";\n    setFilters((prev) => ({ ...prev, [key]: formattedDate }));\n  };\n\n  const onCreatePatientVisit = () => {\n    navigate(\"/secure/registration\", { state: {} });\n  };\n\n  const dropDownMenuItems = [\n    {\n      name: \"Create Patient Visit\",\n      icon: MedicalInformationOutlined,\n      callback: onCreatePatientVisit,\n    },\n  ];\n\n  const columns = [\n    {\n      title: \"S.No\",\n      dataIndex: \"sno\",\n      key: \"sno\",\n      render: (_, __, index) => (page - 1) * rowsPerPage + index + 1,\n    },\n    {\n      title: \"Schedule Date\",\n      dataIndex: \"scheduleDate\",\n      key: \"scheduleDate\",\n      filterDropdown: () => (\n        <DatePicker\n          format=\"DD/MM/YYYY\"\n          onChange={(date) => handleDateChange(\"scheduleDate\", date)}\n        />\n      ),\n    },\n    {\n      title: \"MR Number\",\n      dataIndex: \"mrdNo\",\n      key: \"mrdNo\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search MR Number\"\n          onChange={(e) => handleFilterChange(\"mrdNo\", e.target.value)}\n        />\n      ),\n    },\n\n    {\n      title: \"Mobile\",\n      dataIndex: \"mobile\",\n      key: \"mobile\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search Mobile\"\n          onChange={(e) => handleFilterChange(\"mobile\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Patient Name\",\n      dataIndex: \"patientName\",\n      key: \"patientName\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search Patient Name\"\n          onChange={(e) => handleFilterChange(\"patientName\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Doctor\",\n      dataIndex: \"doctorName\",\n      key: \"doctorName\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search Doctor\"\n          onChange={(e) => handleFilterChange(\"doctorName\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"appointmentStatus\",\n      key: \"appointmentStatus\",\n      filterDropdown: () => (\n        <Select\n          style={{ width: \"100%\" }}\n          onChange={(value) => handleFilterChange(\"appointmentStatus\", value)}\n        >\n          <Option value=\"\">--All--</Option>\n          <Option value=\"re_confirmed\">Re-Confirmed</Option>\n          <Option value=\"booked\">Booked</Option>\n          <Option value=\"no_show\">No Show</Option>\n          <Option value=\"cancelled\">Cancelled</Option>\n          <Option value=\"arrived\">Arrived</Option>\n          <Option value=\"concluded\">Concluded</Option>\n          <Option value=\"being_seen\">Being Seen</Option>\n        </Select>\n      ),\n    },\n    {\n      title: \"Options\",\n      key: \"actions\",\n      render: (row) => (\n        <EMRMenuIcon\n          itemsArray={dropDownMenuItems}\n          callbackParam={{ data: row, from: \"schedule_list\" }}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <EMRLoader show={loading} />\n\n      <Table\n        dataSource={appointments}\n        columns={columns}\n        rowKey={(record) => record.id}\n        className=\"table-container mt-3\"\n      />\n    </div>\n  );\n};\n\nexport default ScheduleList;\n","import React, { useEffect, useState } from \"react\";\nimport { Table, Input, Select, DatePicker } from \"antd\";\nimport moment from \"moment\";\n\nconst { Option } = Select;\n\nconst PatientRecall = () => {\n  const [data, setData] = useState([\n    {\n      id: 1,\n      s_no: \"1\",\n      mr_number: \"23435455\",\n      visit_date: \"27/12/2024\",\n      patient_name: \"Mr. Praveen\",\n      doctor: \"Mr. Jhon\",\n      recall_date: \"27/12/2024\",\n      status: \"Being Seen\",\n    },\n    {\n      id: 2,\n      s_no: \"2\",\n      mr_number: \"2345455\",\n      visit_date: \"27/12/2024\",\n      patient_name: \"Mr. Praveen\",\n      doctor: \"Mr. Jhon\",\n      recall_date: \"27/12/2024\",\n      status: \"Being Seen\",\n    },\n    {\n      id: 3,\n      s_no: \"3\",\n      mr_number: \"5435t4555\",\n      visit_date: \"27/12/2024\",\n      patient_name: \"Mr. Praveen\",\n      doctor: \"Mr. Jhon\",\n      recall_date: \"27/12/2024\",\n      status: \"Being Seen\",\n    },\n  ]);\n\n  const [filters, setFilters] = useState({});\n  const [filteredData, setFilteredData] = useState(data);\n\n  useEffect(() => {\n    let result = data.filter((row) =>\n      Object.keys(filters).every((key) => {\n        if (!filters[key]) return true;\n        if (key === \"status\" && filters[key] === \"--All--\") return true;\n        return String(row[key])\n          .toLowerCase()\n          .includes(filters[key].toLowerCase());\n      })\n    );\n    setFilteredData(result);\n  }, [filters, data]);\n\n  const handleFilterChange = (key, value) => {\n    setFilters((prev) => ({ ...prev, [key]: value }));\n  };\n\n  const handleDateChange = (key, date) => {\n    setFilters((prev) => ({\n      ...prev,\n      [key]: date ? moment(date).format(\"DD/MM/YYYY\") : \"\",\n    }));\n  };\n\n  const columns = [\n    { title: \"S.No\", dataIndex: \"s_no\", key: \"s_no\" },\n    {\n      title: \"MR Number\",\n      dataIndex: \"mr_number\",\n      key: \"mr_number\",\n      filterDropdown: () => (\n        <Input\n          onChange={(e) => handleFilterChange(\"mr_number\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Visit Date\",\n      dataIndex: \"visit_date\",\n      key: \"visit_date\",\n      filterDropdown: () => (\n        <DatePicker\n          onChange={(date) => handleDateChange(\"visit_date\", date)}\n          format=\"DD/MM/YYYY\"\n        />\n      ),\n    },\n    {\n      title: \"Patient Name\",\n      dataIndex: \"patient_name\",\n      key: \"patient_name\",\n      filterDropdown: () => (\n        <Input\n          onChange={(e) => handleFilterChange(\"patient_name\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Doctor\",\n      dataIndex: \"doctor\",\n      key: \"doctor\",\n      filterDropdown: () => (\n        <Input onChange={(e) => handleFilterChange(\"doctor\", e.target.value)} />\n      ),\n    },\n    {\n      title: \"Recall Date\",\n      dataIndex: \"recall_date\",\n      key: \"recall_date\",\n      filterDropdown: () => (\n        <DatePicker\n          onChange={(date) => handleDateChange(\"recall_date\", date)}\n          format=\"DD/MM/YYYY\"\n        />\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      filterDropdown: () => (\n        <Select\n          defaultValue=\"--All--\"\n          onChange={(value) => handleFilterChange(\"status\", value)}\n        >\n          <Option value=\"--All--\">--All--</Option>\n          <Option value=\"Re-Confirmed\">Re-Confirmed</Option>\n          <Option value=\"Booked\">Booked</Option>\n          <Option value=\"No Show\">No Show</Option>\n          <Option value=\"Cancelled\">Cancelled</Option>\n          <Option value=\"Arrived\">Arrived</Option>\n          <Option value=\"Concluded\">Concluded</Option>\n          <Option value=\"Being Seen\">Being Seen</Option>\n        </Select>\n      ),\n    },\n  ];\n\n  return (\n    <Table\n      columns={columns}\n      dataSource={filteredData}\n      rowKey=\"id\"\n      pagination={{ pageSize: 5 }}\n      className=\"table-container mt-3\"\n    />\n  );\n};\n\nexport default PatientRecall;\n","import React, { useEffect, useState } from \"react\";\nimport { Table, Input, Select, DatePicker, Space } from \"antd\";\nimport { Schedule } from \"@mui/icons-material\";\nimport moment from \"moment\";\nimport EMRMenuIcon from \"../../../components/global/EMRMenuIcon\";\n\nconst { Option } = Select;\n\nconst PatientVaccinationSchedule = () => {\n  const [data, setData] = useState([\n    {\n      id: 1,\n      s_no: \"1\",\n      mr_number: \"23435455\",\n      patient_name: \"Mr. Praveen\",\n      mobile: \"9876543210\",\n      schedule_date: \"27/12/2024\",\n      vaccination_name: \"Covaccine\",\n      remarks: \"Null\",\n      status: \"Being Seen\",\n      vaccine_date: \"27/12/2024\",\n    },\n    {\n      id: 2,\n      s_no: \"2\",\n      mr_number: \"432335455\",\n      patient_name: \"Mr. Praveen\",\n      mobile: \"9854643210\",\n      schedule_date: \"07/11/2024\",\n      vaccination_name: \"Covaccine\",\n      remarks: \"Null\",\n      status: \"Being Seen\",\n      vaccine_date: \"12/10/2024\",\n    },\n    {\n      id: 3,\n      s_no: \"3\",\n      mr_number: \"412335455\",\n      patient_name: \"Mr. Praveen\",\n      mobile: \"4576543210\",\n      schedule_date: \"12/09/2024\",\n      vaccination_name: \"Covaccine\",\n      remarks: \"Null\",\n      status: \"Being Seen\",\n      vaccine_date: \"11/06/2024\",\n    },\n  ]);\n\n  const [filters, setFilters] = useState({});\n  const [filteredData, setFilteredData] = useState(data);\n\n  const statusOptions = [\n    \"--All--\",\n    \"Re-Confirmed\",\n    \"Booked\",\n    \"No Show\",\n    \"Cancelled\",\n    \"Arrived\",\n    \"Concluded\",\n    \"Being Seen\",\n  ];\n\n  const handleFilterChange = (columnId, value) => {\n    setFilters((prevFilters) => ({ ...prevFilters, [columnId]: value }));\n  };\n\n  const handleDateChange = (columnId, date) => {\n    const formattedDate = date ? moment(date).format(\"DD/MM/YYYY\") : \"\";\n    setFilters((prevFilters) => ({\n      ...prevFilters,\n      [columnId]: formattedDate,\n    }));\n  };\n\n  useEffect(() => {\n    let filtered = data.filter((row) =>\n      Object.keys(filters).every((columnId) => {\n        const filterValue = filters[columnId]?.toLowerCase() || \"\";\n        if (!filterValue || filterValue === \"--all--\") return true;\n        return String(row[columnId]).toLowerCase().includes(filterValue);\n      })\n    );\n    setFilteredData(filtered);\n  }, [filters, data]);\n\n  const columns = [\n    { title: \"S.No\", dataIndex: \"s_no\", key: \"s_no\" },\n    {\n      title: \"MR Number\",\n      dataIndex: \"mr_number\",\n      key: \"mr_number\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search MR Number\"\n          onChange={(e) => handleFilterChange(\"mr_number\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Patient Name\",\n      dataIndex: \"patient_name\",\n      key: \"patient_name\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search Patient\"\n          onChange={(e) => handleFilterChange(\"patient_name\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Mobile\",\n      dataIndex: \"mobile\",\n      key: \"mobile\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search Mobile\"\n          onChange={(e) => handleFilterChange(\"mobile\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Schedule Date\",\n      dataIndex: \"schedule_date\",\n      key: \"schedule_date\",\n      filterDropdown: () => (\n        <DatePicker\n          format=\"DD/MM/YYYY\"\n          onChange={(date) => handleDateChange(\"schedule_date\", date)}\n        />\n      ),\n    },\n    {\n      title: \"Vaccination Name\",\n      dataIndex: \"vaccination_name\",\n      key: \"vaccination_name\",\n    },\n    {\n      title: \"Remarks\",\n      dataIndex: \"remarks\",\n      key: \"remarks\",\n      filterDropdown: () => (\n        <Input\n          placeholder=\"Search Remarks\"\n          onChange={(e) => handleFilterChange(\"remarks\", e.target.value)}\n        />\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      filterDropdown: () => (\n        <Select\n          defaultValue=\"--All--\"\n          onChange={(value) => handleFilterChange(\"status\", value)}\n        >\n          {statusOptions.map((status, index) => (\n            <Option key={index} value={status}>\n              {status}\n            </Option>\n          ))}\n        </Select>\n      ),\n    },\n    {\n      title: \"Vaccine Date\",\n      dataIndex: \"vaccine_date\",\n      key: \"vaccine_date\",\n      filterDropdown: () => (\n        <DatePicker\n          format=\"DD/MM/YYYY\"\n          onChange={(date) => handleDateChange(\"vaccine_date\", date)}\n        />\n      ),\n    },\n    {\n      title: \"Options\",\n      key: \"actions\",\n      render: (row) => (\n        <EMRMenuIcon\n          itemsArray={[{ name: \"Schedule Appointment\", icon: Schedule }]}\n          callbackParam={{ data: row, from: \"schedule_list\" }}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <div>\n      <Table\n        dataSource={filteredData}\n        columns={columns}\n        rowKey=\"id\"\n        pagination={{ pageSize: 5 }}\n        bordered\n        className=\"table-container mt-3\"\n      />\n    </div>\n  );\n};\n\nexport default PatientVaccinationSchedule;\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Box,\r\n  TableContainer,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Select,\r\n  FormControl,\r\n  MenuItem,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\r\nimport moment from \"moment\";\r\n\r\nconst PatientList = () => {\r\n  const [filter, setFilter] = useState({});\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [statusFilter, setStatusFilter] = useState(\"--All--\");\r\n  const handleFilterChange = (columnId, value, type) => {\r\n    if (type === \"select\") {\r\n      setStatusFilter(value);\r\n    }\r\n    setFilter({ ...filter, [columnId]: value });\r\n  };\r\n   const handleDateChange = (columnId, e) => {\r\n      let value = moment(e).format(\"DD/MM/YYYY\");\r\n      if (value === \"Invalid date\") {\r\n        setFilter({ ...filter, [columnId]: \"\" });\r\n      } else {\r\n        setFilter({ ...filter, [columnId]: value });\r\n      }\r\n    };\r\n  const columns = [\r\n    { id: \"s_no\", label: \"S.No\", filter: false },\r\n    { id: \"patient_type\", label: \"Registration Date\", filter: false },\r\n    { id: \"mr_number\", label: \"MRD Number\", filter: true, type: \"input\" },\r\n    // { id: \"visit_date\", label: \"Visit Date\", filter: true, type: \"date\" },\r\n    { id: \"patient_name\", label: \"Patient name\", filter: true, type: \"input\" },\r\n    { id: \"doctor\", label: \"DOB\", filter: true, type: \"input\" },\r\n    { id: \"recall_date\", label: \"Gender\", filter: true, type: \"date\" },\r\n    { id: \"Plan_of_care\", label: \"Nationality\", filter: false },\r\n    { id: \"status\", label: \"Status\", filter: true, type: \"select\" },\r\n    { id: \"actions\", label: \"Options\", filter: false },\r\n  ];\r\n  return (\r\n    <Box width={\"100%\"}>\r\n      <TableContainer component={Paper} sx={{ maxHeight: 400 }}>\r\n        <Table>\r\n          <TableHead sx={{ height: \"1em\" }}>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell>{column.label}</TableCell>\r\n              ))}\r\n            </TableRow>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell padding=\"8px\">\r\n                  {column.filter && column.type === \"input\" && (\r\n                    <TextField\r\n                      size=\"small\"\r\n                      className=\"filter-input\"\r\n                      id={column.id}\r\n                      value={filter[column.id] || \"\"}\r\n                      onChange={(e) =>\r\n                        handleFilterChange(column.id, e.target.value, \"input\")\r\n                      }\r\n                    >\r\n                      {column.label}\r\n                    </TextField>\r\n                  )}\r\n                  {column.filter && column.type === \"date\" && (\r\n                    <DatePicker\r\n                      className=\"filter-input\"\r\n                      slotProps={{ actionBar: { actions: [\"clear\"] } }}\r\n                      onChange={(e) => handleDateChange(column.id, e)}\r\n                      sx={{ width: \"130px\" }}\r\n                    />\r\n                  )}\r\n                  {column.filter && column.type === \"select\" && (\r\n                    <FormControl fullWidth>\r\n                      <Select\r\n                        id=\"status-select\"\r\n                        className=\"filter-input\"\r\n                        value={statusFilter}\r\n                        onChange={(e) =>\r\n                          handleFilterChange(\r\n                            column.id,\r\n                            e.target.value,\r\n                            \"select\"\r\n                          )\r\n                        }\r\n                      >\r\n                        {/* {status.map((option, index) => {\r\n                          return (\r\n                            <MenuItem\r\n                              key={`${option.id}_${index}`}\r\n                              value={option.label}\r\n                            >\r\n                              {option.label}\r\n                            </MenuItem>\r\n                          );\r\n                        })} */}\r\n                      </Select>\r\n                    </FormControl>\r\n                  )}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {/* {filteredData?.map((row) => (\r\n            <TableRow key={row.id}>\r\n              {columns.map((column) => {\r\n                return (\r\n                  column.id !== \"actions\" && (\r\n                    <TableCell key={column.id}>{row[column.id]}</TableCell>\r\n                  )\r\n                );\r\n              })} */}\r\n            <TableRow>\r\n              <TableCell>No Data</TableCell>\r\n            </TableRow>\r\n            {/* ))} */}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PatientList;\r\n","import React, { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { Box } from \"@mui/material\";\nimport ScreenWrapper from \"../../components/global/ScreenWrapper\";\nimport EMRtabs from \"../../components/global/EMRtabs\";\nimport RegisterPatient from \"./component/RegisterPatient\";\nimport Emergency from \"./component/Emergency\";\nimport Revisit from \"./component/Revisit\";\nimport ScheduleList from \"../dashboard/components/ScheduleList\";\nimport PatientRecall from \"../dashboard/components/PatientRecall\";\nimport PatientVaccinationSchedule from \"../dashboard/components/PatientVaccinationSchedules\";\nimport VaccinesIcon from \"@mui/icons-material/Vaccines\";\nimport EventNoteIcon from \"@mui/icons-material/EventNote\";\nimport EventRepeatIcon from \"@mui/icons-material/EventRepeat\";\nimport PatientList from \"./component/PatientInfo/PatientList\";\n\nconst Registration = () => {\n  const [searchParams] = useSearchParams();\n  const defaultTab = searchParams.get(\"tab\") || \"register_patient\";\n  const [activeTab, setActiveTab] = useState(defaultTab);\n\n  const tabsList = [\n    { name: \"Register Patient\", value: \"register_patient\", icon: \"\" },\n    { name: \"Revisit\", value: \"revist_registration\", icon: \"\" },\n    {\n      name: \"Emergency Registration\",\n      value: \"emergency_registration\",\n      icon: \"\",\n    },\n    {\n      name: \"Patient List\",\n      value: \"patient_list\",\n      icon: \"\",\n    },\n    // { name: \"Schedule List\", value: \"schedule_list\", icon: EventNoteIcon },\n    // { name: \"Patient Recall\", value: \"patient_recall\", icon: EventRepeatIcon },\n    // {\n    //   name: \"Patient Vaccination Schedules\",\n    //   value: \"patient_vaccination_schedules\",\n    //   icon: VaccinesIcon,\n    // },\n  ];\n\n  useEffect(() => {\n    setActiveTab(defaultTab);\n  }, [defaultTab]);\n\n  return (\n    <ScreenWrapper style={{ padding: \"20px\" }}>\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <EMRtabs\n          tabsList={tabsList}\n          defaultTab={defaultTab}\n          setActiveTab={setActiveTab}\n        />\n      </Box>\n      <Box>\n        {activeTab === \"register_patient\" && <RegisterPatient />}\n        {activeTab === \"revist_registration\" && <Revisit />}\n        {activeTab === \"emergency_registration\" && <Emergency />}\n        {activeTab === \"patient_list\" && <PatientList />}\n        {/* {activeTab === \"schedule_list\" && <ScheduleList />}\n        {activeTab === \"patient_recall\" && <PatientRecall />}\n        {activeTab === \"patient_vaccination_schedules\" && (\n          <PatientVaccinationSchedule />\n        )} */}\n      </Box>\n    </ScreenWrapper>\n  );\n};\n\nexport default Registration;\n","import React, { useState } from 'react';\nimport { Box, Button, Menu, MenuItem, Typography, TextField, InputAdornment, IconButton, Chip, Badge, Stack, Tooltip } from '@mui/material';\nimport ArrowBackIosNewSharpIcon from '@mui/icons-material/ArrowBackIosNewSharp';\nimport ArrowForwardIosSharpIcon from '@mui/icons-material/ArrowForwardIosSharp';\nimport { DemoItem } from '@mui/x-date-pickers/internals/demo';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport dayjs from 'dayjs';\nimport SearchIcon from '@mui/icons-material/Search';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { FilterList } from '@mui/icons-material';\nimport { DemoContainer } from '@mui/x-date-pickers/internals/demo';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\n\nconst DocOptions = ({ cardTitle, searchByPatientName, searchByStatus }) => {\n  const [value, setValue] = useState(dayjs());\n  const [searchTerm, setSearchTerm] = useState('');\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [appliedFilters, setAppliedFilters] = useState([]);\n\n  const filterOptions = [\n    { label: 'New Patient', color: '#ADD8E6' },\n    { label: 'Old Patient', color: '#d9f2d0' },\n    { label: 'Revisit', color: '#fae2d5' },\n    { label: 'Walking', color: '#cce7ff' }\n  ];\n\n  const handleButtonClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleFilterClick = (filter) => {\n    searchByStatus(filter)\n    setAppliedFilters((prev) =>\n      prev.includes(filter.label)\n        ? prev.filter((item) => item !== filter.label)\n        : [...prev, filter.label]\n    );\n  };\n\n\n\n  const handleChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value);\n    if (event.target.value) {\n      searchByPatientName(event.target.value)\n    } else {\n      searchByPatientName(\"\")\n    }\n  };\n\n  const clearSearch = () => {\n    setSearchTerm('');\n    searchByPatientName(\"\")\n  };\n\n  const handleStatusReset = () => {\n    setAppliedFilters([])\n    setAnchorEl(null);\n    searchByStatus(\"\")\n  }\n\n  return (\n    <div>\n      {cardTitle === \"Revenue\" ? <Box sx={{ display: 'flex', alignItems: 'center', mt: 2, marginBottom: 5 }}>\n\n\n        <Typography variant=\"h6\" align=\"center\" sx={{ flexGrow: 1, display: 'flex', ml: '250px' }}>\n          Transaction Details\n        </Typography> {\"   \"}\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\n          <DesktopDatePicker\n            label=\"Date\"\n            inputFormat=\"MM/DD/YYYY\"\n            value={value}\n            onChange={handleChange}\n            renderInput={(params) => <TextField {...params} />}\n          />\n        </LocalizationProvider>\n\n      </Box> : cardTitle === \"\" ? \"\" :\n\n\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mt: 2 }}>\n          {/* Card Title and Search Box */}\n          <Box sx={{ display: 'flex', alignItems: 'center', flexGrow: 1 }}>\n            <Typography variant=\"h6\" sx={{ flexGrow: 1, ml: 2 }}>\n              {cardTitle}\n            </Typography>\n            <TextField\n              size=\"small\"\n              variant=\"outlined\"\n              placeholder=\"Patient Name/ MRD No\"\n              value={searchTerm}\n              onChange={handleSearchChange}\n              InputProps={{\n                startAdornment: (\n                  <InputAdornment position=\"start\">\n                    <SearchIcon />\n                  </InputAdornment>\n                ),\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      onClick={clearSearch}\n                      aria-label=\"clear search\"\n                      edge=\"end\"\n                      size=\"small\"\n                      sx={{ visibility: searchTerm ? 'visible' : 'hidden' }}\n                    >\n                      <CloseIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n            />\n          </Box>\n\n\n          <Box sx={{ display: 'flex', alignItems: 'center', ml: 2, mr: 2 }}>\n            <Button\n              variant=\"contained\"\n              color={appliedFilters.length > 0 ? 'success' : 'primary'}\n              startIcon={<FilterList />}\n              onClick={handleButtonClick}\n            >\n              {appliedFilters.length > 0\n                ? `Filter Applied ${appliedFilters.length}`\n                : 'Filter'}\n            </Button>\n\n            <Menu\n              anchorEl={anchorEl}\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n              PaperProps={{ style: { maxHeight: 48 * 4.5, width: 'fit-content' } }}\n            >\n              <Stack direction=\"row\" spacing={0} p={1} flexWrap=\"wrap\">\n                {filterOptions.map((option) => (\n                  <div>\n                    <MenuItem\n                      key={option.label}\n                      onClick={() => handleFilterClick(option)}\n                      style={{\n                        padding: '8px 16px',\n                        cursor: 'pointer',\n                        backgroundColor: appliedFilters.includes(option.label) ? option.color : 'transparent',\n                        color: appliedFilters.includes(option.label) ? 'black' : 'inherit',\n                      }}\n                    >\n                      {option.label}\n                    </MenuItem>\n\n                  </div>\n                ))}\n                <MenuItem>\n                  <IconButton color=\"primary\" onClick={handleStatusReset}>\n                    <RestartAltIcon />\n                  </IconButton>\n                </MenuItem>\n              </Stack>\n            </Menu>\n          </Box>\n\n         \n        </Box>\n      }\n\n\n    </div>\n  );\n};\n\nexport default DocOptions;\n","import React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { styled } from '@mui/material/styles';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  IconButton,\n  Grid,\n  Typography,\n  Divider,\n  DialogActions,\n  Button\n} from '@mui/material';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst CustomDataGrid = styled(DataGrid)(({ theme }) => ({\n  '.MuiDataGrid-columnHeaders': {\n    textAlign: 'center',\n  },\n  '.MuiDataGrid-groupHeader': {\n    textAlign: 'center',\n  },\n  '& .MuiDataGrid-scrollbar--horizontal': {\n    height: '8px !important',\n    backgroundColor: '#f0f0f0',\n    borderRadius: '4px',\n  },\n  '& .MuiDataGrid-scrollbar--horizontal .MuiDataGrid-scrollbarContent': {\n    backgroundColor: '#888',\n    borderRadius: '4px',\n  },\n  '& .MuiDataGrid-scrollbar--horizontal .MuiDataGrid-scrollbarContent:hover': {\n    backgroundColor: '#555',\n  },\n}));\n\nexport default function RevenueDataList({ dashboardList }) {\n  const [open, setOpen] = React.useState(false);\n  const [selectedRow, setSelectedRow] = React.useState(null);\n\n  const handleClickOpen = (row) => {\n    setSelectedRow(row);\n    setOpen(true);\n  };\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  const formatDate = (dateString) => {\n    if (!dateString) return '-';\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-GB'); \n  };\n\n  \n  const handleEmpty = (value) => (value ? value : '-');\n\n  \n  const columns = [\n    { field: 'sno', headerName: 'S. No', width: 90 },\n    {\n      field: 'date',\n      headerName: 'Date',\n      width: 150,\n      valueGetter: (params) => formatDate(params.row.date), \n    },\n    {\n      field: 'regNo',\n      headerName: 'Reg No',\n      width: 150,\n      valueGetter: (params) => handleEmpty(params.row.regNo), \n    },\n    {\n      field: 'patientName',\n      headerName: 'Patient Name',\n      width: 200,\n      valueGetter: (params) => handleEmpty(params.row.patientName), \n    },\n    {\n      field: 'view',\n      headerName: 'Revenue Details',\n      width: 150,\n      renderCell: (params) => (\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => handleClickOpen(params.row)}\n        >\n          View\n        </Button>\n      ),\n    },\n    {\n      field: 'gross',\n      headerName: 'Gross',\n      width: 150,\n      align: 'right',\n      headerAlign: 'center',\n      valueGetter: (params) => handleEmpty(params.row.gross), \n    },\n    {\n      field: 'discount',\n      headerName: 'Discount',\n      width: 150,\n      align: 'right',\n      headerAlign: 'center',\n      valueGetter: (params) => handleEmpty(params.row.discount), \n    },\n    {\n      field: 'net',\n      headerName: 'Net',\n      width: 150,\n      align: 'right',\n      headerAlign: 'center',\n      valueGetter: (params) => handleEmpty(params.row.net), \n    },\n    {\n      field: 'revenue',\n      headerName: 'Revenue',\n      width: 150,\n      align: 'right',\n      headerAlign: 'center',\n      valueGetter: (params) => handleEmpty(params.row.revenue), \n    },\n  ];\n\n\n  const rows = dashboardList.map((item, index) => ({\n    id: index + 1,\n    sno: index + 1,\n    date: item.date,\n    regNo: item.regNo,\n    patientName: item.patientName,\n    gross: item.gross,\n    discount: item.discount,\n    net: item.net,\n    revenue: item.revenue,\n  }));\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <CustomDataGrid rows={rows} columns={columns} pageSize={5} />\n\n      \n      <Dialog open={open} onClose={handleClose} maxWidth=\"sm\" fullWidth>\n        <DialogTitle>\n          Revenue Details\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleClose}\n            style={{ position: 'absolute', right: 8, top: 8 }}\n          >\n            <CloseIcon />\n          </IconButton>\n        </DialogTitle>\n        <DialogContent>\n          {selectedRow && (\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Typography variant=\"body1\">\n                  <strong>Date: </strong>\n                  {formatDate(selectedRow.date)}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"body1\">\n                  <strong>Reg No: </strong>\n                  {handleEmpty(selectedRow.regNo)}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"body1\">\n                  <strong>Patient Name: </strong>\n                  {handleEmpty(selectedRow.patientName)}\n                </Typography>\n              </Grid>\n              <Divider style={{ marginTop: 20, marginBottom: 20 }} />\n              <Grid item xs={12}>\n                <Typography variant=\"body1\">\n                  <strong>Gross: </strong>\n                  {handleEmpty(selectedRow.gross)}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"body1\">\n                  <strong>Discount: </strong>\n                  {handleEmpty(selectedRow.discount)}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"body1\">\n                  <strong>Net: </strong>\n                  {handleEmpty(selectedRow.net)}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"body1\">\n                  <strong>Revenue: </strong>\n                  {handleEmpty(selectedRow.revenue)}\n                </Typography>\n              </Grid>\n            </Grid>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { IconButton, Avatar, Menu, MenuItem, ListItemIcon, ListItemText } from '@mui/material';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport LocalHospitalIcon from '@mui/icons-material/LocalHospital';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport DownloadIcon from '@mui/icons-material/Download';\nimport { useNavigate } from \"react-router-dom\";\n\nconst columns = [\n  {\n    field: 'sNo',\n    headerName: 'Queue No',\n    width: 150,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n  {\n    field: 'mrdNo',\n    headerName: 'MRD No',\n    width: 150,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n  {\n    field: 'name',\n    headerName: 'Patient Name',\n    width: 200,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n  {\n    field: 'consultationDate',\n    headerName: 'Last Consultation Date',\n    width: 200,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n  {\n    field: 'procedure',\n    headerName: 'Procedure',\n    width: 180,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n  {\n    field: 'insuranceName',\n    headerName: 'Insurance',\n    width: 180,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n  {\n    field: 'status',\n    headerName: 'Status',\n    width: 180,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    renderCell: (params) => (\n      <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\n        <Avatar sx={{ bgcolor: params.value.color, color: '#fff' }}>\n          {params.value.initials}\n        </Avatar>\n      </div>\n    ),\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n  {\n    field: 'actions',\n    headerName: 'Actions',\n    width: 100,\n    sortable: true,\n    filterable: false,\n    disableColumnMenu: true,\n    renderCell: (params) => (\n      <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\n        <ActionsMenu mrdNo={params.row.mrdNo} />\n      </div>\n    ),\n    cellClassName: 'centeredCell',\n    headerAlign: 'center'\n  },\n];\n\nexport default function OthersDataList({ dashboardList }) {\n  const [rows, setRows] = React.useState([]);\n\n  React.useEffect(() => {\n    const transformedData = dashboardList.map((item, index) => ({\n      id: item.mrdNo || index,\n      sNo: item.sNo,\n      mrdNo: item.mrdNo,\n      name: item.name,\n      consultationDate: item.consultationDate || '-',\n      procedure: item.procedure || '-',\n      insuranceName: item.insuranceName,\n      status: {\n        color: item.status === 'N' ? '#ADD8E6' : '#fae2d0',\n        initials: item.status === 'N' ? 'N' : item.status\n      },\n      actions: item.mrdNo,\n    }));\n\n    setRows(transformedData);\n  }, [dashboardList]);\n\n\n\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        disableSelectionOnClick\n      />\n    </div>\n  );\n}\n\nfunction ActionsMenu({ mrdNo }) {\n  const navigate = useNavigate();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleMenuClick = (action) => {\n    if (action === \"Open encounter\") {\n      navigate('/doctor/doctorEmr')\n    }\n\n    handleClose();\n  };\n\n  return (\n    <div>\n      <IconButton onClick={handleClick} size=\"small\">\n        <MoreVertIcon />\n      </IconButton>\n      <Menu anchorEl={anchorEl} open={open} onClose={handleClose}>\n        <MenuItem onClick={() => handleMenuClick('Refer to OP')}>\n          <ListItemIcon>\n            <LocalHospitalIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Refer to OP\" />\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuClick('Refer to IP')}>\n          <ListItemIcon>\n            <AssignmentIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Refer to IP\" />\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuClick('View Order Form')}>\n          <ListItemIcon>\n            <VisibilityIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"View Order Form\" />\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuClick('Download Report')}>\n          <ListItemIcon>\n            <DownloadIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Download Report\" />\n        </MenuItem>\n        <MenuItem >\n          <ListItemIcon>\n            <VisibilityIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"View Paitent Details\" />\n        </MenuItem>\n        <MenuItem onClick={() => handleMenuClick('Open encounter')}>\n          <ListItemIcon>\n            <VisibilityIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Open encounter\" />\n        </MenuItem>\n      </Menu>\n    </div>\n  );\n}\n","import React from 'react';\nimport DocOptions from './docOptions';\nimport RevenueDataList from './RevenueDataList';\nimport OthersDataList from './OthersDataList';\n\nconst MainDataList = ({ selectedCard, dashboardList, searchByPatientName , searchByStatus }) => {\n  return (\n    <div>\n      <DocOptions cardTitle={selectedCard} searchByPatientName={searchByPatientName} searchByStatus={searchByStatus}/>\n      {selectedCard === \"Revenue\" ? <RevenueDataList dashboardList={dashboardList}/> : <OthersDataList dashboardList={dashboardList}/>}\n    </div>\n  );\n};\n\nexport default MainDataList;\n","function DoctorNurseLoader() {\n    return (\n        <div style={styles.loaderContainer}>\n            <svg version=\"1.1\" id=\"L4\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n                viewBox=\"0 0 100 100\" xmlSpace=\"preserve\" style={styles.svg}>\n                <circle fill=\"#ADD8E6\" stroke=\"none\" cx=\"20\" cy=\"50\" r=\"4\">\n                    <animate\n                        attributeName=\"opacity\"\n                        dur=\"1s\"\n                        values=\"0;1;0\"\n                        repeatCount=\"indefinite\"\n                        begin=\"0.1s\" />\n                </circle>\n                <circle fill=\"#fae2d5\" stroke=\"none\" cx=\"40\" cy=\"50\" r=\"4\">\n                    <animate\n                        attributeName=\"opacity\"\n                        dur=\"1s\"\n                        values=\"0;1;0\"\n                        repeatCount=\"indefinite\"\n                        begin=\"0.2s\" />\n                </circle>\n                <circle fill=\"#cce7ff\" stroke=\"none\" cx=\"60\" cy=\"50\" r=\"4\">\n                    <animate\n                        attributeName=\"opacity\"\n                        dur=\"1s\"\n                        values=\"0;1;0\"\n                        repeatCount=\"indefinite\"\n                        begin=\"0.3s\" />\n                </circle>\n            </svg>\n        </div>\n    );\n}\n\nconst styles = {\n    loaderContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '50vh',  \n        width: '150vw',   \n    },\n    svg: {\n        width: '600px',   \n        height: '600px',  \n    }\n};\n\nexport default DoctorNurseLoader;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, Row, Col, Button, Container } from 'react-bootstrap';\nimport TodayIcon from '@mui/icons-material/Today';\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\nimport EmergencyIcon from '@mui/icons-material/LocalHospital';\nimport WaitingIcon from '@mui/icons-material/HourglassEmpty';\nimport TelemedicineIcon from '@mui/icons-material/Computer';\nimport doctorImage from \"../../assets/doc2.jpg\";\nimport MainDataList from './components/mainDataList';\nimport { doctorDashboardCount } from \"../../core/services/APIService\";\nimport { doctorDashboardDataList } from \"../../core/services/APIService\";\nimport DoctorNurseLoader from \"../../components/global/doctorNurseLoader\";\nimport Box from '@mui/material/Box';\nconst cardColors = {\n  \"Today's Appointment\": '#ADD8E6',\n  'Revenue': '#d9f2d0',\n  'Emergency Patient': '#fae2d5',\n  'Waiting List': '#fae2d5',\n  'Telemedicine Appointment': '#cce7ff',\n};\n\n\nconst DoctorDashboard = () => {\n  const [selectedCard, setSelectedCard] = useState(\"Today's Appointment\")\n  const [dashboardCountResp, setDashboardCountResp] = useState([])\n  const [dashboardlistResp, setDashboardlistResp] = useState([])\n  const [searchPatientName, setsearchPatientName] = useState('');\n  const [PatientStatus, setPatientStatus] = useState('');\n\n  const handleCardClick = async (title) => {\n    setSelectedCard(title)\n    switch (title) {\n      case \"Today's Appointment\":\n        let todaysAppointmentResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"todaysAppointment\", page: 1, size: 100, ptName: searchPatientName, status: PatientStatus })\n        setDashboardlistResp(todaysAppointmentResponse)\n        setsearchPatientName(\"\")\n        break;\n      case \"Revenue\":\n        let revenueResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"revenue\", page: 1, size: 100, ptName: searchPatientName, status: PatientStatus })\n        setDashboardlistResp(revenueResponse)\n        setsearchPatientName(\"\")\n        break;\n      case \"Emergency Patient\":\n        let emergencyPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"emergencyPatient\", page: 1, size: 100, ptName: searchPatientName, status: PatientStatus })\n        setDashboardlistResp(emergencyPatientResponse)\n        setsearchPatientName(\"\")\n        break;\n      case \"Waiting list\":\n        let waitingListResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"waitingList\", page: 1, size: 100, ptName: searchPatientName, status: PatientStatus })\n        setDashboardlistResp(waitingListResponse)\n        setsearchPatientName(\"\")\n        break;\n      case \"Telemedicine Appointment\":\n        let teleAppointmentResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"teleAppointment\", page: 1, size: 100, ptName: searchPatientName, status: PatientStatus })\n        setDashboardlistResp(teleAppointmentResponse)\n        setsearchPatientName(\"\")\n        break;\n      default:\n      // code block\n    }\n\n  };\n\n  const dashboardCount = async () => {\n    let response = await doctorDashboardCount(\"/doctorService/doctor/getCount\", { doctorId: 1, ipOpFlag: 0 })\n    let cardDetails = response.map((cardData) => {\n      switch (cardData.displayName) {\n        case \"Today's Appointment\":\n          cardData['color'] = cardColors[\"Today's Appointment\"]\n          cardData['icon'] = <TodayIcon style={{ fontSize: '40px' }} />\n          break;\n        case \"Revenue\":\n          cardData['color'] = cardColors['Revenue']\n          cardData['icon'] = <MonetizationOnIcon style={{ fontSize: '40px' }} />\n          break;\n        case \"Emergency Patient\":\n          cardData['color'] = cardColors['Emergency Patient']\n          cardData['icon'] = <EmergencyIcon style={{ fontSize: '40px' }} />\n          break;\n        case \"Waiting list\":\n          cardData['color'] = cardColors['Waiting List']\n          cardData['icon'] = <WaitingIcon style={{ fontSize: '40px' }} />\n          break;\n        case \"Telemedicine Appointment\":\n          cardData['color'] = cardColors['Telemedicine Appointment']\n          cardData['icon'] = <TelemedicineIcon style={{ fontSize: '40px' }} />\n          break;\n        default:\n        // code block\n      }\n      return cardData\n    })\n    setDashboardCountResp(cardDetails)\n  }\n\n  const dashboardListDefault = async () => {\n    if (selectedCard === \"Today's Appointment\") {\n      let response = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"todaysAppointment\", page: 1, size: 100, ptName: searchPatientName, status: PatientStatus })\n      setDashboardlistResp(response)\n    }\n  }\n  useEffect(() => {\n    dashboardCount()\n    dashboardListDefault()\n  }, [])\n\n  const checkValue = (value) => {\n    if (value === \"\" || value === undefined || value === NaN || value === null) {\n      return \"-\"\n    } else {\n      return value\n    }\n  }\n\n  const searchByPatientName = async (patientName) => {\n    setsearchPatientName(patientName)\n    switch (selectedCard) {\n      case \"Today's Appointment\":\n        let TodayAppointmentsearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"todaysAppointment\", page: 1, size: 100, ptName: patientName, status: PatientStatus })\n        setDashboardlistResp(TodayAppointmentsearchPatientResponse)\n\n        break;\n      case \"Revenue\":\n        let RevenuSearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"revenue\", page: 1, size: 100, ptName: patientName, status: PatientStatus })\n        setDashboardlistResp(RevenuSearchPatientResponse)\n\n        break;\n      case \"Emergency Patient\":\n        let EmergencySearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"emergencyPatient\", page: 1, size: 100, ptName: patientName, status: PatientStatus })\n        setDashboardlistResp(EmergencySearchPatientResponse)\n\n        break;\n      case \"Waiting list\":\n        let searchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"waitingList\", page: 1, size: 100, ptName: patientName, status: PatientStatus })\n        setDashboardlistResp(searchPatientResponse)\n\n        break;\n      case \"Telemedicine Appointment\":\n        let TeleSearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"teleAppointment\", page: 1, size: 100, ptName: patientName, status: PatientStatus })\n        setDashboardlistResp(TeleSearchPatientResponse)\n\n        break;\n      default:\n      // code block\n    }\n  }\n\n  const searchByStatus = async (value) => {\n    if (value === 'Old Patient') {\n      setPatientStatus('O')\n    } else if (value === \"New Patient\") {\n      setPatientStatus('N')\n    } else if (value === \"Revisit\") {\n      setPatientStatus('R')\n    } else if (value === \"Walking\") {\n      setPatientStatus('W')\n    }\n    switch (selectedCard) {\n      case \"Today's Appointment\":\n        let TodayAppointmentsearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"todaysAppointment\", page: 1, size: 100, ptName: searchPatientName, status: value ? value.label.charAt(0) : \"\" })\n        setDashboardlistResp(TodayAppointmentsearchPatientResponse)\n        break;\n      case \"Revenue\":\n        let RevenuSearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"revenue\", page: 1, size: 100, ptName: searchPatientName, status: value ? value.label.charAt(0) : \"\" })\n        setDashboardlistResp(RevenuSearchPatientResponse)\n        break;\n      case \"Emergency Patient\":\n        let EmergencySearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"emergencyPatient\", page: 1, size: 100, ptName: searchPatientName, status: value ? value.label.charAt(0) : \"\" })\n        setDashboardlistResp(EmergencySearchPatientResponse)\n        break;\n      case \"Waiting list\":\n        let searchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"waitingList\", page: 1, size: 100, ptName: searchPatientName, status: value ? value.label.charAt(0) : \"\" })\n        setDashboardlistResp(searchPatientResponse)\n        break;\n      case \"Telemedicine Appointment\":\n        let TeleSearchPatientResponse = await doctorDashboardDataList(\"/doctorService/doctor/getDataList\", { doctorId: 1, ipOpFlag: 0, context: \"teleAppointment\", page: 1, size: 100, ptName: searchPatientName, status: value ? value.label.charAt(0) : \"\" })\n        setDashboardlistResp(TeleSearchPatientResponse)\n        break;\n      default:\n      // code block\n    }\n  }\n\n\n  return (\n    <div>\n      {dashboardCountResp.length === 0 && dashboardlistResp.length === 0\n        ?\n        <DoctorNurseLoader />\n        :\n        <div>\n          <Container fluid >\n            <Row className=\"flex-nowrap\">\n              <Col xs={12} sm={6} md={4} lg={2}>\n                <Card style={{ width: '200px', height: '200px', backgroundColor: '#fff', borderRadius: '10px', boxShadow: '0px 4px 10px rgba(0, 0, 0, 0.1)' }}>\n                  <Card.Img variant=\"top\" src={doctorImage} style={{ height: '60%' }} />\n                  <Card.Body className=\"d-flex align-items-center justify-content-center\">\n                    <Card.Title className=\"text-center\">Welcome, Dr. John!</Card.Title>\n                  </Card.Body>\n                </Card>\n              </Col>\n\n              {dashboardCountResp.map((card, index) => (\n                <Col xs={12} sm={6} md={4} lg={2} key={card.displayIndex}>\n                  <Button variant=\"light\" className=\"p-0\" onClick={() => handleCardClick(card.displayName)}>\n                    <Card style={{ width: '200px', height: '200px', backgroundColor: card.color, borderRadius: '10px', boxShadow: `0px 4px 10px rgba(0, 0, 0, 0.1)` }}>\n                      <Card.Body className=\"d-flex flex-column align-items-center justify-content-center text-white\">\n                        {card.icon}\n                        <Card.Title className=\"mt-2\">{checkValue(card.displayName)}</Card.Title>\n                        <Card.Text className=\"mt-1\" style={{ fontSize: '24px' }}>{checkValue(card.totalCount)}</Card.Text>\n                      </Card.Body>\n                    </Card>\n                  </Button>\n                </Col>\n              ))}\n            </Row>\n            <MainDataList selectedCard={selectedCard} dashboardList={dashboardlistResp} searchByPatientName={searchByPatientName} searchByStatus={searchByStatus} />\n          </Container>\n        </div>\n      }\n\n\n    </div>\n  );\n};\n\nexport default DoctorDashboard;\n","import React, { useState, useEffect } from \"react\";\nimport { Box } from \"@mui/material\";\nimport { Row, Form, Button } from \"react-bootstrap\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\n\nconst BlockAvailability = () => {\n  const [formData, setFormData] = useState({\n    doctorId: \"\",\n    title: \"\",\n    startTime: \"\",\n    endTime: \"\"\n  });\n  const [specialistList, setSpecialistList] = useState([]);\n\n  // useEffect(() => {\n  //   setEventData(formData);\n  // }, [formData]);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  const handleChangeStartTime = (e) => {\n    setFormData({\n      ...formData,\n      [\"startTime\"]: e?.format(\"HH:mm:ss\")\n    });\n  };\n\n  const handleChangeEndTime = (e) => {\n    setFormData({\n      ...formData,\n      [\"endTime\"]: e?.format(\"HH:mm:ss\")\n    });\n  };\n\n  const blockAvailability = () => {};\n\n  return (\n    <Box width={\"50%\"}>\n      <Form>\n        <Row className=\"mb-3\">\n          <Form.Group>\n            <Form.Label className=\"mt-3\">{\"Specialist\"}</Form.Label>\n            <Form.Select\n              value={formData.doctorId}\n              onChange={handleChange}\n              name=\"doctorId\"\n            >\n              <option value={\"-1\"}>select...</option>\n              {specialistList.map((type) => {\n                return <option value={type.doctorId}>{type.doctorName}</option>;\n              })}\n            </Form.Select>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label className=\"mt-3\">Title</Form.Label>\n            <Form.Control\n              name=\"title\"\n              required={true}\n              value={formData.title}\n              type=\"text\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label className=\"mt-3\">Start Time</Form.Label>\n            <Box width={\"100%\"}>\n              <TimePicker\n                name=\"startTime\"\n                onChange={handleChangeStartTime}\n                ampm={false}\n                // value={formData.startTime}\n                sx={{ width: \"100%\" }}\n              />\n            </Box>\n          </Form.Group>\n          <Form.Group>\n            <Form.Label className=\"mt-3\">End Time</Form.Label>\n            <Box width={\"100%\"}>\n              <TimePicker\n                name=\"endTime\"\n                // value={formData.endTime}\n                onChange={handleChangeEndTime}\n                sx={{ width: \"100%\" }}\n                ampm={false}\n              />\n            </Box>\n          </Form.Group>\n        </Row>\n      </Form>\n\n      <Box\n        display={\"flex\"}\n        padding={\"0.5em\"}\n        width={\"100%\"}\n        justifyContent={\"flex-end\"}\n      >\n        <Button color=\"danger\" onClick={blockAvailability}>\n          Block Availability\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default BlockAvailability;\n","import React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Checkbox\r\n} from \"@mui/material\";\r\nimport ScreenWrapper from \"../../components/global/ScreenWrapper\";\r\nimport EMRtabs from \"../../components/global/EMRtabs\";\r\nimport BlockAvailability from \"../appointment/component/BlockAvailability\";\r\n\r\nconst Privileges = () => {\r\n  const [activeTab, setActiveTab] = useState(\"user_privileges\");\r\n  const initialRoles = [\r\n    {\r\n      role: \"Admin\",\r\n      canViewPage1: true,\r\n      canViewPage2: true,\r\n      canEdit: true,\r\n      canDelete: true\r\n    },\r\n    {\r\n      role: \"Receptionist\",\r\n      canViewPage1: true,\r\n      canViewPage2: false,\r\n      canEdit: false,\r\n      canDelete: false\r\n    },\r\n    {\r\n      role: \"Doctor\",\r\n      canViewPage1: true,\r\n      canViewPage2: true,\r\n      canEdit: true,\r\n      canDelete: false\r\n    },\r\n    {\r\n      role: \"Nurse\",\r\n      canViewPage1: true,\r\n      canViewPage2: false,\r\n      canEdit: false,\r\n      canDelete: false\r\n    },\r\n    {\r\n      role: \"Cash Counter\",\r\n      canViewPage1: true,\r\n      canViewPage2: false,\r\n      canEdit: false,\r\n      canDelete: false\r\n    }\r\n  ];\r\n  const [roles, setRoles] = useState(initialRoles);\r\n  const tabsList = [\r\n    { name: \"User privileges\", value: \"user_privileges\", icon: \"\" },\r\n    {\r\n      name: \"Block Availability\",\r\n      value: \"block_availability\",\r\n      icon: \"\"\r\n    },\r\n    {\r\n      name: \"Release Availability\",\r\n      value: \"release_availability\",\r\n      icon: \"\"\r\n    }\r\n  ];\r\n\r\n  const handleCheckboxChange = (roleIndex, permission) => {\r\n    const updatedRoles = [...roles];\r\n    updatedRoles[roleIndex][permission] = !updatedRoles[roleIndex][permission];\r\n    setRoles(updatedRoles);\r\n  };\r\n\r\n  return (\r\n    <ScreenWrapper>\r\n      <Box p={2} sx={{ backgroundColor: \"white\", borderRadius: \"8px\" }}>\r\n        <Box display={\"flex\"} justifyContent={\"flex-start\"}>\r\n          <EMRtabs\r\n            tabsList={tabsList}\r\n            defaultTab={\"user_privileges\"}\r\n            setActiveTab={setActiveTab}\r\n          />\r\n        </Box>\r\n        {activeTab === \"user_privileges\" && (\r\n          <Box mt={4}>\r\n            <TableContainer component={Paper} elevation={3}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      sx={{ fontWeight: \"bold\", backgroundColor: \"#e0e0e0\" }}\r\n                    >\r\n                      Roles\r\n                    </TableCell>\r\n                    {roles.map((role) => (\r\n                      <TableCell\r\n                        key={role.role}\r\n                        sx={{ fontWeight: \"bold\", backgroundColor: \"#e0e0e0\" }}\r\n                      >\r\n                        {role.role}\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      sx={{ fontWeight: \"bold\", backgroundColor: \"#e0f7fa\" }}\r\n                    >\r\n                      Dashboard\r\n                    </TableCell>\r\n                    {roles.map((role, index) => (\r\n                      <TableCell key={`${role.role}-dashboard`} align=\"center\">\r\n                        <Checkbox\r\n                          checked={role.canViewPage1}\r\n                          onChange={() =>\r\n                            handleCheckboxChange(index, \"canViewPage1\")\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      sx={{ fontWeight: \"bold\", backgroundColor: \"#e0f7fa\" }}\r\n                    >\r\n                      Appointment\r\n                    </TableCell>\r\n                    {roles.map((role, index) => (\r\n                      <TableCell\r\n                        key={`${role.role}-appointment`}\r\n                        align=\"center\"\r\n                      >\r\n                        <Checkbox\r\n                          checked={role.canViewPage1}\r\n                          onChange={() =>\r\n                            handleCheckboxChange(index, \"canViewPage1\")\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      sx={{ fontWeight: \"bold\", backgroundColor: \"#e0f7fa\" }}\r\n                    >\r\n                      Registration\r\n                    </TableCell>\r\n                    {roles.map((role, index) => (\r\n                      <TableCell\r\n                        key={`${role.role}-registration`}\r\n                        align=\"center\"\r\n                      >\r\n                        <Checkbox\r\n                          checked={role.canViewPage1}\r\n                          onChange={() =>\r\n                            handleCheckboxChange(index, \"canViewPage1\")\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      sx={{ fontWeight: \"bold\", backgroundColor: \"#e0f7fa\" }}\r\n                    >\r\n                      Billing\r\n                    </TableCell>\r\n                    {roles.map((role, index) => (\r\n                      <TableCell key={`${role.role}-billing`} align=\"center\">\r\n                        <Checkbox\r\n                          checked={role.canViewPage1}\r\n                          onChange={() =>\r\n                            handleCheckboxChange(index, \"canViewPage1\")\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      sx={{ fontWeight: \"bold\", backgroundColor: \"#e0f7fa\" }}\r\n                    >\r\n                      Previllages\r\n                    </TableCell>\r\n                    {roles.map((role, index) => (\r\n                      <TableCell key={`${role.role}-billing`} align=\"center\">\r\n                        <Checkbox\r\n                          checked={role.canViewPage1}\r\n                          onChange={() =>\r\n                            handleCheckboxChange(index, \"canViewPage1\")\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                    ))}\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Box>\r\n        )}\r\n\r\n        {activeTab === \"release_availability\" && (\r\n          <Box>Release Availability</Box>\r\n        )}\r\n        {activeTab === \"block_availability\" && (\r\n          <Box display={\"flex\"} justifyContent={\"center\"} mt={2}>\r\n            <BlockAvailability />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </ScreenWrapper>\r\n  );\r\n};\r\n\r\nexport default Privileges;\r\n","export const ipInsurance = [\n  {\n    claim_no: 1,\n    insurar_name: \"Test\",\n    invoice_no: \"31312\",\n    invoice_date: \"28-11-2024\",\n    patient_name: \"Akash\",\n    mrd_no: \"233423\",\n    status: \"Confirmed\",\n    actions: \"\"\n  },\n  {\n    claim_no: 2,\n    insurar_name: \"Test\",\n    invoice_no: \"31312\",\n    invoice_date: \"28-11-2024\",\n    patient_name: \"Akash\",\n    mrd_no: \"233423\",\n    status: \"Confirmed\",\n    actions: \"\"\n  },\n  {\n    claim_no: 3,\n    insurar_name: \"Test\",\n    invoice_no: \"31312\",\n    invoice_date: \"28-11-2024\",\n    patient_name: \"Akash\",\n    mrd_no: \"233423\",\n    status: \"Confirmed\",\n    actions: \"\"\n  },\n  {\n    claim_no: 6,\n    insurar_name: \"Test\",\n    invoice_no: \"31312\",\n    invoice_date: \"28-11-2024\",\n    patient_name: \"Akash\",\n    mrd_no: \"233423\",\n    status: \"Confirmed\",\n    actions: \"\"\n  },\n  {\n    claim_no: 7,\n    insurar_name: \"Test\",\n    invoice_no: \"31312\",\n    invoice_date: \"28-11-2024\",\n    patient_name: \"Akash\",\n    mrd_no: \"233423\",\n    status: \"Confirmed\",\n    actions: \"\"\n  }\n];\n","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport {\n  Box,\n  TableContainer,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Select,\n  FormControl,\n  MenuItem,\n  Paper\n} from \"@mui/material\";\nimport EMRLoader from \"../../../../../components/global/loader/EMRLoaderOverlay\";\nimport { useLoading } from \"../../../../../components/global/loader/LoadingContext\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport moment from \"moment\";\nimport EMRMenuIcon from \"../../../../../components/global/EMRMenuIcon\";\nimport MedicalInformationOutlined from \"@mui/icons-material/MedicalInformationOutlined\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ipInsurance } from \"../../../data\";\n\nconst ClaimDetails = () => {\n  const [filter, setFilter] = useState({});\n  const [statusFilter, setStatusFilter] = useState(\"--All--\");\n  const [appointments, setAppointments] = useState([]);\n  const { loading, setLoading } = useLoading();\n  const [numberOfElements, setNumberOfElements] = useState(0);\n  const [totalElements, setTotalElements] = useState(0);\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(false);\n  const tableRef = useRef();\n  const navigate = useNavigate();\n\n  const columns = [\n    { id: \"SI.No\", label: \"SI.No\", filter: false },\n    { id: \"insurar_name\", label: \"Insurar Name\", filter: true, type: \"input\" },\n    { id: \"Total Claims\", label: \"Invoice NO\", filter: true, type: \"input\" },\n    { id: \"invoice_date\", label: \" Invoice Date\", filter: true, type: \"date\" },\n    { id: \"patient_name\", label: \"Patient Name\", filter: true, type: \"input\" },\n    { id: \"mrd_no\", label: \"MRD No\", filter: true, type: \"input\" },\n    { id: \"status\", label: \"Status\", filter: true, type: \"select\" },\n    { id: \"actions\", label: \"Options\", filter: false }\n  ];\n\n  const status = [\n    { id: \"all\", label: \"--All--\" },\n    { id: \"pending\", label: \"Pending\" },\n    { id: \"verified\", label: \"Verified\" },\n    { id: \"submitted\", label: \"Submitted\" },\n    { id: \"re-submitted_pending\", label: \"Re-Submitted Pending\" },\n    { id: \"re-verified\", label: \"Re-Verified\" },\n    { id: \"re-submitted\", label: \"Re-Submitted\" },\n    { id: \"re-re-submitted_pending\", label: \"Re-Re-Submitted Pending\" },\n    { id: \"re-re-verified\", label: \"Re-Re-Verified\" },\n    { id: \"re-re-submitted\", label: \"Re-Re-Submitted\" },\n    { id: \"write_off\", label: \"Write Off\" },\n    { id: \"cancelled \", label: \"Cancelled\" }\n  ];\n\n  const handleFilterChange = (columnId, value, type) => {\n    if (type === \"select\") {\n      setStatusFilter(value);\n    }\n    setFilter({ ...filter, [columnId]: value });\n  };\n\n  const onCreatePatientVisit = (params) => {\n    navigate(\"/secure/registration\");\n  };\n\n  const dropDownMenuItems = [\n    {\n      name: \"Create Patient Visit\",\n      icon: MedicalInformationOutlined,\n      callback: onCreatePatientVisit\n    }\n  ];\n\n  const handleDateChange = (columnId, e) => {\n    let value = moment(e).format(\"DD/MM/YYYY\");\n    if (value === \"Invalid date\") {\n      setFilter({ ...filter, [columnId]: \"\" });\n    } else {\n      setFilter({ ...filter, [columnId]: value });\n    }\n  };\n\n  const handleScroll = () => {\n    const { scrollTop, clientHeight, scrollHeight } = tableRef.current;\n    if (scrollHeight - scrollTop <= clientHeight + 1 && hasMore) {\n      setPage((prev) => prev + 1);\n    }\n  };\n\n  return (\n    <Box padding={\"1em\"} width={\"100%\"}>\n      <Box display={\"flex\"} justifyContent={\"space-between\"}>\n        <Box>OP INSURANCE : CLAIM INVOICES LIST</Box>\n        <Box>{moment().format(\"LLLL\")}</Box>\n      </Box>\n      <EMRLoader show={loading} />\n      <TableContainer\n        style={{ height: \"75vh\" }}\n        component={Paper}\n        onScroll={handleScroll}\n        ref={tableRef}\n      >\n        <Table style={{ overflow: \"auto\" }}>\n          <TableHead sx={{ height: \"1em\" }}>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell>{column.label}</TableCell>\n              ))}\n            </TableRow>\n            <TableRow style={{ backgroundColor: \"white\" }}>\n              {columns.map((column) => (\n                <TableCell padding=\"8px\">\n                  {column.filter && column.type === \"input\" && (\n                    <TextField\n                      size=\"small\"\n                      id={column.id}\n                      className=\"filter-input\"\n                      value={filter[column.id] || \"\"}\n                      onChange={(e) =>\n                        handleFilterChange(column.id, e.target.value, \"input\")\n                      }\n                    >\n                      {column.label}\n                    </TextField>\n                  )}\n                  {column.filter && column.type === \"date\" && (\n                    <DatePicker\n                      className=\"filter-input\"\n                      slotProps={{ actionBar: { actions: [\"clear\"] } }}\n                      onChange={(e) => handleDateChange(column.id, e)}\n                    />\n                  )}\n                  {column.filter && column.type === \"select\" && (\n                    <FormControl fullWidth>\n                      <Select\n                        id=\"status-select\"\n                        className=\"filter-input\"\n                        value={statusFilter}\n                        onChange={(e) =>\n                          handleFilterChange(\n                            column.id,\n                            e.target.value,\n                            \"select\"\n                          )\n                        }\n                      >\n                        {status.map((option, index) => {\n                          return (\n                            <MenuItem\n                              key={`${option.id}_${index}`}\n                              value={option.label}\n                            >\n                              {option.label}\n                            </MenuItem>\n                          );\n                        })}\n                      </Select>\n                    </FormControl>\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ipInsurance?.map((row) => (\n              <TableRow key={row.id}>\n                {columns.map((column) => {\n                  return (\n                    column.id !== \"actions\" && (\n                      <TableCell key={column.id}>{row[column.id]}</TableCell>\n                    )\n                  );\n                })}\n                <TableCell>\n                  <EMRMenuIcon\n                    itemsArray={dropDownMenuItems}\n                    callbackParam={{ data: row, from: \"schedule_list\" }}\n                  />\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default ClaimDetails;\n","import React, { useEffect, useRef, useState, useCallback } from \"react\";\nimport {\n  Box,\n  TableContainer,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  TextField,\n  Select,\n  FormControl,\n  MenuItem,\n  Paper\n} from \"@mui/material\";\nimport EMRLoader from \"../../../../../components/global/loader/EMRLoaderOverlay\";\nimport { useLoading } from \"../../../../../components/global/loader/LoadingContext\";\nimport { DatePicker } from \"@mui/x-date-pickers/DatePicker\";\nimport moment from \"moment\";\nimport EMRMenuIcon from \"../../../../../components/global/EMRMenuIcon\";\nimport MedicalInformationOutlined from \"@mui/icons-material/MedicalInformationOutlined\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ipInsurance } from \"../../../data\";\nimport \"../../../insurance.css\";\n\nconst ManualSubmission = () => {\n  const [filter, setFilter] = useState({});\n  const [statusFilter, setStatusFilter] = useState(\"--All--\");\n  const [appointments, setAppointments] = useState([]);\n  const { loading, setLoading } = useLoading();\n  const [numberOfElements, setNumberOfElements] = useState(0);\n  const [totalElements, setTotalElements] = useState(0);\n  const [page, setPage] = useState(0);\n  const [hasMore, setHasMore] = useState(false);\n  const tableRef = useRef();\n  const navigate = useNavigate();\n\n  const columns = [\n    { id: \"claim_no\", label: \"Claim No\", filter: false },\n    { id: \"insurar_name\", label: \"Insurar Name\", filter: false },\n    {\n      id: \"total_claims\",\n      label: \"Total Claims\",\n      width: 200,\n      filter: false,\n      children: [\n        {\n          id: \"count\",\n          label: \"Count\",\n          filter: true,\n          type: \"input\"\n        },\n        { id: \"Amount\", label: \"amount\", filter: true, type: \"input\" }\n      ]\n    },\n    {\n      id: \"pending_claims\",\n      label: \"Pending Claims\",\n      filter: false,\n      width: 500,\n      children: [\n        {\n          id: \"verification\",\n          label: \"Verification\",\n          filter: false,\n          children: [\n            {\n              id: \"count\",\n              label: \"Count\",\n              filter: true,\n              type: \"input\"\n            },\n            { id: \"Amount\", label: \"amount\", filter: true, type: \"input\" }\n          ]\n        },\n        {\n          id: \"submission\",\n          label: \"Submission\",\n          filter: false,\n          children: [\n            {\n              id: \"count\",\n              label: \"Count\",\n              filter: true,\n              type: \"input\"\n            },\n            { id: \"Amount\", label: \"amount\", filter: true, type: \"input\" }\n          ]\n        }\n      ]\n    },\n    {\n      id: \"Submitted Claims\",\n      label: \"submitted_claims\",\n      filter: false,\n      width: 250,\n      children: [\n        {\n          id: \"count\",\n          label: \"Count\",\n          filter: true,\n          type: \"input\"\n        },\n        { id: \"Amount\", label: \"amount\", filter: true, type: \"input\" }\n      ]\n    }\n  ];\n\n  const status = [\n    { id: \"all\", label: \"--All--\" },\n    { id: \"pending\", label: \"Pending\" },\n    { id: \"verified\", label: \"Verified\" },\n    { id: \"submitted\", label: \"Submitted\" },\n    { id: \"re-submitted_pending\", label: \"Re-Submitted Pending\" },\n    { id: \"re-verified\", label: \"Re-Verified\" },\n    { id: \"re-submitted\", label: \"Re-Submitted\" },\n    { id: \"re-re-submitted_pending\", label: \"Re-Re-Submitted Pending\" },\n    { id: \"re-re-verified\", label: \"Re-Re-Verified\" },\n    { id: \"re-re-submitted\", label: \"Re-Re-Submitted\" },\n    { id: \"write_off\", label: \"Write Off\" },\n    { id: \"cancelled \", label: \"Cancelled\" }\n  ];\n\n  const handleFilterChange = (columnId, value, type) => {\n    if (type === \"select\") {\n      setStatusFilter(value);\n    }\n    setFilter({ ...filter, [columnId]: value });\n  };\n\n  const onCreatePatientVisit = (params) => {\n    navigate(\"/secure/registration\");\n  };\n\n  const dropDownMenuItems = [\n    {\n      name: \"Create Patient Visit\",\n      icon: MedicalInformationOutlined,\n      callback: onCreatePatientVisit\n    }\n  ];\n\n  const handleDateChange = (columnId, e) => {\n    let value = moment(e).format(\"DD/MM/YYYY\");\n    if (value === \"Invalid date\") {\n      setFilter({ ...filter, [columnId]: \"\" });\n    } else {\n      setFilter({ ...filter, [columnId]: value });\n    }\n  };\n\n  const handleScroll = () => {\n    const { scrollTop, clientHeight, scrollHeight } = tableRef.current;\n    if (scrollHeight - scrollTop <= clientHeight + 1 && hasMore) {\n      setPage((prev) => prev + 1);\n    }\n  };\n\n  return (\n    <Box padding={\"1em\"} width={\"100%\"} id=\"manual-insurance-page\">\n      <Box display={\"flex\"} justifyContent={\"space-between\"}>\n        <Box>OP INSURANCE : CLAIM INVOICES LIST</Box>\n        <Box>{moment().format(\"LLLL\")}</Box>\n      </Box>\n      <EMRLoader show={loading} />\n      <TableContainer\n        style={{ height: \"75vh\" }}\n        component={Paper}\n        onScroll={handleScroll}\n        ref={tableRef}\n      >\n        <Table style={{ overflow: \"auto\" }}>\n          <TableHead sx={{ height: \"1em\" }}>\n            <TableRow>\n              {columns.map((column) => {\n                return (\n                  <TableCell>\n                    {column.children ? (\n                      <Box width={column.width ? `${column.width}px` : \"200px\"}>\n                        <Box>{column.label}</Box>\n                        <hr></hr>\n                        <Box display={\"flex\"} px={1}>\n                          {column.children.map((child) => {\n                            console.log({ child });\n                            return child.children ? (\n                              <Box width={\"500px\"}>\n                                <Box>{child.label}</Box>\n                                <hr></hr>\n                                <Box display={\"flex\"} px={1}>\n                                  {child.children.map((innerChild) => {\n                                    return (\n                                      <Box width={\"50%\"}>\n                                        {innerChild.label} <hr></hr>\n                                      </Box>\n                                    );\n                                  })}\n                                </Box>\n                              </Box>\n                            ) : (\n                              <Box width={\"50%\"}>\n                                {child.label} <hr></hr>\n                              </Box>\n                            );\n                          })}\n                        </Box>\n                      </Box>\n                    ) : (\n                      <Box>{column.label}</Box>\n                    )}\n                  </TableCell>\n                );\n              })}\n            </TableRow>\n            <TableRow style={{ backgroundColor: \"white\" }}>\n              {columns.map((column) => (\n                <TableCell padding=\"8px\">\n                  {column.filter && column.type === \"input\" && (\n                    <TextField\n                      size=\"small\"\n                      id={column.id}\n                      className=\"filter-input\"\n                      value={filter[column.id] || \"\"}\n                      onChange={(e) =>\n                        handleFilterChange(column.id, e.target.value, \"input\")\n                      }\n                    >\n                      {column.label}\n                    </TextField>\n                  )}\n                  {column.filter && column.type === \"date\" && (\n                    <DatePicker\n                      className=\"filter-input\"\n                      slotProps={{ actionBar: { actions: [\"clear\"] } }}\n                      onChange={(e) => handleDateChange(column.id, e)}\n                    />\n                  )}\n                  {column.filter && column.type === \"select\" && (\n                    <FormControl fullWidth>\n                      <Select\n                        id=\"status-select\"\n                        className=\"filter-input\"\n                        value={statusFilter}\n                        onChange={(e) =>\n                          handleFilterChange(\n                            column.id,\n                            e.target.value,\n                            \"select\"\n                          )\n                        }\n                      >\n                        {status.map((option, index) => {\n                          return (\n                            <MenuItem\n                              key={`${option.id}_${index}`}\n                              value={option.label}\n                            >\n                              {option.label}\n                            </MenuItem>\n                          );\n                        })}\n                      </Select>\n                    </FormControl>\n                  )}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {ipInsurance?.map((row) => (\n              <TableRow key={row.id}>\n                {columns.map((column) => {\n                  return (\n                    column.id !== \"actions\" && (\n                      <TableCell key={column.id}>{row[column.id]}</TableCell>\n                    )\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n};\n\nexport default ManualSubmission;\n","import React, { useState } from \"react\";\nimport EMRtabs from \"../../../../components/global/EMRtabs\";\nimport { Box } from \"@mui/material\";\nimport ClaimDetails from \"./components/ClaimDetails\";\nimport ManualSubmission from \"./components/ManualSubmission\";\nimport moment from \"moment\";\n\nconst OPInsurance = () => {\n  const [activeTab, setActiveTab] = useState(\"claim_details\");\n  const tabsList = [\n    { name: \"Claim Details\", value: \"claim_details\" },\n    { name: \"Manual Submission\", value: \"manual_submission\" },\n    { name: \"E-submission\", value: \"e_submission\" },\n    { name: \"Re-Submission\", value: \"re_submission\" },\n    { name: \"Prior Request\", value: \"prior_request\" }\n  ];\n\n  return (\n    <Box m=\"20px\">\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <EMRtabs\n          tabsList={tabsList}\n          defaultTab={\"claim_details\"}\n          setActiveTab={setActiveTab}\n        />\n      </Box>\n      <Box>\n        {activeTab === \"claim_details\" && <ClaimDetails />}\n        {activeTab === \"manual_submission\" && <ManualSubmission />}\n        {activeTab === \"e_submission\" && <></>}\n        {activeTab === \"re_submission\" && <></>}\n        {activeTab === \"prior_request\" && <></>}\n      </Box>\n    </Box>\n  );\n};\n\nexport default OPInsurance;\n","import React, { useState } from \"react\";\nimport EMRtabs from \"../../../../components/global/EMRtabs\";\nimport { Box } from \"@mui/material\";\n\nconst IPInsurance = () => {\n  const [activeTab, setActiveTab] = useState(\"generate_claim\");\n  const tabsList = [\n    { name: \"Generate Claim\", value: \"generate_claim\" },\n    { name: \"List of Claims\", value: \"list_of_claims\" },\n    { name: \"Manual Submission \", value: \"manual_submission\" },\n    { name: \"E-submission\", value: \"e_submission\" },\n    { name: \"Re-Submission\", value: \"re_submission\" }\n  ];\n\n  return (\n    <Box m=\"20px\">\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <EMRtabs\n          tabsList={tabsList}\n          defaultTab={\"generate_claim\"}\n          setActiveTab={setActiveTab}\n        />\n      </Box>\n      <Box>\n        {activeTab === \"generate_claim\" && <></>}\n        {activeTab === \"list_of_claims\" && <></>}\n        {activeTab === \"manual_submission\" && <></>}\n        {activeTab === \"e_submission\" && <></>}\n        {activeTab === \"re_submission\" && <></>}\n      </Box>\n    </Box>\n  );\n};\n\nexport default IPInsurance;\n","import React, { useState } from \"react\";\nimport EMRtabs from \"../../../../components/global/EMRtabs\";\nimport { Box } from \"@mui/material\";\n\nconst ReferralRegistration = () => {\n  const [activeTab, setActiveTab] = useState(\"referral_registration\");\n  const tabsList = [\n    { name: \"Referral Registration\", value: \"referral_registration\" },\n    { name: \"Referral Visit\", value: \"referral_visit\" },\n    { name: \"Referral Registration List\", value: \"referral_Registration_list\" }\n  ];\n\n  return (\n    <Box m=\"20px\">\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\n        <EMRtabs\n          tabsList={tabsList}\n          defaultTab={\"referral_registration\"}\n          setActiveTab={setActiveTab}\n        />\n      </Box>\n      <Box>\n        {activeTab === \"referral_registration\" && <></>}\n        {activeTab === \"referral_visit\" && <></>}\n        {activeTab === \"referral_Registration_list\" && <></>}\n      </Box>\n    </Box>\n  );\n};\n\nexport default ReferralRegistration;\n","import React, { useState } from \"react\";\nimport ScreenWrapper from \"../../components/global/ScreenWrapper\";\nimport EMRtabs from \"../../components/global/EMRtabs\";\nimport OPInsurance from \"./components/opInsurance/OPInsurance\";\nimport { Box } from \"@mui/material\";\nimport IPInsurance from \"./components/ipInsurance/IPInsurance\";\nimport ReferralRegistration from \"./components/referralRegistration/ReferralRegistration\";\nimport { ipInsurance } from \"./data\";\n\nconst Insurance = () => {\n  const [activeTab, setActiveTab] = useState(\"op_insurance\");\n  const tabsList = [\n    { name: \"OP INSURANCE\", value: \"op_insurance\" },\n    { name: \"IP INSURANCE\", value: \"ip_insurance\" },\n    { name: \"REFERRAL REGISTRATION\", value: \"referral_registration\" },\n  ];\n\n  const data = ipInsurance;\n  console.log(data, \"data\");\n\n  return (\n    <ScreenWrapper>\n      <Box m=\"20px\" id=\"insurance-page\">\n        <EMRtabs\n          tabsList={tabsList}\n          defaultTab={\"op_insurance\"}\n          setActiveTab={setActiveTab}\n        />\n        <Box>\n          {activeTab === \"op_insurance\" && <OPInsurance />}\n          {activeTab === \"ip_insurance\" && <IPInsurance />}\n          {activeTab === \"referral_registration\" && <ReferralRegistration />}\n        </Box>\n      </Box>\n    </ScreenWrapper>\n  );\n};\n\nexport default Insurance;\n","import React from \"react\";\r\nimport { CircularProgress, Box } from \"@mui/material\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <CircularProgress />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const doctorAvailability = createAsyncThunk(\r\n  \"timeslot/doctorAvailability\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.DOC_AVAILABLE, {\r\n        params: credentials,\r\n      });\r\n      const { data, status, statusText } = response;\r\n\r\n      return { data, status, statusText };\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst doctorAvailabilitySlice = createSlice({\r\n  name: \"doctorAvailability\",\r\n  initialState: {\r\n    doctorAvailableData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(doctorAvailability.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(doctorAvailability.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.doctorAvailableData = action.payload.data;\r\n      })\r\n      .addCase(doctorAvailability.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default doctorAvailabilitySlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const bookAppointment = createAsyncThunk(\r\n  \"appointment/bookAppointment\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        API_ENDPOINTS.BOOK_APPOINTMENT,\r\n\r\n        credentials\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst bookAppointmentSlice = createSlice({\r\n  name: \"bookAppointment\",\r\n  initialState: {\r\n    bookAppointmentdata: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(bookAppointment.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(bookAppointment.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.bookAppointmentdata = action.payload.data;\r\n      })\r\n      .addCase(bookAppointment.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default bookAppointmentSlice.reducer;\r\n","import React, { useEffect, useState } from \"react\";\n// import { Modal, Button, Row, Col, Form, InputGroup } from \"react-bootstrap\";\n// import { Box } from \"@mui/material\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport \"../Appointment.css\";\n// import { fetchData, postData } from \"../../../core/services/APIService\";\nimport { useLoading } from \"../../../components/global/loader/LoadingContext\";\nimport EMRLoader from \"../../../components/global/loader/EMRLoaderOverlay\";\nimport { showToast } from \"../../../components/global/Toast\";\n// import Search from \"@mui/icons-material/Search\";\n// import { Autocomplete, TextField, CircularProgress } from \"@mui/material\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogActions,\n  TextField,\n  Autocomplete,\n  Button,\n  Box,\n  useTheme,\n  MenuItem,\n  // Typography,\n  // InputAdornment,\n  FormControlLabel,\n  Checkbox,\n  // Grid,\n  RadioGroup,\n  Radio,\n  FormControl,\n  // FormLabel,\n} from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { searchPatients } from \"../../../Redux/slice/appointement/searchPatientSlice\";\nimport { useSelector } from \"react-redux\";\nimport { bookAppointment } from \"../../../Redux/slice/appointement/bookAppointementSlice\";\n// import FormInput from \"../../../components/FormFields/FormInput\";\n\nconst NewEventModal = ({\n  open,\n  setOpen,\n  handleClose,\n  selectedSlot,\n  activeTab,\n  specialistList,\n  facilityList,\n  slotDuration,\n  getAvailableSlotsForAllDoctors,\n  getAllFacilitySchedules,\n  addEventToState,\n  slotInfo,\n  selecteddoctorData,\n}) => {\n  // let dateFormat = \"LLL\";\n  const theme = useTheme();\n  const dateFormat = \"MMMM Do YYYY, h:mm A\";\n  const [eventData, setEventData] = useState(null);\n  const { loading, setLoading } = useLoading();\n\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [selectedPatient, setSelectedPatient] = useState();\n\n  const dispatch = useDispatch();\n  const { searchPatientData } = useSelector((state) => state?.searchPatient);\n  console.log(\"selectedData:\", searchPatientData);\n\n  const handleSearchChange = (e) => {\n    const inputValue = e.target.value;\n    dispatch(searchPatients({ searchKey: inputValue }));\n    setSearchQuery(inputValue);\n  };\n\n  const handleOptionSelect = (event, value) => {\n    setSelectedPatient(value);\n  };\n\n  const handleCreateEvent = async (e) => {\n    if (!eventData) {\n      console.error(\"eventData is not available\");\n      return;\n    }\n\n    const formattedDate = moment(selectedSlot.start).format(\"YYYY-MM-DD\");\n    let otherData = {\n      branchId: selecteddoctorData.branchId,\n      timeInterval: parseInt(slotDuration),\n      appointmentTime: moment(selectedSlot.start).format(\"HH:mm:ss\"),\n      appointmentEndTime: moment(selectedSlot.end).format(\"HH:mm:ss\"),\n      specialityId: selecteddoctorData.selectedSpecialityData?.specialityId,\n      doctorId: selecteddoctorData.doctorId,\n      patientId: selectedPatient?.patientId,\n    };\n\n    let payload = { ...eventData, ...otherData };\n\n    payload = {\n      branchId: payload.branchId,\n      specialityId: payload.specialityId,\n      doctorId: payload.doctorId,\n      appointmentDate: formattedDate,\n      appointmentTime: payload.appointmentTime,\n      timeInterval: payload.timeInterval,\n      scheduleType: payload.scheduleType,\n      mrdNo: payload.mrdNo,\n      notes: payload.notes,\n      additionalInfo: payload.additionalInfo,\n      insurarName: payload.insurarName,\n      numberOfSlots: payload.numberOfSlots,\n      notifyPatient: payload.notifyPatient,\n      patientName: payload.patientName,\n      dob: payload.dob,\n      age: payload.age,\n      gender: payload.gender,\n      phoneNo: payload.phoneNo,\n      email: payload.emailId,\n      patientId: payload.patientId,\n    };\n\n    try {\n      setLoading(true);\n      const response = await dispatch(bookAppointment(payload));\n      const msg =\n        response?.payload?.message ?? \"Appointment booked successfully\";\n\n      const newEvent = {\n        id: `appointment_${Date.now()}`,\n        title: \"\",\n        start: slotInfo.start,\n        end: slotInfo.end,\n        resourceId: slotInfo.resourceId,\n      };\n\n      addEventToState(newEvent);\n      console.log(\"New Event Added:\", newEvent);\n\n      // Optionally handle additional logic based on tabs\n      if (activeTab === \"users\") {\n        getAvailableSlotsForAllDoctors();\n      } else if (activeTab === \"rooms\") {\n        getAllFacilitySchedules();\n      }\n\n      showToast([msg], \"success\");\n      setOpen(false);\n    } catch (error) {\n      console.error(\"Booking Error:\", error);\n      showToast(\n        [error?.message ?? \"Something went wrong! Please try again.\"],\n        \"error\"\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <Dialog open={open} onClose={handleClose} maxWidth=\"lg\" fullWidth>\n      <EMRLoader show={loading} />\n\n      <DialogContent dividers>\n        <h5>Book New Appointment</h5>\n        <Box paddingTop={\"1em\"}>\n          <b>Booking Date:</b> {moment(selectedSlot?.start).format(dateFormat)}{\" \"}\n          - {moment(selectedSlot?.end).format(dateFormat)}\n        </Box>\n\n        {typeof selectedSlot?.resourceId === \"string\" &&\n          !_.isNull(parseInt(selectedSlot.resourceId.split(\"_\")[1])) && (\n            <Box paddingY={\"1em\"}>\n              <b>{activeTab === \"users\" ? \"With Doctor:\" : \"For Facility:\"}</b>{\" \"}\n              {activeTab === \"users\"\n                ? specialistList.find(\n                    (specialist) =>\n                      specialist.doctorId ===\n                      parseInt(selectedSlot.resourceId.split(\"_\")[1])\n                  )?.doctorName\n                : facilityList.find(\n                    (facility) =>\n                      facility.facilityId ===\n                      parseInt(selectedSlot.resourceId.split(\"_\")[1])\n                  )?.doctorName}\n            </Box>\n          )}\n        <Box\n          padding={\"1em\"}\n          border={`1px solid ${theme.palette.divider}`}\n          mt={1}\n          borderRadius={2}\n        >\n          <Box pb={4} pt={1}>\n            <Autocomplete\n              freeSolo\n              options={searchPatientData?.data || []}\n              getOptionLabel={(option) => option.name || \"\"}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Search Patients\"\n                  variant=\"outlined\"\n                  value={searchQuery}\n                  onChange={handleSearchChange}\n                  placeholder=\"Type to search...\"\n                  size=\"small\"\n                  sx={{ width: 300 }}\n                />\n              )}\n              onChange={handleOptionSelect}\n            />\n            <div style={{ fontSize: \"0.7em\" }}>\n              For existing patients search patients with phone, name, dob, or\n              email for auto fill.\n            </div>\n          </Box>\n          <AppointmentTabContent\n            activeTab={activeTab}\n            setEventData={setEventData}\n            resourceId={selectedSlot.resourceId}\n            specialistList={specialistList}\n            setLoading={setLoading}\n            loading={loading}\n            selectedPatient={selectedPatient}\n          />\n        </Box>\n        <DialogActions>\n          <Button variant=\"outlined\" onClick={handleClose}>\n            Cancel\n          </Button>\n          <Button variant=\"contained\" onClick={handleCreateEvent}>\n            Create\n          </Button>\n        </DialogActions>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nconst AppointmentTabContent = ({ setEventData, selectedPatient }) => {\n  const [formData, setFormData] = useState({\n    scheduleType: \"\",\n    numberOfSlots: 1,\n    mrdNo: \"\",\n    patientName: \"\",\n    dob: \"\",\n    age: \"\",\n    gender: \"\",\n    phoneNo: \"\",\n    emailId: \"\",\n    notes: \"\",\n    additionalInfo: \"\",\n    insurarName: \"\",\n    notifyPatient: false,\n  });\n  const [showNotify, setShowNotify] = useState(false);\n  const ScheduleTypes = [\n    { type: \"Routine Check-Up\", id: \"1\" },\n    { type: \"Consultation\", id: \"2\" },\n    { type: \"Follow-Up Appointment\", id: \"3\" },\n    { type: \"Urgent Care\", id: \"4\" },\n    { type: \"Pediatric Appointment\", id: \"5\" },\n    { type: \"Chronic Disease Management\", id: \"6\" },\n    { type: \"Emergency Visit\", id: \"7\" },\n  ];\n\n  useEffect(() => {\n    setEventData(formData);\n  }, [formData]);\n\n  const handleChange = (e) => {\n    const { name, value, type, checked } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: type === \"checkbox\" ? checked : value,\n    }));\n  };\n\n  useEffect(() => {\n    if (selectedPatient) {\n      let dob = selectedPatient.dob;\n      let patientName = selectedPatient.name;\n      dob = dob ? dob.split(\"T\")[0] : \"\";\n      setFormData({ ...formData, ...selectedPatient, dob, patientName });\n    }\n  }, [selectedPatient]);\n\n  return (\n    <>\n      <Box\n        display=\"grid\"\n        gridTemplateColumns=\"repeat(auto-fit, minmax(250px, 1fr))\"\n        gap={2}\n      >\n        <TextField\n          select\n          fullWidth\n          value={formData.scheduleType}\n          onChange={handleChange}\n          name=\"scheduleType\"\n          variant=\"outlined\"\n          size=\"small\"\n          label={\n            <>\n              Schedule Type <span style={{ color: \"red\" }}>*</span>\n            </>\n          }\n        >\n          <MenuItem value={\"-1\"}>Select...</MenuItem>\n          {ScheduleTypes.map((type) => (\n            <MenuItem key={type.type} value={type.type}>\n              {type.type}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        <TextField\n          select\n          fullWidth\n          value={formData.numberOfSlots}\n          onChange={(e) => handleChange(e, \"input\", true)}\n          name=\"numberOfSlots\"\n          variant=\"outlined\"\n          size=\"small\"\n          label=\"No of Slots\"\n        >\n          <MenuItem value={\"-1\"}>Select...</MenuItem>\n          {[1, 2, 3, 4, 5, 6, 7, 8].map((count) => (\n            <MenuItem key={count} value={count}>\n              {count}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        <TextField\n          fullWidth\n          name=\"mrdNo\"\n          value={formData.mrdNo}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          label=\"MRD No\"\n        />\n\n        <TextField\n          fullWidth\n          name=\"patientName\"\n          value={formData.patientName}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          label={\n            <>\n              Patient Name <span style={{ color: \"red\" }}>*</span>\n            </>\n          }\n        />\n\n        <TextField\n          fullWidth\n          name=\"dob\"\n          value={formData.dob}\n          type=\"date\"\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          label={\n            <>\n              {\" \"}\n              Date of Birth <span style={{ color: \"red\" }}>*</span>\n            </>\n          }\n          InputLabelProps={{ shrink: true }}\n        />\n\n        <TextField\n          fullWidth\n          name=\"age\"\n          value={formData.age}\n          type=\"number\"\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          label={\n            <>\n              {\" \"}\n              Age <span style={{ color: \"red\" }}>*</span>\n            </>\n          }\n        />\n\n        <TextField\n          select\n          fullWidth\n          name=\"gender\"\n          value={formData.gender}\n          onChange={(e) => handleChange(e, \"input\", true)}\n          variant=\"outlined\"\n          size=\"small\"\n          label={\n            <>\n              {\" \"}\n              Gender <span style={{ color: \"red\" }}>*</span>\n            </>\n          }\n        >\n          <MenuItem value={\"Female\"}>Female</MenuItem>\n          <MenuItem value={\"Male\"}>Male</MenuItem>\n          <MenuItem value={\"Other\"}>Other</MenuItem>\n        </TextField>\n\n        <TextField\n          fullWidth\n          name=\"phoneNo\"\n          value={formData.phoneNo}\n          type=\"tel\"\n          onChange={handleChange}\n          placeholder=\"Search or type...\"\n          variant=\"outlined\"\n          size=\"small\"\n          label={\n            <>\n              {\" \"}\n              Mobile <span style={{ color: \"red\" }}>*</span>\n            </>\n          }\n          // InputProps={{\n          //   startAdornment: (\n          //     <InputAdornment position=\"start\">+91</InputAdornment>\n          //   ),\n          // }}\n        />\n\n        <TextField\n          fullWidth\n          name=\"emailId\"\n          value={formData.emailId}\n          type=\"emailId\"\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          label={\n            <>\n              {\" \"}\n              Email <span style={{ color: \"red\" }}>*</span>\n            </>\n          }\n        />\n\n        <TextField\n          fullWidth\n          label=\"Insurer Name\"\n          name=\"insurarName\"\n          value={formData.insurarName}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n        />\n\n        <TextField\n          fullWidth\n          name=\"notes\"\n          value={formData.notes}\n          multiline\n          // rows={3}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          label=\"Notes\"\n        />\n\n        <TextField\n          fullWidth\n          name=\"additionalInfo\"\n          value={formData.additionalInfo}\n          multiline\n          // rows={3}\n          onChange={handleChange}\n          variant=\"outlined\"\n          size=\"small\"\n          label=\"Additional Info\"\n        />\n      </Box>\n      <Box display={\"flex\"} flexDirection={\"column\"}>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={showNotify}\n              onChange={(e) => setShowNotify(e.target.checked)}\n              name=\"showNotify\"\n            />\n          }\n          label=\"Notify Patient\"\n        />\n        {showNotify && (\n          <FormControl component=\"fieldset\">\n            {/* <FormLabel component=\"legend\">Notification Method</FormLabel> */}\n            <RadioGroup\n              name=\"notifyPatient\"\n              value={formData.notifyPatient}\n              onChange={(e) => handleChange(e, \"checkbox\")}\n              row\n            >\n              <FormControlLabel value=\"sms\" control={<Radio />} label=\"SMS\" />\n              <FormControlLabel\n                value=\"whatsapp\"\n                control={<Radio />}\n                label=\"WhatsApp\"\n              />\n              <FormControlLabel value=\"mail\" control={<Radio />} label=\"Mail\" />\n            </RadioGroup>\n          </FormControl>\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default NewEventModal;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const cancelSchedule = createAsyncThunk(\r\n  \"appointment/cancelSchedule\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.post(\r\n        API_ENDPOINTS.CANCEL_SCHEDULE,\r\n        credentials\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst cancelScheduleSlice = createSlice({\r\n  name: \"cancelSchedule\",\r\n  initialState: {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(cancelSchedule.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(cancelSchedule.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.data = action.payload.data;\r\n      })\r\n      .addCase(cancelSchedule.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default cancelScheduleSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n  Box,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n} from \"@mui/material\";\r\nimport { useLoading } from \"../../../../components/global/loader/LoadingContext\";\r\nimport EMRLoader from \"../../../../components/global/loader/EMRLoaderOverlay\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { cancelSchedule } from \"../../../../Redux/slice/appointement/cancelScheduleSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { showToast } from \"../../../../components/global/Toast\";\r\n\r\nconst CancelAlertModal = ({\r\n  handleClose,\r\n  appointmentId,\r\n  getAvailableSlotsForAllDoctors,\r\n}) => {\r\n  const { loading, setLoading } = useLoading();\r\n  const [displayReasonInput, setDisplayReasonInput] = useState(false);\r\n  const [reason, setReason] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  const loginUser = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n  const { data } = useSelector((state) => state.cancel);\r\n\r\n  const status = data.statusCode;\r\n\r\n  console.log(appointmentId, \"events\");\r\n\r\n  const onReasonSelect = (e) => {\r\n    const selectedValue = e.target.value;\r\n    setReason(selectedValue);\r\n    setDisplayReasonInput(selectedValue === \"Others\");\r\n  };\r\n\r\n  const handleReasonChange = (e) => {\r\n    setReason(e.target.value);\r\n  };\r\n\r\n  const handleCancel = async () => {\r\n    if (!reason) {\r\n      showToast([\"Please select a reason for cancellation\"], \"warning\");\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const resultAction = await dispatch(\r\n        cancelSchedule({\r\n          appointmentId: appointmentId,\r\n          cancellationReason: reason,\r\n          cancelledBy: loginUser?.data?.userName,\r\n        })\r\n      ).unwrap(); // Ensures we wait for the action to complete\r\n\r\n      await getAvailableSlotsForAllDoctors(); // ✅ Refresh slots after rescheduling\r\n\r\n      showToast([\"Appointment Cancelled successfully\"], \"success\");\r\n      handleClose();\r\n    } catch (error) {\r\n      showToast([error || \"Something went wrong\"], \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={true} onClose={handleClose} fullWidth maxWidth=\"sm\">\r\n      <EMRLoader show={loading} />\r\n      <DialogTitle>Cancel Appointment</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <Box paddingY={2} fontWeight=\"bold\">\r\n          Are you sure you want to cancel this appointment?\r\n        </Box>\r\n\r\n        <FormControl fullWidth margin=\"normal\" size=\"small\">\r\n          <InputLabel>Reason For Cancellation</InputLabel>\r\n          <Select\r\n            value={reason}\r\n            onChange={onReasonSelect}\r\n            label=\"Reason For Cancellation\"\r\n            // size=\"small\"\r\n          >\r\n            <MenuItem value=\"\">Select...</MenuItem>\r\n            {[\r\n              \"No Show\",\r\n              \"Change of Plans\",\r\n              \"Overlapping Appointments\",\r\n              \"Doctor Unavailability\",\r\n              \"Others\",\r\n            ].map((option) => (\r\n              <MenuItem key={option} value={option}>\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        {displayReasonInput && (\r\n          <TextField\r\n            label=\"Reason\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            size=\"small\"\r\n            onChange={handleReasonChange}\r\n          />\r\n        )}\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={handleClose} variant=\"outlined\" color=\"secondary\">\r\n          Go Back\r\n        </Button>\r\n        <Button onClick={handleCancel} variant=\"contained\" color=\"error\">\r\n          Yes, Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CancelAlertModal;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const reSchedule = createAsyncThunk(\r\n  \"appointment/reSchedule\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.put(\r\n        API_ENDPOINTS.RE_SCHEDULE,\r\n        credentials\r\n      );\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst reScheduleSlice = createSlice({\r\n  name: \"reSchedule\",\r\n  initialState: {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(reSchedule.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(reSchedule.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.data = action.payload.data;\r\n      })\r\n      .addCase(reSchedule.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default reScheduleSlice.reducer;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport {\r\n  DatePicker,\r\n  TimePicker,\r\n  LocalizationProvider,\r\n} from \"@mui/x-date-pickers\";\r\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\r\nimport dayjs from \"dayjs\";\r\nimport React, { useState } from \"react\";\r\nimport { useLoading } from \"../../../../components/global/loader/LoadingContext\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { reSchedule } from \"../../../../Redux/slice/appointement/reScheduleSlice\";\r\nimport { showToast } from \"../../../../components/global/Toast\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Reschedule = ({\r\n  handleClose,\r\n  appointmentId,\r\n  doctorId,\r\n  getAvailableSlotsForAllDoctors,\r\n}) => {\r\n  const { loading } = useLoading();\r\n  const [date, setDate] = useState(dayjs());\r\n  const [time, setTime] = useState(dayjs());\r\n  const dispatch = useDispatch();\r\n  const { statusCode } = useSelector((state) => state.reschedule);\r\n\r\n  console.log(statusCode, \"code\");\r\n\r\n  console.log(\"doctor id:\", doctorId);\r\n\r\n  const handleChangeStartDate = (newValue) => {\r\n    setDate(newValue);\r\n  };\r\n\r\n  const handleChangeStartTime = (newValue) => {\r\n    setTime(newValue);\r\n  };\r\n\r\n  const handleReschedule = async () => {\r\n    try {\r\n      await dispatch(\r\n        reSchedule({\r\n          appointmentId: appointmentId,\r\n          appointmentDate: date.format(\"YYYY-MM-DD\"),\r\n          appointmentTime: time.format(\"HH:mm:ss\"),\r\n          doctorId: doctorId,\r\n        })\r\n      ).unwrap();\r\n\r\n      await getAvailableSlotsForAllDoctors();\r\n      handleClose();\r\n      // showToast([\"Appointment Re scheduled successfully\"], \"success\");\r\n    } catch (error) {\r\n      showToast([error || \"Something went wrong\"], \"error\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={true}\r\n      onClose={() => handleClose(false)}\r\n      maxWidth=\"sm\"\r\n      fullWidth\r\n    >\r\n      {loading && <Typography align=\"center\">Loading...</Typography>}\r\n\r\n      <DialogTitle>Reschedule Appointment</DialogTitle>\r\n\r\n      <DialogContent>\r\n        <LocalizationProvider dateAdapter={AdapterDayjs}>\r\n          <div style={{ display: \"flex\", gap: \"16px\", flexWrap: \"wrap\" }}>\r\n            <div>\r\n              <Typography variant=\"body1\" sx={{ marginBottom: 1 }}>\r\n                Appointment Date\r\n              </Typography>\r\n              <DatePicker\r\n                value={date}\r\n                onChange={handleChangeStartDate}\r\n                slotProps={{\r\n                  textField: {\r\n                    size: \"small\",\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Typography variant=\"body1\" sx={{ marginBottom: 1 }}>\r\n                Appointment Time\r\n              </Typography>\r\n              <TimePicker\r\n                value={time}\r\n                onChange={handleChangeStartTime}\r\n                ampm={false}\r\n                minutesStep={15}\r\n                slotProps={{\r\n                  textField: {\r\n                    size: \"small\",\r\n                  },\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </LocalizationProvider>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" onClick={() => handleClose(false)}>\r\n          Cancel\r\n        </Button>\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleReschedule}>\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default Reschedule;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Tooltip,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { AppRegistration, Cancel, Schedule, Replay } from \"@mui/icons-material\";\r\nimport CancelAlertModal from \"./modal/Cancel\";\r\nimport Reschedule from \"./modal/Reschedule\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst EventDisplayComponent = ({\r\n  slotDuration = 15,\r\n  setEvents,\r\n  getAvailableSlotsForAllDoctors,\r\n}) => {\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const [rescheduleBooking, setRescheduleBooking] = useState(false);\r\n  const [cancelBooking, setCancelBooking] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const { doctorAvailableData } = useSelector(\r\n    (state) => state?.docAvailable || []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!doctorAvailableData?.data) {\r\n      console.warn(\"No doctorAvailableData found.\");\r\n      return;\r\n    }\r\n  \r\n    const groupedBookings = {};\r\n  \r\n    doctorAvailableData.data.forEach((doctor) => {\r\n      doctor?.specialitySlots?.forEach((speciality) => {\r\n        speciality?.bookedSlotDetails?.forEach((slot) => {\r\n          const timeKey = moment(slot.appointmentTime, \"HH:mm\").format(\"HH:mm\");\r\n  \r\n          // Use doctorId + specialityId as key to prevent mixing specialties\r\n          const bookingKey = `${doctor.doctorId}-${speciality.specialityId}`;\r\n  \r\n          if (!groupedBookings[timeKey]) {\r\n            groupedBookings[timeKey] = {};\r\n          }\r\n  \r\n          if (!groupedBookings[timeKey][bookingKey]) {\r\n            groupedBookings[timeKey][bookingKey] = [];\r\n          }\r\n  \r\n          groupedBookings[timeKey][bookingKey].push({\r\n            doctorId: doctor.doctorId,\r\n            specialityId: speciality.specialityId,\r\n            appointmentId: slot.appointmentId,\r\n            appointmentTime: slot.appointmentTime,\r\n            appointmentDate: slot.appointmentDate,\r\n            patientName: slot.patientName || \"--\",\r\n            phoneNo: slot.phoneNo || \"--\",\r\n            mrdNo: slot.mrdNo || null,\r\n          });\r\n        });\r\n      });\r\n    });\r\n  \r\n    console.log(groupedBookings);\r\n  \r\n    const bookedEvents = [];\r\n  \r\n    Object.entries(groupedBookings).forEach(([timeKey, bookingGroups]) => {\r\n      Object.entries(bookingGroups).forEach(([bookingKey, slots]) => {\r\n        const firstSlot = slots[0];\r\n  \r\n        bookedEvents.push({\r\n          title: (\r\n            <div style={{ display: \"flex\", alignItems: \"center\", gap: \"8px\" }}>\r\n              {slots.length === 1 ? (\r\n                <div className=\"d-flex flex-column\">\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <div style={avatarStyle}>\r\n                      {firstSlot.patientName?.charAt(0) || \"--\"}\r\n                    </div>\r\n                    <span style={{ fontWeight: \"bold\" }}>\r\n                      {firstSlot.patientName || \"--\"}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"mt-1\">\r\n                    <i className=\"bi bi-telephone m-1\"></i>{\" \"}\r\n                    {firstSlot.phoneNo || \"--\"}\r\n                  </div>\r\n                  <Box>\r\n                    <Tooltip title=\"Reschedule\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          setRescheduleBooking(true);\r\n                          setSelectedSlot(firstSlot);\r\n                        }}\r\n                        color=\"primary\"\r\n                      >\r\n                        <Schedule />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip title=\"Cancel\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          setCancelBooking(true);\r\n                          setSelectedSlot(firstSlot);\r\n                        }}\r\n                      >\r\n                        <Cancel />\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                    <Tooltip\r\n                      title={firstSlot.mrdNo ? \"Revisit\" : \"Registration\"}\r\n                    >\r\n                      <IconButton\r\n                        onClick={() =>\r\n                          navigate(\"/secure/registration\", {\r\n                            state: { bookedDetails: firstSlot },\r\n                          })\r\n                        }\r\n                      >\r\n                        {firstSlot.mrdNo ? <Replay /> : <AppRegistration />}\r\n                      </IconButton>\r\n                    </Tooltip>\r\n                  </Box>\r\n                </div>\r\n              ) : (\r\n                slots.map((slot, index) => (\r\n                  <div\r\n                    key={index}\r\n                    className=\"slot-avatar\"\r\n                    onClick={() => {\r\n                      setSelectedSlot(slot);\r\n                      setPopupOpen(true);\r\n                    }}\r\n                  >\r\n                    {slot.patientName?.charAt(0) || \"--\"}\r\n                  </div>\r\n                ))\r\n              )}\r\n            </div>\r\n          ),\r\n          start: moment(timeKey, \"HH:mm\").toDate(),\r\n          end: moment(timeKey, \"HH:mm\").add(slotDuration, \"minutes\").toDate(),\r\n          resourceId: firstSlot.doctorId,\r\n          specialityId: firstSlot.specialityId, // Ensure specialityId is included\r\n          appointmentId: firstSlot.appointmentId,\r\n          className: \"booked-slot\",\r\n        });\r\n      });\r\n    });\r\n  \r\n    if (typeof setEvents === \"function\") {\r\n      setEvents(bookedEvents);\r\n    }\r\n  }, [doctorAvailableData, slotDuration]);\r\n  \r\n  // console.log(\"selected events doctor:\", selectedSlot?.doctorId);\r\n\r\n  return (\r\n    <>\r\n      {/* Popup Modal */}\r\n      <Dialog\r\n        open={popupOpen}\r\n        onClose={() => setPopupOpen(false)}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>Appointment Details</DialogTitle>\r\n        <DialogContent>\r\n          {selectedSlot && (\r\n            <>\r\n              <Box className=\"d-flex gap-2\" style={{ alignItems: \"center\" }}>\r\n                <div style={avatarStyle}>\r\n                  {selectedSlot.patientName?.charAt(0) || \"--\"}\r\n                </div>\r\n                <span style={{ fontWeight: \"bold\" }}>\r\n                  {selectedSlot.patientName || \"--\"}\r\n                </span>\r\n              </Box>\r\n              <div className=\"mt-2\">\r\n                <i className=\"bi bi-telephone m-1\"></i>{\" \"}\r\n                {selectedSlot.phoneNo || \"--\"}\r\n              </div>\r\n            </>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Tooltip title=\"Reschedule\">\r\n            <IconButton\r\n              onClick={() => {\r\n                setRescheduleBooking(true);\r\n                setPopupOpen(false);\r\n              }}\r\n              color=\"primary\"\r\n            >\r\n              <Schedule />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Cancel\">\r\n            <IconButton\r\n              onClick={() => {\r\n                setCancelBooking(true);\r\n                setPopupOpen(false);\r\n              }}\r\n            >\r\n              <Cancel />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title=\"Registration\">\r\n            <IconButton\r\n              onClick={() => {\r\n                navigate(\"/secure/registration\", {\r\n                  state: { bookedDetails: selectedSlot },\r\n                });\r\n                setPopupOpen(false);\r\n              }}\r\n            >\r\n              {selectedSlot?.mrdNo ? <Replay /> : <AppRegistration />}\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Button onClick={() => setPopupOpen(false)}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Cancel & Reschedule Modals */}\r\n      {cancelBooking && (\r\n        <CancelAlertModal\r\n          handleClose={() => setCancelBooking(false)}\r\n          appointmentId={selectedSlot?.appointmentId}\r\n          getAvailableSlotsForAllDoctors={getAvailableSlotsForAllDoctors}\r\n        />\r\n      )}\r\n      {rescheduleBooking && (\r\n        <Reschedule\r\n          handleClose={() => setRescheduleBooking(false)}\r\n          appointmentId={selectedSlot?.appointmentId}\r\n          doctorId={selectedSlot?.doctorId}\r\n          getAvailableSlotsForAllDoctors={getAvailableSlotsForAllDoctors}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst avatarStyle = {\r\n  width: \"30px\",\r\n  height: \"30px\",\r\n  borderRadius: \"50%\",\r\n  backgroundColor: \"rgb(93, 104, 104)\",\r\n  color: \"white\",\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  fontSize: \"14px\",\r\n  fontWeight: \"bold\",\r\n  textTransform: \"uppercase\",\r\n  cursor: \"pointer\",\r\n};\r\n\r\nexport default EventDisplayComponent;\r\n","import React, { useState, useEffect, useCallback, useMemo } from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport withDragAndDrop from \"react-big-calendar/lib/addons/dragAndDrop\";\r\nimport { doctorAvailability } from \"../../../Redux/slice/appointement/doctorAvailableSlotSlice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { showToast } from \"../../../components/global/Toast\";\r\nimport NewEventModal from \"../component/NewEvent\";\r\nimport EMRLoader from \"../../../components/global/loader/EMRLoaderOverlay\";\r\nimport EventDisplayComponent from \"./Events\";\r\n\r\nconst DnDCalendar = withDragAndDrop(Calendar);\r\n\r\nconst CalendarView = ({\r\n  selectedDate,\r\n  setSelectedDate,\r\n  filteredDoctors,\r\n  slotDuration,\r\n  activeTab,\r\n  selectedSpeciality,\r\n}) => {\r\n  const localizer = momentLocalizer(moment);\r\n  const dispatch = useDispatch();\r\n  const [doctorAvailabilities, setDoctorAvailabilities] = useState([]);\r\n  const [usersResources, setUsersResources] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [selectedSlot, setSelectedSlot] = useState(null);\r\n  const [events, setEvents] = useState([]);\r\n  const [selectedDoctorAvailability, setSelectedDoctorAvailability] =\r\n    useState(null);\r\n\r\n  const addEventToState = (newEvent) => {\r\n    if (!newEvent.title) {\r\n      console.error(\"Event title is missing!\", newEvent);\r\n      return;\r\n    }\r\n    setEvents([...events, newEvent]);\r\n  };\r\n\r\n  const { doctorAvailableData, loading } = useSelector(\r\n    (state) => state?.docAvailable || []\r\n  );\r\n\r\n  useEffect(() => {\r\n    setDoctorAvailabilities(doctorAvailableData?.data);\r\n  }, [doctorAvailableData]);\r\n\r\n  const formatTime = (date) => moment(date).format(\"HH:mm\");\r\n\r\n  const isSlotAvailable = (slotTime, resourceId, specialityId) => {\r\n    if (!doctorAvailabilities || !Array.isArray(doctorAvailabilities))\r\n      return false;\r\n\r\n    const doctor = doctorAvailabilities.find(\r\n      (doc) => doc.doctorId === Number(resourceId)\r\n    );\r\n    if (!doctor || !doctor.specialitySlots) return false;\r\n\r\n    const speciality = doctor.specialitySlots.find(\r\n      (spec) => spec.specialityId === Number(specialityId)\r\n    );\r\n    if (!speciality) return false;\r\n\r\n    return (\r\n      speciality.availableSlots.includes(slotTime) &&\r\n      !speciality.bookedSlots.includes(slotTime)\r\n    );\r\n  };\r\n\r\n  const isSlotBooked = (slotTime, resourceId, specialityId) => {\r\n    if (!doctorAvailabilities || !Array.isArray(doctorAvailabilities))\r\n      return false;\r\n\r\n    const doctor = doctorAvailabilities.find(\r\n      (doc) => doc.doctorId === Number(resourceId)\r\n    );\r\n    if (!doctor || !doctor.specialitySlots) return false;\r\n\r\n    const speciality = doctor.specialitySlots.find(\r\n      (spec) => spec.specialityId === Number(specialityId)\r\n    );\r\n    if (!speciality) return false;\r\n\r\n    return speciality.bookedSlots.includes(slotTime);\r\n  };\r\n\r\n  const customSlotPropGetter = useMemo(() => {\r\n    return (date, resourceId) => {\r\n      const timeString = formatTime(date);\r\n      const isAvailable = isSlotAvailable(\r\n        timeString,\r\n        resourceId,\r\n        selectedSpeciality\r\n      );\r\n      const isBooked = isSlotBooked(timeString, resourceId, selectedSpeciality);\r\n\r\n      let className = \"\";\r\n      let bgColor = \"#D0DDD0\";\r\n\r\n      if (isBooked) {\r\n        className = \"booked-slot\";\r\n        bgColor = \"#9db4c0\";\r\n      } else if (isAvailable) {\r\n        className = \"available-slot\";\r\n        bgColor = \"#90e0ef\";\r\n      }\r\n\r\n      return {\r\n        className,\r\n        style: {\r\n          backgroundColor: bgColor,\r\n          borderRadius: \"3px\",\r\n        },\r\n      };\r\n    };\r\n  }, [doctorAvailabilities, selectedSpeciality]);\r\n\r\n  const getAvailableSlotsForAllDoctors = useCallback(() => {\r\n    if (selectedDate) {\r\n      const formattedDate = moment(selectedDate).format(\"YYYY-MM-DD\");\r\n      const interval =\r\n        slotDuration === \"60\"\r\n          ? \"SIXTY_MINUTES\"\r\n          : slotDuration === \"30\"\r\n          ? \"THIRTY_MINUTES\"\r\n          : \"FIFTEEN_MINUTES\";\r\n\r\n      dispatch(doctorAvailability({ interval, date: formattedDate }));\r\n    }\r\n  }, [dispatch, selectedDate, slotDuration]);\r\n\r\n  useEffect(() => {\r\n    getAvailableSlotsForAllDoctors();\r\n  }, [getAvailableSlotsForAllDoctors]);\r\n\r\n  const setCalendarResources = useCallback(\r\n    (resourcesList, activeTab = \"users\") => {\r\n      if (activeTab === \"users\") {\r\n        setUsersResources(\r\n          resourcesList.map((doctor) => ({\r\n            id: doctor.doctorId,\r\n            title: doctor.doctorName,\r\n          }))\r\n        );\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (filteredDoctors) {\r\n      setCalendarResources(filteredDoctors, activeTab);\r\n    }\r\n  }, [filteredDoctors, activeTab, setCalendarResources]);\r\n\r\n  const onSelectSlot = (slotInfo) => {\r\n    const selectedTime = moment(slotInfo.start).format(\"HH:mm\");\r\n    const resourceId = slotInfo.resourceId;\r\n    const specialityId = selectedSpeciality; // Ensure this is correctly assigned\r\n\r\n    if (moment(slotInfo.start).isBefore(moment(), \"minute\")) {\r\n      showToast([\"You cannot select a past time slot.\"], \"error\");\r\n      return;\r\n    }\r\n\r\n    // Check availability and booking status\r\n    const available = isSlotAvailable(selectedTime, resourceId, specialityId);\r\n    const booked = isSlotBooked(selectedTime, resourceId, specialityId);\r\n\r\n    if (available || booked) {\r\n      const doctorData = doctorAvailabilities.find(\r\n        (doctor) => doctor.doctorId === Number(resourceId)\r\n      );\r\n\r\n      if (doctorData) {\r\n        const selectedSpecialityData = doctorData.specialitySlots.find(\r\n          (spec) => spec.specialityId === Number(specialityId)\r\n        );\r\n\r\n        setSelectedDoctorAvailability({\r\n          ...doctorData,\r\n          selectedSpecialityData, // Include the speciality data\r\n        });\r\n      }\r\n\r\n      setSelectedSlot(slotInfo);\r\n      setOpen(true);\r\n    } else {\r\n      showToast([\"The selected time slot is not available.\"], \"error\");\r\n    }\r\n  };\r\n\r\n  const eventStyleGetter = (event) => ({\r\n    style: {\r\n      backgroundColor: \"inherit\",\r\n      color: \"white\",\r\n      marginTop: \"inherit\",\r\n      border: \"none\",\r\n      outline: \"none\",\r\n      // border: \"1px solid #000\",\r\n      // padding: \"5px\",\r\n      // textAlign: \"center\",\r\n      // borderRadius: \"4px\",\r\n    },\r\n  });\r\n\r\n  return (\r\n    <Box width=\"100%\" overflow=\"auto\">\r\n      <EMRLoader show={loading} />\r\n      <EventDisplayComponent\r\n        slotDuration={slotDuration}\r\n        setEvents={setEvents}\r\n        getAvailableSlotsForAllDoctors={getAvailableSlotsForAllDoctors}\r\n      />\r\n      <DnDCalendar\r\n        key={events.length}\r\n        date={selectedDate}\r\n        selectable\r\n        localizer={localizer}\r\n        events={events.map((event) => ({\r\n          ...event,\r\n          title: event.title || \"No Title\",\r\n        }))}\r\n        resources={usersResources}\r\n        resourceIdAccessor=\"id\"\r\n        resourceTitleAccessor=\"title\"\r\n        onNavigate={setSelectedDate}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        style={{ height: \"80vh\", width: \"100%\" }}\r\n        step={slotDuration}\r\n        timeslots={1}\r\n        views={[\"day\", \"agenda\"]}\r\n        defaultView=\"day\"\r\n        onSelectSlot={onSelectSlot}\r\n        toolbar\r\n        eventPropGetter={eventStyleGetter}\r\n        slotPropGetter={customSlotPropGetter}\r\n        tooltipAccessor=\"title\"\r\n        scrollToTime={new Date(1970, 1, 1, 9, 0, 0)}\r\n      />\r\n      {open && (\r\n        <NewEventModal\r\n          open={open}\r\n          setOpen={setOpen}\r\n          selectedSlot={selectedSlot}\r\n          handleClose={() => setOpen(false)}\r\n          activeTab={activeTab}\r\n          slotDuration={slotDuration}\r\n          getAvailableSlotsForAllDoctors={getAvailableSlotsForAllDoctors}\r\n          setSelectedSlot={setSelectedSlot}\r\n          slotInfo={selectedSlot}\r\n          selecteddoctorData={selectedDoctorAvailability}\r\n          addEventToState={addEventToState}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CalendarView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box, styled } from \"@mui/material\";\r\nimport { Select, MenuItem, InputLabel, FormControl } from \"@mui/material\";\r\nimport moment from \"moment\";\r\nimport CalendarView from \"./CalendarView\";\r\nimport EMRtabs from \"../../../components/global/EMRtabs\";\r\nimport { ChevronLeft, ChevronRight } from \"@mui/icons-material\";\r\nimport { DateCalendar } from \"@mui/x-date-pickers\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { allDoctors } from \"../../../Redux/slice/appointement/allDoctorsSlice\";\r\nimport EMRLoader from \"../../../components/global/loader/EMRLoaderOverlay\";\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n  const [showFilter, setShowFilter] = useState(true);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [activeTab, setActiveTab] = useState(\"users\");\r\n  const [selectedSpeciality, setSelectedSpeciality] = useState(\"\");\r\n\r\n  const { doctorData, docloading } = useSelector((state) => state?.allDoctor);\r\n  const allDoctorData = doctorData?.data || [];\r\n\r\n  const { searchdoctorData, searchDocloading } = useSelector(\r\n    (state) => state?.searchDoctor\r\n  );\r\n  const loading = docloading || searchDocloading;\r\n\r\n  useEffect(() => {\r\n    dispatch(allDoctors());\r\n  }, [dispatch]);\r\n\r\n\r\n  const toggleFilter = () => setShowFilter(!showFilter);\r\n\r\n  const handleSpecialityChange = (e) => {\r\n    const selectedValue = e?.target?.value || \"\";\r\n    console.log(\"Selected Speciality ID:\", selectedValue);\r\n    setSelectedSpeciality(selectedValue);\r\n  };\r\n\r\n  const filteredDoctors = selectedSpeciality\r\n    ? allDoctorData.filter((doc) => doc.specialityId === selectedSpeciality)\r\n    : [];\r\n\r\n\r\n  return (\r\n    <Box display=\"flex\"  width={\"100%\"}>\r\n      {/* <EMRLoader show={loading} /> */}\r\n      <div>\r\n        <div>\r\n          <button\r\n            onClick={toggleFilter}\r\n            style={{\r\n              backgroundColor: \"#F0F8F8\",\r\n              color: \"#333\",\r\n              border: \"1px solid #ccc\",\r\n              borderRadius: \"8px\",\r\n              padding: \"5px\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              gap: \"10px\",\r\n              boxShadow: \"0px 2px 5px rgba(0, 0, 0, 0.1)\",\r\n              cursor: \"pointer\",\r\n              fontSize: \"12px\",\r\n              transition:\r\n                \"background-color 0.3s ease, box-shadow 0.3s ease, transform 0.3s ease\",\r\n            }}\r\n          >\r\n            {showFilter ? (\r\n              <div\r\n                style={{ display: \"flex\", gap: \"10px\", alignItems: \"center\" }}\r\n              >\r\n                <ChevronLeft />\r\n                <span style={{ fontWeight: \"500\" }}>Filter Calendar</span>\r\n              </div>\r\n            ) : (\r\n              <ChevronRight />\r\n            )}\r\n          </button>\r\n        </div>\r\n        {showFilter && (\r\n          <Box\r\n            width=\"280px\"\r\n            overflow=\"auto\"\r\n            maxHeight=\"calc(100vh - 80px)\"\r\n            borderRight=\"1px solid #ccc\"\r\n            padding=\"5px\"\r\n          >\r\n            <CustomDateCalendar\r\n              value={moment(selectedDate)}\r\n              onChange={(newValue) => setSelectedDate(newValue.toDate())}\r\n            />\r\n            <Box mt={2}>\r\n              <EMRtabs\r\n                tabsList={[\r\n                  { name: \"Doctors\", value: \"users\" },\r\n                  { name: \"Rooms\", value: \"rooms\" },\r\n                ]}\r\n                defaultTab=\"users\"\r\n                setActiveTab={setActiveTab}\r\n              />\r\n            </Box>\r\n\r\n            {activeTab === \"users\" && (\r\n              <Box display=\"flex\" flexDirection=\"column\" mt={1} >\r\n                <FormControl fullWidth size=\"small\" >\r\n                  <InputLabel>Select Speciality</InputLabel>\r\n                  <Select\r\n                    value={selectedSpeciality}\r\n                    onChange={handleSpecialityChange}\r\n                    label=\"Select Speciality\"\r\n                  >\r\n                     <EMRLoader show={loading} />\r\n                    <MenuItem value=\"\">Select</MenuItem>\r\n                    {Array.from(\r\n                      new Map(\r\n                        allDoctorData.map((doc) => [\r\n                          doc.specialityId,\r\n                          {\r\n                            label: doc.specialityName || \"Unknown\",\r\n                            value: doc.specialityId,\r\n                          },\r\n                        ])\r\n                      ).values()\r\n                    ).map((speciality) => (\r\n                      <MenuItem key={speciality.value} value={speciality.value}>\r\n                        {speciality.label}\r\n                      </MenuItem>\r\n                    ))}\r\n                  </Select>\r\n                </FormControl>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        )}\r\n      </div>\r\n      <Box flex={1} sx={{ ml: \"10px\" }}>\r\n        <Box flex={1}>\r\n          <CalendarView\r\n            selectedDate={selectedDate}\r\n            setSelectedDate={setSelectedDate}\r\n            filteredDoctors={filteredDoctors}\r\n            slotDuration={15}\r\n            activeTab={activeTab}\r\n            selectedSpeciality={selectedSpeciality}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nconst CustomDateCalendar = styled(DateCalendar)(() => ({\r\n  backgroundColor: \"#fff\",\r\n  maxHeight: \"320px\",\r\n  width: \"250px\",\r\n  transformOrigin: \"top left\",\r\n  \"& .MuiDateCalendar-days\": {\r\n    fontSize: \"12px\",\r\n  },\r\n  \"& .MuiPickersCalendarHeader-root\": {\r\n    backgroundColor: \"#D0DDD0\",\r\n    fontSize: \"14px\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport Filter from \"./Filter\";\r\n\r\nconst Appointment = () => {\r\n  return (\r\n    <div>\r\n      <Filter />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Appointment;\r\n","import React, { useState } from \"react\";\r\nimport ScreenWrapper from \"../../components/global/ScreenWrapper\";\r\nimport { Box } from \"@mui/material\";\r\nimport EMRtabs from \"../../components/global/EMRtabs\";\r\nimport Appointment from \"./bookSlot/Appointment\";\r\nimport ScheduleList from \"../dashboard/components/ScheduleList\";\r\nimport PatientRecall from \"../dashboard/components/PatientRecall\";\r\nimport PatientVaccinationSchedule from \"../dashboard/components/PatientVaccinationSchedules\";\r\n\r\nconst AllAppointment = () => {\r\n  const [activeTab, setActiveTab] = useState(\"doctor_appointment\");\r\n\r\n  const tabsList = [\r\n    { name: \"Doctor Appointment\", value: \"doctor_appointment\", icon: \"\" },\r\n    { name: \"Schedule List\", value: \"schedule_list\", icon: \"\" },\r\n    {\r\n      name: \"Facility Schedule List\",\r\n      value: \"facility_schedule_list\",\r\n      icon: \"\",\r\n    },\r\n    { name: \"Patient Recall\", value: \"patient_recall\", icon: \"\" },\r\n    {\r\n      name: \"Patient Vaccination Schedules\",\r\n      value: \"patient_vaccination_schedules\",\r\n      icon: \"\",\r\n    },\r\n\r\n    //   { name: \"Revisit\", value: \"revist_registration\", icon: \"\" },\r\n    //   {\r\n    //     name: \"Emergency Registration\",\r\n    //     value: \"emergency_registration\",\r\n    //     icon: \"\",\r\n    //   },\r\n\r\n    //   { name: \"Patient Recall\", value: \"patient_recall\", icon: EventRepeatIcon },\r\n    //   {\r\n    //     name: \"Patient Vaccination Schedules\",\r\n    //     value: \"patient_vaccination_schedules\",\r\n    //     icon: VaccinesIcon,\r\n    //   },\r\n  ];\r\n  return (\r\n    <Box style={{ width: \"100%\" }} className=\"p-3\">\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <EMRtabs\r\n          tabsList={tabsList}\r\n          defaultTab={\"doctor_appointment\"}\r\n          setActiveTab={setActiveTab}\r\n        />\r\n      </Box>\r\n      <Box width={\"100%\"}>\r\n        {activeTab === \"doctor_appointment\" && <Appointment />}\r\n        {activeTab === \"schedule_list\" && <ScheduleList />}\r\n        {activeTab === \"patient_recall\" && <PatientRecall />}\r\n        {activeTab === \"patient_vaccination_schedules\" && (\r\n          <PatientVaccinationSchedule />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default AllAppointment;\r\n","import React, { useState } from \"react\";\r\nimport FormInput from \"../../../components/FormFields/FormInput\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst AddOrg = () => {\r\n  const [showBranch, setShowBranch] = useState(false);\r\n  return (\r\n    <div>\r\n      {!showBranch ? (\r\n        <div className=\"form-details-section \">\r\n          <FormInput label={\" Hospital Name\"} />\r\n          <FormInput label={\"Address\"} />\r\n          <FormInput label={\"Zone(district)\"} />\r\n          <FormInput label={\"City\"} />\r\n          <FormInput label={\"Postal Code\"} />\r\n          <div>\r\n            <Button color=\"primary\" onClick={() => setShowBranch(true)}>\r\n              Save\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"form-details-section mt-4\">\r\n          <FormInput label={\" No. of Branches\"} />\r\n          <FormInput label={\"Logo\"} type=\"file\" />\r\n          <FormInput label={\"TRN No\"} />\r\n          <FormInput label={\"Location\"} />\r\n          <FormInput label={\"DHA License No\"} />\r\n          <FormInput label={\"Address\"} />\r\n          <FormInput label={\"DHA User Name\"} />\r\n          <FormInput label={\"Password\"} />\r\n          <FormInput label={\"Email ID\"} />\r\n          <FormInput label={\"Mobile No\"} />\r\n          <FormInput label={\"Website Link\"} />\r\n          <div>\r\n            <Button color=\"primary\">Create</Button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddOrg;\r\n","import { Button, Dialog, DialogContent } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport FormInput from \"../../../components/FormFields/FormInput\";\r\n\r\nexport const EditOrgName = ({ onClose }) => {\r\n  return (\r\n    <Dialog open={true} onClose={onClose} fullWidth>\r\n      <DialogContent>\r\n        <h6>Edit Hospital</h6>\r\n        <div>\r\n          <FormInput label={\" Hospital Name\"} />\r\n          <FormInput label={\"Address\"} />\r\n          <FormInput label={\"Zone(district)\"} />\r\n          <FormInput label={\"City\"} />\r\n          <FormInput label={\"Postal Code\"} />\r\n          <div>\r\n            <Button>Update</Button>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport const EditOrgBranch = ({ onClose }) => {\r\n  return (\r\n    <Dialog open={true} onClose={onClose} fullWidth>\r\n      <DialogContent>\r\n        <h6>Edit Branch</h6>\r\n        <div className=\"form-container\">\r\n          <FormInput label={\" No. of Branches\"} />\r\n          <FormInput label={\"Logo\"} type=\"file\" />\r\n          <FormInput label={\"TRN No\"} />\r\n          <FormInput label={\"Location\"} />\r\n          <FormInput label={\"DHA License No\"} />\r\n          <FormInput label={\"Address\"} />\r\n          <FormInput label={\"DHA User Name\"} />\r\n          <FormInput label={\"Password\"} />\r\n          <FormInput label={\"Email ID\"} />\r\n          <FormInput label={\"Mobile No\"} />\r\n          <FormInput label={\"Website Link\"} />\r\n          <div>\r\n            <Button color=\"primary\">Update</Button>\r\n          </div>\r\n        </div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddOrg from \"./AddOrg\";\r\nimport { Table } from \"antd\";\r\nimport { DeleteOutline, EditOutlined } from \"@mui/icons-material\";\r\nimport { EditOrgBranch, EditOrgName } from \"./EditOrg\";\r\nimport { IconButton } from \"@mui/material\";\r\n\r\nconst OrgSetup = () => {\r\n  const [transfer, setTransfer] = useState(false);\r\n  const [hospitalNameEdit, setHospitalNameEdit] = useState();\r\n  const [hospitalBranchEdit, setHospitalBranchEdit] = useState();\r\n\r\n  const handleTransfer = () => {\r\n    setTransfer(true);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setHospitalBranchEdit(true);\r\n  };\r\n  const handleDelete = () => {\r\n    // setDeleteModal(true);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"S No\",\r\n      dataIndex: \"sNo\",\r\n      key: \"sNo\",\r\n    },\r\n    {\r\n      title: \"Branch Name\",\r\n      dataIndex: \"BranchName\",\r\n      key: \"BranchName\",\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      dataIndex: \"address\",\r\n      key: \"address\",\r\n    },\r\n    {\r\n      title: \"Speciality/Department\",\r\n      dataIndex: \"SpecialityDepartment\",\r\n      key: \"SpecialityDepartment\",\r\n      render: (text, record) => (\r\n        <span\r\n          style={{ color: \"blue\", fontWeight: \"bold\", cursor: \"pointer\" }}\r\n          onClick={() => handleTransfer(record)}\r\n        >\r\n          {text}\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: \"Options\",\r\n      key: \"actions\",\r\n      render: (_, record) => (\r\n        <div>\r\n          <EditOutlined\r\n            style={{ color: \"blue\", cursor: \"pointer\" }}\r\n            onClick={() => handleEdit()}\r\n          />\r\n          <DeleteOutline\r\n            style={{ color: \"red\", cursor: \"pointer\", marginLeft: \"10px\" }}\r\n            onClick={() => handleDelete()}\r\n          />\r\n        </div>\r\n      ),\r\n    },\r\n  ];\r\n\r\n  const data = [\r\n    {\r\n      key: \"1\",\r\n      sNo: 1,\r\n      BranchName: \"ABC Hospital-Thanjavur\",\r\n      address: \"123 Street, NY\",\r\n      SpecialityDepartment: \"Add\",\r\n    },\r\n    {\r\n      key: \"2\",\r\n      sNo: 2,\r\n      BranchName: \"ABC Hospital-Kumbakonam\",\r\n      address: \"456 Avenue, LA\",\r\n      SpecialityDepartment: \"\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <AddOrg />\r\n      <div className=\"table-container\">\r\n        <h6>\r\n          ABC Hospital{\" \"}\r\n          <span>\r\n            <IconButton size=\"small\" onClick={() => setHospitalNameEdit(true)}>\r\n              <EditOutlined />\r\n            </IconButton>\r\n          </span>\r\n        </h6>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={data}\r\n          size=\"middle\"\r\n          className=\"m-4\"\r\n        />\r\n      </div>\r\n      {hospitalNameEdit && (\r\n        <EditOrgName onClose={() => setHospitalNameEdit(false)} />\r\n      )}\r\n      {hospitalBranchEdit && (\r\n        <EditOrgBranch onClose={() => setHospitalBranchEdit(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrgSetup;\r\n","import React from \"react\";\r\nimport { Tabs } from \"antd\";\r\nimport OrgSetup from \"./Org/OrgSetup\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst Master = () => {\r\n  return (\r\n    <div className=\"w-100 m-3\" style={{ overflow: \"auto\" }}>\r\n      <Tabs defaultActiveKey=\"1\" type=\"card\">\r\n        <TabPane tab=\"Org\" key=\"1\">\r\n          <OrgSetup />\r\n        </TabPane>\r\n        <TabPane tab=\"Speciality\" key=\"2\">\r\n          {/* <Speciality /> */}\r\n        </TabPane>\r\n        <TabPane tab=\"User Setup\" key=\"3\">\r\n          {/* <Usersetup /> */}\r\n        </TabPane>\r\n        <TabPane tab=\"InPatient\" key=\"4\">\r\n          {/* <InPatient /> */}\r\n        </TabPane>\r\n        <TabPane tab=\"Appointment\" key=\"5\">\r\n          {/* <Appointment /> */}\r\n        </TabPane>\r\n      </Tabs>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Master;\r\n","import React, { Suspense } from \"react\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nimport Registration from \"../../../secure/registration/Registration\";\nimport DoctorDashboard from \"../../../secure/doctorNurseDashboard/doctorDashboard\";\nimport Privileges from \"../../../secure/privileges/Privileges\";\nimport Insurance from \"../../../secure/insurance/Insurance\";\nimport Loading from \"../../../components/FormFields/Loading\";\nimport AllAppointment from \"../../../secure/appointment/AllAppointment\";\nimport Master from \"../../../secure/masterSetup/master\";\nimport Landing from \"../../../components/other/Landing\";\n\nconst BillingLandingModule = React.lazy(() =>\n  import(\"emr_billing/BillingLanding\")\n);\nconst BillingPageModule = React.lazy(() => import(\"emr_billing/BillingPage\"));\nconst IPEmrModule = React.lazy(() => import(\"emr_ip/IpHeaderTab\"));\nconst BedAndWardModule = React.lazy(() =>\n  import(\"emr_bedAndWard/BedAndWardHeaderTab\")\n);\nconst WardRoomDetail = React.lazy(() =>\n  import(\"emr_bedAndWard/WardRoomDetail\")\n);\nconst DoctorEmrModule = React.lazy(() => import(\"emr_doctor/DoctorEmr\"));\nconst IPDetails = React.lazy(() => import(\"emr_doctor/IPDetails\"));\nconst OPDetails = React.lazy(() => import(\"emr_doctor/OPDetails\"));\n// const LabMdl = React.lazy(() => import(\"emr_lab/LabHeaderTab\"));\nconst NurseModule = React.lazy(() => import(\"emr_nurse/Dashboard\"));\nconst NursePage = React.lazy(() => import(\"emr_nurse/Nurse\"));\nconst Labratory = React.lazy(() => import(\"emr_lab/HeaderTabs\"));\n\nconst BillingLanding = () => {\n  const navigate = useNavigate();\n  return (\n    <Suspense fallback={<Loading />}>\n      <BillingLandingModule navigate={navigate} />\n    </Suspense>\n  );\n};\nconst BillingPage = () => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <BillingPageModule />\n    </Suspense>\n  );\n};\nconst IPEmr = () => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <IPEmrModule />\n    </Suspense>\n  );\n};\nconst BedAndWard = () => {\n  const navigate = useNavigate();\n  return (\n    <Suspense fallback={<Loading />}>\n      <BedAndWardModule navigate={navigate} />\n    </Suspense>\n  );\n};\nconst RoomDetail = () => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <WardRoomDetail />\n    </Suspense>\n  );\n};\nconst DoctorEmrMdl = () => {\n  const navigate = useNavigate();\n  return (\n    <Suspense fallback={<Loading />}>\n      <DoctorEmrModule navigate={navigate} />\n    </Suspense>\n  );\n};\nconst IpDetailEmrMdl = () => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <IPDetails />\n    </Suspense>\n  );\n};\nconst OpDetailEmrMdl = () => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <OPDetails />\n    </Suspense>\n  );\n};\n\nconst LabModule = () => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <Labratory />\n    </Suspense>\n  );\n};\n\nconst NurseMdl = () => {\n  const navigate = useNavigate();\n  return (\n    <Suspense fallback={<Loading />}>\n      <NurseModule navigate={navigate} />\n    </Suspense>\n  );\n};\nconst NursePages = () => {\n  return (\n    <Suspense fallback={<Loading />}>\n      <NursePage />\n    </Suspense>\n  );\n};\n\n\n\nexport const SECURE_ROUTES = [\n  {\n    path: \"/secure\",\n    exact: true,\n    secure: true,\n    component: () => <Navigate to=\"/secure/landing\" />,\n  },\n  {\n    path: `/secure/landing`,\n    exact: true,\n    secure: true,\n    component: Landing,\n  },\n  // {\n  //   path: `/secure/dashboard`,\n  //   exact: true,\n  //   secure: true,\n  //   component: Dashboard,\n  // },\n  {\n    path: `/secure/appointment`,\n    exact: true,\n    secure: true,\n    component: AllAppointment,\n  },\n  {\n    path: `/secure/registration`,\n    exact: true,\n    secure: true,\n    component: Registration,\n  },\n  {\n    path: `/secure/billing/list`,\n    exact: true,\n    secure: true,\n    component: BillingLanding,\n  },\n  {\n    path: `/secure/billing/details`,\n    exact: true,\n    secure: true,\n    component: BillingPage,\n  },\n  {\n    path: `/secure/ipemr`,\n    exact: true,\n    secure: true,\n    component: IPEmr,\n  },\n  {\n    path: `/secure/bedandward`,\n    exact: true,\n    secure: true,\n    component: BedAndWard,\n  },\n  {\n    path: `/secure/bedandward/:name`,\n    exact: true,\n    secure: true,\n    component: RoomDetail,\n  },\n  {\n    path: `/secure/doctorEmr`,\n    exact: true,\n    secure: true,\n    component: DoctorEmrMdl,\n  },\n  {\n    path: `/secure/doctorEmr/ipDetails/:name`,\n    exact: true,\n    secure: true,\n    component: IpDetailEmrMdl,\n  },\n  {\n    path: `/secure/doctorEmr/opDetails/:name`,\n    exact: true,\n    secure: true,\n    component: OpDetailEmrMdl,\n  },\n  {\n    path: `/secure/lab`,\n    exact: true,\n    secure: true,\n    component: LabModule,\n  },\n  {\n    path: `/secure/nurseEmr`,\n    exact: true,\n    secure: true,\n    component: NurseMdl,\n  },\n  {\n    path: `/secure/nurseEmr/:name`,\n    exact: true,\n    secure: true,\n    component: NursePages,\n  },\n  {\n    path: `/secure/privileges`,\n    exact: true,\n    secure: true,\n    component: Privileges,\n  },\n  {\n    path: `/secure/insurance`,\n    exact: true,\n    secure: true,\n    component: Insurance,\n  },\n  {\n    path: \"/doctor/dashboard\",\n    exact: true,\n    secure: true,\n    component: DoctorDashboard,\n  },\n  {\n    path: \"/secure/master\",\n    exact: true,\n    secure: true,\n    component: Master,\n  },\n];\n","import { PUBLIC_ROUTES } from \"./modules/public/PublicRoutes\";\nimport { SECURE_ROUTES } from \"./modules/secure/SecureRoutes\";\n\nexport const EMR_ROUTES = [...PUBLIC_ROUTES, ...SECURE_ROUTES];\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./toast.css\";\n\nconst ToastProvider = ({ children }) => {\n  return (\n    <>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={false}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnHover\n        closeButton={false}\n        theme=\"light\"\n        toastClassName={({ type }) => {\n          switch (type) {\n            case \"success\":\n              return \"toast-success\";\n            case \"error\":\n              return \"toast-error\";\n            case \"warning\":\n              return \"toast-warning\";\n            case \"info\":\n            default:\n              return \"toast-info\";\n          }\n        }}\n      />\n      {children}\n    </>\n  );\n};\n\nexport default ToastProvider;\n","import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state to render fallback UI\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Log the error to an error reporting service\n    console.error(\"Error caught in Error Boundary:\", error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // Render fallback UI\n      return <h3>Something went wrong. Please try again later.</h3>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const allAppointment = createAsyncThunk(\r\n  \"appointment/allAppointment\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.ALL_APPOINTMENT, {\r\n        params: credentials,\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst allAppointmentSlice = createSlice({\r\n  name: \"allAppointment\",\r\n  initialState: {\r\n    data: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(allAppointment.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(allAppointment.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.data = action.payload.data;\r\n      })\r\n      .addCase(allAppointment.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default allAppointmentSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const allFacilitySchedules = createAsyncThunk(\r\n  \"facility/allFacilitySchedules\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(\r\n        API_ENDPOINTS.FACILITY_SCHEDULES,\r\n        credentials\r\n      );\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst allFacilitySchedulesSlice = createSlice({\r\n  name: \"allFacilitySchedules\",\r\n  initialState: {\r\n    facilitiesSheduleData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(allFacilitySchedules.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(allFacilitySchedules.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.facilitiesSheduleData = action.payload.data;\r\n      })\r\n      .addCase(allFacilitySchedules.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default allFacilitySchedulesSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const facilitiesAvailability = createAsyncThunk(\r\n  \"timeslot/facilitiesAvailability\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.FACILITY_AVAILABLE, {\r\n        params: credentials,\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst facilitiesAvailabilitySlice = createSlice({\r\n  name: \"facilitiesAvailability\",\r\n  initialState: {\r\n    facilitiesAvailableData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(facilitiesAvailability.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(facilitiesAvailability.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.facilitiesAvailableData = action.payload.data;\r\n      })\r\n      .addCase(facilitiesAvailability.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default facilitiesAvailabilitySlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const allFacilities = createAsyncThunk(\r\n  \"facility/allFacilities\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.ALL_FACILITIES, {\r\n        params: credentials,\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst allFacilitiesSlice = createSlice({\r\n  name: \"allFacilities\",\r\n  initialState: {\r\n    facilitiesData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(allFacilities.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(allFacilities.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.facilitiesData = action.payload.data;\r\n      })\r\n      .addCase(allFacilities.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default allFacilitiesSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const searchDoctors = createAsyncThunk(\r\n  \"doctor/searchDoctors\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.SEARCH_DOCTOR, {\r\n        params: credentials,\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst searchDoctorsSlice = createSlice({\r\n  name: \"searchDoctors\",\r\n  initialState: {\r\n    searchdoctorData: [],\r\n    searchDocloading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(searchDoctors.pending, (state) => {\r\n        state.searchDocloading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(searchDoctors.fulfilled, (state, action) => {\r\n        state.searchDocloading = false;\r\n        state.searchdoctorData = action.payload.data;\r\n      })\r\n      .addCase(searchDoctors.rejected, (state, action) => {\r\n        state.searchDocloading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default searchDoctorsSlice.reducer;\r\n","import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axiosInstance from \"../../api/axiosInstance\";\r\nimport { API_ENDPOINTS } from \"../../api/apiEndpoints\";\r\n\r\nexport const searchFacilities = createAsyncThunk(\r\n  \"facility/searchFacilities\",\r\n  async (credentials, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosInstance.get(API_ENDPOINTS.SEARCH_FACILITY, {\r\n        params: credentials,\r\n      });\r\n      return response;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data?.message);\r\n    }\r\n  }\r\n);\r\n\r\nconst searchFacilitiesSlice = createSlice({\r\n  name: \"searchFacilities\",\r\n  initialState: {\r\n    searchfacilityData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(searchFacilities.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(searchFacilities.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.searchfacilityData = action.payload.data;\r\n      })\r\n      .addCase(searchFacilities.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default searchFacilitiesSlice.reducer;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport allDoctorsReducer from \"./slice/appointement/allDoctorsSlice\";\r\nimport authReducer from \"./slice/login/authSlice\";\r\nimport allBranchReducer from \"./slice/appointement/allBranchSlice\";\r\nimport allAppointmentReducer from \"./slice/appointement/allAppointmentSlice\";\r\nimport doctorAvailabilitieReducer from \"./slice/appointement/doctorAvailableSlotSlice\";\r\nimport allFacilitySchedulesReducer from \"./slice/appointement/allFacilitySheduleSlice\";\r\nimport facilitiesAvailabilityReducer from \"./slice/appointement/facilitiesAvailableSlotSlice\";\r\nimport allFacilitiesReducer from \"./slice/appointement/allFacilitiesSlice\";\r\nimport searchDoctorsReducer from \"./slice/appointement/searchDoctorSilce\";\r\nimport searchFacilitiesReducer from \"./slice/appointement/searchFacilitiesSlice\";\r\nimport searchPatientsReducer from \"./slice/appointement/searchPatientSlice\";\r\nimport registerPatientsReducer from \"./slice/registration/registerPatientsSlice\";\r\nimport revisitPatientsReducer from \"./slice/registration/revisitSlice\";\r\nimport emergencyPatientsReducer from \"./slice/registration/emergencyPatientSlice\";\r\nimport bookAppointmentReducer from \"./slice/appointement/bookAppointementSlice\";\r\nimport scheduleListReducer from \"./slice/dashboard/scheduleListSlice\";\r\nimport reScheduleReducer from \"./slice/appointement/reScheduleSlice\";\r\nimport cancelScheduleReducer from \"./slice/appointement/cancelScheduleSlice\";\r\n\r\nconst staticReducers = {\r\n  auth: authReducer,\r\n  allBranch: allBranchReducer,\r\n  allAppoint: allAppointmentReducer,\r\n  allDoctor: allDoctorsReducer,\r\n  allFacility: allFacilitiesReducer,\r\n  docAvailable: doctorAvailabilitieReducer,\r\n  facilitySchedule: allFacilitySchedulesReducer,\r\n  facilityAvailable: facilitiesAvailabilityReducer,\r\n  searchDoctor: searchDoctorsReducer,\r\n  searchFacility: searchFacilitiesReducer,\r\n  searchPatient: searchPatientsReducer,\r\n  regPatient: registerPatientsReducer,\r\n  revisit: revisitPatientsReducer,\r\n  emergency: emergencyPatientsReducer,\r\n  bookAppoint: bookAppointmentReducer,\r\n  schedule: scheduleListReducer,\r\n  reschedule: reScheduleReducer,\r\n  cancel: cancelScheduleReducer,\r\n};\r\n\r\nconst createReducer = (asyncReducers = {}) =>\r\n  combineReducers({\r\n    ...staticReducers,\r\n    ...asyncReducers,\r\n  });\r\n\r\nconst store = configureStore({\r\n  reducer: createReducer(),\r\n});\r\n\r\nstore.asyncReducers = {}; // Store injected reducers\r\n\r\nstore.injectReducer = (key, asyncReducer) => {\r\n  if (!store.asyncReducers[key]) {\r\n    console.log(`Injecting reducer: ${key}`);\r\n    store.asyncReducers[key] = asyncReducer;\r\n\r\n    // Ensure the store is updated with the new reducer\r\n    store.replaceReducer(createReducer(store.asyncReducers));\r\n\r\n    console.log(\"Updated Redux state:\", store.getState());\r\n  } else {\r\n    console.warn(`Reducer \"${key}\" is already injected.`);\r\n  }\r\n};\r\n\r\nexport default store;\r\n","import React, { useEffect } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { CssBaseline, ThemeProvider } from \"@mui/material\";\nimport { ColorModeContext, useMode } from \"./theme\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { AdapterMoment } from \"@mui/x-date-pickers/AdapterMoment\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { EMRRouteBuilder } from \"./core/EMRRouteBuilder\";\nimport { EMR_ROUTES } from \"./core/Routes\";\nimport { LoadingProvider } from \"./components/global/loader/LoadingContext\";\nimport ToastProvider from \"./components/global/ToastProvider\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport ErrorBoundary from \"./components/global/ErrorBoundary\";\nimport store from \"./Redux/store\";\n\nconst App = () => {\n  const [theme, colorMode] = useMode();\n\n  useEffect(() => {\n    import(\"emr_billing/billingReducer\")\n      .then(({ default: billingReducer }) => {\n        console.log(\"Billing Reducer Loaded:\", billingReducer);\n        if (store.injectReducer) {\n          store.injectReducer(\"billing\", billingReducer);\n        }\n      })\n      .catch((error) => console.error(\"Failed to load billingReducer:\", error));\n\n    import(\"emr_ip/ipReducer\")\n      .then(({ default: ipReducer }) => {\n        console.log(\"ip Reducer Loaded:\", ipReducer);\n        if (store.injectReducer) {\n          store.injectReducer(\"ip\", ipReducer);\n        }\n      })\n      .catch((error) => console.error(\"Failed to load ipReducer:\", error));\n\n    import(\"emr_bedAndWard/bedAndWardReducer\")\n      .then(({ default: bedAndWardReducer }) => {\n        console.log(\"bedAndWardReducer Loaded:\", bedAndWardReducer);\n        if (store.injectReducer) {\n          store.injectReducer(\"bedAndWard\", bedAndWardReducer);\n        }\n      })\n      .catch((error) =>\n        console.error(\"Failed to load bedAndWardReducer:\", error)\n      );\n  }, []);\n\n  return (\n    <ErrorBoundary>\n      <Provider store={store}>\n        <LocalizationProvider dateAdapter={AdapterMoment}>\n          <LoadingProvider>\n            <ColorModeContext.Provider value={colorMode}>\n              <ThemeProvider theme={theme}>\n                <ToastProvider>\n                  <CssBaseline />\n                  <EMRRouteBuilder routes={EMR_ROUTES} />\n                </ToastProvider>\n              </ThemeProvider>\n            </ColorModeContext.Provider>\n          </LoadingProvider>\n        </LocalizationProvider>\n      </Provider>\n    </ErrorBoundary>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n"],"names":["ColorModeContext","createContext","toggleColorMode","axiosInstance","axios","baseURL","interceptors","request","use","config","data","FormData","headers","API_ENDPOINTS","login","createAsyncThunk","async","credentials","_ref","rejectWithValue","post","error","_error$response","_error$response$data","response","message","authSlice","createSlice","name","initialState","user","loading","reducers","logout","state","localStorage","removeItem","extraReducers","builder","addCase","pending","fulfilled","action","payload","setItem","JSON","stringify","rejected","actions","allBranch","get","connect","_state$auth","_state$auth$user","_state$auth$user$data","_state$auth2","_state$auth2$user","_state$auth2$user$dat","_state$auth3","_state$auth3$user","_state$auth3$user$dat","_state$auth3$user$dat2","branchId","auth","branchMaster","username","userName","role","roleMaster","roleName","_branches$find","_userData$roleMaster","reloadApp","branches","setBranches","useState","userData","setUserData","selectedBranchId","setSelectedBranchId","useEffect","loginUser","getItem","_parsedUser$data","_parsedUser$data$bran","parsedUser","parse","console","log","currentURL","window","location","href","dispatch","useDispatch","useSelector","branchData","navigate","useNavigate","length","theme","useTheme","colorMode","useContext","open","setOpen","branchName","find","branch","_jsxs","Box","id","display","justifyContent","p","padding","height","sx","backgroundColor","color","children","includes","_Fragment","my","gap","_jsx","alignSelf","fontSize","IconButton","onClick","Menu","className","Chip","label","variant","position","borderRadius","cursor","alignItems","width","icon","ShareLocationIcon","textTransform","boxShadow","transform","top","left","right","zIndex","minWidth","overflowY","map","MenuItem","handleChange","palette","mode","DarkModeOutlinedIcon","LightModeOutlinedIcon","NotificationsOutlinedIcon","margin","logoutApp","LogoutIcon","allModules","FaCalendarCheck","path","FaUserPlus","FaUserMd","FaUserNurse","FaFileInvoiceDollar","FaFileAlt","FaProcedures","FaBed","FaFlask","FaClipboardList","Landing","filteredModules","setFilteredModules","_userData$data","_userData$data$roleMa","userRole","allowedModules","filter","mod","style","flexDirection","gridTemplateColumns","maxWidth","module","index","transition","fontWeight","textAlign","onMouseEnter","e","currentTarget","onMouseLeave","marginBottom","isSidebar","setIsSidebar","Topbar","EMRRouteBuilder","props","routes","setRoutes","isUserStored","replace","buildRoutes","promiseRoutes","route","Component","component","interceptor","secure","Route","exact","element","SecureLayout","Navigate","to","buildRoute","Promise","all","then","Routes","showToast","messages","type","arguments","undefined","toastContent","ToastMessage","toastOptions","autoClose","toast","success","warn","info","messageArray","Array","isArray","i","setShowForgotPage","setShowLoginPage","setShowSignup","formValues","setFormValues","email","password","errors","setErrors","field","target","value","prevErrors","onSubmit","preventDefault","formErrors","validateForm","trim","Object","keys","resultAction","match","TextField","fullWidth","onChange","size","FormControlLabel","control","Checkbox","handleShowForgot","Button","disabled","CircularProgress","handleClickSignup","handleClickLogin","setShowReset","validationErrors","test","method","url","URL","searchParams","append","parseInt","pathname","search","reject","doctorDashboardDataList","params","doctorId","ipOpFlag","context","page","ptName","status","LoadingContext","LoadingProvider","setLoading","Provider","useLoading","ResetPassword","confirmPassword","setMessage","alertMessage","setAlertMessage","Alert","severity","token","URLSearchParams","postData","helperText","PUBLIC_ROUTES","AuthPage","showLoginPage","showForgotPage","showSignup","showReset","backgroundImage","bgImg","backgroundSize","Paper","elevation","bgcolor","opacity","LoginForm","ForgotPassword","Signup","overflow","boxSizing","TabPane","Tabs","_tabsList$","tabsList","defaultTab","setActiveTab","activeKey","setActiveKey","key","tabBarStyle","tab","AnimatePresence","motion","div","initial","x","animate","exit","duration","content","calculateAge","dob","birthDate","Date","today","age","getFullYear","m","getMonth","getDate","options","required","setDependentValue","setError","selectedFile","setSelectedFile","handleBlur","FormControl","InputLabel","Select","selectedOption","option","onBlur","FormHelperText","border","Typography","handleRemoveFile","CloseIcon","hidden","event","file","files","date","toISOString","split","newValue","calculatedAge","multiline","rows","InputLabelProps","shrink","inputProps","pattern","DropdownOptions","visitOptions","genderOpton","nationalityOptions","getNames","toLowerCase","visaTypeOptions","specialityOptions","encounterTypeOptions","ipEncounterTypeOptions","doctorOptions","paymentOptions","infoSourceOptions","patientTypeOptions","otherIdOptions","addressOptions","referralOptions","religionOptions","patientPriorityOptions","maritalStatusOptions","occupationOptions","registerPatients","formData","forEach","registerPatientData","PatientInfo","patientData","setShowPatientInfo","qrCodeUrl","origin","mrdNo","flexWrap","patientName","visitType","nationality","visaType","phoneNumber","infoSource","address","referralCase","regDate","nationalId","workPhoneNumber","language","religion","referredBy","patientType","patientPriority","gender","maritalStatus","otherId","landPhone","occupation","place","patientRemarks","_ref2","mt","QRCode","allDoctors","doctorData","docloading","RegisterPatient","_location$state","_location$state2","_location$state3","OPTION","useLocation","bookedDetails","surgeryPatientData","schedulePatientData","rowData","showPatientInfo","setPatientData","regPatient","allDoctor","allDoctorData","setSpecialityOptions","setDoctorOptions","showOtherId","setshowOtherId","setFormData","patient","phoneNo","mobile","getCurrentDateTime","now","toTimeString","emailId","speciality","encounterType","doctorName","doctor","paymentType","subInsurance","networkType","insuranceCardNo","insuranceEffDate","certificateNumber","maxInsuranceLiability","maxInsuranceCopay","extraCardNumber","insuranceExpireDate","dependents","insuranceClaimNumber","insuranceApprovalLimit","copayPatient","existing","specialities","Set","specialityName","filteredDoctors","handleInputChange","prevData","statusCode","paddingBottom","FormInput","accept","Link","registerPatient","missingFields","emergencyPatients","emergencyPatientData","Emergency","mrdNumber","toLocaleTimeString","hour12","workPhoneNo","searchPatients","searchPatientData","revisitPatients","patientId","put","Revisit","searchQuery","setSearchQuery","selectedPatient","setSelectedPatient","searchPatient","revisit","handleSearchChange","inputValue","searchKey","mr_no","insuranceEffectiveFrom","revisitPatient","ml","Autocomplete","freeSolo","getOptionLabel","renderInput","placeholder","handleOptionSelect","scheduleList","show","Spinner","itemsArray","callbackParam","anchorEl","setAnchorEl","handleClose","callback","_","MenuIcon","keepMounted","Boolean","onClose","item","Option","ScheduleList","filters","setFilters","appointments","setAppointments","setPage","rowsPerPage","setRowsPerPage","schedule","appointmentData","handleFilterChange","prev","dropDownMenuItems","MedicalInformationOutlined","onCreatePatientVisit","columns","title","dataIndex","render","__","filterDropdown","DatePicker","format","handleDateChange","formattedDate","moment","Input","row","EMRMenuIcon","from","EMRLoader","Table","dataSource","rowKey","record","PatientRecall","setData","s_no","mr_number","visit_date","patient_name","recall_date","filteredData","setFilteredData","result","every","String","defaultValue","pagination","pageSize","PatientVaccinationSchedule","schedule_date","vaccination_name","remarks","vaccine_date","statusOptions","columnId","prevFilters","filtered","_filters$columnId","filterValue","Schedule","bordered","PatientList","setFilter","statusFilter","setStatusFilter","TableContainer","maxHeight","TableHead","TableRow","column","TableCell","slotProps","actionBar","TableBody","Registration","useSearchParams","activeTab","ScreenWrapper","EMRtabs","cardTitle","searchByPatientName","searchByStatus","setValue","dayjs","searchTerm","setSearchTerm","appliedFilters","setAppliedFilters","align","flexGrow","LocalizationProvider","dateAdapter","AdapterDayjs","DesktopDatePicker","inputFormat","InputProps","startAdornment","InputAdornment","SearchIcon","endAdornment","clearSearch","edge","visibility","mr","startIcon","FilterList","PaperProps","Stack","direction","spacing","handleFilterClick","handleStatusReset","RestartAltIcon","CustomDataGrid","styled","DataGrid","RevenueDataList","dashboardList","React","selectedRow","setSelectedRow","formatDate","dateString","toLocaleDateString","handleEmpty","headerName","valueGetter","regNo","renderCell","handleClickOpen","headerAlign","gross","discount","net","revenue","sno","Dialog","DialogTitle","DialogContent","Grid","container","xs","Divider","marginTop","DialogActions","sortable","filterable","disableColumnMenu","cellClassName","Avatar","initials","ActionsMenu","OthersDataList","setRows","transformedData","sNo","consultationDate","procedure","insuranceName","rowsPerPageOptions","disableSelectionOnClick","handleMenuClick","MoreVertIcon","ListItemIcon","LocalHospitalIcon","ListItemText","primary","AssignmentIcon","VisibilityIcon","DownloadIcon","selectedCard","DocOptions","styles","loaderContainer","svg","version","xmlns","y","viewBox","xmlSpace","fill","stroke","cx","cy","r","attributeName","dur","values","repeatCount","begin","cardColors","DoctorDashboard","setSelectedCard","dashboardCountResp","setDashboardCountResp","dashboardlistResp","setDashboardlistResp","searchPatientName","setsearchPatientName","PatientStatus","setPatientStatus","dashboardCount","cardDetails","doctorDashboardCount","cardData","displayName","TodayIcon","MonetizationOnIcon","EmergencyIcon","WaitingIcon","TelemedicineIcon","dashboardListDefault","checkValue","NaN","DoctorNurseLoader","Container","fluid","Row","Col","sm","md","lg","Card","Img","src","doctorImage","Body","Title","card","todaysAppointmentResponse","revenueResponse","emergencyPatientResponse","waitingListResponse","teleAppointmentResponse","handleCardClick","Text","totalCount","displayIndex","MainDataList","TodayAppointmentsearchPatientResponse","RevenuSearchPatientResponse","EmergencySearchPatientResponse","searchPatientResponse","TeleSearchPatientResponse","charAt","BlockAvailability","startTime","endTime","specialistList","setSpecialistList","Form","Group","Label","Control","TimePicker","ampm","blockAvailability","Privileges","roles","setRoles","canViewPage1","canViewPage2","canEdit","canDelete","handleCheckboxChange","roleIndex","permission","updatedRoles","checked","ipInsurance","claim_no","insurar_name","invoice_no","invoice_date","mrd_no","ClaimDetails","numberOfElements","setNumberOfElements","totalElements","setTotalElements","hasMore","setHasMore","tableRef","useRef","onScroll","handleScroll","scrollTop","clientHeight","scrollHeight","current","ref","ManualSubmission","px","child","innerChild","OPInsurance","IPInsurance","ReferralRegistration","Insurance","Loading","doctorAvailability","statusText","doctorAvailableData","bookAppointment","bookAppointmentdata","AppointmentTabContent","setEventData","scheduleType","numberOfSlots","notes","additionalInfo","insurarName","notifyPatient","showNotify","setShowNotify","select","count","RadioGroup","Radio","_specialistList$find","_facilityList$find","selectedSlot","facilityList","slotDuration","getAvailableSlotsForAllDoctors","getAllFacilitySchedules","addEventToState","slotInfo","selecteddoctorData","dateFormat","eventData","dividers","paddingTop","start","end","resourceId","paddingY","specialist","facility","facilityId","divider","pb","pt","_selecteddoctorData$s","otherData","timeInterval","appointmentTime","appointmentEndTime","specialityId","selectedSpecialityData","appointmentDate","_response$payload$mes","_response$payload","msg","newEvent","_error$message","cancelSchedule","appointmentId","displayReasonInput","setDisplayReasonInput","reason","setReason","cancel","selectedValue","_loginUser$data","cancellationReason","cancelledBy","unwrap","reSchedule","setDate","time","setTime","reschedule","textField","minutesStep","avatarStyle","_selectedSlot$patient","setEvents","popupOpen","setPopupOpen","setSelectedSlot","rescheduleBooking","setRescheduleBooking","cancelBooking","setCancelBooking","docAvailable","groupedBookings","_doctor$specialitySlo","specialitySlots","_speciality$bookedSlo","bookedSlotDetails","slot","timeKey","bookingKey","push","bookedEvents","entries","bookingGroups","_ref3","_firstSlot$patientNam","slots","firstSlot","Tooltip","Cancel","Replay","AppRegistration","_slot$patientName","toDate","add","CancelAlertModal","Reschedule","DnDCalendar","withDragAndDrop","Calendar","selectedDate","setSelectedDate","selectedSpeciality","localizer","momentLocalizer","doctorAvailabilities","setDoctorAvailabilities","usersResources","setUsersResources","events","selectedDoctorAvailability","setSelectedDoctorAvailability","isSlotAvailable","slotTime","doc","Number","spec","availableSlots","bookedSlots","isSlotBooked","customSlotPropGetter","useMemo","timeString","formatTime","isAvailable","bgColor","useCallback","interval","setCalendarResources","resourcesList","EventDisplayComponent","selectable","resources","resourceIdAccessor","resourceTitleAccessor","onNavigate","startAccessor","endAccessor","step","timeslots","views","defaultView","onSelectSlot","selectedTime","isBefore","available","booked","toolbar","eventPropGetter","outline","slotPropGetter","tooltipAccessor","scrollToTime","NewEventModal","Filter","showFilter","setShowFilter","setSelectedSpeciality","searchdoctorData","searchDocloading","searchDoctor","toggleFilter","ChevronLeft","ChevronRight","borderRight","CustomDateCalendar","_e$target","Map","flex","CalendarView","DateCalendar","transformOrigin","Appointment","AllAppointment","AddOrg","showBranch","setShowBranch","EditOrgName","EditOrgBranch","OrgSetup","transfer","setTransfer","hospitalNameEdit","setHospitalNameEdit","hospitalBranchEdit","setHospitalBranchEdit","text","EditOutlined","DeleteOutline","marginLeft","BranchName","SpecialityDepartment","Master","defaultActiveKey","BillingLandingModule","BillingPageModule","IPEmrModule","BedAndWardModule","WardRoomDetail","DoctorEmrModule","IPDetails","OPDetails","NurseModule","NursePage","Labratory","EMR_ROUTES","BillingLanding","Suspense","fallback","BillingPage","IPEmr","BedAndWard","RoomDetail","DoctorEmrMdl","IpDetailEmrMdl","OpDetailEmrMdl","LabModule","NurseMdl","NursePages","ToastContainer","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnHover","closeButton","toastClassName","ErrorBoundary","constructor","super","this","hasError","getDerivedStateFromError","componentDidCatch","errorInfo","allAppointment","allFacilitySchedules","facilitiesSheduleData","facilitiesAvailability","facilitiesAvailableData","allFacilities","facilitiesData","searchDoctors","searchFacilities","staticReducers","authReducer","allBranchReducer","allAppoint","allAppointmentReducer","allDoctorsReducer","allFacility","allFacilitiesReducer","doctorAvailabilitieReducer","facilitySchedule","allFacilitySchedulesReducer","facilityAvailable","facilitiesAvailabilityReducer","searchDoctorsReducer","searchFacility","searchfacilityData","searchPatientsReducer","registerPatientsReducer","revisitPatientsReducer","emergency","emergencyPatientsReducer","bookAppoint","bookAppointmentReducer","scheduleListReducer","reScheduleReducer","cancelScheduleReducer","createReducer","asyncReducers","combineReducers","store","configureStore","reducer","injectReducer","asyncReducer","replaceReducer","getState","App","useMode","setMode","createTheme","colors","grey","greenAccent","redAccent","blueAccent","tokens","main","secondary","neutral","dark","light","background","default","typography","fontFamily","join","h1","h2","h3","h4","h5","h6","themeSettings","billingReducer","catch","ipReducer","bedAndWardReducer","AdapterMoment","ThemeProvider","ToastProvider","CssBaseline","ReactDOM","document","getElementById","BrowserRouter"],"sourceRoot":""}